{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"百度网盘直链下载助手","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link*","*://yun.baidu.com/share/link*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1565449260068,"data":{}},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/39504-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B.user.js","uuid":"162d9bca-192a-44d6-ac71-fb0a60c049ed","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js","ts":1565449260205,"mimetype":"text/javascript"},"source":""}]},{"name":"gwdang","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["http://*.jd.com/*","https://*.jd.com/*","http://*.jd.hk/*","https://*.jd.hk/*","http://*.yiyaojd.com/*","https://*.yiyaojd.com/*","http://*.taobao.com/*","https://*.taobao.com/*","http://*.tmall.com/*","https://*.tmall.com/*","https://*.tmall.hk/*","http://*.yixun.com/*","http://*.51buy.com/*","http://*.yhd.com/*","http://*.suning.com/*","https://store.steampowered.com/app/*","https://*.suning.com/*","http://*.dangdang.com/*","http://*.gome.com.cn/*","http://*.newegg.cn/*","http://*.paipai.com/*","https://*.amazon.com/*","https://*.amazon.cn/*","https://*.amazon.*/*","http://www.kjt.com/*","http://www.kaola.com/*","https://www.kaola.com/*","http://www.kaola.com.hk/*","https://www.kaola.com.hk/*","http://www.tcl.com/*","http://shop.hisense.com/*","http://*.oppo.com/*","http://shop.vivo.com.cn/*","http://www.ebay.com/*","http://t.dianping.com/*","http://*.nuomi.com/*","http://*.meituan.com/*","https://yao.95095.com/*","http://*.feiniu.com/*","http://*.meilishuo.com/*","http://*.mogujie.com/*","http://shop.coolpad.cn/*","http://*.sephora.cn/*","http://*.yesmywine.com/*","http://*.yiguo.com/*","http://*.wanggou.com/*","http://mall.jia.com/*","http://weigou.baidu.com/*","http://*.mi.com/*","http://shop.letv.com/*","http://*.handu.com/*","http://*.taoshu.com/*","http://*.1688.com/*","http://*.muyingzhijia.com/*","http://*.vmall.com/*","http://*.xiji.com/*","http://*.xijie.com/*","http://www.yougou.com/*","http://www.okbuy.com/*","http://*.001town.com/*","http://*.01goo.com/*","http://*.03l.cn/*","http://*.133china.com/*","http://*.139shop.com/*","http://yxp.163.com/*","http://*.168dg.com/*","http://*.186mall.com/*","http://*.18to82.com/*","http://*.1j.cn/*","http://*.22shop.com/*","http://*.24dq.com/*","http://*.24quan.com/*","http://*.258sd.com/*","http://*.2688.com/*","http://*.360buy.com/*","http://*.360hqb.com/*","http://*.360kxr.com/*","http://*.360mart.com/*","http://*.365goba.com/*","http://*.38hzt.com/*","http://*.39ty.com/*","http://*.4inlook.com/*","http://*.5188bag.com/*","http://*.51buy.com/*","http://51buy.com/","http://*.51dg.com/*","http://*.51eng.com/*","http://*.51sheyuan.com/*","http://*.51youpin.com/*","http://*.520eye.com/*","http://*.52shehua.com/*","http://*.5366.com/*","http://t.58.com/*","http://*.58hua.com/*","http://*.5lux.com/*","http://*.5yth.com/*","http://*.6919.com/*","http://*.6sbuy.com/*","http://*.77toy.com/*","http://*.7caihua.com/*","http://*.7cv.com/*","http://*.7sev.com/*","http://*.80ebus.com/*","http://*.8801.net/*","http://*.919it.com/*","http://*.929.cn/*","http://*.942radio.com/*","http://b2c.958shop.com/*","http://*.96128.com/*","http://*.99pto.com/*","http://*.99read.com/*","http://*.9dadao.com/*","http://*.9you.com/*","http://*.afffff.com/*","http://*.ai356.com/*","http://*.aibang.com/*","http://*.aidai.com/*","http://*.aiju.com/*","http://*.aim36.com/*","http://*.aimer.com.cn/*","http://*.aiyingshi.com/*","http://*.aizhigu.com.cn/*","http://*.amazon.cn/*","http://*.anni.com/*","http://*.apabi.com/*","http://*.augshow.com/*","http://*.autosup.com/*","http://*.baiyjk.com/*","http://*.bbesports.com/*","http://*.bookuu.com/*","http://*.bearbuy.com.cn/*","http://*.beautyplus.cn/*","http://*.beifabook.com/*","http://*.benq.com.cn/*","http://*.best1.com/*","http://*.biaoshang.hk/*","http://*.binggo.com/*","http://*.bloves.com/*","http://*.bobomobi.com/*","http://*.bookschina.com/*","http://*.boqii.com/*","http://*.buding.com/*","http://*.buy007.com/*","http://*.buy361.cn/*","http://*.buyfine.net/*","http://*.buynow.com.cn/*","http://*.caistv.com/*","http://*.caomeipai.com/*","http://*.car339.com.cn/*","http://*.car6688.com/*","http://*.carrefour.com.cn/*","http://*.cdream.com/*","http://*.ceetop.com/*","http://*.chashu.cn/*","http://*.chedangjia.com/*","http://*.chengdecs.com/*","http://*.china-gift.com/*","http://*.china-pub.com/*","http://emall.chinapay.com/*","http://*.chinayrs.com/*","http://*.chris-tina.com/*","http://*.clady.com/*","http://*.clinique.com.cn/*","http://*.cncard.com/*","http://*.cnfse.com/*","http://*.colebuy.com/*","http://*.conslive.com/*","http://*.coo8.com/*","http://*.cosize.com/*","http://*.cosme-de.com/*","http://*.ctrip.com/*","http://*.cw100.com/*","http://*.d1.com.cn/*","http://*.daisonghua.com/*","http://*.dangdang.com/*","http://*.daoyao.com/*","http://*.woyo.com/*","http://*.dazhe.cn/*","http://*.dazhongdianqi.com.cn/*","http://*.dianpu.com/*","http://*.didatuan.com/*","http://*.disiqu.cn/*","http://*.dixintong.com/*","http://*.doulaimai.com/*","http://*.dsgoo.com/*","http://*.dtoto.com/*","http://*.duhub.com/*","http://*.duoding.com/*","http://*.e-giordano.com/*","http://*.e-lining.com/*","http://*.e-my.com.cn/*","http://*.easy361.com/*","http://*.ebaimi.com/*","http://*.eboxbuy.com/*","http://*.ebtea.com/*","http://*.ecosme.cn/*","http://*.efeihu.com/*","http://*.ehaier.com/*","http://*.ejia.com/*","http://*.enet.com.cn/*","http://*.enjoyeye.com/*","http://*.epetbar.com/*","http://*.et5155.com/*","http://*.f508.com/*","http://*.fclub.cn/*","http://*.flowerby.com/*","http://*.flowercn.com/*","http://*.gap.cn/*","http://*.godida.com/*","http://*.gome.com.cn/*","http://*.goocctv.cn/*","http://*.goodjd.com/*","http://*.goodnourish.cn/*","http://*.gou3618.com/*","http://*.gouduo.com/*","http://*.gouwulian.com/*","http://*.gouxie.com/*","http://*.goyahome.com/*","http://*.guobuy.com/*","http://*.guopi.com/*","http://*.guuoo.com/*","http://*.hany.cn/*","http://*.happigo.com/*","http://*.hit168.com.cn/*","http://*.hitao.com/*","http://*.homeold.cn/*","http://*.homevv.com/*","http://*.hongkouzi.com/*","http://*.hopebook.net/*","http://*.huachu.com.cn/*","http://*.huimeifang.cn/*","http://*.hw2008.cn/*","http://*.icaifeng.com/*","http://*.icson.com/*","http://*.ideemall.com/*","http://*.ihush.com/*","http://*.iloveyou.com.cn/*","http://*.ilovezuan.com/*","http://*.imeelee.com/*","http://*.inoble.com.cn/*","http://*.inshion.com/*","http://*.ishop.cn/*","http://*.it88.com.cn/*","http://*.itzm.com/*","http://*.iyuyou.com/*","http://*.jiajiajk.com/*","http://*.jiaju.com/*","http://*.jiatx.com/*","http://*.jiayougo.com/*","http://*.jinbaidu.com/*","http://*.jmeishop.com/*","http://*.joyran.com/*","http://*.jsbcmall.com/*","http://*.jtlhome.com/*","http://*.jumei.com/*","http://*.junph.com/*","http://*.justonline.cn/*","http://*.jxdyf.com/*","http://*.k121.com/*","http://*.kadang.com/*","http://*.keede.com.cn/*","http://*.kela.cn/*","http://*.kuaishubao.com/*","http://*.kxtkx.com/*","http://*.ladypk.com/*","http://*.laeibelle.com/*","http://*.lafaso.com/*","http://*.lamiu.com/*","http://*.lancome.com.cn/*","http://*.lashou.com/*","http://*.ledaojia.com/*","http://*.leftlady.com/*","http://*.lenovo.com.cn/*","http://*.lens2005.com/*","http://*.letao.com/*","http://*.leyou.com/*","http://*.leyou.com.cn/*","http://*.lijiababy.com.cn/*","http://*.lijigou.com/*","http://*.likebuy.com/*","http://*.likeface.com/*","http://*.lingshi.com/*","http://*.liqunshop.com/*","http://*.liyi99.com/*","http://*.locknlock.com.cn/*","http://*.lovo.cn/*","http://*.luckigo.com/*","http://*.lusen.com/*","http://*.lyceem.com/*","http://*.m18.com/*","http://*.maichawang.com/*","http://*.maimaike.cn/*","http://*.mamabb.com/*","http://*.mamahao.cn/*","http://*.mangocity.com/*","http://*.manzuo.com/*","http://*.masamaso.com/*","http://*.maxfunbuy.com/*","http://*.maywon.com/*","http://*.mbaobao.com/*","http://*.meici.com/*","http://*.meilele.com/*","http://*.meilieasy.com/*","http://*.meituan.com/*","http://*.menglu.com/*","http://*.mengmai.com/*","http://*.minibuy.com/*","http://*.mmgw.cn/*","http://*.mmuses.com/*","http://*.mobi001.com/*","http://*.mokamall.com/*","http://*.momoyoyo.com/*","http://*.montrosechina.com/*","http://*.mooiee.com/*","http://*.moonbasa.com/*","http://*.motostore.com.cn/*","http://*.mpshow.com.cn/*","http://*.naccoo.com/*","http://*.naguu.com/*","http://*.nayao.com/*","http://*.newegg.com.cn/*","http://*.newgo5.com/*","http://*.nmlch.com/*","http://*.no5.com.cn/*","http://*.nokia.com.cn/*","http://*.nonmin88.com/*","http://*.obuy.cn/*","http://*.ofcard.com/*","http://*.ogage.cn/*","http://*.okbig.com/*","http://*.okbuy.com/*","http://*.okddy.com/*","http://*.okgolf.cn/*","http://*.olomo.com/*","http://*.olympus.com.cn/*","http://*.olymsports.com/*","http://*.ono.com.cn/*","http://*.orange3c.com/*","http://*.ouku.com/*","http://*.ourtasty.com/*","http://*.outice.com/*","http://*.oyego.com/*","http://*.paixie.net/*","http://*.palcent.com/*","http://*.ocj.com.cn/*","http://*.pb89.com/*","http://*.pcarm.com/*","http://*.petyoo.com/*","http://*.pgbao.com/*","http://*.piaoliang100.com/*","http://*.pirateship.com.cn/*","http://*.popyj.com/*","http://*.pupai.cn/*","http://*.purcotton.com/*","http://*.qianxun.com/*","http://*.qingci.com/*","http://*.qinqinbaby.com/*","http://*.qmango.com/*","http://*.qumei.com/*","http://*.quwan.com/*","http://*.qxian.com/*","http://*.rayi.cn/*","http://*.redbaby.com.cn/*","http://*.robam.com/*","http://*.salala.com.cn/*","http://*.samsclub.cn/*","http://*.sanfo.com/*","http://*.sapo.com.hk/*","http://*.sasa.com/*","http://*.sasacity.com/*","http://*.sawbuy.com/*","http://*.shanghai-sports.com/*","http://*.shentop.com/*","http://*.shishangqiyi.com/*","http://*.shjdq.com/*","http://*.shnn.com/*","http://*.shopin.net/*","http://*.shoubiao.com.cn/*","http://*.sigo.cn/*","http://mall.sina.com.cn/*","http://*.sinobuy.cn/*","http://*.skcoo.com/*","http://*.skomart.com/*","http://*.snyun.com/*","http://*.sonmai.cn/*","http://*.sport2008.com.cn/*","http://*.strawberrynet.com/*","http://*.suning.com/*","http://*.sz-esun.com/*","http://*.tao3c.com/*","http://item.taobao.com/*","http://*.taoxie.cn/*","http://*.the365.com/*","http://*.thinkshop.cn/*","http://*.tian10.com/*","http://*.tiantian.com/*","http://*.junph.com/*","http://*.tieyou.com/*","http://detail.tmall.com/*","http://*.togj.com/*","http://*.tooogooo.com/*","http://*.toy90.com/*","http://*.toys365.com/*","http://*.tpy100.com/*","http://*.tuniu.com/*","http://*.tztart.com/*","http://*.ugou.cn/*","http://*.uipmall.com/*","http://*.uiyi.cn/*","http://*.ushan.cn/*","http://*.uushouji.com/*","http://*.uya100.com/*","http://*.vaakav.com/*","http://*.vafox.com/*","http://*.vancl.com/*","http://*.vcotton.com/*","http://*.veedl.com/*","http://*.vegoos.com/*","http://*.venusveil.com/*","http://*.veryok.cn/*","http://*.viccol.com/*","http://*.vipshop.com/*","http://*.vipstore.com/*","http://*.vivian.cn/*","http://*.vjia.com/*","http://*.vnasi.com/*","http://*.voipyeah.com/*","http://*.w1.cn/*","http://*.waipowang.com/*","http://*.wangshanghai.com/*","http://*.wg365.com/*","http://*.winenice.com/*","http://*.wl.cn/*","http://*.womai.com/*","http://*.woye.com/*","http://*.wtaotao.com/*","http://*.wumeiwang.com/*","http://*.x-playboy.com/*","http://*.xiaokang.com/*","http://*.xiaozhuren.com/*","http://*.xinbaigo.com/*","http://*.xindou.com/*","http://*.xing800.com/*","http://*.xinhuabookstore.com/*","http://*.xiu.com/*","http://*.xtpo.cn/*","http://*.xzuan.com/*","http://*.yaja.com.cn/*","http://*.yaofang.cn/*","http://*.yasai.cn/*","http://*.yeecare.com/*","http://buy.yesky.com/*","http://*.yesmytea.com/*","http://*.yesmywine.com/*","http://*.yide.com/*","http://*.yifu.com/*","http://*.yihaodian.com/*","http://*.yintai.com/*","http://*.yinyuehe.net/*","http://*.yjcs.cn/*","http://*.yobrand.com/*","http://*.yoger.com.cn/*","http://*.yoho.cn/*","http://*.yongle.com.cn/*","http://*.yougou.com/*","http://*.youjk.com/*","http://*.yoyo18.com/*","http://*.yumaoclub.com/*","http://*.yyosso.com/*","http://*.zbird.com/*","http://*.zgcbb.com/*","http://*.zm7.cn/*","http://*.zopo.com/*","http://*.ibuying.com/*","http://*.33go.com.cn/*","http://*.xijie.com/*","http://*.nop.cn/*","http://*.asyp.com/*","http://*.sparty.cn/*","http://*.yizhedian.com/*","http://*.lvhezi.com/*","http://*.aishangbaobao.com/*","http://*.sportica.cn/*","http://*.jstsilk.cn/*","http://*.camel.com.cn/*","http://*.cottonpop.net/*","http://*.hyj.com/*","http://*.myxiequ.com/*","http://*.mfplaza.com/*","http://*.do93.com/*","http://*.3guo.cn/*","http://*.yaqifushi.com/*","http://*.trura.com/*","http://*.lbaobao.cn/*","http://*.xiutuan.com/*","http://*.usashopcn.com/*","http://*.ihaveu.com/*","http://*.vipku.com/*","http://*.vipchina.com/*","http://*.fanrry.cn/*","http://*.lesunvip.com/*","http://*.nala.com.cn/*","http://*.miqi.cn/*","http://*.meiribuy.com/*","http://*.pufung.com/*","http://*.xiaoye.com/*","http://*.hmeili.com/*","http://*.oulybuy.com/*","http://*.meifenzi.com/*","http://*.caomeishop.com/*","http://*.meifu360.com/*","http://*.bapashop.com/*","http://*.bulangxiongdi.com/*","http://*.gusubuy.com/*","http://*.opearl.net/*","http://*.ruci.cn/*","http://*.rax.cn/*","http://*.jiuxian.com/*","http://*.maimaicha.com/*","http://*.pinwine.cn/*","http://*.meiweidao.com/*","http://*.okliang.com/*","http://*.365wine.com/*","http://*.jjlg.com.cn/*","http://*.bianlishe.com/*","http://*.epkmall.com/*","http://*.gdcct.com/*","http://*.500ccc.com/*","http://*.me361.com/*","http://*.malatamobile.com/*","http://*.trioo.com/*","http://*.oohdear.com/*","http://*.yaahe.cn/*","http://*.easeeyes.com/*","http://*.dbox.cn/*","http://*.haotehui.com/*","http://*.m6go.com/*","http://*.bianyigo.com/*","http://*.okjee.com/*","http://*.mygeek.cn/*","http://*.tbb.cn/*","http://*.ushare360.com/*","http://*.gqt168.com/*","http://*.konjoy.com/*","http://*.aoliz.com/*","http://*.jianianle.com/*","http://*.akajia.com/*","http://*.miqi.com.cn/*","http://*.lehuimai.com/*","http://*.lifevc.com/*","http://*www.ouku.com/","http://nuomi.com/*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1565449320356,"data":{}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/14466-%E8%B4%AD%E7%89%A9%E5%85%9A%E8%87%AA%E5%8A%A8%E6%AF%94%E4%BB%B7%E5%B7%A5%E5%85%B7-%E9%A2%86%E5%8F%96%E6%B7%98%E5%AE%9D%E5%86%85%E9%83%A8%E5%88%B8/code/%E8%B4%AD%E7%89%A9%E5%85%9A%E8%87%AA%E5%8A%A8%E6%AF%94%E4%BB%B7%E5%B7%A5%E5%85%B7-%E9%A2%86%E5%8F%96%E6%B7%98%E5%AE%9D%E5%86%85%E9%83%A8%E5%88%B8.user.js","uuid":"ad5e1d8a-d566-4dbc-9a7a-e20f50363ce5","source":"","requires":[{"meta":{"name":"get.js","url":"https://browser.gwdang.com/get.js?f=/js/gwdang_extension.js","ts":1565449320804,"mimetype":"text/javascript"},"source":""}]},{"name":"懒人专用，全网VIP视频免费破解去广告、全网音乐直接下载、百度网盘直接下载、知乎视频下载等多合一版。长期更新，放心使用。","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s*","*://yun.baidu.com/s*","*://*.zhihu.com/*","*://v.vzuu.com/video/*","*://v.youku.com/v_*","*://m.youku.com/v*","*://m.youku.com/a*","*.iqiyi.com/v_*","*.iqiyi.com/w_*","*.iqiyi.com/a_*","*.le.com/ptv/vplay/*","*v.qq.com/x/cover/*","*v.qq.com/x/page/*","*v.qq.com/play*","*v.qq.com/cover*","*.tudou.com/listplay/*","*.tudou.com/albumplay/*","*.tudou.com/programs/view/*","*.tudou.com/v*","*.mgtv.com/b/*","*://film.sohu.com/album/*","*://tv.sohu.com/*","*.acfun.cn/v/*","*.bilibili.com/video/*","*.bilibili.com/anime/*","*.bilibili.com/bangumi/play/*","*.pptv.com/show/*","*://*.baofeng.com/play/*","*://*.wasu.cn/Play/show*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://item.taobao.com/*","*://*detail.tmall.com/*","*://*detail.tmall.hk/*","*://*.liangxinyao.com/*","*://music.163.com/song*","*://music.163.com/m/song*","*://y.qq.com/n/*","*://*.kugou.com/song*","*://*.kuwo.cn/yinyue*","*://*.xiami.com/*","*://music.taihe.com/song*","*://*.1ting.com/player*","*://music.migu.cn/v*","*://*.lizhi.fm/*","*://*.qingting.fm/*","*://*.ximalaya.com/*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":["*://*.zhmdy.top/*"],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":["d.pcs.baidu.com"]}},"storage":{"ts":1565449427593,"data":{}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/370634-%E6%87%92%E4%BA%BA%E4%B8%93%E7%94%A8-%E5%85%A8%E7%BD%91vip%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A-%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD-%E7%9F%A5%E4%B9%8E%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%AD%89%E5%A4%9A%E5%90%88%E4%B8%80%E7%89%88-%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0-%E6%94%BE%E5%BF%83%E4%BD%BF%E7%94%A8/code/%E6%87%92%E4%BA%BA%E4%B8%93%E7%94%A8%EF%BC%8C%E5%85%A8%E7%BD%91VIP%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A%E3%80%81%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E3%80%81%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E3%80%81%E7%9F%A5%E4%B9%8E%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%AD%89%E5%A4%9A%E5%90%88%E4%B8%80%E7%89%88%E3%80%82%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%8C%E6%94%BE%E5%BF%83%E4%BD%BF%E7%94%A8%E3%80%82.user.js","uuid":"ac220b16-ad62-4bb0-b24e-641defa040cb","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"http://cdn.bootcss.com/jquery/1.12.4/jquery.min.js","ts":1565449428057,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery-latest.js","url":"http://code.jquery.com/jquery-latest.js","ts":1565449430833,"mimetype":"text/javascript"},"source":""}]},{"name":"CSDN自动展开+去广告+净化剪贴板+免登陆","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://blog.csdn.net/*/article/details/*","*://*.blog.csdn.net/article/details/*","*://bbs.csdn.net/topics/*","*://*.iteye.com/blog/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-end","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1565449456354,"data":{}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/372452-csdn%E8%87%AA%E5%8A%A8%E5%B1%95%E5%BC%80-%E5%8E%BB%E5%B9%BF%E5%91%8A-%E5%87%80%E5%8C%96%E5%89%AA%E8%B4%B4%E6%9D%BF-%E5%85%8D%E7%99%BB%E9%99%86/code/CSDN%E8%87%AA%E5%8A%A8%E5%B1%95%E5%BC%80+%E5%8E%BB%E5%B9%BF%E5%91%8A+%E5%87%80%E5%8C%96%E5%89%AA%E8%B4%B4%E6%9D%BF+%E5%85%8D%E7%99%BB%E9%99%86.user.js","uuid":"ef144005-afee-4dc4-9b30-e74c23db7b7c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBDU0RO6Ieq5Yqo5bGV5byAK+WOu+W5v+WRiivlh4DljJbliarotLTmnb8r5YWN55m76ZmGCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMS4zLjAKLy8gQGRlc2NyaXB0aW9uICBJVGV5ZSBDU0RO6Ieq5Yqo5bGV5byA6ZiF6K+777yM5Y+v5Lul5bCG5Ymq6LS05p2/55qE5o6o5bm/5L+h5oGv5Y676Zmk77yM5Y676Zmk5aSn5aSa5pWw5bm/5ZGK44CCCi8vIEBhdXRob3IgICAgICAgd2hvYW1pCi8vIEBtYXRjaCAgICAgICAgKjovL2Jsb2cuY3Nkbi5uZXQvKi9hcnRpY2xlL2RldGFpbHMvKgovLyBAbWF0Y2ggICAgICAgICo6Ly8qLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLyoKLy8gQG1hdGNoICAgICAgICAqOi8vYmJzLmNzZG4ubmV0L3RvcGljcy8qCi8vIEBtYXRjaCAgICAgICAgKjovLyouaXRleWUuY29tL2Jsb2cvKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQGljb24gICAgICAgICBodHRwczovL2NzZG5pbWcuY24vcHVibGljL2Zhdmljb24uaWNvCi8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtZW5kCi8vID09L1VzZXJTY3JpcHQ9PQoKCi8vIOagueaNrue9kemAn+iHquW3seiuvue9ruaXtumXtOmXtOmalAp2YXIgaW50ZXJ2YWwgPSAzMDAwOwp2YXIgc2lkZUludGVydmFsID0gNDAwMDsKdmFyIGJic0ludGVydmFsID0gMzAwMDsgLy8g5ZyoQURCbG9ja+S5i+WQjui/kOihjAp2YXIgaXRleWVJbnRlcnZhbCA9IDEwMDsKCihmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgY3VycmVudFVSTCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwogICAgdmFyIGJsb2cgPSAvYXJ0aWNsZS87CiAgICB2YXIgYmJzID0gL3RvcGljcy87CiAgICB2YXIgaXRleWUgPSAvaXRleWUvOwogICAgLy/oi6XkuLpDU0RO6K665Z2bLOWIme+8mgogICAgaWYoYmJzLnRlc3QoY3VycmVudFVSTCkpewogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkKCIuanNfc2hvd190b3BpYyIpLmNsaWNrKCk7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInB1bGxsb2ctYm94IilbMF0ucmVtb3ZlKCk7IC8vIOW6lemDqOW5v+WRigogICAgICAgICAgICAkKCIubWVkaWF2X2FkIikucmVtb3ZlKCk7ICAgICAgIC8vIOW4luWtkOWwvumDqOW5v+WRigogICAgICAgICAgICAkKCIucG9zdF9yZWNvbW1lbmQiKS5yZW1vdmUoKTsgIC8vIOW4luWtkOWGhVtDU0RO5o6o6I2QXQogICAgICAgICAgICAkKCIuYWRfaXRlbSIpLnJlbW92ZSgpOyAvLyDlj7Pkvqflub/lkYoKICAgICAgICB9LCBiYnNJbnRlcnZhbCk7CiAgICB9ZWxzZSBpZiAoYmxvZy50ZXN0KGN1cnJlbnRVUkwpKXsKICAgICAgICBjc2RuLmNvcHlyaWdodC5pbml0KCIiLCAiIiwgIiIpOyAvL+WOu+mZpOWJqui0tOadv+WKq+aMgQogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJhbm9ueW1vdXNVc2VyTGltaXQiLCAiIik7IC8vIOWFjeeZu+mZhgogICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJidG4tcmVhZG1vcmUiKVswXSl7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJ0bi1yZWFkbW9yZSIpWzBdLmNsaWNrKCk7CiAgICAgICAgfSAvL+iHquWKqOWxleW8gAogICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjb21tZW50LWxpc3QtYm94IilbMF0pewogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjb21tZW50LWxpc3QtYm94IilbMF0ucmVtb3ZlQXR0cmlidXRlKCJzdHlsZSIpOwogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYnRuTW9yZUNvbW1lbnQiKS5yZW1vdmUoKTsKICAgICAgICB9IC8v6Ieq5Yqo5bGV5byACiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjc2RuLXRyYWNraW5nLXN0YXRpc3RpY3MgbWI4IGJveC1zaGFkb3ciKVswXSkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiY3Nkbi10cmFja2luZy1zdGF0aXN0aWNzIG1iOCBib3gtc2hhZG93IilbMF0ucmVtb3ZlKCk7IC8v5bem5LiK5bm/5ZGKCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImFzaWRlRm9vdGVyIikucmVtb3ZlKCk7CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYWRDb250ZW50IikpIHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhZENvbnRlbnQiKS5yZW1vdmUoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicDRjb3Vyc2VfdGFyZ2V0IilbMF0pIHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInA0Y291cnNlX3RhcmdldCIpWzBdLnJlbW92ZSgpOyAvL+W3puS4iuW5v+WRigogICAgICAgICAgICB9CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJkc2hhcmVidXR0b25ib3giKVswXS5yZW1vdmUoKTsKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgidmlwLWNhaXNlIilbMF0ucmVtb3ZlKCk7CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmb3VydGhfY29sdW1uIilbMF0pIHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZvdXJ0aF9jb2x1bW4iKVswXS5yZW1vdmUoKTsgLy/lt6bkuIrlub/lkYoKICAgICAgICAgICAgfQogICAgICAgIH0sIGludGVydmFsKTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaWYgKCQoImRpdltpZF49J2RtcF9hZCddIilbMF0pIHsKICAgICAgICAgICAgICAgICQoImRpdltpZF49J2RtcF9hZCddIilbMF0ucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZvdXJ0aF9jb2x1bW4iKVswXSkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZm91cnRoX2NvbHVtbiIpWzBdLnJlbW92ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgfSwgc2lkZUludGVydmFsKTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInB1bGxsb2ctYm94IilbMF0pIHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInB1bGxsb2ctYm94IilbMF0ucmVtb3ZlKCk7IC8vIOW6lemDqOW5v+WRigogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciByZWNvbW1lbmRPYmogPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJyZWNvbW1lbmQtZml4ZWQtYm94IilbMF0uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicmlnaHQtaXRlbSIpOwogICAgICAgICAgICBmb3IgKHZhciBoID0gKHJlY29tbWVuZE9iai5sZW5ndGggLSAxKTsgaD49MDsgaC0tKSB7CiAgICAgICAgICAgICAgICBpZiAocmVjb21tZW5kT2JqW2hdLnRhZ05hbWUgPT0gIkRJViIpIHsKICAgICAgICAgICAgICAgICAgICByZWNvbW1lbmRPYmpbaF0ucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInA0Y291cnNlX3RhcmdldCIpWzBdKSB7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJwNGNvdXJzZV90YXJnZXQiKVswXS5yZW1vdmUoKTsKICAgICAgICAgICAgfQogICAgICAgIH0sIHNpZGVJbnRlcnZhbCk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBob3QgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJ0eXBlX2hvdF93b3JkIik7CiAgICAgICAgICAgIHZhciByZWNvbW1lbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJyZWNvbW1lbmQtYWQtYm94Iik7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAoaG90Lmxlbmd0aCAtIDEpOyBpID49IDA7IGktLSkgewogICAgICAgICAgICAgICAgaG90W2ldLnJlbW92ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGZvciAodmFyIGogPSAocmVjb21tZW5kLmxlbmd0aCAtIDEpOyBqID49IDA7IGotLSkgewogICAgICAgICAgICAgICAgcmVjb21tZW5kW2pdLnJlbW92ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmb3VydGhfY29sdW1uIilbMF0pIHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZvdXJ0aF9jb2x1bW4iKVswXS5yZW1vdmUoKTsKICAgICAgICAgICAgfQogICAgICAgIH0sIHNpZGVJbnRlcnZhbCk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGZvcih2YXIgeD00NzA7IHg8NDkwOyB4KyspewogICAgICAgICAgICAgICAgdmFyIGtwX2JveCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJrcF9ib3hfIit4KTsgLy/lj7Pkvqflub/lkYoKICAgICAgICAgICAgICAgIGlmKGtwX2JveCkgewogICAgICAgICAgICAgICAgICAgIGtwX2JveC5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sIDUwMDApOwogICAgfSBlbHNlIGlmIChpdGV5ZS50ZXN0KGN1cnJlbnRVUkwpKSB7CiAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXsKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0bi1yZWFkbW9yZScpLmNsaWNrKCk7CiAgICAgICAgfSwgaXRleWVJbnRlcnZhbCk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJsb2ctc2lkZWJhciIpWzBdLnJlbW92ZSgpOwogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpLnN0eWxlLndpZHRoID0gJzEwMDBweCc7CiAgICAgICAgfSwgc2lkZUludGVydmFsKTsKICAgIH0KfSkoKTs="},{"name":"Yet Another Weibo Filter","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":true,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["https://www.weibo.com/*","https://weibo.com/*","https://d.weibo.com/*","https://s.weibo.com/*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":["https://weibo.com/a/bind/*","https://weibo.com/nguide/*","https://weibo.com/"],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":null,"orig_connects":["weibo.com","www.weibo.com","s.weibo.com","video.weibo.com","t.cn","www.miaopai.com","ent.v.sina.cn","sinaimg.cn"]}},"storage":{"ts":1565449475169,"data":{}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/3249-yet-another-weibo-filter/code/Yet%20Another%20Weibo%20Filter.user.js","uuid":"07bae724-e500-4409-aa44-16899d9aa3ad","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICAgIFlldCBBbm90aGVyIFdlaWJvIEZpbHRlcgovLyBAbmFtZTp6aC1DTiAgICAgICAgWWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyIOeci+ecn+ato+aDs+eci+eahOW+ruWNmgovLyBAbmFtZTp6aC1ISyAgICAgICAgWWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyIOeci+ecn+ato+aDs+eci+eahOW+ruWNmgovLyBAbmFtZTp6aC1UVyAgICAgICAgWWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyIOeci+ecn+ato+aDs+eci+eahOW+ruWNmgovLyBAbmFtZTplbiAgICAgICAgICAgWWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyCi8vIEBuYW1lc3BhY2UgICAgICAgICBodHRwczovL2dpdGh1Yi5jb20vdGlhbnNoCi8vIEBkZXNjcmlwdGlvbiAgICAgICDmlrDmtarlvq7ljZrmoLnmja7lhbPplK7or43jgIHkvZzogIXjgIHor53popjjgIHmnaXmupDnrYnov4fmu6Tlvq7ljZrvvJvkv67mlLnniYjpnaLjgIIg5paw5rWq5b6u5Y2a5qC55pOa6Zec6Y215a2X44CB5L2c6ICF44CB6Kmx6aGM44CB5L6G5rqQ562J56+p6YG45b6u5Y2a77yb5L+u5pS554mI6Z2i44CCIGZpbHRlciBTaW5hIFdlaWJvIGJ5IGtleXdvcmRzLCBhdXRob3JzLCB0b3BpY3MsIHNvdXJjZXMsIGV0Yy47IG1vZGlmeSBsYXlvdXQKLy8gQGRlc2NyaXB0aW9uOnpoLUNOIOaWsOa1quW+ruWNmuagueaNruWFs+mUruivjeOAgeS9nOiAheOAgeivnemimOOAgeadpea6kOetiei/h+a7pOW+ruWNmu+8m+S/ruaUueeJiOmdouOAggovLyBAZGVzY3JpcHRpb246emgtSEsg5paw5rWq5b6u5Y2a5qC55pOa6Zec6Y215a2X44CB5L2c6ICF44CB6Kmx6aGM44CB5L6G5rqQ562J56+p6YG45b6u5Y2a77yb5L+u5pS554mI6Z2i44CCCi8vIEBkZXNjcmlwdGlvbjp6aC1UVyDmlrDmtarlvq7ljZrmoLnmk5rpl5zpjbXlrZfjgIHkvZzogIXjgIHoqbHpoYzjgIHkvobmupDnrYnnr6npgbjlvq7ljZrvvJvkv67mlLnniYjpnaLjgIIKLy8gQGRlc2NyaXB0aW9uOmVuICAgIGZpbHRlciBTaW5hIFdlaWJvIGJ5IGtleXdvcmRzLCBhdXRob3JzLCB0b3BpY3MsIHNvdXJjZXMsIGV0Yy47IG1vZGlmeSBsYXlvdXQKLy8gQGluY2x1ZGUgICAgICAgICAgIGh0dHBzOi8vd3d3LndlaWJvLmNvbS8qCi8vIEBpbmNsdWRlICAgICAgICAgICBodHRwczovL3dlaWJvLmNvbS8qCi8vIEBpbmNsdWRlICAgICAgICAgICBodHRwczovL2Qud2VpYm8uY29tLyoKLy8gQGluY2x1ZGUgICAgICAgICAgIGh0dHBzOi8vcy53ZWliby5jb20vKgovLyBAZXhjbHVkZSAgICAgICAgICAgaHR0cHM6Ly93ZWliby5jb20vYS9iaW5kLyoKLy8gQGV4Y2x1ZGUgICAgICAgICAgIGh0dHBzOi8vd2VpYm8uY29tL25ndWlkZS8qCi8vIEBleGNsdWRlICAgICAgICAgICBodHRwczovL3dlaWJvLmNvbS8KLy8gQHZlcnNpb24gICAgICAgICAgIDMuNy41MDgKLy8gQGljb24gICAgICAgICAgICAgIGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBRWdBQUFCSUNBTUFBQUJpTTBOMUFBQUFCR2RCVFVFQUFMR1BDL3hoQlFBQUFBRnpVa2RDQUs3T0hPa0FBQUJkVUV4VVJVeHBjZW1OU2VtTlNlbU5TZW1OU2VtTlNlbU5TZW1OU2VtTlNlbU5TZGt0T3VtTlNlbU5TZW1OU2VtTlNlbU5TZW1OU2RrdE90a3RPdGt0T3RrdE90a3RPdGt0T3RrdE90a3RPdGt0T3RrdE90a3RPdGt0T3VtTlNka3RPc1pvQWhVQUFBQWRkRkpPVXdBZ2tJQVE0TUJBWVBCQTBLQXdjTEJRMEJCZ0lIRGdnREN3OEpEQVQyYzZwUUFBQWlGSlJFRlVXTVBObDlseXd5QU1SY01PTVFhN1NkTVYvLzluTms0bnFSY0poT3ZPVkk5K09KYkU1VW9jRG44VnJCTlJwM3NvN1lXUkd6QldKU0FhM2xaeWZNTENWYkY0eWtWanllMUpoVkIyajRTK1VSMEZwQk1oTkN1REVpbGNLSUljalpTaTNLTzBXNmNLVWdoVVVITDVua3RISnFXOEVHejZmeVRtcjdkVzgyREdLOCtNRWI3WlNBTFlOaUlrVTIwdU1vRHU0dHE5aktyWllubFNBQ1MvellTQnZuZmIvSHp0TTA1dUk2MTFGamZPbU5iOVhnTUlxU2swMXBoZ0RUVFIyZ3FCbS9qNHJmSmRxVStLMmxISFdmN3NzSlRNK296RnZNU0cxaVZWOUZibUtBZlhFanhEVUM2S1FUeURaN0tXTmFBWnlSTGFiVWlPcUFqM0JCOGxMWm9TV0p2QTU2TEVVdW9xdHkyQnFaTERTaEpvZFF6WnBkQ2JhOHl0SDUzSHJYVXU3N0s5UnF5cnZOYVY1cHRGUUdSeS9YNzhDUUtwUWRheTZ6RU0wK2pmWGw1WHBBalhObXVTWG9ER3VIeWNNOXRPQi9NaDBEVmVjQ2NUaUhCaDBOQS9ZZnUzUms0QkFTMUlDZ0laRW1qb2tTM1YxWUtHWitRZVY0TXVUenVCcGluNVg0RjZzRWROUFdoNDFDYkI0Ky9Jb0NQMGIxNG5TQndVWUI5UjFhQVdmZ0pwRW9pQnE0ZGJXQ2NCTlBtNVFFYTdJSjNhejlZd1dhekQwbXBSenZ0NjRac3U2SEU1WGxEUTIvd1JFYlczNkVBZVcwZTVJc1dYZE15QnpoV2drQUgxTlU5eWRxRDVVV2xEdUtsclkyVXp1ZHNNcUMrT1lMNXdCQVQwZVNxbDlDaE95eHhvVE9wVXFtNFVwYjZyYThqRTViWGl1VE5rNDdRWGlFNzZBbmFjSWxKZjFXNVpBQUFBQUVsRlRrU3VRbUNDCi8vIEBob21lcGFnZVVSTCAgICAgICBodHRwczovL3RpYW5zaC5naXRodWIuaW8veWF3Zi8KLy8gQHN1cHBvcnRVUkwgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS90aWFuc2gveWF3Zi9pc3N1ZXMKLy8gQGF1dGhvciAgICAgICAgICAgIOeUsOeUnyBodHRwOi8vd2VpYm8uY29tL3RzaDkwCi8vIEBjb3B5cmlnaHQgICAgICAgICDnlLDnlJ87IFRoZSBNSVQgTGljZW5zZQovLyBAbGljZW5zZSAgICAgICAgICAgTUlUOyBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVAovLyBAY29tcGF0aWJsZSAgICAgICAgZmlyZWZveCDmlK/mjIEKLy8gQGNvbXBhdGlibGUgICAgICAgIG9wZXJhICAg5pSv5oyBCi8vIEBjb21wYXRpYmxlICAgICAgICBjaHJvbWUgIOaUr+aMgQovLyBAZ3JhbnQgICAgICAgICAgICAgR01feG1saHR0cFJlcXVlc3QKLy8gQGdyYW50ICAgICAgICAgICAgIEdNX3NldFZhbHVlCi8vIEBncmFudCAgICAgICAgICAgICBHTV9nZXRWYWx1ZQovLyBAZ3JhbnQgICAgICAgICAgICAgR01fZGVsZXRlVmFsdWUKLy8gQGdyYW50ICAgICAgICAgICAgIEdNX2FkZFN0eWxlCi8vIEBncmFudCAgICAgICAgICAgICBHTV9yZWdpc3Rlck1lbnVDb21tYW5kCi8vIEBncmFudCAgICAgICAgICAgICBHTV9pbmZvCi8vIEBncmFudCAgICAgICAgICAgICBHTV9vcGVuSW5UYWIKLy8gQGdyYW50ICAgICAgICAgICAgIHVuc2FmZVdpbmRvdwovLyBAY29ubmVjdCAgICAgICAgICAgd2VpYm8uY29tCi8vIEBjb25uZWN0ICAgICAgICAgICB3d3cud2VpYm8uY29tCi8vIEBjb25uZWN0ICAgICAgICAgICBzLndlaWJvLmNvbQovLyBAY29ubmVjdCAgICAgICAgICAgdmlkZW8ud2VpYm8uY29tCi8vIEBjb25uZWN0ICAgICAgICAgICB0LmNuCi8vIEBjb25uZWN0ICAgICAgICAgICB3d3cubWlhb3BhaS5jb20KLy8gQGNvbm5lY3QgICAgICAgICAgIGVudC52LnNpbmEuY24KLy8gQGNvbm5lY3QgICAgICAgICAgIHNpbmFpbWcuY24KLy8gQHJ1bi1hdCAgICAgICAgICAgIGRvY3VtZW50LXN0YXJ0Ci8vID09L1VzZXJTY3JpcHQ9PQoKLy8g6Kej5YazIEdNX2FkZFN0eWxlIOeahOS4gOS6m+WFvOWuuemXrumimApHTV9hZGRTdHlsZSA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGFkZFN0eWxlUXVldWUgPSBbXTsKICAoZnVuY3Rpb24gYWRkU3R5bGVzKCkgewogICAgaWYgKCFkb2N1bWVudC5oZWFkKSByZXR1cm4gc2V0VGltZW91dChhZGRTdHlsZXMsIDE2KTsKICAgIGFkZFN0eWxlUXVldWUuc3BsaWNlKDApLmZvckVhY2goZnVuY3Rpb24gKHN0eWxlKSB7CiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOwogICAgfSk7CiAgICBhZGRTdHlsZVF1ZXVlID0gbnVsbDsKICB9KCkpOwogIHJldHVybiBmdW5jdGlvbiAoc3RyKSB7CiAgICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOwogICAgc3R5bGUudGV4dENvbnRlbnQgPSBzdHI7CiAgICBpZiAoYWRkU3R5bGVRdWV1ZSkgYWRkU3R5bGVRdWV1ZS5wdXNoKHN0eWxlKTsKICAgIGVsc2UgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7CiAgICByZXR1cm4gc3R5bGU7CiAgfTsKfSgpKTsKCi8vIOWtl+S9kwp2YXIgZm9udHMgPSB7CiAgJ2ljb25mb250JzogJ0Bmb250LWZhY2UgeyBmb250LWZhbWlseTogInlhd2YtaWNvbmZvbnQiOyBmb250LXN0eWxlOiBub3JtYWw7IGZvbnQtd2VpZ2h0OiBub3JtYWw7IHNyYzogdXJsKCJkYXRhOmltYWdlL3dvZmY7YmFzZTY0LGQwOUdSazlVVkU4QUFBUElBQW9BQUFBQUJiUUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCRFJrWWdBQUFBOUFBQUFOVUFBQURvdDhFUUZrWkdWRTBBQUFITUFBQUFHZ0FBQUJ4dEF3MG1UMU12TWdBQUFlZ0FBQUJKQUFBQVlGbWRZbGRqYldGd0FBQUNOQUFBQURnQUFBRkNBQTBEQUdobFlXUUFBQUpzQUFBQU1BQUFBRFlENWExb2FHaGxZUUFBQXB3QUFBQWRBQUFBSkFhQUE0Qm9iWFI0QUFBQ3ZBQUFBQWdBQUFBSUNBQUFkMjFoZUhBQUFBTEVBQUFBQmdBQUFBWUFBbEFBYm1GdFpRQUFBc3dBQUFEa0FBQUIxSGg1T1BSd2IzTjBBQUFEc0FBQUFCWUFBQUFnLzRZQU0zaWNWWTJ4YWdKQkZBRGZPKzlPMUdOTkpCY0xGd1d4UExVWEF1bXZEZWtQUVVtalRZallDTmJQMHNMTytBazJOc0xXZmtOK1pOL2ViaVRhQkc2cXFXWVFmQjhRVVN5enhhVC9NWjdQSnZQWko2QUhDQy9jOGxpV3VPbHZJbXhYb2ZMMVBpVDZsNmlzYTdhWnQwMFNTRmpWSmNDRGhQV2pCQ0hocHdIZVBTR2dWUWdYTHpkRzRDRjIzMGh4cWxBcGMxRWw5WndQK0hnZGhNcXRZazdOeGFWbGtWZE1FbitUM2JrZXVZN2RFM0hIN3JnWDhQRDNOVDdvYzZnemZYSlQwcGs5a1QwSEl0OCtVYnpZbTRSQ2lxcC9oWkpXWGdBQUFIaWNZMkJnWUdRQWdqTzJpODZENkF0Slc3VmhOQUJLVlFhZ0FBQjRuR05nWm1GZy9NTEF5c0RCTkpQcERBTURReitFWm56TllNekl5Y0RBeE1BR0pLR0FrUUVKQktTNXBqQTRNRVF5UkRMci9OZGhpR0dhd2RDTVVBUGtLUUFoSXdCWVR3dW1BQUFBZUp4allHQmdab0JnR1FaR0JoQ3dBZklZd1h3V0JnVWd6UUtFSUg3ay8vOFE4djhLcUVvR1JqWUdHSlA2Z0dZR1V4Y0FBSmdyQnd4NG5HTmdaR0JnQU9LK0YvLzk0dmx0dmpKd3N6Q0F3SVdrcmRwd3V2eC9MWE1YMHd3Z2w0T0JDU1FLQUZNQ0M3eDRuR05nWkdCZ212Ry9saUdHaFFFRW1Mc1lHQmxRQVJNQVU2TURDQUFBQUFRQUFBQUVBQUIzQUFCUUFBQUNBQUI0bkpXUHdXb0NNUkNHditncWloVjZLQjdFUTg1Q2xtVHhKTDEybjBDOGkrektYamF3Q3VLTGVPbjc5RUg2QkgyRVRuU2dsRkpvQTBtK21mK2Z6QVI0NElvaExjT1VoWEtQRWMvS2ZaYThLbWZpZVZjZU1ERWo1U0ZUNDhWcHNyRms1cmVxeEQwZXBmck9mVGE4S0dmaWVWTWVNT05EZWNqY1BIRmh4NWthUjhPZVNDdWN6aE5jZHVmYU5mdlkxckdWOElmK0paV2FTbmZIZ1FwTFFZNlhleTM3OXlaM1BiQVNMWWpmU1oyL3haVHlkQm03UTJXTDNOdTEvVGFPeEdIbGduZUZEK0w5K3krMk1sekhVWHhKVDYzVG1HeXI3dGpFMW9iYy8rTzFUNVJ3VE9KNG5HTmdaZ0NELzgwTVJrQ0trUUVOQUFBb1ZRRzVBQUE9IikgZm9ybWF0KCJ3b2ZmIik7IH0nLAp9OwoKLy8g5paH5pys5bi46YePCi8vIOivt+S7peeugOS9k+S4reaWh+S4uuWOn+aWh++8jOWPguiAg+i/meS6m+i1hOaWmee/u+ivkQovLyBodHRwOi8vemgud2lraXBlZGlhLm9yZy93aWtpL1RlbXBsYXRlOkNHcm91cC9JVAovLyBodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vTGFuZ3VhZ2UvemgtY24vU2VhcmNoLmFzcHgKLy8g57+76K+R5pe25LyY5YWI6ICD6JmR5b6u5Y2a572R6aG15Lit55qE57+76K+R77yM572R6aG15Lit5pyq57+76K+R5oiW6KGo5oSP5LiN5piO5pe255So5ous5Y+35Yqg5rOo44CC5aaC5p6c6K+l5YaF5a655LiN5a+55bqU5b6u5Y2a572R6aG15Lit55qE5YWD57Sg77yM5Y+v5Lul6Ieq55Sx5Y+R5oylCi8vIOespuWPt+KAnHzigJ3liIblibLlpJrkuKrovpPlhaXmoYbnmoTlk43lupTljLrln5/vvIzigJx8fOKAneS8muWQjOaXtuaNouihjO+8jOKAnHt7PG5hbWU+fX3igJ3lj6/ku6XltYzlhaXkuIDkuKrovpPlhaXmoYbvvJvnv7vor5HlupTkv53or4HovpPlhaXmoYbkuIDkuIDlr7nlupQKdmFyIHRleHQgPSB7CiAgLy8g5Z+65pys5oyJ6ZKuCiAgJ29rQnV0dG9uVGl0bGUnOiB7ICd6aC1jbic6ICfnoa7lrponLCAnemgtaGsnOiAn56K65a6aJywgJ3poLXR3JzogJ+eiuuWumicsICdlbic6ICdDb25maXJtJyB9LAogICdjYW5jZWxCdXR0b25UaXRsZSc6IHsgJ3poLWNuJzogJ+WPlua2iCcsICd6aC1oayc6ICflj5bmtognLCAnemgtdHcnOiAn5Y+W5raIJywgJ2VuJzogJ0NhbmNlbCcgfSwKICAnY2xvc2VCdXR0b25UaXRsZSc6IHsgJ3poLWNuJzogJ+WFs+mXrScsICd6aC1oayc6ICfpl5zploknLCAnemgtdHcnOiAn6Zec6ZaJJywgJ2VuJzogJ0Nsb3NlJyB9LAogICdjb25maWdTdHJpbmdzQWRkJzogeyAnemgtY24nOiAn5re75YqgJywgJ3poLWhrJzogJ+aWsOWinicsICd6aC10dyc6ICfmlrDlop4nLCAnZW4nOiAnQWRkJyB9LAogICdjb25maWdVc2Vyc0FkZCc6IHsgJ3poLWNuJzogJ+a3u+WKoCcsICd6aC1oayc6ICfmlrDlop4nLCAnemgtdHcnOiAn5paw5aKeJywgJ2VuJzogJ0FkZCcgfSwKICAnZGlzYWJsZWRLZXknOiB7ICd6aC1jbic6ICco5bey56aB55SoKScsICd6aC1oayc6ICco5bey5YGc55SoKScsICd6aC10dyc6ICco5bey5YGc55SoKScsICdlbic6ICcoRGlzYWJsZWQpJyB9LAogICdpbmRlbnQnOiB7ICd6aC1jbic6ICfjgIDjgIAnLCAnemgtaGsnOiAn44CA44CAJywgJ3poLXR3JzogJ+OAgOOAgCcsICdlbic6ICfjgIDjgIAnIH0sCiAgLy8g5pe26Ze05pel5pyfCiAgJ3RpbWVUb2RheSc6IHsgJ3poLWNuJzogJ+S7iuWkqScsICd6aC1oayc6ICfku4rlpKknLCAnemgtdHcnOiAn5LuK5aSpJywgJ2VuJzogJ1RvZGF5JyAvKiBhcyBpcyAqLyB9LAogICd0aW1lU2Vjb25kQmVmb3JlJzogeyAnemgtY24nOiAn56eS5YmNJywgJ3poLWhrJzogJ+enkuWJjScsICd6aC10dyc6ICfnp5LliY0nLCAnZW4nOiAnIHNlY3MgYWdvJyAvKiBhcyBpcyAqLyB9LAogICd0aW1lTWludXRlQmVmb3JlJzogeyAnemgtY24nOiAn5YiG6ZKf5YmNJywgJ3poLWhrJzogJ+WIhumQmOWJjScsICd6aC10dyc6ICfliIbpkJjliY0nLCAnZW4nOiAnIG1pbnMgYWdvJyAvKiBhcyBpcyAqLyB9LAogICd0aW1lTW9udGhEYXknOiB7ICd6aC1jbic6ICclc+aciCVz5pelICVzOiVzJywgJ3poLWhrJzogJyVz5pyIJXPml6UgJXM6JXMnLCAnemgtdHcnOiAnJXPmnIglc+aXpSAlczolcycsICdlbic6ICclcy0lcyAlczolcycgLyogYXMgaXMgKi8gfSwKICAndGltZVJlYWRIZXJlJzogeyAnemgtY24nOiAn5L2g55yL5Yiw6L+Z6YeMJywgJ3poLWhrJzogJ+S9oOeci+WIsOmAmeijoScsICd6aC10dyc6ICfkvaDnnIvliLDpgJnoo6EnLCAnZW4nOiAnIHlvdSBzZWUgaGVyZScgLyogYXMgaXMgKi8gfSwKICAvLyDorr7nva7moYYKICAnZmlsdGVyJzogeyAnemgtY24nOiAn6L+H5ruk5ZmoJywgJ3poLWhrJzogJ+evqemBuOWZqCcsICd6aC10dyc6ICfnr6npgbjlmagnLCAnZW4nOiAnRmlsdGVyJyB9LAogICdmaWx0ZXJNZW51SXRlbSc6IHsgJ3poLWNuJzogJ+i/h+a7pOWZqOiuvue9ricsICd6aC1oayc6ICfnr6npgbjlmajoqK3lrponLCAnemgtdHcnOiAn56+p6YG45Zmo6Kit5a6aJywgJ2VuJzogJ0ZpbHRlciBTZXR0aW5ncycgfSwKICAnY29uZmlnRGlhbG9nVGl0bGUnOiB7ICd6aC1jbic6ICfov4fmu6Tlmajorr7nva4gLSBZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXInLCAnemgtaGsnOiAn56+p6YG45Zmo6Kit5a6aIC0gWWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyJywgJ3poLXR3JzogJ+evqemBuOWZqOioreWumiAtIFlldCBBbm90aGVyIFdlaWJvIEZpbHRlcicsICdlbic6ICdGaWx0ZXIgU2V0dGluZ3MgLSBZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXInIH0sCiAgJ3doaXRlbGlzdEZpbHRlckRlc2MnOiB7ICd6aC1jbic6ICfmgLvmmK/mmL7npLp7e3t0eXBlZH19fScsICd6aC1oayc6ICfnuL3mmK/poa/npLp7e3t0eXBlZH19fScsICd6aC10dyc6ICfnuL3mmK/poa/npLp7e3t0eXBlZH19fScsICdlbic6ICdBbHdheXMgc2hvdyB7e3t0eXBlZH19fScgfSwKICAnYmxhY2tsaXN0RmlsdGVyRGVzYyc6IHsgJ3poLWNuJzogJ+makOiXj3t7e3R5cGVkfX19JywgJ3poLWhrJzogJ+maseiXj3t7e3R5cGVkfX19JywgJ3poLXR3JzogJ+maseiXj3t7e3R5cGVkfX19JywgJ2VuJzogJ0hpZGUge3t7dHlwZWR9fX0nIH0sCiAgJ2ZvbGRsaXN0RmlsdGVyRGVzYyc6IHsgJ3poLWNuJzogJ+aKmOWPoHt7e3R5cGVkfX19JywgJ3poLWhrJzogJ+aKmOeWint7e3R5cGVkfX19JywgJ3poLXR3JzogJ+aKmOeWint7e3R5cGVkfX19JywgJ2VuJzogJ0ZvbGQge3t7dHlwZWR9fX0nIH0sCiAgJ3doaXRlbGlzdEFjdGlvbkRlc2MnOiB7ICd6aC1jbic6ICfmmL7npLonLCAnemgtaGsnOiAn6aGv56S6JywgJ3poLXR3JzogJ+mhr+ekuicsICdlbic6ICdTaG93JyB9LAogICdibGFja2xpc3RBY3Rpb25EZXNjJzogeyAnemgtY24nOiAn6ZqQ6JePJywgJ3poLWhrJzogJ+maseiXjycsICd6aC10dyc6ICfpmrHol48nLCAnZW4nOiAnSGlkZScgfSwKICAnZm9sZGxpc3RBY3Rpb25EZXNjJzogeyAnemgtY24nOiAn5oqY5Y+gJywgJ3poLWhrJzogJ+aKmOeWiicsICd6aC10dyc6ICfmipjnloonLCAnZW4nOiAnRm9sZCcgfSwKICAvLyDlj7PplK7oj5zljZUKICAnY29udGV4dE1lbnVDcmVhdGVMYWJlbCc6IHsgJ3poLWNuJzogJ+WIm+W7uui/h+a7pOWZqCcsICd6aC1oayc6ICflibXlu7rnr6npgbjlmagnLCAnemgtdHcnOiAn5Ym15bu656+p6YG45ZmoJywgJ2VuJzogJ0NyZWF0ZSBGaWx0ZXInIH0sCiAgLy8g5b6u5Y2a6L+H5rukCiAgJ2Jhc2VGaWx0ZXJHcm91cFRpdGxlJzogeyAnemgtY24nOiAn5b6u5Y2a6L+H5rukJywgJ3poLWhrJzogJ+W+ruWNmuevqemBuCcsICd6aC10dyc6ICflvq7ljZrnr6npgbgnLCAnZW4nOiAnV2VpYm8gRmlsdGVyJyB9LAogIC8vIOW+ruWNmgogICdsb2FkV2VpYm9UaXRsZSc6IHsgJ3poLWNuJzogJ+W+ruWNmicsICd6aC1oayc6ICflvq7ljZonLCAnemgtdHcnOiAn5b6u5Y2aJywgJ2VuJzogJ1dlaWJvJyB9LAogICdsb2FkV2VpYm9CeU5ld2VzdCc6IHsgJ3poLWNuJzogJ+S9v+eUqOacgOaWsOW+ruWNmuS7o+abv+mmlumhte+8iOW+ruWNmuaMieWPkeW4g+aXtumXtOaOkuWIl++8ie+8iOaOqOiNkO+8iScsICd6aC1oayc6ICfkvb/nlKjmnIDmlrDlvq7ljZrku6Pmm7/pppbpoIHvvIjlvq7ljZrmjInnmbzkvYjmmYLplpPmjpLliJfvvInvvIjmjqjolqbvvIknLCAnemgtdHcnOiAn5L2/55So5pyA5paw5b6u5Y2a5Luj5pu/6aaW6aCB77yI5b6u5Y2a5oyJ55m85L2I5pmC6ZaT5o6S5YiX77yJ77yI5o6o6Jam77yJJywgJ2VuJzogJ1ZpZXcgYnkgbmV3ZXN0IG9uIGhvbWUgcGFnZSAob3JkZXJlZCBieSB0aW1lc3RhbXApIChzdWdnZXN0ZWQpJyB9LAogICdsb2FkV2VpYm9CeUdyb3VwJzogeyAnemgtY24nOiAn5L2/55So5YiG57uE5Luj5pu/6aaW6aG177yI5b6u5Y2a5oyJ5Y+R5biD5pe26Ze05o6S5YiX77yJIHt7PGk+fX0nLCAnemgtaGsnOiAn5L2/55So5YiG57WE5Luj5pu/6aaW6aCB77yI5b6u5Y2a5oyJ55m85L2I5pmC6ZaT5o6S5YiX77yJIHt7PGk+fX0nLCAnemgtdHcnOiAn5L2/55So5YiG57WE5Luj5pu/6aaW6aCB77yI5b6u5Y2a5oyJ55m85L2I5pmC6ZaT5o6S5YiX77yJIHt7PGk+fX0nLCAnZW4nOiAnVmlldyBieSBncm91cCBvbiBob21lIHBhZ2UgKG9yZGVyZWQgYnkgdGltZXN0YW1wKSB7ezxpPn19JyB9LAogICdsb2FkV2VpYm9CeUdyb3VwRGVzYyc6IHsKICAgICd6aC1jbic6ICfkvb/nlKjliIbnu4Tku6Pmm7/pppbpobXlj6/ku6Xpg6jliIbop6PlhrPmjpLluo/mt7fkubHlkozlvq7ljZrkuKLlpLHnmoTpl67popjvvIzkvYbor7fms6jmhI/liIbnu4TmnInkurrmlbDpmZDliLbjgIInCiAgfSwKICAnc2VsZWN0R3JvdXBUaXRsZSc6IHsgJ3poLWNuJzogJ+mAieaLqeWIhue7hCcsICd6aC1oayc6ICfpgbjlj5bliIbntYQnLCAnemgtdHcnOiAn6YG45Y+W5YiG57WEJywgJ2VuJzogJ1NlbGVjdCBHcm91cCcgfSwKICAnc2VsZWN0R3JvdXBIZWFkZXInOiB7ICd6aC1jbic6ICfpgInmi6nku6Pmm7/pppbpobXnmoTliIbnu4QnLCAnemgtaGsnOiAn6YG45Y+W5Y+W5Luj6aaW6aCB55qE5YiG57WEJywgJ3poLXR3JzogJ+mBuOWPluWPluS7o+abv+mmlumggeeahOWIhue1hCcsICdlbic6ICdTZWxlY3QgZ3JvdXAgZm9yIGhvbWUgcGFnZScgfSwKICAnc2VsZWN0R3JvdXBMb2FkaW5nJzogeyAnemgtY24nOiAn5q2j5Zyo6I635Y+W5YiG57uE5L+h5oGv4oCm4oCmJywgJ3poLWhrJzogJ+ato+WcqOaTt+WPluWIhue1hOizh+ioiuKApuKApicsICd6aC10dyc6ICfmraPlnKjmk7flj5bliIbntYTos4foqIrigKbigKYnLCAnZW4nOiAnTG9hZGluZyBncm91cCBkYXRhIC4uLicgfSwKICAnc2VsZWN0ZWRHcm91cCc6IHsgJ3poLWNuJzogJ+mAieaLqeWIhue7hO+8micsICd6aC1oayc6ICfpgbjlj5bliIbntYTvvJonLCAnemgtdHcnOiAn6YG45Y+W5YiG57WE77yaJywgJ2VuJzogJ1NlbGVjdGVkOiAnIH0sCiAgJ3NlbGVjdEdyb3VwQnV0dG9uJzogeyAnemgtY24nOiAn5pu05pS5JywgJ3poLWhrJzogJ+iuiuabtCcsICd6aC10dyc6ICforormm7QnLCAnZW4nOiAnQ2hhbmdlJyB9LAogICdsb2FkV2VpYm9CeU11bHRpR3JvdXAnOiB7CiAgICAnemgtY24nOiAne3s8ZW5hYmxlZD59feS9v+eUqOWkmuS4quWIhue7hOaLvOWHkemmlumhte+8iOW+ruWNmuaMieWPkeW4g+aXtumXtOaOkuWIl++8iXt7PGk+fX18fOavj+asoeWxleekunt7PGNvdW50Pn195p2hfOeCueWHu+aYvuekuuabtOWkmuaXtnt7PGNsZWFyPn19e3s8aWk+fX18fHt7PHdoaXNwZXI+fX3ljIXmi6zmgoTmgoTlhbPms6jliIbnu4R7ezxpdj59fXx86YCJ5oup5YiG57uEe3s8aWlpPn19JywKICAgICd6aC1oayc6ICd7ezxlbmFibGVkPn195L2/55So5aSa5YCL5YiG57WE5ou85rmK6aaW6aCB77yI5b6u5Y2a5oyJ55m85L2I5pmC6ZaT5o6S5YiX77yJe3s8aT59fXx85q+P5qyh5bGV56S6e3s8Y291bnQ+fX3mop186bue5pOK6aGv56S65pu05aSa5pmCe3s8Y2xlYXI+fX17ezxpaT59fXx8e3s8d2hpc3Blcj59feWMheaLrOaChOaChOmXnOazqOWIhue1hHt7PGl2Pn19fHzpgbjlj5bliIbntYR7ezxpaWk+fX0nLAogICAgJ3poLXR3JzogJ3t7PGVuYWJsZWQ+fX3kvb/nlKjlpJrlgIvliIbntYTmi7zmuYrpppbpoIHvvIjlvq7ljZrmjInnmbzkvYjmmYLplpPmjpLliJfvvIl7ezxpPn19fHzmr4/mrKHlsZXnpLp7ezxjb3VudD59feainXzpu57mk4rpoa/npLrmm7TlpJrmmYJ7ezxjbGVhcj59fXt7PGlpPn19fHx7ezx3aGlzcGVyPn195YyF5ous5oKE5oKE6Zec5rOo5YiG57WEe3s8aXY+fX18fOmBuOWPluWIhue1hHt7PGlpaT59fScsCiAgICAnZW4nOiAne3s8ZW5hYmxlZD59fUdlbmVyYXRlIGhvbWUgcGFnZSBieSBtdWx0aXBsZSBncm91cHMgKG9yZGVyZWQgYnkgdGltZXN0YW1wKSB7ezxpPn19fHwgc2hvdyB7ezxjb3VudD59fSBmZWVkcyBwZXIgcGFnZSB8IHdoZW4gInNob3cgbW9yZSIgaXMgY2xpY2tlZCB7ezxjbGVhcj59fSB8IHt7PGlpPn19fHx7ezx3aGlzcGVyPn19IGluY2x1ZGluZyBTZWNyZXQgRm9sbG93aW5nIGdyb3VwIHt7PGl2Pn19fHxHcm91cCB7ezxpaWk+fX0nLAogIH0sCiAgJ2xvYWRXZWlib0J5TXVsdGlHcm91cENsZWFyJzogeyAnemgtY24nOiAn5riF56m65bey5bGV56S65b6u5Y2aJywgJ3poLWhrJzogJ+a4heepuuW3suWxleekuuW+ruWNmicsICd6aC10dyc6ICfmuIXnqbrlt7LlsZXnpLrlvq7ljZonLCAnZW4nOiAnY2xlYXIgZmVlZHMgc2hvd24nIH0sCiAgJ2xvYWRXZWlib0J5TXVsdGlHcm91cEtlZXAnOiB7ICd6aC1jbic6ICfkv53nlZnlt7LlsZXnpLrlvq7ljZonLCAnemgtaGsnOiAn5L+d5oyB5bey5bGV56S65b6u5Y2aJywgJ3poLXR3JzogJ+S/neaMgeW3suWxleekuuW+ruWNmicsICdlbic6ICdrZWVwIGZlZWRzIHNob3duJyB9LAogICdsb2FkV2VpYm9CeU11bHRpR3JvdXBXaGlzcGVyR3JvdXAnOiB7ICd6aC1jbic6ICfmgoTmgoTlhbPms6gnLCAnemgtaGsnOiAn5oKE5oKE6Zec5rOoJywgJ3poLXR3JzogJ+aChOaChOmXnOazqCcsICdlbic6ICdTZWNyZXQgRm9sbG93aW5nJyB9LAogICdsb2FkV2VpYm9CeU11bHRpR3JvdXBEZXNjJzogewogICAgJ3poLWNuJzogJ+aJk+W8gOacrOWKn+iDveW5tumFjee9ruWkmuS4quWIhue7hOWQju+8jOiEmuacrOS8muiHquWKqOaJk+W8gOavj+S4quWIhue7hOeahOmhtemdou+8jOagueaNruaXtumXtOmhuuW6j+aOkuWIl++8jOaLvOWHkeWHuuS4gOS4quKAnOmmlumhteKAneOAgjxiciAvPuWmguaenOaCqOWFs+azqOeahOi0puWPt+S4jeWkmu+8jOWPr+S7peaUvuWcqOS4gOS4quWIhue7hOWGhe+8jOW7uuiuruS9v+eUqOWNleS4quWIhue7hOS7o+abv+mmlumhteeahOWKn+iDveS7peiOt+W+l+abtOWlveeahOaViOaenOOAgicsCiAgfSwKICAnbG9hZFdlaWJvQnlNdWx0aUdyb3VwRGVzYzInOiB7CiAgICAnemgtY24nOiAn5q2k5aSE6YWN572u55qE5q+P5qyh5Yqg6L2955qE5b6u5Y2a5pWw6YeP5Li66L+H5ruk5YmN55qE5pWw6YeP44CC5bu66K6u5ZCv55So5pi+56S65pu05aSa5pe26Ieq5Yqo6ZqQ6JeP5YmN6Z2i55qE5b6u5Y2a77yM5Zyo6aG16Z2i5LiK5bGV56S66L+H5aSa5b6u5Y2a5Y+v6IO95Lya5a+86Ie05oKo55qE5rWP6KeI5Zmo6L+Q6KGM57yT5oWi44CCJywKICB9LAogICdsb2FkV2VpYm9CeU11bHRpR3JvdXBEZXNjMyc6IHsKICAgICd6aC1jbic6ICfnlLHkuo7opoHlhYjkuIDmrKHmgKfmiZPlvIDmiYDmnInliIbnu4TnmoTpobXpnaLvvIzlj6/og73pnIDopoHovoPplb/nmoTliqDovb3ml7bpl7TjgILogIzkuJTphY3nva7nmoTliIbnu4TotorlpJrvvIznlJ/miJDpppbpobXnmoTpgJ/luqbotormhaLjgIInLAogIH0sCiAgJ2xvYWRXZWlib0J5TXVsdGlHcm91cERlc2M0JzogewogICAgJ3poLWNuJzogJ+adpeiHquaChOaChOWFs+azqOWIhue7hOeahOW+ruWNmuS8mumineWkluaYvuekuuKAnOa3u+WKoOWFs+azqOKAneaMiemSru+8jOS9v+eUqOeJiOmdoua4heeQhumakOiXj+WFs+azqOaMiemSruS4reeahOKAnFtbbGF5b3V0LmZvbGxvdy53aGlzcGVyXV3igJ3ku6XpmpDol4/or6XmjInpkq7jgIInLAogIH0sCiAgJ2xvYWRXZWlib0J5TXVsdGlHcm91cE1vcmUnOiB7ICd6aC1jbic6ICfmn6XnnIvmm7TlpJrlvq7ljZonLCAnemgtaGsnOiAn5p+l6Zax5pu05aSa5b6u5Y2aJywgJ3poLXR3JzogJ+afpemWseabtOWkmuW+ruWNmicsICdlbic6ICdWaWV3IG1vcmUgV2VpYm8nIH0sCiAgJ2xvYWRXZWlib0J5TXVsdGlHcm91cERvbmVBbGwnOiB7ICd6aC1jbic6ICfmiYDmnInliIbnu4TnmoTmnIDov5Hlvq7ljZrlt7Llhajpg6jlsZXnpLonLCAnemgtaGsnOiAn5omA5pyJ5YiG57WE55qE5pyA6L+R5b6u5Y2a5bey5YWo6YOo5bGV56S6JywgJ3poLXR3JzogJ+aJgOacieWIhue1hOeahOacgOi/keW+ruWNmuW3suWFqOmDqOWxleekuicsICdlbic6ICdBbGwgcmVjZW50IHdlaWJvIGluIGVhY2ggZ3JvdXAgaGFkIGJlZW4gcmVhZCcgfSwKICAnbG9hZFdlaWJvQnlNdWx0aUdyb3VwRG9uZUdyb3VwTGVmdCc6IHsgJ3poLWNuJzogJ+WIhue7hOKAnCcsICd6aC1oayc6ICfliIbntYTjgIwnLCAnemgtdHcnOiAn5YiG57WE44CMJywgJ2VuJzogJ0FsbCByZWNlbnQgd2VpYm8gaW4gZ3JvdXAgIicgfSwKICAnbG9hZFdlaWJvQnlNdWx0aUdyb3VwRG9uZUdyb3VwUmlnaHQnOiB7ICd6aC1jbic6ICfigJ3nmoTmnIDov5Hlvq7ljZrlt7Llhajpg6jlsZXnpLonLCAnemgtaGsnOiAn44CN55qE5pyA6L+R5b6u5Y2a5bey5YWo6YOo5bGV56S6JywgJ3poLXR3JzogJ+OAjeeahOacgOi/keW+ruWNmuW3suWFqOmDqOWxleekuicsICdlbic6ICciIGhhZCBiZWVuIHJlYWQnIH0sCiAgJ2xvYWRXZWlib0J5TXVsdGlHcm91cExvYWRpbmcnOiB7ICd6aC1jbic6ICfmraPlnKjliqDovb3kuK3vvIzor7fnqI3lgJkuLi4nLCAnemgtaGsnOiAn5q2j5Zyo5Yqg6LyJ5Lit77yM6KuL56iN5YCZLi4uJyAvKiBhcyBpcyAqLywgJ3poLXR3JzogJ+ato+WcqOi8ieWFpeS4re+8jOiri+eojeWAmS4uLicsICdlbic6ICdMb2FkaW5nLCBwbGVhc2Ugd2FpdC4uLicgfSwKICAnZ3JvdXBOb3RFeGlzdEVycm9yVGl0bGUnOiB7ICd6aC1jbic6ICfliIbnu4TkuI3lrZjlnKgnLCAnemgtaGsnOiAn5YiG57WE5LiN5a2Y5ZyoJywgJ3poLXR3JzogJ+WIhue1hOS4jeWtmOWcqCcsICdlbic6ICdHcm91cCBkb2VzIG5vdCBleGlzdCcgfSwKICAnZ3JvdXBOb3RFeGlzdEVycm9yJzogeyAnemgtY24nOiAn5LiN5a2Y5Zyo5ZCN5Li64oCce3tuYW1lfX3igJ3nmoTliIbnu4QnLCAnemgtaGsnOiAn5LiN5a2Y5Zyo5ZCN54K644CMe3tuYW1lfX3jgI3nmoTliIbntYQnLCAnemgtdHcnOiAn5LiN5a2Y5Zyo5ZCN54K644CMe3tuYW1lfX3jgI3nmoTliIbntYQnLCAnZW4nOiAnR3JvdXAgbmFtZWQgInt7bmFtZX19IiBkb2VzIG5vdCBleGlzdCcgfSwKICAvLyDohJrmnKwKICAnc2NyaXB0VG9vbHNUaXRsZSc6IHsgJ3poLWNuJzogJ+iEmuacrCcsICd6aC1oayc6ICfohbPmnKwnLCAnemgtdHcnOiAn6IWz5pysJywgJ2VuJzogJ1NjcmlwdCcgfSwKICAndXNlRmFzdENyZWF0b3InOiB7ICd6aC1jbic6ICfkvb/nlKjmi5bmlL7lv6vpgJ/liJvlu7rov4fmu6Tlmah7ezxpPn19JywgJ3poLWhrJzogJ+S9v+eUqOaLluaUvuW/q+mAn+WJteW7uuevqemBuOWZqHt7PGk+fX0nLCAnemgtdHcnOiAn5L2/55So5ouW5pS+5b+r6YCf5Ym15bu656+p6YG45Zmoe3s8aT59fScsICdlbic6ICdVc2UgZHJhZyBhbmQgZHJvcCB0byBjcmVhdGUgZmlsdGVyc3t7PGk+fX0nIH0sCiAgJ3VzZUZhc3RDcmVhdG9yRGVzYyc6IHsKICAgICd6aC1jbic6ICfmgqjlj6/ku6Xkvb/nlKjpvKDmoIfmi5bmi73lvq7ljZrkuK3nmoTmloflrZfjgIHluJDlj7fjgIHor53popjjgIHmnaXmupDnrYnvvIznvZHpobXlj7PkuIrop5LkvJrmmL7npLrkuIDkuKrpu4ToibLnmoTljLrln5/vvIzmi5bmi73liLDlhbbkuIrph4rmlL7lj6/liJvlu7rov4fmu6TlmajjgIInLAogIH0sCiAgJ3VzZUNvbnRleHRNZW51Q3JlYXRvcic6IHsgJ3poLWNuJzogJ+S9v+eUqOWPs+mUruiPnOWNleW/q+mAn+WIm+W7uui/h+a7pOWZqHt7PGk+fX0nLCAnemgtaGsnOiAn5L2/55So5Y+z6Y215Yqf6IO96KGo5b+r6YCf5Ym15bu656+p6YG45Zmoe3s8aT59fScsICd6aC10dyc6ICfkvb/nlKjlj7PpjbXlip/og73ooajlv6vpgJ/libXlu7rnr6npgbjlmah7ezxpPn19JywgJ2VuJzogJ1VzZSByaWdodC1jbGljayBtZW51IHRvIGNyZWF0ZSBmaWx0ZXJze3s8aT59fScgfSwKICAndXNlQ29udGV4dE1lbnVDcmVhdG9yRGVzYyc6IHsKICAgICd6aC1jbic6ICflnKjlvq7ljZrkuIrngrnlj7PplK7vvIzmgqjlj6/ku6XlnKjmtY/op4jlmajljp/mnInnmoToj5zljZXkuK3mib7liLDigJzliJvlu7rov4fmu6TlmajigJ3nmoToj5zljZXvvIzngrnpgInljbPlj6/lv6vpgJ/liJvlu7rov4fmu6TlmajjgIInLAogIH0sCiAgJ3JlZmlsdGVyQWZ0ZXJSdWxlRWRpdGVkJzogeyAnemgtY24nOiAn5L+u5pS56KeE5YiZ5ZCO6Ieq5Yqo6YeN5paw6L+H5ruk5b6u5Y2ae3s8aT59fScsICd6aC1oayc6ICfkv67mlLnopo/liYflvozoh6rli5Xph43mlrDpgY7mv77lvq7ljZp7ezxpPn19JywgJ3poLXR3JzogJ+S/ruaUueimj+WJh+W+jOiHquWLlemHjeaWsOmBjua/vuW+ruWNmnt7PGk+fX0nLCAnZW4nOiAnUmVmaWx0ZXIgV2VpYm8gYWZ0ZXIgcnVsZSBjaGFuZ2VkIHt7PGk+fX0nIH0sCiAgJ3JlZmlsdGVyQWZ0ZXJSdWxlRWRpdGVkRGVzYyc6IHsKICAgICd6aC1jbic6ICflvIDlkK/or6XpgInpobnlkI7vvIzlvZPmgqjkv67mlLnov4fmu6Top4TliJnml7bvvIzohJrmnKzkvJrph43mlrDlr7nnjrDmnInnmoTlvq7ljZrov4fmu6TjgILkvYblt7LooqvpmpDol4/nmoTlvq7ljZrvvIzlm6DkuLrlt7Lnu4/ooqvnp7vpmaTvvIzlnKjliLfmlrDliY3kuI3kvJrlho3ooqvmmL7npLrlh7rmnaXjgIInCiAgfSwKICAnZmFzdEJsb2NrQnV0dG9uJzogeyAnemgtY24nOiAn5Zyo5q+P5p2h5b6u5Y2a5Y+z5LiK6KeS5re75Yqg5bGP6JS95b6u5Y2a5oyJ6ZKue3s8aT59fScsICd6aC1oayc6ICflnKjmr4/mop3lvq7ljZrlj7PkuIrop5Lmt7vliqDlsY/olL3lvq7ljZrmjInpiJV7ezxpPn19JywgJ3poLXR3JzogJ+WcqOavj+aineW+ruWNmuWPs+S4iuinkua3u+WKoOWxj+iUveW+ruWNmuaMiemIlXt7PGk+fX0nLCAnZW4nOiAnQWRkICJCbG9jayIgYnV0dG9ucyBvbiByaWdodCB0b3Agb2YgV2VpYm8ge3s8aT59fScgfSwKICAnZmFzdEJsb2NrQnV0dG9uRGVzYyc6IHsKICAgICd6aC1jbic6ICflnKjmr4/mnaHlvq7ljZrlj7PkuIrop5Lmt7vliqDkuIDkuKrlsY/olL3lvq7ljZrmjInpkq7vvIzngrnlh7vljbPlj6/lsY/olL3ov5nmnaHlvq7ljZrjgIInCiAgfSwKICAnaGlkZVRoaXNXZWlibyc6IHsgJ3poLWNuJzogJ+makOiXjycsICd6aC1oayc6ICfpmrHol48nLCAnemgtdHcnOiAn6Zqx6JePJywgJ2VuJzogJ0hpZGUnLyogYXMgaXMgKi8gfSwKICAnYmxvY2tIaWRkZW5XZWlib0Rlc2MnOiB7ICd6aC1jbic6ICflsY/olL3ooqvpmpDol4/nmoTlvq7ljZp7ezxpPn19JywgJ3poLWhrJzogJ+Wxj+iUveiiq+maseiXj+eahOW+ruWNmnt7PGk+fX0nLCAnemgtdHcnOiAn5bGP6JS96KKr6Zqx6JeP55qE5b6u5Y2ae3s8aT59fScsICdlbic6ICdCbG9jayBoaWRkZWQgV2VpYm8ge3s8aT59fScgfSwKICAnYmxvY2tIaWRkZW5XZWlib0Rlc2NEZXNjJzogewogICAgJ3poLWNuJzogJ+W8gOWQr+ivpemAiemhueWQju+8jOiEmuacrOS8muiHquWKqOW4ruaCqOeCueWHu+iiq+makOiXj+W+ruWNmuWPs+S4iuinkuS4i+aLieiPnOWNleS4reeahOKAnOWxj+iUvei/meadoeW+ruWNmuKAneOAgui/meagt+WNs+S+v+aCqOWIt+aWsOmhtemdouaIluS9v+eUqOenu+WKqOiuvuWkh+eZu+W9leW+ruWNmu+8jOS5n+S4jeS8muWGjeeci+WIsOi/meS6m+W+ruWNmuOAgueUseS6juivpeWxj+iUveaTjeS9nOaYr+S4jeWPr+mAhueahO+8jOaJgOS7peWmguaenOaCqOWcqOa1i+ivleS4gOS6m+i/h+a7pOinhOWImeaXtu+8jOivt+iwqOaFjuW8gOWQr+OAgicsCiAgfSwKICAnZGlzYWJsZUxhenlMb2FkJzogeyAnemgtY24nOiAn56aB55So6aaW6aG15b6u5Y2a5bu26L+f5Yqg6L29e3s8aT59fScsICd6aC1oayc6ICfnpoHnlKjpppbpoIHlvq7ljZrlu7bpgbLovInlhaV7ezxpPn19JywgJ3poLXR3JzogJ+emgeeUqOmmlumggeW+ruWNmuW7tumBsui8ieWFpXt7PGk+fX0nLCAnZW4nOiAnRGlzYWJsZSBXZWlibyBsYXp5IGxvYWQgb24gaG9tZSBwYWdlIHt7PGk+fX0nIH0sCiAgJ2Rpc2FibGVMYXp5TG9hZERlc2MnOiB7CiAgICAnemgtY24nOiAn5aaC5p6c5oKo5Zug5Li66ZqQ6JeP5LqG6L+H5aSa55qE5b6u5Y2a77yM6aaW6aG15omT5byA5ZCO55yL5Yiw55qE5b6u5Y2a5aSq5bCR77yM5oKo5Y+v5Lul5omT5byA6K+l5Yqf6IO95LiA5qyh5oCn5pi+56S65pu05aSa5b6u5Y2a44CCJwogIH0sCiAgLy8g6Ieq5Yqo6L295YWlCiAgJ2F1dG9Mb2FkTmV3V2VpYm9UaXRsZSc6IHsgJ3poLWNuJzogJ+iHquWKqOi9veWFpeaWsOW+ruWNmicsICd6aC1oayc6ICfoh6rli5XovInlhaXmlrDlvq7ljZonLCAnemgtdHcnOiAn6Ieq5YuV6LyJ5YWl5paw5b6u5Y2aJywgJ2VuJzogJ05ldyBXZWlibyBBdXRvIExvYWQnIH0sCiAgJ2F1dG9Mb2FkTmV3V2VpYm8nOiB7ICd6aC1jbic6ICfoh6rliqjovb3lhaXmlrDlvq7ljZonLCAnemgtaGsnOiAn6Ieq5YuV6LyJ5YWl5paw5b6u5Y2aJywgJ3poLXR3JzogJ+iHquWLlei8ieWFpeaWsOW+ruWNmicsICdlbic6ICdOZXcgV2VpYm8gQXV0byBMb2FkJyB9LAogICdhdXRvTG9hZE5ld1dlaWJvRGVzYyc6IHsKICAgICd6aC1jbic6ICflkK/nlKjor6XpgInpobnlj6/ku6XlnKjmmL7npLrigJzmnInDl+adoeaWsOW+ruWNmuKAneeahOaPkOekuuaoquW5heWHuueOsOWJjei/h+a7pOW+ruWNmu+8jOmBv+WFjeaPkOekuuS4jeW4jOacm+eci+WIsOeahOaWsOW+ruWNmu+8m+S9huWLvumAieatpOmhueS8muWvvOiHtOWcqOWFtuS7luenu+WKqOiuvuWkh+S4iuaUtuS4jeWIsOacieaWsOW+ruWNmueahOaPkOekuuOAgicsCiAgfSwKICAnbmV3V2VpYm9Ob3RpZnknOiB7ICd6aC1jbic6ICfmnIkge3tjb3VudH19IOadoeaWsOW+ruWNmu+8jOeCueWHu+afpeeciycsICd6aC1oayc6ICfmnIl7e2NvdW50fX3mop3mlrDlvq7ljZrvvIzpu57mk4rmn6XnnIsnLCAnemgtdHcnOiAn5pyJe3tjb3VudH195qKd5paw5b6u5Y2a77yM6bue5pOK5p+l55yLJywgJ2VuJzogJ3t7Y291bnR9fSBuZXcgV2VpYm8nIH0sCiAgLy8g5YiG57uE5rWP6KeICiAgJ290aGVyR3JvdXBUaXRsZSc6IHsgJ3poLWNuJzogJ+WIhue7hOa1j+iniCcsICd6aC1oayc6ICfliIbntYTmtYHopr0nLCAnemgtdHcnOiAn5YiG57WE5rWB6Ka9JywgJ2VuJzogJ0Jyb3dzZSBieSBHcm91cCcgfSwKICAnYWNjb3VudEJ5R3JvdXAnOiB7ICd6aC1jbic6ICfliIbnu4TmtY/op4jml7bnpoHnlKjmjInluJDlj7fpmpDol48nLCAnemgtaGsnOiAn5YiG57WE5rWB6Ka95pmC56aB55So5oyJ5biz6Jmf6Zqx6JePJywgJ3poLXR3JzogJ+WIhue1hOa1geimveaZguemgeeUqOaMieW4s+iZn+maseiXjycsICdlbic6ICdEaXNhYmxlIGhpZGUgYnkgYWNjb3VudCBmaWx0ZXIgd2hlbiBicm93c2luZyBieSBncm91cCcgfSwKICAnc2FtZUFjY291bnRCeUdyb3VwJzogeyAnemgtY24nOiAn5rWP6KeI5YiG57uE5pe256aB55So55u45ZCM5L2c6ICF5pWw6YeP6ZmQ5Yi2JywgJ3poLWhrJzogJ+a1geimveWIhue1hOaZguemgeeUqOebuOWQjOS9nOiAheaVuOmHj+mZkOWIticsICd6aC10dyc6ICfmtYHopr3liIbntYTmmYLnpoHnlKjnm7jlkIzkvZzogIXmlbjph4/pmZDliLYnLCAnZW4nOiAnRGlzYWJsZSBoaWRlIHRvbyBtYW55IFdlaWJvIGZyb20gc2FtZSBhY2NvdW50IGZpbHRlciB3aGVuIGJyb3dzaW5nIGJ5IGdyb3VwJyB9LAogIC8vIOiHquWKqOWxleW8gAogICdhdXRvRXhwYW5kJzogewogICAgJ3poLWNuJzogJ+iHquWKqOi9veWFpeWQjuebtOaOpeWxleW8gOaYvuekunt7PGk+fX18fHt7PGV0eXBlcz59feS7heWvueeZveWQjeWNleeahOW+ruWNmuiHquWKqOWxleW8gOaYvuekunx8e3s8YmFja2dyb3VuZD59femhtemdouWkhOS6jua0u+WKqOeKtuaAgeaXtuaaguWBnCcsCiAgICAnemgtaGsnOiAn6Ieq5YuV6LyJ5YWl5b6M55u05o6l5bGV6ZaL6aGv56S6e3s8aT59fXx8e3s8ZXR5cGVzPn195YOF5bCN55m95ZCN5Zau55qE5b6u5Y2a6Ieq5YuV5bGV6ZaL6aGv56S6fHx7ezxiYWNrZ3JvdW5kPn196aCB6Z2i6JmV5pa85rS75YuV54uA5oWL5pmC5pqr5YGcJywKICAgICd6aC10dyc6ICfoh6rli5XovInlhaXlvoznm7TmjqXlsZXplovpoa/npLp7ezxpPn19fHx7ezxldHlwZXM+fX3lg4XlsI3nmb3lkI3llq7nmoTlvq7ljZroh6rli5XlsZXplovpoa/npLp8fHt7PGJhY2tncm91bmQ+fX3poIHpnaLomZXmlrzmtLvli5Xni4DmhYvmmYLmmqvlgZwnLAogICAgJ2VuJzogJ0V4cGFuZCBXZWlibyBhZnRlciBhdXRvIGxvYWQge3s8aT59fXx8IHt7PGV0eXBlcz59fSBPbmx5IGF1dG8gZXhwYW5kIHdoaXRlbGlzdCBXZWlibyB8fCB7ezxiYWNrZ3JvdW5kPn19IFBhdXNlIHdoZW4gcGFnZSBhY3RpdmVkJywKICB9LAogICdhdXRvRXhwYW5kRGVzYyc6IHsKICAgICd6aC1jbic6ICfpnIDopoHlkK/nlKjigJxbW2Jhc2UuYXV0b2xvYWQuYXV0b19sb2FkX25ld193ZWlib11d4oCd5Yqf6IO95omN5Lya55Sf5pWI44CC5Zyo6L295YWl5ZCO5Y+v5Lul55u05o6l5bCG5b6u5Y2a5pi+56S65Ye65p2l6ICM5LiN5piv5Zyo5b6u5Y2a5YiX6KGo6aG26YOo5pi+56S65pyJ5paw5b6u5Y2a55qE5o+Q56S65qiq5bmF44CCJywKICB9LAogICdhdXRvRXhwYW5kQWxsJzogeyAnemgtY24nOiAn5omA5pyJ5paw5b6u5Y2aJywgJ3poLWhrJzogJ+aJgOacieaWsOW+ruWNmicsICd6aC10dyc6ICfmiYDmnInmlrDlvq7ljZonLCAnZW4nOiAnYWxsIG5ldyBXZWlibycgfSwKICAnYXV0b0V4cGFuZFdoaXRlJzogeyAnemgtY24nOiAn55m95ZCN5Y2V5b6u5Y2aJywgJ3poLWhrJzogJ+eZveWQjeWWruW+ruWNmicsICd6aC10dyc6ICfnmb3lkI3llq7lvq7ljZonLCAnZW4nOiAnd2hpdGVsaXN0IFdlaWJvJyB9LAogIC8vIOahjOmdouaPkOekugogICdkZXNrdG9wTm90aWZpY2F0aW9uJzogewogICAgJ3poLWNuJzogJ+i9veWFpeaWsOW+ruWNmuWQjuaYvuekuuahjOmdouaPkOekunt7PGk+fX18fHt7PHR5cGVzPn195LuF5a+555m95ZCN5Y2V55qE5b6u5Y2a5pi+56S65qGM6Z2i5o+Q56S6fHx7ezxzaG9ydGVuPn195qGM6Z2i5o+Q56S65LuF5pi+56S6fOWJjXt7PHNob3J0bGVuPn195a2X56ym5pGY6KaB5L+h5oGvfHx7ezxhdXRvaGlkZT59feahjOmdouaPkOmGkuW7tuaXtuiHquWKqOWFs+mXrXzmmL7npLp7ezxkdXJhdGlvbj59feavq+enknzvvIvlrZfmlbDDl3t7PGR1cmF0aW9uYz59feavq+enknx8e3s8bnR5cGVzPn195L2/55SoIHdlYmtpdE5vdGlmaWNhdGlvbnMg6ICM6Z2eIE5vdGlmaWNhdGlvbicsCiAgICAnemgtaGsnOiAn6L295YWl5paw5b6u5Y2a5ZCO6aGv56S65qGM6Z2i5o+Q56S6e3s8aT59fXx8e3s8dHlwZXM+fX3lg4XlsI3nmb3lkI3llq7nmoTlvq7ljZrpoa/npLrmoYzpnaLmj5DnpLp8fHt7PHNob3J0ZW4+fX3moYzpnaLmj5DnpLrlg4Xpoa/npLp85YmNe3s8c2hvcnRsZW4+fX3lrZflhYPmkZjopoHos4foqIp8fHt7PGF1dG9oaWRlPn195qGM6Z2i5o+Q6YaS5bu25pmC6Ieq5YuV6Zec6ZaJfOmhr+ekunt7PGR1cmF0aW9uPn195q+r56eSfO+8i+Wtl+aVuMOXe3s8ZHVyYXRpb25jPn195q+r56eSfHx7ezxudHlwZXM+fX3kvb/nlKggd2Via2l0Tm90aWZpY2F0aW9ucyDogIzpnZ4gTm90aWZpY2F0aW9uJywKICAgICd6aC10dyc6ICfovb3lhaXmlrDlvq7ljZrlkI7poa/npLrmoYzpnaLmj5DnpLp7ezxpPn19fHx7ezx0eXBlcz59feWDheWwjeeZveWQjeWWrueahOW+ruWNmumhr+ekuuahjOmdouaPkOekunx8e3s8c2hvcnRlbj59feahjOmdouaPkOekuuWDhemhr+ekunzliY17ezxzaG9ydGxlbj59feWtl+WFg+aRmOimgeizh+ioinx8e3s8YXV0b2hpZGU+fX3moYzpnaLmj5DphpLlu7bmmYLoh6rli5Xpl5zplol86aGv56S6e3s8ZHVyYXRpb24+fX3mr6vnp5J877yL5a2X5pW4w5d7ezxkdXJhdGlvbmM+fX3mr6vnp5J8fHt7PG50eXBlcz59feS9v+eUqCB3ZWJraXROb3RpZmljYXRpb25zIOiAjOmdniBOb3RpZmljYXRpb24nLAogICAgJ2VuJzogJ1Nob3cgZGVza3RvcCBub3RpZmljYXRpb24gYWZ0ZXIgYXV0byBsb2FkIHt7PGk+fX18fCB7ezx0eXBlcz59fSBPbmx5IHNob3cgZGVza3RvcCBub3RpZmljYXRpb24gZm9yIHdoaXRlbGlzdCBXZWlibyB8fCB7ezxzaG9ydGVuPn19IERlc2t0b3Agbm90aWZpY2F0aW9uIG9ubHkgc2hvdyB8IGZpcnN0IHt7PHNob3J0bGVuPn19IGNoYXJhY3RlcnMgV2VpYm8gY29udGVudCB8fCB7ezxhdXRvaGlkZT59fSBhdXRvIGhpZGUgZGVza3RvcCBub3RpZmljYXRpb24gYWZ0ZXIgfCB7ezxkdXJhdGlvbj59fW1zIHwgKyB7ezxkdXJhdGlvbmM+fX1tcy9jaGFyIHx8IHt7PG50eXBlcz59fSBVc2Ugd2Via2l0Tm90aWZpY2F0aW9ucyBpbnN0ZWFkIG9mIE5vdGlmaWNhdGlvbicsCiAgfSwKICAnZGVza3RvcE5vdGlmaWNhdGlvbkRlc2MnOiB7CiAgICAnemgtY24nOiAn6ZyA6KaB5ZCv55So4oCcW1tiYXNlLmF1dG9sb2FkLmF1dG9fbG9hZF9uZXdfd2VpYm9dXeKAneWKn+iDveaJjeS8mueUn+aViOOAguWcqOi9veWFpeWQju+8jOaXoOiuuua1j+iniOWZqOaYr+WQpuiiq+acgOWwj+WMlumDveWPr+S7peWcqOWxj+W5leWPs+S4i+inkuW8ueWHuuWMheWQq+aWsOW+ruWNmuWGheWuueeahOaPkOekuu+8jOaWueS+v+aCqOesrOS4gOaXtumXtOS6huino+aWsOaUtuWIsOeahOW+ruWNmuOAgicsCiAgfSwKICAnZGVza3RvcE5vdGlmaWNhdGlvbkRpc2FsbG93ZWRUaXRsZSc6IHsgJ3poLWNuJzogJ+ahjOmdouaPkOekuuiiq+mYu+atoicsICd6aC1oayc6ICfmoYzpnaLmj5DnpLrooqvpmLvmraInLCAnemgtdHcnOiAn5qGM6Z2i5o+Q56S66KKr6Zi75q2iJywgJ2VuJzogJ0Rlc2t0b3AgTm90aWZpY2F0aW9uIERpc2FsbG93ZWQnIH0sCiAgJ2Rlc2t0b3BOb3RpZmljYXRpb25EaXNhbGxvd2VkJzogewogICAgJ3poLWNuJzogJ+aCqOeahOa1j+iniOWZqOmYu+atouS6huahjOmdouaPkOekuuOAguivt+aMieeFp+WmguS4i+atpemqpOino+mZpOmYu+atou+8mjxiciAvPuWPs+WHu+e9kemhteKAlOafpeeci+mhtemdouS/oeaBr+KAlOadg+mZkOKAlOaYvuekuumAmuefpeKAlOWFgeiuuDxiciAvPuatpOWklu+8jOWmguaenOaCqOWuieijheS6hiBUYWIgbm90aWZpZXIg562J5omp5bGV77yM6K+35Yiw5omp5bGV55qE6K6+572u5Lit5YWB6K645pi+56S65qGM6Z2i5o+Q56S644CCJywKICAgICd6aC1oayc6ICfmgqjnmoTmtYHopr3lmajpmLvmraLkuobmoYzpnaLmj5DnpLrjgILoq4vmjInnhaflpoLkuIvmraXpqZ/op6PpmaTpmLvmraLvvJo8YnIgLz7lj7Pmk4rntrLpoIHigJTmqqLoppbpoIHpnaLos4foqIrigJTmrIrpmZDigJTpoa/npLrpgJrnn6XigJTlhYHoqLE8YnIgLz7mraTlpJbvvIzlpoLmnpzmgqjlronoo53kuoYgVGFiIG5vdGlmaWVyIOetieaTtOWFheWll+S7tu+8jOiri+WIsOaTtOWFheWll+S7tueahOioree9ruS4reWFgeiosemhr+ekuuahjOmdouaPkOekuuOAgicsCiAgICAnemgtdHcnOiAn5oKo55qE5rWB6Ka95Zmo6Zi75q2i5LqG5qGM6Z2i5o+Q56S644CC6KuL5oyJ54Wn5aaC5LiL5q2l6amf6Kej6Zmk6Zi75q2i77yaPGJyIC8+5Y+z5pOK57ay6aCB4oCU5qqi6KaW6aCB6Z2i6LOH6KiK4oCU5qyK6ZmQ4oCU6aGv56S66YCa55+l4oCU5YWB6KixPGJyIC8+5q2k5aSW77yM5aaC5p6c5oKo5a6J6KOd5LqGIFRhYiBub3RpZmllciDnrYnmk7TlhYXlpZfku7bvvIzoq4vliLDmk7TlhYXlpZfku7bnmoToqK3nva7kuK3lhYHoqLHpoa/npLrmoYzpnaLmj5DnpLrjgIInLAogICAgJ2VuJzogJ1lvdXIgYnJvd3NlciBibG9ja2VkIGRlc2t0b3Agbm90aWZpY2F0aW9ucy4gUGxlYXNlIGZvbGxvdyB0aGUgaW5zdHJ1Y3Rpb24gdG8gdW5ibG9jazogPGJyIC8+UmlnaHQgY2xpY2sgd2VicGFnZSAtIFZpZXcgUGFnZSBJbmZvIC0gUGVybWlzc2lvbiAtIE5vdGlmaWNhdGlvbnMgLSBBbGxvdy4gWW91IHNob3VsZCBhbHNvIGNoZWNrIHNldHRpbmdzIG9mIGV4dGVuc2lvbnMsIGlmIHlvdSBpbnN0YWxsZWQgZXh0ZW5zaW9ucyBsaWtlIFRhYiBub3RpZmllci4nLAogIH0sCiAgLy8g5pCc57SiCiAgJ3NlYXJjaE5vdEZvdW5kJzogeyAnemgtY24nOiAn5pyq5om+5Yiw5LiO5oKo6L6T5YWl5Yy56YWN55qE6K6+572u6aG5JywgJ3poLWhrJzogJ+acquaJvuWIsOiIh+aCqOi8uOWFpeWMuemFjeeahOioree9rumghScsICd6aC10dyc6ICfmnKrmib7liLDoiIfmgqjovLjlhaXljLnphY3nmoToqK3nva7poIUnLCAnZW4nOiAnTm8gTWF0Y2hlZCBTZXR0aW5ncycgfSwKICAvLyDlhoXlrrkKICAnY29udGVudEZpbHRlckdyb3VwVGl0bGUnOiB7ICd6aC1jbic6ICflhoXlrrknLCAnemgtaGsnOiAn5YWn5a65JywgJ3poLXR3JzogJ+WFp+WuuScsICdlbic6ICdDb250ZW50JyB9LAogIC8vIOWFs+mUruivjQogICdrZXl3b3JkRmlsdGVyRGVzYyc6IHsgJ3poLWNuJzogJ+WFs+mUruivjScsICd6aC1oayc6ICfpl5zpjbXlrZcnLCAnemgtdHcnOiAn6Zec6Y215a2XJywgJ2VuJzogJ0tleXdvcmQnIH0sCiAgJ2tleXdvcmRGaWx0ZXJEZXRhaWxzJzogeyAnemgtY24nOiAn5YyF5ZCr5Lul5LiL5YWz6ZSu6K+N55qE5b6u5Y2aJywgJ3poLWhrJzogJ+WMheWQq+S7peS4i+mXnOmNteWtl+eahOW+ruWNmicsICd6aC10dyc6ICfljIXlkKvku6XkuIvpl5zpjbXlrZfnmoTlvq7ljZonLCAnZW4nOiAnV2VpYm8gd2l0aCB0aGVzZSBrZXl3b3JkcycgfSwKICAna2V5d29yZEZpbHRlckRldGFpbHNEZXNjJzogewogICAgJ3poLWNuJzogJ+WFs+mUruivjeS7heWMuemFjeW+ruWNmuato+aWh++8jOWMheaLrOWOn+W+ruWNmuWSjOi9rOWPkeeahOaPj+i/sOOAguWmguaenOaCqOW4jOacm+afkOadoeW+ruWNmuWQjOaXtuWHuueOsOafkOWHoOS4quWFs+mUruWtl+aXtuaJjei/h+a7pO+8jOivt+S9v+eUqOato+WImeihqOi+vuW8j+eahOi/h+a7pOaWueW8j+OAgicsCiAgfSwKICAna2V5d29yZEZpbHRlckZhc3QnOiB7ICd6aC1jbic6ICflvq7ljZrljIXlkKvlhbPplK7or40nLCAnemgtaGsnOiAn5b6u5Y2a5YyF5ZCr6Zec6Y215a2XJywgJ3poLXR3JzogJ+W+ruWNmuWMheWQq+mXnOmNteWtlycsICdlbic6ICdXZWlibyBjb250YWlucyBrZXl3b3JkICcgfSwKICAna2V5d29yZEZpbHRlckZhc3RJbnB1dCc6IHsgJ3poLWNuJzogJ+KAnHt7dGV4dH194oCdJywgJ3poLWhrJzogJ+OAjHt7dGV4dH1944CNJywgJ3poLXR3JzogJ+OAjHt7dGV4dH1944CNJywgJ2VuJzogJyJ7e3RleHR9fSInIH0sCiAgJ2tleXdvcmRGaWx0ZXJSZWFzb24nOiB7ICd6aC1jbic6ICflm6DljIXlkKvlhbPplK7or43igJx7e2RldGFpbH194oCdJywgJ3poLWhrJzogJ+WboOWMheWQq+mXnOmNteipnuOAjHt7ZGV0YWlsfX3jgI0nLCAnemgtdHcnOiAn5Zug5YyF5ZCr6Zec6Y216Kme44CMe3tkZXRhaWx9feOAjScsICdlbic6ICdiZWNhdXNlIGl0IGNvbnRhaW5zIGtleXdvcmQgInt7ZGV0YWlsfX0iJyB9LAogIC8vIOato+WImeihqOi+vuW8jwogICdyZWdleHBGaWx0ZXJHcm91cFRpdGxlJzogeyAnemgtY24nOiAn5q2j5YiZJywgJ3poLWhrJzogJ+ato+WJhycsICd6aC10dyc6ICfmraPopo8nLCAnZW4nOiAnUmVnZXhwJyB9LAogICdyZWdleHBGaWx0ZXJEZXNjJzogeyAnemgtY24nOiAn5q2j5YiZ5byPJywgJ3poLWhrJzogJ+ato+WJh+W8jycsICd6aC10dyc6ICfmraPopo/lvI8nLCAnZW4nOiAnUmVnZXhwJyB9LAogICdyZWdleHBGaWx0ZXJEZXRhaWxzJzogeyAnemgtY24nOiAn5Yy56YWN5Lul5LiL5q2j5YiZ6KGo6L6+5byP55qE5b6u5Y2aJywgJ3poLWhrJzogJ+WMuemFjeS7peS4i+ato+WJh+ihqOmBlOW8j+eahOW+ruWNmicsICd6aC10dyc6ICfljLnphY3ku6XkuIvmraPopo/ooajnpLrlvI/nmoTlvq7ljZonLCAnZW4nOiAnV2VpYm8gbWF0Y2hlcyB0aGVzZSByZWd1bGFyIGV4cHJlc3Npb25zJyB9LAogICdyZWdleHBGaWx0ZXJEZXRhaWxzRGVzYyc6IHsKICAgICd6aC1jbic6ICfmraPliJnooajovr7lvI/kuablhpnml7bkuI3pnIDopoHlr7nigJwv4oCd5a2X56ym6L2s5LmJ44CC5q2j5YiZ6KGo6L6+5byP5LiN5ZCM5LqO4oCc6YCa6YWN56ym4oCd77yM5oKo6ZyA6KaB5L2/55So4oCcPGNvZGU+Lio8L2NvZGU+4oCd6KGo56S65Lu75oSP5a2X56ym77yM5aaC4oCcPGNvZGU+6L2s5Y+R5bm2Lirlpb3lj4s8L2NvZGU+4oCd44CC5aaC5p6c5oKo5biM5pyb5Yy56YWN5ZCM5pe25Ye6546w5p+Q5Lqb5YWz6ZSu6K+N55qE5b6u5Y2a77yM5oKo5Y+v5Lul55SoPGNvZGU+Xig/PVtcc1xTXSrmmJ/luqcpKD89W1xzXFNdKuesrOS4gCk8L2NvZGU+4oCd5Yy56YWN5omA5pyJ5ZCM5pe25Ye6546w4oCc5pif5bqn4oCd5ZKM4oCc56ys5LiA4oCd55qE5b6u5Y2a44CC5oKo5Y+v5Lul5Y+C6ICDPGEgaHJlZj0iaHR0cHM6Ly90aWFuc2guZ2l0aHViLmlvL3lhd2YvcmVnZXhwLmh0bWwiIHRhcmdldD0iX2JsYW5rIj7nlKjkuo7ov4fmu6Tlvq7ljZrnmoTmraPliJnooajovr7lvI/lv6vpgJ/lhaXpl6g8L2E+5p+l55yL5pu05aSa56S65L6L5YaZ5rOV44CCJywKICB9LAogICdyZWdleHBGaWx0ZXJGYXN0JzogeyAnemgtY24nOiAn5b6u5Y2a5Yy56YWN5q2j5YiZ5byPJywgJ3poLWhrJzogJ+W+ruWNmuWMuemFjeato+WJh+W8jycsICd6aC10dyc6ICflvq7ljZrljLnphY3mraPopo/lvI8nLCAnZW4nOiAnV2VpYm8gbWF0Y2hlcyByZWdleHAgJyB9LAogICdyZWdleHBGaWx0ZXJGYXN0SW5wdXQnOiB7ICd6aC1jbic6ICcve3t0ZXh0fX0vJywgJ3poLWhrJzogJy97e3RleHR9fS8nLCAnemgtdHcnOiAnL3t7dGV4dH19LycsICdlbic6ICcve3t0ZXh0fX0vJyB9LAogICdyZWdleHBGaWx0ZXJSZWFzb24nOiB7ICd6aC1jbic6ICflm6DljLnphY3mraPliJnlvI8ge3tkZXRhaWx9fSAnLCAnemgtaGsnOiAn5Zug5Yy56YWN5q2j5YmH5byPIHt7ZGV0YWlsfX0gJywgJ3poLXR3JzogJ+WboOWMuemFjeato+imj+W8jyB7e2RldGFpbH19ICcsICdlbic6ICdiZWNhdXNlIGl0IG1hdGNoZXMgcmVnZXhwIHt7ZGV0YWlsfX0gJyB9LAogICdyZWdleHBCYWRGb3JtZWRUaXRsZSc6IHsgJ3poLWNuJzogJ+mdnuazleeahOato+WImeihqOi+vuW8jycsICd6aC1oayc6ICfkuI3lkIjms5XnmoTmraPliYfooajpgZTlvI8nLCAnemgtdHcnOiAn5LiN5ZCI5rOV55qE5q2j6KaP6KGo56S65byPJywgJ2VuJzogJ0lsbGVnYWwgUmVnZXhwJyB9LAogICdyZWdleHBCYWRGb3JtZWQnOiB7CiAgICAnemgtY24nOiAn5oKo6L6T5YWl55qEL3t7cmVnZXhwfX0v5LiN6IO96KKr5q2j56Gu5Zyw6Kej5p6Q5Li65q2j5YiZ6KGo6L6+5byP77yM6K+35qOA5p+l5oKo55qE6L6T5YWl44CC5aaC6ZyA5YWz6ZSu6K+N5bGP6JS96K+35Yiw5YaF5a655qCH562+6aG16K6+572u44CCJywKICAgICd6aC1oayc6ICfmgqjovLjlhaXnmoQve3tyZWdleHB9fS/kuI3og73ooqvmraPnorrlnLDop6PmnpDngrrmraPliYfooajpgZTlvI/vvIzoq4vmqqLmn6XmgqjnmoTovLjlhaXjgILlpoLpnIDpl5zpjbXoqZ7lsY/olL3oq4vliLDlhaflrrnmqJnnsaTpoIHpnaLoqK3nva7jgIInLAogICAgJ3poLXR3JzogJ+aCqOi8uOWFpeeahC97e3JlZ2V4cH19L+S4jeiDveiiq+ato+eiuuWcsOino+aekOeCuuato+imj+ihqOekuuW8j++8jOiri+aqouafpeaCqOeahOi8uOWFpeOAguWmgumcgOmXnOmNteipnuWxj+iUveiri+WIsOWFp+WuueaomeexpOmggemdouioree9ruOAgicsCiAgICAnZW4nOiAnQ2Fubm90IHBhcnNlIC97e3JlZ2V4cH19LyBhcyByZWdleHAuIFBsZWFzZSBjaGVjayB5b3VyIGlucHV0LiBZb3UgbWF5IGhpZGUgV2VpYm8gYnkga2V5d29yZHMgaW4gQ29udGVudCB0YWIgcGFnZS4nCiAgfSwKICAvLyDlhbbku5blhYPntKAKICAnY29udGVudFR5cGVzVGl0bGUnOiB7ICd6aC1jbic6ICflsIbku6XkuIvlhYPntKDlkIzmoLfkvZzkuLrlhoXlrrnlpITnkIYnLCAnemgtaGsnOiAn5bCH5Lul5LiL5YWD57Sg5ZCM5qij5L2c54K65YWn5a656JmV55CGJywgJ3poLXR3JzogJ+Wwh+S7peS4i+WFg+e0oOWQjOaoo+S9nOeCuuWFp+WuueiZleeQhicsICdlbic6ICdIYW5kbGUgdGhlc2UgZWxlbWVudHMgYXMgY29udGVudCcgfSwKICAnY29udGVudFR5cGVzTWVudGlvbic6IHsgJ3poLWNuJzogJ+aPkOWIsOafkOS6uicsICd6aC1oayc6ICfmj5DliLDmn5DkuronLCAnemgtdHcnOiAn5o+Q5Yiw5p+Q5Lq6JywgJ2VuJzogJ01lbnRpb24nIH0sCiAgJ2NvbnRlbnRUeXBlc1N0b2NrJzogeyAnemgtY24nOiAn6IKh56Wo6ZO+5o6lJywgJ3poLWhrJzogJ+iCoeelqOmAo+e1kCcsICd6aC10dyc6ICfogqHnpajpgKPntZAnLCAnZW4nOiAnU3RvY2sgbGluaycgfSwKICAnY29udGVudFR5cGVzVG9waWMnOiB7ICd6aC1jbic6ICfor53popjmoIfpopgnLCAnemgtaGsnOiAn6Kmx6aGM5qiZ6aGMJywgJ3poLXR3JzogJ+ipsemhjOaomemhjCcsICdlbic6ICdUb3BpYycgfSwKICAnY29udGVudFR5cGVzTGlua3QnOiB7ICd6aC1jbic6ICfpk77mjqXmoIfpopgnLCAnemgtaGsnOiAn6YCj57WQ5qiZ6aGMJywgJ3poLXR3JzogJ+mAo+e1kOaomemhjCcsICdlbic6ICdMaW5rIFRpdGxlJyB9LAogICdjb250ZW50VHlwZXNMaW5rdSc6IHsgJ3poLWNuJzogJ+mTvuaOpeWcsOWdgCcsICd6aC1oayc6ICfpgKPntZDkvY3lnYAnLCAnemgtdHcnOiAn6YCj57WQ5L2N5Z2AJywgJ2VuJzogJ0xpbmsgdGFyZ2V0IFVSTCcgfSwKICAnY29udGVudFR5cGVzRW1vdGlvbic6IHsgJ3poLWNuJzogJ+ihqOaDheWkh+azqCcsICd6aC1oayc6ICfooajmg4XlgpnoqLsnLCAnemgtdHcnOiAn6KGo5oOF5YKZ6Ki7JywgJ2VuJzogJ1JlbWFyayBvZiBlbW90aW9uJyB9LAogIC8vIOW4kOWPtwogICdhY2NvdW50RmlsdGVyR3JvdXBUaXRsZSc6IHsgJ3poLWNuJzogJ+W4kOWPtycsICd6aC1oayc6ICfluLPomZ8nLCAnemgtdHcnOiAn5biz6JmfJywgJ2VuJzogJ0FjY291bnQnIH0sCiAgJ2FjY291bnRGaWx0ZXJEZXNjJzogeyAnemgtY24nOiAn5biQ5Y+3JywgJ3poLWhrJzogJ+W4s+iZnycsICd6aC10dyc6ICfluLPomZ8nLCAnZW4nOiAnQWNjb3VudCcgfSwKICAnYWNjb3VudEZpbHRlckRldGFpbHMnOiB7ICd6aC1jbic6ICfmnaXoh6rku6XkuIvluJDlj7fnmoTmiYDmnInlvq7ljZonLCAnemgtaGsnOiAn5L6G6Ieq5Lul5LiL5biz6Jmf55qE5omA5pyJ5b6u5Y2aJywgJ3poLXR3JzogJ+S+huiHquS7peS4i+W4s+iZn+eahOaJgOacieW+ruWNmicsICdlbic6ICdBbGwgV2VpYm8gZnJvbSB0aGVzZSBhY2NvdW50cycgfSwKICAnYWNjb3VudEZpbHRlckRldGFpbHNEZXNjJzogewogICAgJ3poLWNuJzogJ+S9oOWFs+azqOeahOafkOS4quS6uuaSsOWGmeaIlui9rOWPkeeahOW+ruWNmuOAguWvueS6jui9rOWPkeeahOW+ruWNmu+8jOS7heWMuemFjeacgOWQjui9rOWPkeeahOmCo+S4quS6uuOAgicsCiAgfSwKICAnYWNjb3VudEZpbHRlckZhc3QnOiB7ICd6aC1jbic6ICfkvZzogIXmmK/igJxAe3tuYW1lfX3igJ3nmoTmiYDmnInlvq7ljZonLCAnemgtaGsnOiAn5L2c6ICF5piv44CMQHt7bmFtZX1944CN55qE5omA5pyJ5b6u5Y2aJywgJ3poLXR3JzogJ+S9nOiAheaYr+OAjEB7e25hbWV9feOAjeeahOaJgOacieW+ruWNmicsICdlbic6ICdBbGwgV2VpYm8gYnkgIkB7e25hbWV9fSInIH0sCiAgJ2FjY291bnRGaWx0ZXJDb250ZXh0TWVudSc6IHsgJ3poLWNuJzogJ+S9nOiAheaYryBAe3tuYW1lfX0nLCAnemgtaGsnOiAn5L2c6ICF5pivIEB7e25hbWV9fScsICd6aC10dyc6ICfkvZzogIXmmK8gQHt7bmFtZX19JywgJ2VuJzogJ2J5IEB7e25hbWV9fScgfSwKICAnYWNjb3VudEZpbHRlclJlYXNvbic6IHsgJ3poLWNuJzogJ+WboOadpeiHqiBAe3tkZXRhaWx9fSAnLCAnemgtaGsnOiAn5Zug5L6G6IeqIEB7e2RldGFpbH19ICcsICd6aC10dyc6ICflm6Dkvoboh6ogQHt7ZGV0YWlsfX0gJywgJ2VuJzogJ2JlY2F1c2UgaXQgaXMgcG9zdGVkIGJ5IEB7e2RldGFpbH19ICcgfSwKICAnYWNjb3VudE5vdEV4aXN0RXJyb3JUaXRsZSc6IHsgJ3poLWNuJzogJ+W4kOWPt+S4jeWtmOWcqCcsICd6aC1oayc6ICfluLPomZ/kuI3lrZjlnKgnLCAnemgtdHcnOiAn5biz6Jmf5LiN5a2Y5ZyoJywgJ2VuJzogJ0FjY291bnQgZG9lcyBub3QgZXhpc3QnIH0sCiAgJ2FjY291bnROb3RFeGlzdEVycm9yJzogeyAnemgtY24nOiAn5LiN5a2Y5Zyo5ZCN5Li64oCce3tuYW1lfX3igJ3nmoTluJDlj7cnLCAnemgtaGsnOiAn5LiN5a2Y5Zyo5ZCN54K644CMe3tuYW1lfX3jgI3nmoTluLPomZ8nLCAnemgtdHcnOiAn5LiN5a2Y5Zyo5ZCN54K644CMe3tuYW1lfX3jgI3nmoTluLPomZ8nLCAnZW4nOiAnQWNjb3VudCBuYW1lZCAie3tuYW1lfX0iIGRvZXMgbm90IGV4aXN0JyB9LAogIC8vIOafkOS6uueahOi9rOWPkQogICdhY2NvdW50ZkZpbHRlckRlc2MnOiB7ICd6aC1jbic6ICfluJDlj7cnLCAnemgtaGsnOiAn5biz6JmfJywgJ3poLXR3JzogJ+W4s+iZnycsICdlbic6ICdBY2NvdW50JyB9LAogICdhY2NvdW50ZkZpbHRlckRldGFpbHMnOiB7ICd6aC1jbic6ICfmnaXoh6rku6XkuIvluJDlj7fnmoTovazlj5Hlvq7ljZonLCAnemgtaGsnOiAn5L6G6Ieq5Lul5LiL5biz6Jmf55qE6L2s5Y+R5b6u5Y2aJywgJ3poLXR3JzogJ+S+huiHquS7peS4i+W4s+iZn+eahOi9rOWPkeW+ruWNmicsICdlbic6ICdGb3J3YXJkZWQgV2VpYm8gZnJvbSB0aGVzZSBhY2NvdW50cycgfSwKICAnYWNjb3VudGZGaWx0ZXJEZXRhaWxzRGVzYyc6IHsKICAgICd6aC1jbic6ICfkuI7igJzmnaXoh6rku6XkuIvluJDlj7fnmoTmiYDmnInlvq7ljZrigJ3lip/og73nsbvkvLzvvIzkvYbkuI3lr7nmraTkurrnmoTljp/liJvlvq7ljZrnlJ/mlYjjgIInLAogICAgJ3poLWhrJzogJ+iIh+KAnOS+huiHquS7peS4i+W4s+iZn+eahOaJgOacieW+ruWNmuKAneWKn+iDvemhnuS8vO+8jOS9huS4jeWwjeatpOS6uueahOWOn+WJteW+ruWNmueUn+aViOOAgicsCiAgICAnemgtdHcnOiAn6IiH4oCc5L6G6Ieq5Lul5LiL5biz6Jmf55qE5omA5pyJ5b6u5Y2a4oCd5Yqf6IO96aGe5Ly877yM5L2G5LiN5bCN5q2k5Lq655qE5Y6f5Ym15b6u5Y2a55Sf5pWI44CCJywKICAgICdlbic6ICdTaW1pbGFyIHRvICJBbGwgV2VpYm8gZnJvbSB0aGVzZSBhY2NvdW50cyIsIGJ1dCBvbmx5IHdvcmtzIG9uIGZvcndhcmRlZCBXZWliby4nCiAgfSwKICAnYWNjb3VudGZGaWx0ZXJGYXN0JzogeyAnemgtY24nOiAn5L2c6ICF5piv4oCcQHt7bmFtZX194oCd55qE6L2s5Y+R5b6u5Y2aJywgJ3poLWhrJzogJ+S9nOiAheaYr+OAjEB7e25hbWV9feOAjeeahOi9rOWPkeW+ruWNmicsICd6aC10dyc6ICfkvZzogIXmmK/jgIxAe3tuYW1lfX3jgI3nmoTovazlj5Hlvq7ljZonLCAnZW4nOiAnV2VpYm8gYnkgIkB7e25hbWV9fSInIH0sCiAgJ2FjY291bnRmRmlsdGVyQ29udGV4dE1lbnUnOiB7ICd6aC1jbic6ICfnlLEgQHt7bmFtZX19IOi9rOWPkScsICd6aC1oayc6ICfnlLEgQHt7bmFtZX19IOi9ieeZvCcsICd6aC10dyc6ICfnlLEgQHt7bmFtZX19IOi9ieeZvCcsICdlbic6ICdmb3J3YXJkZWQgYnkgQHt7bmFtZX19JyB9LAogICdhY2NvdW50ZkZpbHRlclJlYXNvbic6IHsgJ3poLWNuJzogJ+WboOadpeiHqiBAe3tkZXRhaWx9fSAnLCAnemgtaGsnOiAn5Zug5L6G6IeqIEB7e2RldGFpbH19ICcsICd6aC10dyc6ICflm6Dkvoboh6ogQHt7ZGV0YWlsfX0gJywgJ2VuJzogJ2JlY2F1c2UgaXQgaXMgcG9zdGVkIGJ5IEB7e2RldGFpbH19ICcgfSwKICAvLyDljp/liJsKICAnb3JpZ2luYWxGaWx0ZXJHcm91cFRpdGxlJzogeyAnemgtY24nOiAn5Y6f5YibJywgJ3poLWhrJzogJ+WOn+WJtScsICd6aC10dyc6ICfljp/libUnLCAnZW4nOiAnT3JpZ2luYWwnIH0sCiAgJ29yaWdpbmFsRm9sbG93ZXJGaWx0ZXInOiB7CiAgICAnemgtY24nOiAne3s8ZW5hYmxlZD59femakOiXj+WOn+WIm+WNmuS4u3znsonkuJ3mlbDotoXov4d7ezxmYW5zPn195LiH55qE6L2s5Y+R5b6u5Y2ae3s8aT59fXw8YnI+5L6L5aSW5biQ5Y+3JywKICAgICd6aC1oayc6ICd7ezxlbmFibGVkPn196Zqx6JeP5Y6f5Ym15Y2a5Li7fOeyiee1suaVuOi2hemBjnt7PGZhbnM+fX3okKznmoTovYnnmbzlvq7ljZp7ezxpPn19fDxicj7kvovlpJbos6zomZ8nLAogICAgJ3poLXR3JzogJ3t7PGVuYWJsZWQ+fX3pmrHol4/ljp/libXljZrkuLt857KJ57Wy5pW46LaF6YGOe3s8ZmFucz59feiQrOeahOi9ieeZvOW+ruWNmnt7PGk+fX18PGJyPuS+i+WkluizrOiZnycsCiAgICAnZW4nOiAne3s8ZW5hYmxlZD59fSBIaWRlIHdlaWJvIGZyb20gZm9yd2FyZGVkIGZyb20gfCBhY2NvdW50cyB3aXRoIG1vcmUgdGhhbiB7ezxmYW5zPn19MGsgZm9sbG93ZXJze3s8aT59fXw8YnI+RXhjZXB0aW9uIGFjY291bnRzJywKICB9LAogICdvcmlnaW5hbEZvbGxvd2VyRmlsdGVyRGVzYyc6IHsKICAgICd6aC1jbic6ICfkuLrkuobluobnpZ3lvq7ljZror5Xov5DooYzor4Torrrmi4npu5Hns7vliJflip/og73vvIznibnmj5DkvpvmraTlip/og73jgILpmr7lhY3mnInor6/kvKTvvIzosKjmhY7kvb/nlKjjgIInLAogIH0sCiAgJ29yaWdpbmFsRmlsdGVyRGVzYyc6IHsgJ3poLWNuJzogJ+W4kOWPtycsICd6aC1oayc6ICfluLPomZ8nLCAnemgtdHcnOiAn5biz6JmfJywgJ2VuJzogJ0FjY291bnQnIH0sCiAgJ29yaWdpbmFsRmlsdGVyRGV0YWlscyc6IHsgJ3poLWNuJzogJ+WOn+WIm+aYr+S7peS4i+W4kOWPt+eahOW+ruWNmicsICd6aC1oayc6ICfljp/libXmmK/ku6XkuIvluLPomZ/nmoTlvq7ljZonLCAnemgtdHcnOiAn5Y6f5Ym15piv5Lul5LiL5biz6Jmf55qE5b6u5Y2aJywgJ2VuJzogJ1dlaWJvIE9yaWdpbmFsbHkgZnJvbSB0aGVzZSBhY2NvdW50cycgfSwKICAnb3JpZ2luYWxGaWx0ZXJEZXRhaWxzRGVzYyc6IHsKICAgICd6aC1jbic6ICflpoLmnpzkuIDmnaHlvq7ljZrmmK/ljp/liJvnmoTvvIjkuI3mmK/ovazlj5HnmoTvvInpgqPkuYjku5bnmoTkvZzogIXlsLHmmK/ljp/liJvnmoTkvZzogIXvvIzlkKbliJnljp/liJvmjIfov5nmnaHlvq7ljZrmnIDljp/lp4vnmoTkvZzogIXjgIInCiAgfSwKICAnb3JpZ2luYWxGaWx0ZXJGYXN0JzogeyAnemgtY24nOiAn5Y6f5Yib5piv4oCcQHt7bmFtZX194oCd55qE5b6u5Y2aJywgJ3poLWhrJzogJ+WOn+WJteaYr+OAjEB7e25hbWV9feOAjeeahOW+ruWNmicsICd6aC10dyc6ICfljp/libXmmK/jgIxAe3tuYW1lfX3jgI3nmoTlvq7ljZonLCAnZW4nOiAnT3JpZ2luYWwgV2VpYm8gZnJvbSAiQHt7bmFtZX19IicgfSwKICAnb3JpZ2luYWxGaWx0ZXJDb250ZXh0TWVudSc6IHsgJ3poLWNuJzogJ+WOn+WIm+aYryBAe3tuYW1lfX0nLCAnemgtaGsnOiAn5Y6f5Ym15pivIEB7e25hbWV9fScsICd6aC10dyc6ICfljp/libXmmK8gQHt7bmFtZX19JywgJ2VuJzogJ2Zyb20gQHt7bmFtZX19JyB9LAogICdvcmlnaW5hbEZpbHRlclJlYXNvbic6IHsgJ3poLWNuJzogJ+WboOi9rOWPkeiHqiBAe3tkZXRhaWx9fSAnLCAnemgtaGsnOiAn5Zug6L2J55m86IeqIEB7e2RldGFpbH19ICcsICd6aC10dyc6ICflm6DovYnnmbzoh6ogQHt7ZGV0YWlsfX0gJywgJ2VuJzogJ2JlY2F1c2UgaXQgaXMgZm9yd2FyZGVkIGZyb20gQHt7ZGV0YWlsfX0gJyB9LAogICdhY3RPbkRpc2NvdmVyeVBhZ2UnOiB7ICd6aC1jbic6ICcg5oyJ5Y6f5Yib5L2c6ICF6L+H5ruk55qE6KeE5YiZ5a+55Y+R546w6aG16Z2i55qE5L2c6ICF55Sf5pWIJywgJ3poLWhrJzogJ+aMieWOn+WJteS9nOiAhemBjua/vueahOimj+WJh+WwjeeZvOePvumggemdoueahOS9nOiAheeUn+aViCcsICd6aC10dyc6ICfmjInljp/libXkvZzogIXpgY7mv77nmoTopo/liYflsI3nmbznj77poIHpnaLnmoTkvZzogIXnlJ/mlYgnLCAnZW4nOiAnUnVsZXMgZmlsdGVyIGJ5IG9yaWdpbmFsIGFwcGx5IHRvIGF1dGhvcnMgaW4gZGlzY292ZXJ5IHBhZ2UnIH0sCiAgLy8g5o+Q5YiwCiAgJ21lbnRpb25GaWx0ZXJHcm91cFRpdGxlJzogeyAnemgtY24nOiAn5o+Q5YiwJywgJ3poLWhrJzogJ+aPkOWIsCcsICd6aC10dyc6ICfmj5DliLAnLCAnZW4nOiAnTWVudGlvbicgfSwKICAnbWVudGlvbkZpbHRlckRlc2MnOiB7ICd6aC1jbic6ICfluJDlj7cnLCAnemgtaGsnOiAn5biz6JmfJywgJ3poLXR3JzogJ+W4s+iZnycsICdlbic6ICdBY2NvdW50JyB9LAogICdtZW50aW9uRmlsdGVyRGV0YWlscyc6IHsgJ3poLWNuJzogJ+aPkOWIsOS7peS4i+W4kOWPt+eahOW+ruWNmicsICd6aC1oayc6ICfmj5DliLDku6XkuIvluLPomZ/nmoTlvq7ljZonLCAnemgtdHcnOiAn5o+Q5Yiw5Lul5LiL5biz6Jmf55qE5b6u5Y2aJywgJ2VuJzogJ1dlaWJvIG1lbnRpb25lZCB0aGVzZSBhY2NvdW50cycgfSwKICAnbWVudGlvbkZpbHRlckRldGFpbHNEZXNjJzogewogICAgJ3poLWNuJzogJ+aPkOWIsOWMheaLrOWcqOW+ruWNmuS4reS9v+eUqOKAnEDigJ3mj5DliLDnmoTluJDlj7fvvIzkuZ/ljIXmi6zovazlj5Hot6/lvoTkuK3nmoTpgqPkupvluJDlj7fjgILlvq7ljZrkuK3mj5DliLDnmoTkurrnmoTpk77mjqXkuI3kvJrpmo/kv67mlLnmmLXnp7DogIzlj5jljJbvvIzov5nph4zkuZ/ml6Dms5XlpITnkIbkv67mlLnmmLXnp7DnmoTmg4XlhrXvvIzmiYDku6XlpoLmnpzkuIDkuKrkurrkv67mlLnkuobmmLXnp7DvvIzmgqjpnIDopoHph43mlrDmt7vliqDjgIInCiAgfSwKICAnbWVudGlvbkZpbHRlckZhc3QnOiB7ICd6aC1jbic6ICfmj5DliLDkuobigJxAe3tuYW1lfX3igJ3nmoTlvq7ljZonLCAnemgtaGsnOiAn5o+Q5Yiw5LqG44CMQHt7bmFtZX1944CN55qE5b6u5Y2aJywgJ3poLXR3JzogJ+aPkOWIsOS6huOAjEB7e25hbWV9feOAjeeahOW+ruWNmicsICdlbic6ICdXZWlibyBtZW50aW9uZWQgIkB7e25hbWV9fSInIH0sCiAgJ21lbnRpb25GaWx0ZXJDb250ZXh0TWVudUdyb3VwJzogeyAnemgtY24nOiAn5o+Q5Yiw5LqGJywgJ3poLWhrJzogJ+aPkOWIsOS6hicsICd6aC10dyc6ICfmj5DliLDkuoYnLCAnZW4nOiAnbWVudGlvbmVkJyB9LAogICdtZW50aW9uRmlsdGVyQ29udGV4dE1lbnUnOiB7ICd6aC1jbic6ICdAe3tuYW1lfX0nLCAnemgtaGsnOiAnQHt7bmFtZX19JywgJ3poLXR3JzogJ0B7e25hbWV9fScsICdlbic6ICdAe3tuYW1lfX0nIH0sCiAgJ21lbnRpb25GaWx0ZXJSZWFzb24nOiB7ICd6aC1jbic6ICflm6Dmj5DliLAgQHt7ZGV0YWlsfX0gJywgJ3poLWhrJzogJ+WboOaPkOWIsCBAe3tkZXRhaWx9fSAnLCAnemgtdHcnOiAn5Zug5o+Q5YiwIEB7e2RldGFpbH19ICcsICdlbic6ICdiZWNhdXNlIGl0IG1lbnRpb25lZCBAe3tkZXRhaWx9fSAnIH0sCiAgLy8g6K+d6aKYCiAgJ3RvcGljRmlsdGVyR3JvdXBUaXRsZSc6IHsgJ3poLWNuJzogJ+ivnemimCcsICd6aC1oayc6ICfoqbHpoYwnLCAnemgtdHcnOiAn6Kmx6aGMJywgJ2VuJzogJ1RvcGljJyB9LAogICd0b3BpY0ZpbHRlckRlc2MnOiB7ICd6aC1jbic6ICfor53popgnLCAnemgtaGsnOiAn6Kmx6aGMJywgJ3poLXR3JzogJ+ipsemhjCcsICdlbic6ICdUb3BpYycgfSwKICAndG9waWNGaWx0ZXJEZXRhaWxzJzogeyAnemgtY24nOiAn5YyF5ZCr5Lul5LiL6K+d6aKY55qE5b6u5Y2aJywgJ3poLWhrJzogJ+WMheWQq+S7peS4i+ipsemhjOeahOW+ruWNmicsICd6aC10dyc6ICfljIXlkKvku6XkuIvoqbHpoYznmoTlvq7ljZonLCAnZW4nOiAnV2VpYm8gd2l0aCB0aGVzZSB0b3BpY3MnIH0sCiAgJ3RvcGljRmlsdGVyRGV0YWlsc0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5Yy56YWN5o+Q5Yiw5LqG5p+Q5Liq6K+d6aKY55qE5b6u5Y2a77yM5YyF5ous5Y6f5paH5ZKM6L2s5Y+R55qE6K+E6K6644CC6K+d6aKY5L2/55So5YWo5a2X5Yy56YWN44CCJwogIH0sCiAgJ3RvcGljRmlsdGVyRmFzdCc6IHsgJ3poLWNuJzogJ+W+ruWNmuWMheWQq+ivnemimCcsICd6aC1oayc6ICflvq7ljZrljIXlkKvoqbHpoYwnLCAnemgtdHcnOiAn5b6u5Y2a5YyF5ZCr6Kmx6aGMJywgJ2VuJzogJ1dlaWJvIGNvbnRhaW5zIHRvcGljICcgfSwKICAndG9waWNGaWx0ZXJDb250ZXh0TWVudUdyb3VwJzogeyAnemgtY24nOiAn5YyF5ZCr6K+d6aKYJywgJ3poLWhrJzogJ+WMheWQq+ipsemhjCcsICd6aC10dyc6ICfljIXlkKvoqbHpoYwnLCAnZW4nOiAnY29udGFpbnMgdG9waWMnIH0sCiAgJ3RvcGljRmlsdGVyQ29udGV4dE1lbnUnOiB7ICd6aC1jbic6ICcje3t0b3BpY319IycsICd6aC1oayc6ICcje3t0b3BpY319IycsICd6aC10dyc6ICcje3t0b3BpY319IycsICdlbic6ICcje3t0b3BpY319IycgfSwKICAndG9waWNGaWx0ZXJGYXN0SW5wdXQnOiB7ICd6aC1jbic6ICfigJwje3t0b3BpY319I+KAnScsICd6aC1oayc6ICfjgIwje3t0b3BpY319I+OAjScsICd6aC10dyc6ICfjgIwje3t0b3BpY319I+OAjScsICdlbic6ICciI3t7dG9waWN9fSMiJyB9LAogICd0b3BpY0ZpbHRlclJlYXNvbic6IHsgJ3poLWNuJzogJ+WboOWMheWQq+ivnemimCAje3tkZXRhaWx9fSMgJywgJ3poLWhrJzogJ+WboOWMheWQq+ipsemhjCAje3tkZXRhaWx9fSMgJywgJ3poLXR3JzogJ+WboOWMheWQq+ipsemhjCAje3tkZXRhaWx9fSMgJywgJ2VuJzogJ2JlY2F1c2UgaXQgY29udGFpbmVkIHRvcGljICN7e2RldGFpbH19IyAnIH0sCiAgJ3J0b3BpY0ZpbHRlckRlc2MnOiB7ICd6aC1jbic6ICfmraPliJnlvI8nLCAnemgtaGsnOiAn5q2j5YmH5byPJywgJ3poLXR3JzogJ+ato+imj+W8jycsICdlbic6ICdSZWdleHAnIH0sCiAgJ3J0b3BpY0ZpbHRlckRldGFpbHMnOiB7ICd6aC1jbic6ICfljIXlkKvljLnphY3ku6XkuIvmraPliJnooajovr7lvI/nmoTor53popjnmoTlvq7ljZonLCAnemgtaGsnOiAn5YyF5ZCr5Yy56YWN5Lul5LiL5q2j5YmH6KGo6YGU5byP55qE6Kmx6aGM55qE5b6u5Y2aJywgJ3poLXR3JzogJ+WMheWQq+WMuemFjeS7peS4i+ato+imj+ihqOekuuW8j+eahOivnemimOeahOW+ruWNmicsICdlbic6ICdXZWlibyB3aXRoIHRvcGljIG1hdGNoZXMgdGhlc2UgcmVndWxhciBleHByZXNzaW9ucycgfSwKICAncnRvcGljRmlsdGVyRGV0YWlsc0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5L2/55So5q2j5YiZ5byP5Yy56YWN5b6u5Y2a5Lit55qE6K+d6aKY77yM5q2j5YiZ5Yy56YWN5pe25LiN6ZyA6KaB5Yy56YWN5Lik5L6n55qE4oCcI+KAneOAgnt7cmVnZXhwRmlsdGVyRGV0YWlsc0Rlc2N9fScKICB9LAogICdydG9waWNGaWx0ZXJGYXN0JzogeyAnemgtY24nOiAn5b6u5Y2a5YyF5ZCr6K+d6aKY5Yy56YWNJywgJ3poLWhrJzogJ+W+ruWNmuWMheWQq+ipsemhjOWMuemFjScsICd6aC10dyc6ICflvq7ljZrljIXlkKvoqbHpoYzljLnphY0nLCAnZW4nOiAnV2VpYm8gY29udGFpbnMgdG9waWMgbWF0Y2hlcyAnIH0sCiAgJ3J0b3BpY0ZpbHRlckZhc3RJbnB1dCc6IHsgJ3poLWNuJzogJ+KAnCN7e3RvcGljfX0j4oCdJywgJ3poLWhrJzogJ+OAjCN7e3RvcGljfX0j44CNJywgJ3poLXR3JzogJ+OAjCN7e3RvcGljfX0j44CNJywgJ2VuJzogJyIje3t0b3BpY319IyInIH0sCiAgJ3J0b3BpY0ZpbHRlclJlYXNvbic6IHsgJ3poLWNuJzogJ+WboOWMheWQq+ivnemimOWMuemFjSB7e2RldGFpbH19ICcsICd6aC1oayc6ICflm6DljIXlkKvoqbHpoYzljLnphY0ge3tkZXRhaWx9fSAnLCAnemgtdHcnOiAn5Zug5YyF5ZCr6Kmx6aGM5Yy56YWNIHt7ZGV0YWlsfX0gJywgJ2VuJzogJ2JlY2F1c2UgaXQgY29udGFpbmVkIHRvcGljIG1hdGNoIHt7ZGV0YWlsfX0gJyB9LAogIC8vIOadpea6kAogICdzb3VyY2VGaWx0ZXJHcm91cFRpdGxlJzogeyAnemgtY24nOiAn5p2l5rqQJywgJ3poLWhrJzogJ+S+hua6kCcsICd6aC10dyc6ICfkvobmupAnLCAnZW4nOiAnU291cmNlJyB9LAogICdzb3VyY2VGaWx0ZXJEZXNjJzogeyAnemgtY24nOiAn5p2l6IeqJywgJ3poLWhrJzogJ+S+huiHqicsICd6aC10dyc6ICfkvoboh6onLCAnZW4nOiAnQ29tZSBmcm9tJyB9LAogICdzb3VyY2VGaWx0ZXJEZXRhaWxzJzogeyAnemgtY24nOiAn5Lul5LiL5p2l5rqQ55qE5b6u5Y2aJywgJ3poLWhrJzogJ+S7peS4i+S+hua6kOeahOW+ruWNmicsICd6aC10dyc6ICfku6XkuIvkvobmupDnmoTlvq7ljZonLCAnZW4nOiAnV2VpYm8gY29tZXMgZnJvbSB0aGVzZSBzb3VyY2VzJyB9LAogICdzb3VyY2VGaWx0ZXJEZXRhaWxzRGVzYyc6IHsKICAgICd6aC1jbic6ICfljLnphY3lvq7ljZrkuIvmlrnigJzmnaXoh6rDl8OXw5figJ3nmoTmnaXmupDvvIzkuI3ljIXmi6zigJzoh6rlrprkuYnlvq7ljZrmnaXmupDigJ3kuK3nmoTmlofmnKzjgILmnaXmupDkvb/nlKjlhajlrZfljLnphY3jgIInCiAgfSwKICAnc291cmNlRmlsdGVyRmFzdCc6IHsgJ3poLWNuJzogJ+adpeiHquKAnHt7c291cmNlfX3igJ3nmoTlvq7ljZonLCAnemgtaGsnOiAn5L6G6Ieq44CMe3tzb3VyY2V9feOAjeeahOW+ruWNmicsICd6aC10dyc6ICfkvoboh6rjgIx7e3NvdXJjZX1944CN55qE5b6u5Y2aJywgJ2VuJzogJ1dlaWJvIGNvbWVzIGZyb20gInt7c291cmNlfX0iJyB9LAogICdzb3VyY2VGaWx0ZXJDb250ZXh0TWVudUdyb3VwJzogeyAnemgtY24nOiAn5p2l6IeqJywgJ3poLWhrJzogJ+S+huiHqicsICd6aC10dyc6ICfkvoboh6onLCAnZW4nOiAnQ29tZSBmcm9tJyB9LAogICdzb3VyY2VGaWx0ZXJDb250ZXh0TWVudSc6IHsgJ3poLWNuJzogJ3t7c291cmNlfX0nLCAnemgtaGsnOiAne3tzb3VyY2V9fScsICd6aC10dyc6ICd7e3NvdXJjZX19JywgJ2VuJzogJ3t7c291cmNlfX0nIH0sCiAgJ3NvdXJjZUZpbHRlcldhcm5pbmdUaXRsZSc6IHsgJ3poLWNuJzogJ+m7mOiupOadpea6kCcsICd6aC1oayc6ICfpoJDoqK3kvobmupAnLCAnemgtdHcnOiAn6aCQ6Kit5L6G5rqQJywgJ2VuJzogJ0RlZmF1bHQgU291cmNlJyB9LAogICdzb3VyY2VGaWx0ZXJXYXJuaW5nJzogeyAnemgtY24nOiAn5LiN6IO95re75Yqg6buY6K6k5p2l5rqQJywgJ3poLWhrJzogJ+S4jeiDveaWsOWinumgkOioreS+hua6kCcsICd6aC10dyc6ICfkuI3og73mlrDlop7poJDoqK3kvobmupAnLCAnZW4nOiAnWW91IGNhbm5vdCBhZGQgZGVmYXVsdCBzb3VyY2UnIH0sCiAgJ3NvdXJjZUZpbHRlclJlYXNvbic6IHsgJ3poLWNuJzogJ+WboOadpeiHquKAnHt7ZGV0YWlsfX3igJ0nLCAnemgtaGsnOiAn5Zug5L6G6Ieq44CMe3tkZXRhaWx9feOAjScsICd6aC10dyc6ICflm6Dkvoboh6rjgIx7e2RldGFpbH1944CNJywgJ2VuJzogJ2JlY2F1c2UgaXQgY29tZXMgZnJvbSAie3tkZXRhaWx9fSIgJyB9LAogICdzb3VyY2VVbmtvd24nOiB7ICd6aC1jbic6ICfmnKrpgJrov4flrqHmoLjlupTnlKgnLCAnemgtaGsnOiAn5pyq6YCa6L+H5a6h5qC45bqU55SoJywgJ3poLXR3JzogJ+acqumAmui/h+WuoeaguOW6lOeUqCcsICdlbic6ICfmnKrpgJrov4flrqHmoLjlupTnlKgnIH0sCiAgJ2RlZmF1bHRTb3VyY2UnOiB7ICd6aC1jbic6ICflvq7ljZogd2VpYm8uY29tJywgJ3poLWhrJzogJ+W+ruWNmiB3ZWliby5jb20nLCAnemgtdHcnOiAn5b6u5Y2aIHdlaWJvLmNvbScsICdlbic6ICflvq7ljZogd2VpYm8uY29tJyB9LAogIC8vIOi2hemTvuaOpQogICdoeXBlcmxpbmtGaWx0ZXJHcm91cFRpdGxlJzogeyAnemgtY24nOiAn6ZO+5o6lJywgJ3poLWhrJzogJ+mAo+e1kCcsICd6aC10dyc6ICfpgKPntZAnLCAnZW4nOiAnTGluaycgfSwKICAnaHlwZXJsaW5rRmlsdGVyRGVzYyc6IHsgJ3poLWNuJzogJ+i2hemTvuaOpScsICd6aC1oayc6ICfotoXpgKPntZAnLCAnemgtdHcnOiAn6LaF6YCj57WQJywgJ2VuJzogJ0h5cGVybGluaycgfSwKICAnaHlwZXJsaW5rRmlsdGVyRGV0YWlscyc6IHsgJ3poLWNuJzogJ+WMheWQq+S7peS4i+i2hemTvuaOpeeahOW+ruWNmicsICd6aC1oayc6ICfljIXlkKvku6XkuIvotoXpgKPntZDnmoTlvq7ljZonLCAnemgtdHcnOiAn5YyF5ZCr5Lul5LiL6LaF6YCj57WQ55qE5b6u5Y2aJywgJ2VuJzogJ1dlaWJvIHdpdGggdGhlc2UgaHlwZXJsaW5rcycgfSwKICAnaHlwZXJsaW5rRmlsdGVyRGV0YWlsc0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5Yy56YWN5b6u5Y2a55qE55+t6ZO+5o6l77yM5a2Q5Liy5Yy56YWN44CCJwogIH0sCiAgJ2h5cGVybGlua0ZpbHRlckZhc3QnOiB7ICd6aC1jbic6ICfljIXlkKvpk77mjqXliLDigJx7e3VybH194oCd5Zyw5Z2A6ZO+5o6l55qE5b6u5Y2aJywgJ3poLWhrJzogJ+WMheWQq+mPiOaOpeWIsOOAjHt7dXJsfX3jgI3kvY3lnYDpgKPntZDnmoTlvq7ljZonLCAnemgtdHcnOiAn5YyF5ZCr6Y+I5o6l5Yiw44CMe3t1cmx9feOAjeS9jeWdgOmAo+e1kOeahOW+ruWNmicsICdlbic6ICdXZWlibyBjb250YWlucyBoeXBlcmxpbmsgdG8gInt7dXJsfX0iJyB9LAogICdoeXBlcmxpbmtGaWx0ZXJDb250ZXh0TWVudUdyb3VwJzogeyAnemgtY24nOiAn6ZO+5o6l5YiwJywgJ3poLWhrJzogJ+mPiOaOpeWIsCcsICd6aC10dyc6ICfpj4jmjqXliLAnLCAnZW4nOiAnaHlwZXJsaW5rIHRvJyB9LAogICdoeXBlcmxpbmtGaWx0ZXJDb250ZXh0TWVudSc6IHsgJ3poLWNuJzogJ3t7dXJsfX0nLCAnemgtaGsnOiAne3t1cmx9fScsICd6aC10dyc6ICd7e3VybH19JywgJ2VuJzogJ3t7dXJsfX0nIH0sCiAgJ2h5cGVybGlua0ZpbHRlclJlYXNvbic6IHsgJ3poLWNuJzogJ+WboOmTvuaOpeWIsOKAnHt7ZGV0YWlsfX3igJ0nLCAnemgtaGsnOiAn5Zug6YCj57WQ5Yiw44CMe3tkZXRhaWx9feOAjScsICd6aC10dyc6ICflm6DpgKPntZDliLDjgIx7e2RldGFpbH1944CNJywgJ2VuJzogJ2JlY2F1c2UgaXQgY29udGFpbnMgaHlwZXJsaW5rIHRvICJ7e2RldGFpbH19IiAnIH0sCiAgLy8g6ZO+5o6l5qCH6aKYCiAgJ2xpbmt0aXRsZUZpbHRlckRlc2MnOiB7ICd6aC1jbic6ICfmoIfpopgnLCAnemgtaGsnOiAn5qiZ6aGMJywgJ3poLXR3JzogJ+aomemhjCcsICdlbic6ICdUaXRsZScgfSwKICAnbGlua3RpdGxlRmlsdGVyRGV0YWlscyc6IHsgJ3poLWNuJzogJ+mTvuaOpeagh+mimOWMuemFjeS7peS4i+WFs+mUruivjeeahOW+ruWNmicsICd6aC1oayc6ICfpgKPntZDmqJnpoYzljLnphY3ku6XkuIvpl5zpjbXlrZfnmoTlvq7ljZonLCAnemgtdHcnOiAn6YCj57WQ5qiZ6aGM5Yy56YWN5Lul5LiL6Zec6Y215a2X55qE5b6u5Y2aJywgJ2VuJzogJ1dlaWJvIHdpdGggdGl0bGUgb2YgaHlwZXJsaW5rIGNvbnRhaW5zIGtleXdvcmQnIH0sCiAgJ2xpbmt0aXRsZUZpbHRlckRldGFpbHNEZXNjJzogewogICAgJ3poLWNuJzogJ+WMuemFjeW+ruWNmuS4reWHuueOsOeahOWQhOenjemTvuaOpe+8jOWMheaLrOe9kemhtemTvuaOpe+8jOS5n+WMheaLrOinhumikeOAgeaWh+eroOetieetieOAguWMuemFjemTvuaOpeeahOagh+mimOOAgicKICB9LAogICdsaW5rdGl0bGVGaWx0ZXJGYXN0JzogeyAnemgtY24nOiAn5b6u5Y2a6ZO+5o6l5qCH6aKYJywgJ3poLWhrJzogJ+W+ruWNmumAo+e1kOaomemhjCcsICd6aC10dyc6ICflvq7ljZrpgKPntZDmqJnpoYwnLCAnZW4nOiAnV2VpYm8gaHlwZXJsaW5rIHdpdGggdGl0bGUnIH0sCiAgJ2xpbmt0aXRsZUZpbHRlckZhc3RJbnB1dCc6IHsgJ3poLWNuJzogJ+KAnHt7dGl0bGV9feKAnScsICd6aC1oayc6ICfjgIx7e3RpdGxlfX3jgI0nLCAnemgtdHcnOiAn44CMe3t0aXRsZX1944CNJywgJ2VuJzogJyJ7e3RpdGxlfX0iJyB9LAogICdsaW5rdGl0bGVGaWx0ZXJDb250ZXh0TWVudUdyb3VwJzogeyAnemgtY24nOiAn6ZO+5o6l5qCH6aKYJywgJ3poLWhrJzogJ+mAo+e1kOaomemhjCcsICd6aC10dyc6ICfpgKPntZDmqJnpoYwnLCAnZW4nOiAnbGluayB0aXRsZScgfSwKICAnbGlua3RpdGxlRmlsdGVyQ29udGV4dE1lbnUnOiB7ICd6aC1jbic6ICd7e3RpdGxlfX0nLCAnemgtaGsnOiAne3t0aXRsZX19JywgJ3poLXR3JzogJ3t7dGl0bGV9fScsICdlbic6ICd7e3RpdGxlfX0nIH0sCiAgJ2xpbmt0aXRsZUZpbHRlclJlYXNvbic6IHsgJ3poLWNuJzogJ+WboOWQq+acieKAnHt7ZGV0YWlsfX3igJ3pk77mjqUnLCAnemgtaGsnOiAn5Zug5ZCr5pyJ44CMe3tkZXRhaWx9feOAjemAo+e1kCcsICd6aC10dyc6ICflm6DlkKvmnInjgIx7e2RldGFpbH1944CN6YCj57WQJywgJ2VuJzogJ2JlY2F1c2UgaXRzIGh5cGVybGluayB3aXRoIHRpdGxlICJ7e2RldGFpbH19IiAnIH0sCiAgLy8g5pu05aSaCiAgJ290aGVyRmlsdGVyR3JvdXBUaXRsZSc6IHsgJ3poLWNuJzogJ+abtOWkmicsICd6aC1oayc6ICflhbbku5YnLCAnemgtdHcnOiAn5YW25LuWJywgJ2VuJzogJ01vcmUnIH0sCiAgLy8g5pi+56S6CiAgJ290aGVyV2hpdGVsaXN0VGl0bGUnOiB7ICd6aC1jbic6ICfmmL7npLrku6XkuIvlhoXlrrnvvIjkuI3orqHlhaXnmb3lkI3ljZXvvIknLCAnemgtaGsnOiAn6aGv56S65Lul5LiL5YWn5a6577yI5LiN6KiI5YWl55m95ZCN5Zau77yJJywgJ3poLXR3JzogJ+mhr+ekuuS7peS4i+WFp+Wuue+8iOS4jeioiOWFpeeZveWQjeWWru+8iScsICdlbic6ICdTaG93IGZvbGxvd2luZyBjb250ZW50IChub3QgcmVnYXJkIGFzIHdoaXRlbGlzdCknIH0sCiAgJ3Nob3dNeVdlaWJvRGVzYyc6IHsgJ3poLWNuJzogJ+iHquW3seeahOW+ruWNmicsICd6aC1oayc6ICfoh6rlt7HnmoTlvq7ljZonLCAnemgtdHcnOiAn6Ieq5bex55qE5b6u5Y2aJywgJ2VuJzogJ1dlaWJvIGJ5IG15c2VsZicgfSwKICAnc2hvd015T3JpZ2luYWxEZXNjJzogeyAnemgtY24nOiAn6Ieq5bex5b6u5Y2a55qE6L2s5Y+RJywgJ3poLWhrJzogJ+iHquW3seW+ruWNmueahOi9ieeZvCcsICd6aC10dyc6ICfoh6rlt7Hlvq7ljZrnmoTovYnnmbwnLCAnZW4nOiAnRm9yd2FyZCBvZiBteSBXZWlibycgfSwKICAnc2hvd01lbnRpb25NZURlc2MnOiB7ICd6aC1jbic6ICfmj5DliLDoh6rlt7HnmoTlvq7ljZonLCAnemgtaGsnOiAn5o+Q5Yiw6Ieq5bex55qE5b6u5Y2aJywgJ3poLXR3JzogJ+aPkOWIsOiHquW3seeahOW+ruWNmicsICdlbic6ICdXZWlibyBtZW50aW9uZWQgbXlzZWxmJyB9LAogIC8vIOmakOiXjwogICdvdGhlckJsYWNrbGlzdFRpdGxlQWQnOiB7ICd6aC1jbic6ICfpmpDol4/ku6XkuIvlvq7ljZogLSDlub/lkYov5ZWG5ZOBJywgJ3poLWhrJzogJ+maseiXj+S7peS4i+WFp+WuuSAtIOW7o+WRii/llYblk4EnLCAnemgtdHcnOiAn6Zqx6JeP5Lul5LiL5YWn5a65IC0g5buj5ZGKL+WVhuWTgScsICdlbic6ICdIaWRlIGZvbGxvd2luZyBjb250ZW50IC0gQWQgLyBQcm9tb3Rpb24nIH0sCiAgJ2FkZmVlZEZpbHRlcic6IHsgJ3poLWNuJzogJ+aOqOW5v+W+ruWNmi/nsonkuJ3pgJrlvq7ljZov5ZOB54mM6YCf6YCSL+WlveWPi+i1nui/h+eahOW+ruWNmnt7PGk+fX0nLCAnemgtaGsnOiAn5o6o5buj5b6u5Y2aL+eyiee1sumAmuW+ruWNmi/lk4HniYzpgJ/pgZ4v5aW95Y+L6LSK6YGO55qE5b6u5Y2ae3s8aT59fScsICd6aC10dyc6ICfmjqjlu6Plvq7ljZov57KJ57Wy6YCa5b6u5Y2aL+WTgeeJjOmAn+mBni/lpb3lj4votIrpgY7nmoTlvq7ljZp7ezxpPn19JywgJ2VuJzogJ0FkIFdlaWJvIC8gSW5zdGVyZWQgbm90IGZvbGxvd2VkIFdlaWJvIHt7PGk+fX0nIH0sCiAgJ2FkZmVlZEZpbHRlckRlc2MnOiB7CiAgICAnemgtY24nOiAn5o6o5bm/5b6u5Y2a5LiA6Iis5Ye6546w5Zyo6aaW6aG15b6u5Y2a5YiX6KGo6Z2g5YmN55qE5L2N572u77yM5bm25qCH6K6w4oCc5o6o6I2Q4oCd5a2X5qC344CC6YCa6L+H5LuY6LS55ZKM5paw5rWq55qE5a6h5qC477yM5Y+v5Lul5o6o5bm/5p+Q5p2h5b6u5Y2a44CC5b6u5Y2a5Lya5qC55o2u5oKo55qE5Zac5aW96ZqP5py65bCG5LiA5Lqb6KKr5o6o5bm/55qE5b6u5Y2a5o6o6I2Q57uZ5oKo44CC5aW95Y+L6LWe6L+H55qE5b6u5Y2a5re35Zyo6aaW6aG15Lit6Ze077yM5bm25qCH6K6w4oCc5p+Q5p+Q6LWe6L+H4oCd44CC6Jm954S26L+Z5Lqb5b6u5Y2a5Ye6546w5Zyo5oKo55qE5b6u5Y2a5YiX6KGo5Lit77yM5L2G5a6D5Lus5b6A5b6A5LiN5piv5oKo5YWz5rOo55qE5Lq65Y+R55qE5b6u5Y2a44CCJywKICB9LAogICdmYW5zVG9wRmlsdGVyJzogeyAnemgtY24nOiAn57KJ5Lid5aS05p2he3s8aT59fScsICd6aC1oayc6ICfnsonkuJ3lpLTmnaF7ezxpPn19JywgJ3poLXR3JzogJ+eyieS4neWktOadoXt7PGk+fX0nLyogYXMgaXMgKi8sICdlbic6ICdGYW5zIHRvcCAvIEhlYWRsaW5lIFdlaWJve3s8aT59fScgfSwKICAnZmFuc1RvcEZpbHRlckRlc2MnOiB7CiAgICAnemgtY24nOiAn57KJ5Lid5aS05p2h5Lya5pi+56S65Zyo6aaW6aG15b6u5Y2a5YiX6KGo55qE6aG256uv77yM5LiA6Iis5qCH6K6w4oCc54Ot6Zeo4oCd562J5a2X5qC344CC57KJ5Lid5aS05p2h5piv5paw5rWq5b6u5Y2a5a6Y5pa555qE5LiA6aG55o6o5bm/5Lqn5ZOB77yM5L2/55So57KJ5Lid5aS05p2h55qE5b6u5Y2a5Y+v5ZyoIDI0IOWwj+aXtuWGheWHuueOsOWcqOaJgOacieW+ruWNmueyieS4nemmlumhteeahOesrOS4gOS9jeOAgueyieS4neWktOadoeW+ruWNmuaAu+aYr+adpeiHquS6juaCqOWFs+azqOeahOS6uuOAgicsCiAgfSwKICAncHJvZHVjdENhcmRXZWlibyc6IHsgJ3poLWNuJzogJ+W4puacieW+ruWNmuapseeql+WVhuWTgemTvuaOpeeahOW+ruWNmnt7PGk+fX0nLCAnemgtaGsnOiAn5bi25pyJ5b6u5Y2a5qul56qX5ZWG5ZOB6YCj5o6l55qE5b6u5Y2ae3s8aT59fScsICd6aC10dyc6ICfluLbmnInlvq7ljZrmq6XnqpfllYblk4HpgKPmjqXnmoTlvq7ljZp7ezxpPn19JywgJ2VuJzogJ1dlaWJvIHdpdGggbGluayB0byB3ZWlibyBzaG9wIHt7PGk+fX0nIH0sCiAgJ3Byb2R1Y3RDYXJkV2VpYm9EZXNjJzogewogICAgJ3poLWNuJzogJ+W4puacieW+ruWNmuapseeql+WVhuWTgemTvuaOpeeahOW+ruWNmu+8jOeCueWHu+mTvuaOpeWPr+S7peWIsOWVhuWTgeeahOi0reS5sOmhtemdouOAguWLvumAieS7pemakOiXj+atpOexu+W+ruWNmuOAgicsCiAgfSwKICAndGFvYmFvVGlhbm1hb1dlaWJvJzogeyAnemgtY24nOiAn5bim5pyJ5reY5a6d44CB5aSp54yr5oiW6IGa5YiS566X5ZWG5ZOB55qE5b6u5Y2ae3s8aT59fScsICd6aC1oayc6ICfluLbmnInmt5jlr7bjgIHlpKnospPmiJbogZrliJLnrpfllYblk4HnmoTlvq7ljZp7ezxpPn19JywgJ3poLXR3JzogJ+W4tuaciea3mOWvtuOAgeWkqeiyk+aIluiBmuWIkueul+WVhuWTgeeahOW+ruWNmnt7PGk+fX0nLCAnZW4nOiAnV2VpYm8gd2l0aCBUYW9iYW8gLyBUbWFsbCAvIEp1aHVhc3VhbiBjb21tb2RpdHl7ezxpPn19JyB9LAogICd0YW9iYW9UaWFubWFvV2VpYm9EZXNjJzogewogICAgJ3poLWNuJzogJ+W4puaciTxzcGFuIGNsYXNzPSJXX2J0bl9iIFdfYnRuX2NhcmRsaW5rIGJ0bl8yMnB4Ij48c3BhbiBjbGFzcz0iaWNvX3NwZSI+PGkgY2xhc3M9IldfaWNvbiBpY29uX2NkX3RiIj48L2k+PC9zcGFuPjxzcGFuIGNsYXNzPSJXX2F1dG9jdXQiPua3mOWuneWVhuWTgTwvc3Bhbj48L3NwYW4+44CBPHNwYW4gY2xhc3M9IldfYnRuX2IgV19idG5fY2FyZGxpbmsgYnRuXzIycHgiPjxzcGFuIGNsYXNzPSJpY29fc3BlIj48aSBjbGFzcz0iV19pY29uIGljb25fY2RfdG1hbGwiPjwvaT48L3NwYW4+PHNwYW4gY2xhc3M9IldfYXV0b2N1dCI+5aSp54yr5ZWG5ZOBPC9zcGFuPjwvc3Bhbj7miJY8c3BhbiBjbGFzcz0iV19idG5fYiBXX2J0bl9jYXJkbGluayBidG5fMjJweCI+PHNwYW4gY2xhc3M9Imljb19zcGUiPjxpIGNsYXNzPSJXX2ljb24gaWNvbl9jZF9qdSI+PC9pPjwvc3Bhbj48c3BhbiBjbGFzcz0iV19hdXRvY3V0Ij7ogZrliJLnrpfllYblk4E8L3NwYW4+PC9zcGFuPueahOW+ruWNmicsCiAgfSwKICAnd2VpYm9QYXlHaWZ0JzogeyAnemgtY24nOiAn5bim5pyJ5b6u5Y2a5pSv5LuY56ev5YiG56S85ZOB5YWR5o2i5Y2h54mH55qE5b6u5Y2ae3s8aT59fScsICd6aC1oayc6ICfluLbmnInlvq7ljZrmlK/ku5jnqY3liIbnpq7lk4HlhYzmj5vljaHniYfnmoTlvq7ljZp7ezxpPn19JywgJ3poLXR3JzogJ+W4tuacieW+ruWNmuaUr+S7mOepjeWIhuemruWTgeWFjOaPm+WNoeeJh+eahOW+ruWNmnt7PGk+fX0nLCAnZW4nOiAnV2VpYm8gd2l0aCBXZWlibyBwYXkgd2l0aCBwb2ludHMgZ2lmdCBleGNoYW5nZSBjYXJke3s8aT59fScgfSwKICAnd2VpYm9QYXlHaWZ0RGVzYyc6IHsKICAgICd6aC1jbic6ICflvq7ljZrmlK/ku5jnp6/liIbmjIfpgJrov4flnKjlvq7ljZrkuK3mtojotLnvvIjlpoLotK3kubDkvJrlkZjvvInkuqfnlJ/nmoTnp6/liIbvvIzlubbpnZ7lvq7ljZrnrYnnuqfnu4/pqozlgLzvvIzlj6/ku6XnlKjkuo7lhZHmjaLnpLzlk4HvvIjnpLzlk4HkuIDoiKzmmK/kvJjmg6DliLjmiJbmir3lpZbvvInjgILli77pgInmnKzpgInpobnku6XpmpDol4/luKbmnInmraTnsbvlhZHmjaLkv6Hmga/nmoTljaHniYfnmoTlvq7ljZrjgIInLAogIH0sCiAgJ290aGVyQmxhY2tsaXN0VGl0bGVSZWNvbW1lbmQnOiB7ICd6aC1jbic6ICfpmpDol4/ku6XkuIvlvq7ljZogLSDmjqjojZAnLCAnemgtaGsnOiAn6Zqx6JeP5Lul5LiL5YWn5a65IC0g5o6o6JamJywgJ3poLXR3JzogJ+maseiXj+S7peS4i+WFp+WuuSAtIOaOqOiWpicsICdlbic6ICdIaWRlIGZvbGxvd2luZyBjb250ZW50IC0gUmVjb21tZW5kJyB9LAogICd3ZWlib1VzZXJMaWtlJzogeyAnemgtY24nOiAn5re35YWl5Liq5Lq65Li76aG155qE6LWe6L+H55qE5b6u5Y2aJywgJ3poLWhrJzogJ+a3t+WFpeWAi+S6uuS4u+mggeeahOi0iumBjueahOW+ruWNmicsICd6aC10dyc6ICfmt7flhaXlgIvkurrkuLvpoIHnmoTotIrpgY7nmoTlvq7ljZonLCAnZW4nOiAnV2VpYm8gTGlrZWQgaW4gUGVyc29uYWwgcGFnZScgfSwKICAnd2VpYm9Vc2VyTGlrZURlc2MnOiB7CiAgICAnemgtY24nOiAn5Liq5Lq65Li76aG15raI5oGv5rWB5Lit5re35YWl55qE5b6u5Y2a44CC5aaC5p6c5oKo5byA5ZCv5LqGIFtbd2VpYm8udG9vbC51c2VyX3BhZ2Vfbm9fYXV0aG9yXV0g5YiZ5pys6KeE5YiZ5Lya6buY6K6k55Sf5pWI44CCJywKICB9LAogICdmYWtlV2VpYm9GaWx0ZXInOiB7ICd6aC1jbic6ICfmt7flhaXlvq7ljZrliJfooajnmoTmjqjojZDlhoXlrrnvvIjlpb3lj4vmjqjojZDjgIHng63pl6jor53popjvvIl7ezxpPn19JywgJ3poLWhrJzogJ+a3t+WFpeW+ruWNmuWIl+ihqOeahOaOqOiWpuWFp+Wuue+8iOWlveWPi+aOqOiWpuOAgeeGsemWgOipsemhjO+8iXt7PGk+fX0nLCAnemgtdHcnOiAn5re35YWl5b6u5Y2a5YiX6KGo55qE5o6o6Jam5YWn5a6577yI5aW95Y+L5o6o6Jam44CB54ax6ZaA6Kmx6aGM77yJe3s8aT59fScsICdlbic6ICdPdGhlciBjb250ZW50cyBpbiBXZWlibyBsaXN0e3s8aT59fScgfSwKICAnZmFrZVdlaWJvRmlsdGVyRGVzYyc6IHsKICAgICd6aC1jbic6ICfmiYDmnInlnKjlvq7ljZrkuI7lvq7ljZrkuYvpl7Tmt7flhaXnmoTlhbbku5blhoXlrrnvvIzov5nkupvlhoXlrrnlvoDlvoDkuI3mmK/lvq7ljZrmtojmga/vvIzmr5TlpoLigJzlpb3lj4vmjqjojZDigJ3igJzng63pl6jor53popjigJ3nrYnjgIInLAogIH0sCiAgJ290aGVyQmxhY2tsaXN0VGl0bGVDb250ZW50JzogeyAnemgtY24nOiAn6ZqQ6JeP5Lul5LiL5b6u5Y2aIC0g54m55a6a5YaF5a65JywgJ3poLWhrJzogJ+maseiXj+S7peS4i+WFp+WuuSAtIOeJueWumuWFp+WuuScsICd6aC10dyc6ICfpmrHol4/ku6XkuIvlhaflrrkgLSDnibnlrprlhaflrrknLCAnZW4nOiAnSGlkZSBmb2xsb3dpbmcgY29udGVudCAtIENvbnRlbnQgJyB9LAogICdkZWxldGVkRm9yd2FyZEZpbHRlcic6IHsgJ3poLWNuJzogJ+W3suWIoOmZpOW+ruWNmueahOi9rOWPkXt7PGk+fX0nLCAnemgtaGsnOiAn5bey5Yiq6Zmk5b6u5Y2a55qE6L2J55m8e3s8aT59fScsICd6aC10dyc6ICflt7LliKrpmaTlvq7ljZrnmoTovYnnmbx7ezxpPn19JywgJ2VuJzogJ0ZvcndhcmQgb2YgZGVsZXRlZCBXZWlib3t7PGk+fX0nIH0sCiAgJ2RlbGV0ZWRGb3J3YXJkRmlsdGVyRGVzYyc6IHsKICAgICd6aC1jbic6ICfljIXmi6zlm6DkuLrliKDpmaTmiJblr7nlvq7ljZrorr7nva7kuobpmpDnp4HmnYPpmZDogIzkvb/mgqjml6Dms5XnnIvliLDljp/mlofnmoTlvq7ljZrjgILov5nkupvlvq7ljZrmgqjlj6rog73nnIvop4Hovazlj5HogIXnmoTor4TorrrvvIzkvYbmmK/ml6Dms5XnnIvliLDljp/lvq7ljZrnmoTlhoXlrrnjgIInLAogIH0sCiAgJ2NvbW1lbnRBbmRGb3J3YXJkRmlsdGVyJzogeyAnemgtY24nOiAn5Zue5aSN5bm26L2s5Y+R55qE5b6u5Y2ae3s8aT59fScsICd6aC1oayc6ICflm57opobkuKbovYnnmbznmoTlvq7ljZp7ezxpPn19JywgJ3poLXR3JzogJ+WbnuimhuS4pui9ieeZvOeahOW+ruWNmnt7PGk+fX0nLCAnZW4nOiAnV2VpYm8gZm9yd2FyZGVkIGFzIHJlcGx5e3s8aT59fScgfSwKICAnY29tbWVudEFuZEZvcndhcmRGaWx0ZXJEZXNjJzogewogICAgJ3poLWNuJzogJ+WcqOWbnuWkjeS7luS6uuW+ruWNmuaXtumAieaLqeKAnOWQjOaXtui9rOWPkeWIsOaIkeeahOW+ruWNmuKAneS8muWwhuWbnuWkjeWSjOiiq+WbnuWkjeeahOWGheWuuei9rOWPkeS4uuS4gOadoeW+ruWNmu+8jOWLvumAieWQjuS8mumakOiXj+WbnuWkjeaXtui9rOWPkeeahOW+ruWNmuOAgicsCiAgfSwKICAndm90ZVdlaWJvRmlsdGVyJzogeyAnemgtY24nOiAn5oqV56Wo5b6u5Y2ae3s8aT59fScsICd6aC1oayc6ICfmipXnpajlvq7ljZp7ezxpPn19JywgJ3poLXR3JzogJ+aKleelqOW+ruWNmnt7PGk+fX0nLCAnZW4nOiAnVm90aW5nIHdlaWJve3s8aT59fScgfSwKICAndm90ZVdlaWJvRmlsdGVyRGVzYyc6IHsKICAgICd6aC1jbic6ICfljIXmi6zlnKjlj5HluIPlvq7ljZrml7bpgInmi6nmipXnpajnmoTlvq7ljZrvvIzkuZ/ljIXmi6zlnKjmipXnpajml7boh6rliqjlj5Hlh7rnmoTlvq7ljZrjgIInLAogIH0sCiAgJ3JlZFBhY2tXZWlibyc6IHsgJ3poLWNuJzogJ+aKoue6ouWMheW+ruWNmnt7PGk+fX0nLCAnemgtaGsnOiAn5pC257SF5YyF5b6u5Y2aJywgJ3poLXR3JzogJ+aQtue0heWMheW+ruWNmicsICdlbic6ICdXZWlibyB3aXRoIFJlZCBFbnZlbG9wZXMgUnVzaCcgfSwKICAncmVkUGFja1dlaWJvRGVzYyc6IHsKICAgICd6aC1jbic6ICfmiqLnuqLljIXmtLvliqjoh6rliqjlj5HluIPnmoTlvq7ljZonCiAgfSwKICAnamlubGlGb3J3YXJkV2VpYm8nOiB7ICd6aC1jbic6ICfovazlj5Hlm77moIfmmK/plKbpsqTnmoTlvq7ljZrvvIjovazlj5Hmir3lpZbnmoTlvq7ljZrvvJ/vvIknLCAnemgtaGsnOiAn6L2J55m85ZyW56S65piv6Yym6a+J55qE5b6u5Y2a77yI6L2J55m85oq9542O55qE5b6u5Y2a77yf77yJJywgJ3poLXR3JzogJ+i9ieeZvOWcluekuuaYr+mMpumvieeahOW+ruWNmu+8iOi9ieeZvOaKveeNjueahOW+ruWNmu+8n++8iScsICdlbic6ICdGb3J3YXJkIGljb24gYXMgYSBrb2kgKGZvcndhcmQgdGhpcyB3ZWlibyBmb3IgZHJhdz8pJyB9LAogICdhcHBJdGVtV2VpYm8nOiB7ICd6aC1jbic6ICfku4vnu43lvq7ljZrlupTnlKjnmoTlvq7ljZp7ezxpPn19JywgJ3poLWhrJzogJ+S7i+e0ueW+ruWNmuaHieeUqOeahOW+ruWNmnt7PGk+fX0nLCAnemgtdHcnOiAn5LuL57S55b6u5Y2a5oeJ55So55qE5b6u5Y2ae3s8aT59fScsICdlbic6ICdXZWlibyB3aXRoIGFwcCBpdGVtIHt7PGk+fX0nIH0sCiAgJ2FwcEl0ZW1XZWlib0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5LuL57uN5b6u5Y2a5bqU55So55qE5b6u5Y2a77yM5YyF5ous5ZCr5pyJ5b6u5Y2a5bqU55So55qE6ZO+5o6l5oiW5ZCr5pyJ5b6u5Y2a5bqU55So55qE5Y2h54mH55qE5oOF5Ya144CC5b6u5Y2a5bqU55So55qE6ZO+5o6l5Lya5Lul5bqU55So5Zu+5qCH5qCH6K6w44CC5Yu+6YCJ5q2k6aG55Lul6ZqQ6JeP5q2k57G75b6u5Y2a44CCJywKICB9LAogICd3ZW5kYVdlaWJvJzogeyAnemgtY24nOiAn5b6u5Y2a6Zeu562U55u45YWz55qE5o+Q6Zeu44CB5Zue562U5oiW5Zu06KeCe3s8aT59fScsICd6aC1oayc6ICflvq7ljZrllY/nrZTnm7jpl5znmoTmj5DllY/jgIHlm57nrZTmiJblnI3op4B7ezxpPn19JywgJ3poLXR3JzogJ+W+ruWNmuWVj+etlOebuOmXnOeahOaPkOWVj+OAgeWbnuetlOaIluWcjeingHt7PGk+fX0nLCAnZW4nOiAnV2VpYm8gYXNraW5nLCBhbnN3ZXJpbmcsIG9yIHZpZXdpbmcgV2VpYm8gUSBhbmQgQSB7ezxpPn19JyB9LAogICd3ZW5kYVdlaWJvRGVzYyc6IHsKICAgICd6aC1jbic6ICflvq7ljZrpl67nrZTlip/og73nmoTmj5Dpl67jgIHlm57nrZTmiJblm7Top4Lpg73kvJrlj5HluIPkuIDmnaHmlrDlvq7ljZrvvIzlpoLmnpzmgqjkuI3luIzmnJvnnIvliLDnm7jlhbPlvq7ljZrvvIzmgqjlj6/ku6Xli77pgInmraTpgInpobnku6XpmpDol4/nm7jlhbPlvq7ljZrjgIInCiAgfSwKICAnd2Vud29EcldlaWJvJzogeyAnemgtY24nOiAn5ZCr5pyJ54ix6Zeu5Yy755Sf5YGl5bq356eR5pmu5paH56ug55qE5b6u5Y2ae3s8aT59fScsICd6aC1oayc6ICflkKvmnInmhJvllY/phqvnlJ/lgaXlurfnp5Hmma7mlofnq6DnmoTlvq7ljZp7ezxpPn19JywgJ3poLXR3JzogJ+WQq+acieaEm+WVj+mGq+eUn+WBpeW6t+enkeaZruaWh+eroOeahOW+ruWNmnt7PGk+fX0nLCAnZW4nOiAnV2VpYm8gd2l0aCDniLHpl67ljLvnlJ8gKGlhc2sgbWVkaWNhbCkgYXJ0aWNhbCB7ezxpPn19JyB9LAogICd3ZW53b0RyV2VpYm9EZXNjJzogewogICAgJ3poLWNuJzogJ+eIsemXruWMu+eUn+WBpeW6t+enkeaZruaWh+eroOaYr+S4gOS6m+adpeiHqiB3ZW53by5jb20g55qE5YGl5bq344CB5Yy755aX55u45YWz5paH56ug44CC5omT5byA54ix6Zeu5Yy755Sf5YGl5bq356eR5pmu5paH56ug55qE572R56uZ5pe277yM5oKo5Y+v6IO95Lya6Ieq5Yqo5YWz5rOo5paH56ug5L2c6ICF5oiW55u45bqU5biQ5Y+344CC5byA5ZCv5Lul6ZqQ6JeP5YyF5ZCr5q2k57G75paH56ug55qE5b6u5Y2a44CCJywKICB9LAogICd5aXpoaWJvV2VpYm8nOiB7ICd6aC1jbic6ICflkKvmnInigJzkuIDnm7Tmkq3igJ3op4bpopHnm7Tmkq3nmoTlvq7ljZp8e3s8dHlwZT59fScsICd6aC1oayc6ICflkKvmnInjgIzkuIDnm7Tmkq3jgI3nm7Tmkq3lvbHniYfnmoTlvq7ljZp8e3s8dHlwZT59fScsICd6aC10dyc6ICflkKvmnInjgIzkuIDnm7Tmkq3jgI3nm7Tmkq3lvbHniYfnmoTlvq7ljZp8e3s8dHlwZT59fScsICdlbic6ICdXZWlibyB3aXRoIGxpdmUgdmlkZW8gb24geWl6aGlibyB8IHt7PHR5cGU+fX0nIH0sCiAgJ3lpemhpYm9XZWlib0FsbCc6IHsgJ3poLWNuJzogJ+makOiXj+ato+WcqOebtOaSreaIluW3sue7k+adn+WbnuaUvicsICd6aC1oayc6ICfpmrHol4/mraPlnKjnm7Tmkq3miJblt7LntZDmnZ/lm57mlL4nLCAnemgtdHcnOiAn6Zqx6JeP5q2j5Zyo55u05pKt5oiW5bey57WQ5p2f5Zue5pS+JywgJ2VuJzogJ2hpZGUgbGl2ZSBhbmQgcmVwbGF5JyB9LAogICd5aXpoaWJvV2VpYm9SZXBsYXknOiB7ICd6aC1jbic6ICfku4XpmpDol4/lt7Lnu5PmnZ/lm57mlL4nLCAnemgtaGsnOiAn5YOF6Zqx6JeP5bey57WQ5p2f5Zue5pS+JywgJ3poLXR3JzogJ+WDhemaseiXj+W3sue1kOadn+WbnuaUvicsICdlbic6ICdoaWRlIHJlcGxheSBvbmx5JyB9LAogICdzdG9ja1dlaWJvJzogeyAnemgtY24nOiAn5ZCr5pyJ6IKh56Wo6ZO+5o6l55qE5b6u5Y2ae3s8aT59fScsICd6aC1oayc6ICflkKvmnInogqHnpajpgKPntZDnmoTlvq7ljZp7ezxpPn19JywgJ3poLXR3JzogJ+WQq+acieiCoeelqOmAo+e1kOeahOW+ruWNmnt7PGk+fX0nLCAnZW4nOiAnV2VpYm8gd2l0aCBzdG9jayBsaW5rIHt7PGk+fX0nIH0sCiAgJ3N0b2NrV2VpYm9EZXNjJzogewogICAgJ3poLWNuJzogJ+iCoeelqOmTvuaOpeWSjOivnemimOebuOS8vO+8jOWcqOWPkeW4g+ahhui+k+WFpeKAnCTigJ3ljbPlj6/mt7vliqDogqHnpajpk77mjqXjgILli77pgInku6XpmpDol4/miYDmnInljIXlkKvmraTnsbvpk77mjqXnmoTlvq7ljZrjgIInLAogIH0sCiAgJ3BhaWRXZWlibyc6IHsgJ3poLWNuJzogJ+mcgOimgeS7mOi0ueafpeeci+eahOW+ruWNmnt7PGk+fX0nLCAnemgtaGsnOiAn6ZyA6KaB5LuY6LK75p+l55yL55qE5b6u5Y2ae3s8aT59fScsICd6aC10dyc6ICfpnIDopoHku5josrvmn6XnnIvnmoTlvq7ljZp7ezxpPn19JywgJ2VuJzogJ1dlaWJvIHJlcXVpcmUgcGFpZCB0byB2aWV3IHt7PGk+fX0nIH0sCiAgJ3BhaWRXZWlib0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5Y2a5Li75Zyo5Y+R5biD5b6u5Y2a5pe277yM5Y+v5Lul6YCJ5oup5oyH5a6a5YaF5a656ZyA6KaB5LuY6LS55omN6IO95p+l55yL44CC5Zyo5oKo5ZCR5Y2V5p2h5YaF5a655oiW5Y2a5Li75LuY6LS55ZCO77yM5omN5Y+v5p+l55yL55u45YWz5YaF5a6544CC5omA5LuY6LS555So6Zmk5Y2a5Li755qE5pS255uK5aSW77yM6L+Y5Y+v6IO95YyF5ZCr6YOo5YiG5rig6YGT5ZWG5YiG5oiQ5ZKM56iO6YeR44CCJywKICB9LAogICdvdGhlckJsYWNrbGlzdFRpdGxlU291cmNlJzogeyAnemgtY24nOiAn6ZqQ6JeP5Lul5LiL5b6u5Y2aIC0g54m55a6a5p2l5rqQJywgJ3poLWhrJzogJ+maseiXj+S7peS4i+WFp+WuuSAtIOeJueWumuS+hua6kCcsICd6aC10dyc6ICfpmrHol4/ku6XkuIvlhaflrrkgLSDnibnlrprkvobmupAnLCAnZW4nOiAnSGlkZSBmb2xsb3dpbmcgY29udGVudCAtIFNvdXJjZSAnIH0sCiAgJ2h1YXRpU291cmNlV2VpYm8nOiB7ICd6aC1jbic6ICfmnaXoh6rlvq7or53popjnmoTlvq7ljZp7ezxpPn19JywgJ3poLWhrJzogJ+S+huiHquW+ruipsemhjOeahOW+ruWNmnt7PGk+fX0nLCAnemgtdHcnOiAn5L6G6Ieq5b6u6Kmx6aGM55qE5b6u5Y2ae3s8aT59fScsICdlbic6ICdXZWlibyBjb21lcyBmcm9tIOW+ruivnemimCAobWljcm8gVG9waWMpe3s8aT59fScgfSwKICAnaHVhdGlTb3VyY2VXZWlib0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5LiA5Lqb54Ot6Zeo6K+d6aKY6aG16Z2i5Y+R5biD5b6u5Y2a5pe25Lya5pi+56S65Lul4oCc5b6u6K+d6aKY4oCd5byA5aS055qE5p2l5rqQJywKICB9LAogICd3ZWlxdW5Tb3VyY2VXZWlibyc6IHsgJ3poLWNuJzogJ+adpeiHquaWsOa1quW+rue+pOeahOW+ruWNmnt7PGk+fX0nLCAnemgtaGsnOiAn5L6G6Ieq5paw5rWq5b6u576k55qE5b6u5Y2ae3s8aT59fScsICd6aC10dyc6ICfkvoboh6rmlrDmtarlvq7nvqTnmoTlvq7ljZp7ezxpPn19JywgJ2VuJzogJ1dlaWJvIGNvbWVzIGZyb20g5paw5rWq5b6u576kIChtaWNybyBHcm91cCkge3s8aT59fScgfSwKICAnd2VpcXVuU291cmNlV2VpYm9EZXNjJzogewogICAgJ3poLWNuJzogJ+S7juaWsOa1quW+rue+pOmhtemdouWPkeW4g+eahOW+ruWNmu+8jOadpea6kOS7peKAnOaWsOa1quW+rue+pCAt4oCd5byA5aS0JywKICB9LAogICdmYW5ndGFuU291cmNlV2VpYm8nOiB7ICd6aC1jbic6ICfmnaXoh6rlvq7orr/osIjnmoTlvq7ljZp7ezxpPn19JywgJ3poLWhrJzogJ+S+huiHquW+ruioquirh+eahOW+ruWNmnt7PGk+fX0nLCAnemgtdHcnOiAn5L6G6Ieq5b6u6Kiq6KuH55qE5b6u5Y2ae3s8aT59fScsICdlbic6ICdXZWlibyBjb21lcyBmcm9tIOW+ruiuv+iwiCAobWljcm8gVGFsayl7ezxpPn19JyB9LAogICdmYW5ndGFuU291cmNlV2VpYm9EZXNjJzogewogICAgJ3poLWNuJzogJ+S9v+eUqOW+ruiuv+iwiOWPkeW4g+eahOW+ruWNmu+8jOadpea6kOS7peKAnOW+ruiuv+iwiCAt4oCd5byA5aS0JywKICB9LAogICdnb25neWlTb3VyY2VXZWlibyc6IHsgJ3poLWNuJzogJ+adpeiHquW+ruWFrOebiueahOW+ruWNmnt7PGk+fX0nLCAnemgtaGsnOiAn5L6G6Ieq5b6u5YWs55uK55qE5b6u5Y2ae3s8aT59fScsICd6aC10dyc6ICfkvoboh6rlvq7lhaznm4rnmoTlvq7ljZp7ezxpPn19JywgJ2VuJzogJ1dlaWJvIGNvbWVzIGZyb20g5b6u5YWs55uKIChtaWNybyBXZWxmYXJlKXt7PGk+fX0nIH0sCiAgJ2dvbmd5aVNvdXJjZVdlaWJvRGVzYyc6IHsKICAgICd6aC1jbic6ICfkvb/nlKjlvq7lhaznm4rlj5HluIPnmoTlvq7ljZrvvIzmnaXmupDku6XigJzlvq7lhaznm4rigJ3lvIDlpLQnLAogIH0sCiAgJ3VuYXV0aGFwcFdlaWJvJzogeyAnemgtY24nOiAn5p2l6Ieq5pyq6YCa6L+H5a6h5qC45bqU55So55qE5b6u5Y2ae3s8aT59fScsICd6aC1oayc6ICfkvoboh6rmnKrpgJrov4flrqHmoLjlupTnlKjnmoTlvq7ljZp7ezxpPn19JywgJ3poLXR3JzogJ+S+huiHquacqumAmui/h+WuoeaguOW6lOeUqOeahOW+ruWNmnt7PGk+fX0nLCAnZW4nOiAnV2VpYm8gY29tZXMgZnJvbSDmnKrpgJrov4flrqHmoLjlupTnlKggKHVuYXV0aG9yaXplZCBhcHBsaWNhdGlvbil7ezxpPn19JyB9LAogICd1bmF1dGhhcHBXZWlib0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5pyq6YCa6L+H5a6h5qC455qE5bqU55So5pyJ5Y+R5biD6aKR546H5ZKM5Y+v5pyA5aSa5Y+v5o6I5p2DMTXlkI3nlKjmiLfnmoTpmZDliLbvvIzpmaTpnZ7mgqjnmoTlpb3lj4vkuK3mnInkurrlgZrnm7jlhbPnmoTlvIDlj5Hlt6XkvZzvvIzlkKbliJnmgqjlupTlvZPlvojpmr7nnIvliLDmraTmnaXmupDnmoTlvq7ljZrjgILmnaXoh6rmnKrlrqHmoLjlupTnlKjnmoTlvq7ljZrlvoDlvoDmmK/kvYblvIDlj5Hlvq7ljZrlupTnlKjov4fnqIvkuK3nmoTmtYvor5Xlvq7ljZrjgILmgqjlj6/ku6XpgJrov4flvq7ljZrlvIDmlL7lubPlj7DmlofmoaPkuK3nmoQ8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iLy9vcGVuLndlaWJvLmNvbS93aWtpLyVFNSVCQSU5NCVFNyU5NCVBOCVFNyU5QiVCOCVFNSU4NSVCMyVFOSU5NyVBRSVFOSVBMiU5OCI+5bqU55So55u45YWz6Zeu6aKYPC9hPumhtemdouS6huino+abtOWkmuWFs+S6juW6lOeUqOeahOS/oeaBr+OAgicsCiAgfSwKICAnbXVsdGlUb3BpYyc6IHsgJ3poLWNuJzogJ+aPkOWIsOeahOivnemimHzkuI3lsJHkuo57ezxudW0+fX3kuKrnmoTlvq7ljZp7ezxpPn19JywgJ3poLWhrJzogJ+aPkOWIsOeahOipsemhjHzkuI3lsJHmlrx7ezxudW0+fX3lgIvnmoTlvq7ljZp7ezxpPn19JywgJ3poLXR3JzogJ+aPkOWIsOeahOipsemhjHzkuI3lsJHmlrx7ezxudW0+fX3lgIvnmoTlvq7ljZp7ezxpPn19JywgJ2VuJzogJ1dlaWJvIG1lbnRpb25lZCB8IG5vdCBsZXNzIHRoYW4ge3s8bnVtPn19IHRvcGljc3t7PGk+fX0nIH0sCiAgJ211bHRpVG9waWNEZXNjJzogewogICAgJ3poLWNuJzogJ+eUseS6juaWsOa1queDremXqOivnemimOWSjOivnemimOS4u+aMgeS6uueahOebuOWFs+aUv+etlu+8jOWtmOWcqOS4gOS6m+W4kOWPt+mAmui/h+e9l+WIl+iLpeW5sueDremXqOivnemimOS7peS9v+iHquW3seeahOW5v+WRiuWPr+S7peaYvuekuuWcqOeDremXqOivnemimOmhtemdouOAguaCqOWPr+S7pemakOiXj+S4gOasoeaAp+aPkOWIsOS6huWkquWkmuivnemimOeahOW+ruWNmuS7pemBv+WFjeeci+WIsOS7luS7rOOAgicsCiAgfSwKICAnY29udGFpblRvcGljJzogeyAnemgtY24nOiAn5YyF5ZCr6LaF6K+d55qE5b6u5Y2aJywgJ3poLWhrJzogJ+WMheWQq+i2heipseeahOW+ruWNmicsICd6aC10dyc6ICfljIXlkKvotoXoqbHnmoTlvq7ljZonLCAnZW4nOiAnV2VpYm8gY29udGFpbnMgY2hvYWh1YScgfSwKICAndG9vTG9uZ05lZWRVbmZvbGQnOiB7ICd6aC1jbic6ICfnr4fluYXov4fplb/pnIDopoHlsZXlvIDlhajmlofnmoTlvq7ljZp7ezxpPn19JywgJ3poLWhrJzogJ+evh+W5hemBjumVt+mcgOimgeWxlemWi+WFqOaWh+eahOW+ruWNmnt7PGk+fX0nLCAnemgtdHcnOiAn56+H5bmF6YGO6ZW36ZyA6KaB5bGV6ZaL5YWo5paH55qE5b6u5Y2ae3s8aT59fScsICdlbic6ICdMZW5ndGh5IFdlaWJvIG5lZWRzIHVuZm9sZCB0byB2aWV3e3s8aT59fScgfSwKICAndG9vTG9uZ05lZWRVbmZvbGREZXNjJzogewogICAgJ3poLWNuJzogJ+WmguaenOaCqOaJk+W8gOS6hltbdG9vbC53ZWlib3Rvb2wuYXV0b191bmZvbGRfd2VpYm9dXe+8jOiEmuacrOS8muWFiOivleWbvuWxleW8gOS4jeaYr+W+iOmVv+eahOW+ruWNmuOAgicsCiAgfSwKICAvLyDliLflsY/kuI7niYjogYoKICAnb3RoZXJTcGFtbWluZ1RpdGxlJzogeyAnemgtY24nOiAn5Yi35bGP5LiO54mI6IGKJywgJ3poLWhrJzogJ+a0l+eJiOiIh+eJiOiBiicsICd6aC10dyc6ICfmtJfniYjoiIfniYjogYonLCAnZW4nOiAnU3BhbW1pbmcgJmFtcDsgQ2hhdHRpbmcnIH0sCiAgJ3NhbWVBY2NvdW50RmlsdGVyRGVzYyc6IHsgJ3poLWNuJzogJ+ebuOWQjOS9nOiAheeahOW+ruWNmu+8mnzotoXov4d7ezxudW1iZXI+fX3mnaF85pe2e3s8YWN0aW9uPn19JywgJ3poLWhrJzogJ+ebuOWQjOS9nOiAheeahOW+ruWNmu+8mnzotoXpgY57ezxudW1iZXI+fX3mop185pmCe3s8YWN0aW9uPn19JywgJ3poLXR3JzogJ+ebuOWQjOS9nOiAheeahOW+ruWNmu+8mnzotoXpgY57ezxudW1iZXI+fX3mop185pmCe3s8YWN0aW9uPn19JywgJ2VuJzogJ1dlaWJvIGZyb20gc2FtZSBhY2NvdW50OiB8e3s8YWN0aW9uPn19IHRoZSBwYXJ0IHwgd2hpY2ggZXhjZWVkcyB7ezxudW1iZXI+fX0gV2VpYm8nIH0sCiAgJ3NhbWVBY2NvdW50RmlsdGVyUmVhc29uJzogeyAnemgtY24nOiAn5Zug5Yi35bGPJywgJ3poLWhrJzogJ+WboOa0l+eJiCcsICd6aC10dyc6ICflm6DmtJfniYgnLCAnZW4nOiAnYmVjYXVzZSBvZiBzcGFtbWluZyAnIH0sCiAgJ3NhbWVGb3J3YXJkRmlsdGVyRGVzYyc6IHsgJ3poLWNuJzogJ+ebuOWQjOW+ruWNmueahOi9rOWPke+8mnzotoXov4d7ezxudW1iZXI+fX3mnaF85pe2e3s8YWN0aW9uPn19JywgJ3poLWhrJzogJ+ebuOWQjOW+ruWNmueahOi9ieeZvO+8mnzotoXpgY57ezxudW1iZXI+fX3mop185pmCe3s8YWN0aW9uPn19JywgJ3poLXR3JzogJ+ebuOWQjOW+ruWNmueahOi9ieeZvO+8mnzotoXpgY57ezxudW1iZXI+fX3mop185pmCe3s8YWN0aW9uPn19JywgJ2VuJzogJ0ZvcndhcmQgZnJvbSBzYW1lIFdlaWJvOiB8e3s8YWN0aW9uPn19IHRoZSBwYXJ0IHwgd2hpY2ggZXhjZWVkcyB7ezxudW1iZXI+fX0gV2VpYm8nIH0sCiAgJ3NhbWVGb3J3YXJkRmlsdGVyUmVhc29uJzogeyAnemgtY24nOiAn5Zug54mI6IGKJywgJ3poLWhrJzogJ+WboOeJiOiBiicsICd6aC10dyc6ICflm6DniYjogYonLCAnZW4nOiAnYmVjYXVzZSBvZiBjaGF0dGluZyAnIH0sCiAgLy8g6K+E6K666L+H5rukCiAgJ2NvbW1lbnRGaWx0ZXJHcm91cFRpdGxlJzogeyAnemgtY24nOiAn6K+E6K666L+H5rukJywgJ3poLWhrJzogJ+ipleirluevqemBuCcsICd6aC10dyc6ICfoqZXoq5bnr6npgbgnLCAnZW4nOiAnQ29tbWVudCBGaWx0ZXInIH0sCiAgLy8g6K+E6K665YWz6ZSu6K+NCiAgJ2NrZXl3b3JkRmlsdGVyRGV0YWlscyc6IHsgJ3poLWNuJzogJ+WMheWQq+S7peS4i+WFs+mUruivjeeahOivhOiuuicsICd6aC1oayc6ICfljIXlkKvku6XkuIvpl5zpjbXlrZfnmoToqZXoq5YnLCAnemgtdHcnOiAn5YyF5ZCr5Lul5LiL6Zec6Y215a2X55qE6KmV6KuWJywgJ2VuJzogJ0NvbW1lbnQgd2l0aCB0aGVzZSBjb21tZW50cycgfSwKICAnY2tleXdvcmRGaWx0ZXJEZXRhaWxzRGVzYyc6IHsKICAgICd6aC1jbic6ICflhbPplK7or43ljLnphY3ljIXmi6zor53popjvvIzkvYbkuI3ljIXmi6zmj5DliLDnmoTnlKjmiLfjgIInLAogIH0sCiAgJ2NrZXl3b3JkRmlsdGVyRGVzYyc6IHsgJ3poLWNuJzogJ+WFs+mUruivjScsICd6aC1oayc6ICfpl5zpjbXlrZcnLCAnemgtdHcnOiAn6Zec6Y215a2XJywgJ2VuJzogJ0tleXdvcmQgJyB9LAogICdja2V5d29yZEZpbHRlckZhc3QnOiB7ICd6aC1jbic6ICfor4TorrrljIXlkKvlhbPplK7or40nLCAnemgtaGsnOiAn6KmV6KuW5YyF5ZCr6Zec6Y215a2XJywgJ3poLXR3JzogJ+ipleirluWMheWQq+mXnOmNteWtlycsICdlbic6ICdDb21tZW50cyBjb250YWlucyBrZXl3b3JkICcgfSwKICAnY2tleXdvcmRGaWx0ZXJGYXN0SW5wdXQnOiB7ICd6aC1jbic6ICfigJx7e3RleHR9feKAnScsICd6aC1oayc6ICfjgIx7e3RleHR9feOAjScsICd6aC10dyc6ICfjgIx7e3RleHR9feOAjScsICdlbic6ICcie3t0ZXh0fX0iJyB9LAogIC8vIOivhOiuuuato+WImeihqOi+vuW8jwogICdjcmVnZXhwRmlsdGVyRGV0YWlscyc6IHsgJ3poLWNuJzogJ+WMuemFjeS7peS4i+ato+WImeihqOi+vuW8j+eahOivhOiuuicsICd6aC1oayc6ICfljLnphY3ku6XkuIvmraPliYfooajpgZTlvI/nmoToqZXoq5YnLCAnemgtdHcnOiAn5Yy56YWN5Lul5LiL5q2j6KaP6KGo56S65byP55qE6KmV6KuWJywgJ2VuJzogJ0NvbW1lbnQgbWF0Y2hlcyB0aGVzZSByZWd1bGFyIGV4cHJlc3Npb25zJyB9LAogICdjcmVnZXhwRmlsdGVyRGV0YWlsc0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5q2j5YiZ6KGo6L6+5byP5Yy56YWN6K+E6K665YaF5a6577yM5pa55L6/5Yy56YWN5LiA5Lqb5pWF5oSP57uV6L+H5YWz6ZSu6K+N6K+G5Yir55qE6K+E6K6644CCe3tyZWdleHBGaWx0ZXJEZXRhaWxzRGVzY319JywKICB9LAogICdjcmVnZXhwRmlsdGVyRGVzYyc6IHsgJ3poLWNuJzogJ+ato+WImeW8jycsICd6aC1oayc6ICfmraPliYflvI8nLCAnemgtdHcnOiAn5q2j6KaP5byPJywgJ2VuJzogJ1JlZ2V4cCcgfSwKICAnY3JlZ2V4cEZpbHRlckZhc3QnOiB7ICd6aC1jbic6ICfor4TorrrljLnphY3mraPliJnlvI8nLCAnemgtaGsnOiAn6KmV6KuW5Yy56YWN5q2j5YmH5byPJywgJ3poLXR3JzogJ+ipleirluWMuemFjeato+imj+W8jycsICdlbic6ICdDb21tZW50IG1hdGNoZXMgcmVnZXhwICcgfSwKICAnY3JlZ2V4cEZpbHRlckZhc3RJbnB1dCc6IHsgJ3poLWNuJzogJy97e3RleHR9fS8nLCAnemgtaGsnOiAnL3t7dGV4dH19LycsICd6aC10dyc6ICcve3t0ZXh0fX0vJywgJ2VuJzogJy97e3RleHR9fS8nIH0sCiAgLy8g6K+E6K6655So5oi3CiAgJ2N1c2VyRmlsdGVyRGV0YWlscyc6IHsgJ3poLWNuJzogJ+S7peS4i+W4kOWPt+ebuOWFs+eahOivhOiuuicsICd6aC1oayc6ICfku6XkuIvluLPomZ/nm7jpl5znmoToqZXoq5YnLCAnemgtdHcnOiAn5Lul5LiL5biz6Jmf55u46Zec55qE6KmV6KuWJywgJ2VuJzogJ0NvbW1lbnRzIG1lbnRpb25lZCB0aGVzZSBhY2NvdW50cycgfSwKICAnY3VzZXJGaWx0ZXJEZXRhaWxzRGVzYyc6IHsKICAgICd6aC1jbic6ICfljLnphY3ljIXmi6zor4TorrrnmoTkvZzogIXvvIzor4Torrrlm57lpI3nmoTluJDlj7fvvIzku6Xlj4ror4Torrrmj5DliLDnmoTluJDlj7fjgILor4TorrrkuK3mj5DliLDnmoTkurrnmoTpk77mjqXkuI3kvJrpmo/kv67mlLnmmLXnp7DogIzlj5jljJbvvIzov5nph4zkuZ/ml6Dms5XlpITnkIbkv67mlLnmmLXnp7DnmoTmg4XlhrXvvIzmiYDku6XlpoLmnpzkuIDkuKrkurrkv67mlLnkuobmmLXnp7DvvIzmgqjpnIDopoHph43mlrDmt7vliqDjgIInCiAgfSwKICAnY3VzZXJGaWx0ZXJEZXNjJzogeyAnemgtY24nOiAn5biQ5Y+3JywgJ3poLWhrJzogJ+W4s+iZnycsICd6aC10dyc6ICfluLPomZ8nLCAnZW4nOiAnQWNjb3VudCcgfSwKICAnY3VzZXJGaWx0ZXJGYXN0JzogeyAnemgtY24nOiAn5raJ5Y+K5Yiw4oCcQHt7bmFtZX194oCd55qE6K+E6K66JywgJ3poLWhrJzogJ+a2ieWPiuWIsOOAjEB7e25hbWV9feOAjeeahOipleirlicsICd6aC10dyc6ICfmtonlj4rliLDjgIxAe3tuYW1lfX3jgI3nmoToqZXoq5YnLCAnZW4nOiAnQ29tbWVudHMgYWJvdXQgIkB7e25hbWV9fSInIH0sCiAgLy8gIOivhOiuuuivnemimAogICdjdG9waWNGaWx0ZXJEZXRhaWxzJzogeyAnemgtY24nOiAn5YyF5ZCr5Lul5LiL6K+d6aKY55qE6K+E6K66JywgJ3poLWhrJzogJ+WMheWQq+S7peS4i+ipsemhjOeahOipleirlicsICd6aC10dyc6ICfljIXlkKvku6XkuIvoqbHpoYznmoToqZXoq5YnLCAnZW4nOiAnQ29tbWVudHMgd2l0aCB0aGVzZSB0b3BpY3MnIH0sCiAgJ2N0b3BpY0ZpbHRlckRldGFpbHNEZXNjJzogewogICAgJ3poLWNuJzogJ+WMuemFjeaPkOWIsOS6huafkOS4quivnemimOeahOivhOiuuuOAguivnemimOS9v+eUqOWFqOWtl+WMuemFjeOAgicKICB9LAogICdjdG9waWNGaWx0ZXJEZXNjJzogeyAnemgtY24nOiAn6K+d6aKYJywgJ3poLWhrJzogJ+ipsemhjCcsICd6aC10dyc6ICfoqbHpoYwnLCAnZW4nOiAnVG9waWMnIH0sCiAgJ2N0b3BpY0ZpbHRlckZhc3QnOiB7ICd6aC1jbic6ICfor4TorrrljIXlkKvor53popgnLCAnemgtaGsnOiAn6KmV6KuW5YyF5ZCr6Kmx6aGMJywgJ3poLXR3JzogJ+ipleirluWMheWQq+ipsemhjCcsICdlbic6ICdDb21tZW50cyBjb250YWlucyB0b3BpYyAnIH0sCiAgJ2N0b3BpY0ZpbHRlckZhc3RJbnB1dCc6IHsgJ3poLWNuJzogJ+KAnCN7e3RvcGljfX0j4oCdJywgJ3poLWhrJzogJ+OAjCN7e3RvcGljfX0j44CNJywgJ3poLXR3JzogJ+OAjCN7e3RvcGljfX0j44CNJywgJ2VuJzogJyIje3t0b3BpY319IyInIH0sCiAgLy8g6auY57qnCiAgJ2NvbW1lbnRPdGhlckZpbHRlcnMnOiB7ICd6aC1jbic6ICfmm7TlpJonLCAnemgtaGsnOiAn5YW25LuWJywgJ3poLXR3JzogJ+WFtuS7licsICdlbic6ICdNb3JlJyB9LAogICdjb21tZW50TXlEaXNwbGF5JzogeyAnemgtY24nOiAn5oC75piv5pi+56S65oiR6Ieq5bex5Y+R6KGo55qE6K+E6K66JywgJ3poLWhrJzogJ+e4veaYr+mhr+ekuuaIkeiHquW3seeZvOihqOeahOipleirlicsICd6aC10dyc6ICfnuL3mmK/poa/npLrmiJHoh6rlt7HnmbzooajnmoToqZXoq5YnLCAnZW4nOiAnQWx3YXlzIHNob3cgbXkgY29tbWVudHMnIH0sCiAgJ2NvbW1lbnRFbW9qaUNvdW50RGVzYyc6IHsgJ3poLWNuJzogJ+makOiXj+ihqOaDhXzmlbDph4/otoXov4d7ezxudW1iZXI+fX3kuKrnmoTor4TorronLCAnemgtaGsnOiAn6Zqx6JeP6KGo5oOFfOaVuOmHj+i2hemBjnt7PG51bWJlcj59feWAi+eahOipleirlicsICd6aC10dyc6ICfpmrHol4/ooajmg4V85pW46YeP6LaF6YGOe3s8bnVtYmVyPn195YCL55qE6KmV6KuWJywgJ2VuJzogJ0hpZGUgY29tbWVudHMgfCB3aXRoIG1vcmUgdGhhbiB7ezxudW1iZXI+fX0gZW1vamknIH0sCiAgJ2NvbW1lbnRFbW9qaVR5cGVzRGVzYyc6IHsgJ3poLWNuJzogJ+makOiXj+ihqOaDhXznp43nsbvotoXov4d7ezxudW1iZXI+fX3np43nmoTor4TorronLCAnemgtaGsnOiAn6Zqx6JeP6KGo5oOFfOeorumhnui2hemBjnt7PG51bWJlcj59feeorueahOipleirlicsICd6aC10dyc6ICfpmrHol4/ooajmg4V856iu6aGe6LaF6YGOe3s8bnVtYmVyPn1956iu55qE6KmV6KuWJywgJ2VuJzogJ0hpZGUgY29tbWVudHMgfCB3aXRoIG1vcmUgdGhhbiB7ezxudW1iZXI+fX0ga2luZHMgb2YgZW1vamknIH0sCiAgJ2NvbW1lbnRXaXRoT3V0Q29udGVudERlc2MnOiB7ICd6aC1jbic6ICfpmpDol4/msqHmnInlhoXlrrnnmoTor4TorrrvvIjlj6rmnInooajmg4XjgIHmj5DliLDnrYnvvIknLCAnemgtaGsnOiAn6Zqx6JeP5rKS5pyJ5YWn5a6555qE6KmV6KuW77yI5Y+q5pyJ6KGo5oOF44CB5o+Q5Yiw562J77yJJywgJ3poLXR3JzogJ+maseiXj+aykuacieWFp+WuueeahOipleirlu+8iOWPquacieihqOaDheOAgeaPkOWIsOetie+8iScsICdlbic6ICdDb21tZW50cyB3aXRob3V0IGFueSB0ZXh0IGNvbnRlbnQgKG9ubHkgbWVudGlvbnMgYW5kIGVtb2ppKScgfSwKICAnY29tbWVudFdpdGhGb3J3YXJkRGVzYyc6IHsgJ3poLWNuJzogJ+makOiXj+WQq+aciei9rOWPkea2iOaBr+eahOW+ruWNmicsICd6aC1oayc6ICfpmrHol4/lkKvmnInovYnnmbzmtojmga/nmoTlvq7ljZonLCAnemgtdHcnOiAn6Zqx6JeP5ZCr5pyJ6L2J55m85raI5oGv55qE5b6u5Y2aJywgJ2VuJzogJ0NvbW1lbnRzIGNvbnRhaW5zIGZvcndhcmRlZCBtZXNzYWdlcycgfSwKICAnY29tbWVudFdpdGhQaWN0dXJlJzogeyAnemgtY24nOiAn5bim5pyJ5Zu+54mH55qE6K+E6K66fHt7PGFjdD59fScsICd6aC1oayc6ICfluLbmnInlnJbniYfnmoToqZXoq5Z8e3s8YWN0Pn19JywgJ3poLXR3JzogJ+W4tuacieWclueJh+eahOipleirlnx7ezxhY3Q+fX0nLCAnZW4nOiAnQ29tbWVudHMgd2l0aCBwaWN0dXJlIHwge3s8YWN0Pn19JyB9LAogICdjb21tZW50V2l0aFBpY3R1cmVIaWRlJzogeyAnemgtY24nOiAn6ZqQ6JeP6K+E6K66JywgJ3poLWhrJzogJ+maseiXj+ipleirlicsICd6aC10dyc6ICfpmrHol4/oqZXoq5YnLCAnZW4nOiAnSGlkZSBjb21tZW50JyB9LAogICdjb21tZW50V2l0aFBpY3R1cmVGb2xkJzogeyAnemgtY24nOiAn5L2/55So5p+l55yL5Zu+54mH5oyJ6ZKu5pu/5o2i57yp55Wl5Zu+JywgJ3poLWhrJzogJ+S9v+eUqOafpeeci+WclueJh+aMiemIleabv+aPm+e4ruWclicsICd6aC10dyc6ICfkvb/nlKjmn6XnnIvlnJbniYfmjInpiJXmm7/mj5vnuK7lnJYnLCAnZW4nOiAnUmVwbGFjZSB0aHVtYm5haWwgd2l0aCAiVmlldyBQaWN0cnVlIiBidXR0b24nIH0sCiAgJ2RlbGV0ZUNvbW1lbnRIaWRkZW4nOiB7ICd6aC1jbic6ICflpoLmnpzmnYPpmZDlhYHorrjoh6rliqjliKDpmaTooqvpmpDol4/nmoTor4Torrp7ezxpPn19JywgJ3poLWhrJzogJ+WmguaenOasiumZkOWFgeioseiHquWLleWIqumZpOiiq+maseiXj+eahOipleirlnt7PGk+fX0nLCAnemgtdHcnOiAn5aaC5p6c5qyK6ZmQ5YWB6Kix6Ieq5YuV5Yiq6Zmk6KKr6Zqx6JeP55qE6KmV6KuWe3s8aT59fScsICdlbic6ICdBdXRvbWF0aWNhbGx5IGRlbGV0ZSBoaWRkZW4gY29tbWVudHMgaWYgcGVybWlzc2lvbiBhbGxvd2VkIHt7PGk+fX0nIH0sCiAgJ2RlbGV0ZUNvbW1lbnRIaWRkZW5EZXNjJzogewogICAgJ3poLWNuJzogJ+ivt+azqOaEj++8jOaJk+W8gOivpemAiemhueWQju+8jOiiq+aCqOmakOiXj+eahOS4lOaCqOacieadg+mZkOWIoOmZpOeahOivhOiuuumDveWwhuiiq+WIoOmZpOOAgui/meaEj+WRs+edgOWFtuS7luS6uu+8jOWMheaLrOWPkeihqOi/meadoeivhOiuuueahOS9nOiAheWcqOWGhemDveS4jeiDveWGjeeci+WIsOi/meadoeivhOiuuuOAguiAjOS4lOWmguaenOaCqOayoeacieW8gOWQr1tbY29tbWVudC5vdGhlcmMubXlfY29tbWVudF1d77yM6YKj5LmI5Y+v6IO95Lya6Ieq5Yqo5Yig6Zmk5oKo5Y+R5Ye655qE6K+E6K6644CCJwogIH0sCiAgLy8g5qih5Z2XCiAgJ2xheW91dEZpbHRlckdyb3VwVGl0bGUnOiB7ICd6aC1jbic6ICfniYjpnaLmuIXnkIYnLCAnemgtaGsnOiAn54mI6Z2i5riF55CGJywgJ3poLXR3JzogJ+eJiOmdoua4heeQhicsICdlbic6ICdMYXlvdXQgQ2xlYW51cCcgfSwKICAvLyDmoIfor4blm77moIcKICAnbGF5b3V0SGlkZUljb24nOiB7ICd6aC1jbic6ICfpmpDol4/mqKHlnZcgLSDmoIfor4Yv5Zu+5qCHJywgJ3poLWhrJzogJ+maseiXj+aooee1hCAtIOaomeiqjC/lnJbnpLonLCAnemgtdHcnOiAn6Zqx6JeP5qih57WEIC0g5qiZ6KqML+WcluekuicsICdlbic6ICdIaWRlIG1vZHVsZXMgLSBMb2dvIC8gSWNvbicgfSwKICAnbGF5b3V0SGlkZUljb25MZXZlbCc6IHsgJ3poLWNuJzogJ+etiee6pycsICd6aC1oayc6ICdMZXZlbCcsICd6aC10dyc6ICfnrYnntJonLCAnZW4nOiAnTGV2ZWwnIH0sCiAgJ2xheW91dEhpZGVJY29uTWVtYmVyJzogeyAnemgtY24nOiAn5b6u5Y2a5Lya5ZGYJywgJ3poLWhrJzogJ+W+ruWNmuacg+WToScsICd6aC10dyc6ICflvq7ljZrmnIPlk6EnLCAnZW4nOiAnV2VpYm8gVklQIC8gTWVtYmVyJyB9LAogICdsYXlvdXRIaWRlSWNvbkFwcHJvdmUnOiB7ICd6aC1jbic6ICfkuKrkurrorqTor4EnLCAnemgtaGsnOiAn5YCL5Lq66KqN6K2JJywgJ3poLXR3JzogJ+WAi+S6uuiqjeitiScsICdlbic6ICdQZXJzb25hbCBBdXRoZW50aWNhdGlvbiAvIOWAi+S6uuiqjeitiScgfSwKICAnbGF5b3V0SGlkZUljb25BcHByb3ZlQ28nOiB7ICd6aC1jbic6ICfmnLrmnoTorqTor4EnLCAnemgtaGsnOiAn5LyB5qWt6KqN6K2JJywgJ3poLXR3JzogJ+S8gealreiqjeitiScsICdlbic6ICdXZWlibyBWZXJpZmljYXRpb24gLyDkvIHmpa3oqo3orYknIH0sCiAgJ2xheW91dEhpZGVJY29uQXBwcm92ZURlYWQnOiB7ICd6aC1jbic6ICflpLHmlYjorqTor4EnLCAnemgtaGsnOiAn5aSx5pWI6KqN6K2JJywgJ3poLXR3JzogJ+WkseaViOiqjeitiScsICdlbic6ICdGYWlsZWQgdmVyaWZpY2F0aW9uJyB9LAogICdsYXlvdXRIaWRlSWNvbkJpZ0Z1bic6IHsgJ3poLWNuJzogJ+mTgeeyiScsICd6aC1oayc6ICfpk4HnsoknLCAnemgtdHcnOiAn6ZOB57KJJywgJ2VuJzogJ+mTgeeyiSAoYmlnIGZ1bj8pJyB9LAogICdsYXlvdXRIaWRlSWNvbkNsdWInOiB7ICd6aC1jbic6ICflvq7ljZrovr7kuronLCAnemgtaGsnOiAn5b6u5Y2a6YGU5Lq6JywgJ3poLXR3JzogJ+W+ruWNmumBlOS6uicsICdlbic6ICdQaW9uZWVyJyB9LAogICdsYXlvdXRIaWRlSWNvblZHaXJsJzogeyAnemgtY24nOiAn5b6u5Y2a5aWz6YOOJywgJ3poLWhrJzogJ+W+ruWNmuWls+mDjicsICd6aC10dyc6ICflvq7ljZrlpbPpg44nLCAnZW4nOiAnV2VpYm8gZ2lybCcgfSwKICAnbGF5b3V0SGlkZUljb25TdXBlcnZpc29yJzogeyAnemgtY24nOiAn5b6u5Y2a55uR552j5ZGYJywgJ3poLWhrJzogJ+W+ruWNmuebo+edo+WToScsICd6aC10dyc6ICflvq7ljZrnm6PnnaPlk6EnLCAnZW4nOiAnV2VpYm8gU3VwZXJ2aXNvcicgfSwKICAnbGF5b3V0SGlkZUljb25UYW9iYW8nOiB7ICd6aC1jbic6ICfmt5jlrp0v5aSp54yr5ZWG5oi3JywgJ3poLWhrJzogJ+a3mOWvti/lpKnospPllYbmiLYnLCAnemgtdHcnOiAn5reY5a+2L+Wkqeiyk+WVhuaIticsICdlbic6ICdUYW9iYW8gLyBUbWFsbCBNZXJjaGFudCcgfSwKICAnbGF5b3V0SGlkZUljb25DaGVuZyc6IHsgJ3poLWNuJzogJ+mYv+mHjOivmuS/oemAmicsICd6aC1oayc6ICfpmL/ph4zoqqDkv6HpgJonLCAnemgtdHcnOiAn6Zi/6YeM6Kqg5L+h6YCaJywgJ2VuJzogJ0FsaWJhYmEg6K+a5L+h6YCaJyB9LAogICdsYXlvdXRIaWRlSWNvbkdvbmd5aSc6IHsgJ3poLWNuJzogJ+WFrOebiicsICd6aC1oayc6ICflhaznm4onLCAnemgtdHcnOiAn5YWs55uKJywgJ2VuJzogJ3B1YmxpYyBJbnRlcmVzdCcgfSwKICAnbGF5b3V0SGlkZUljb25ab25neWlrYSc6IHsgJ3poLWNuJzogJ+e7vOiJuicsICd6aC1oayc6ICfnu7zoibonLCAnemgtdHcnOiAn57u86Im6JywgJ2VuJzogJ1ZhcmlldHknIH0sCiAgJ2xheW91dEhpZGVJY29uT3RoZXInOiB7ICd6aC1jbic6ICfmm7TlpJonLCAnemgtaGsnOiAn5YW25LuWJywgJ3poLXR3JzogJ+WFtuS7licsICdlbic6ICdNb3JlJyB9LAogIC8vIOWFs+azqAogICdsYXlvdXRIaWRlRm9sbG93JzogeyAnemgtY24nOiAn6ZqQ6JeP5qih5Z2XIC0g5YWz5rOo5oyJ6ZKuJywgJ3poLWhrJzogJ+maseiXj+aooee1hCAtIOmXnOazqOaMiemIlScsICd6aC10dyc6ICfpmrHol4/mqKHntYQgLSDpl5zms6jmjInpiJUnLCAnZW4nOiAnSGlkZSBtb2R1bGVzIC0gRm9sbG93IEJ1dHRvbicgfSwKICAnbGF5b3V0SGlkZUZvbGxvd1NpbmdsZSc6IHsgJ3poLWNuJzogJ+W+ruWNmuivpuaDhemhtScsICd6aC1oayc6ICflvq7ljZroqbPmg4XpoIEnLCAnemgtdHcnOiAn5b6u5Y2a6Kmz5oOF6aCBJywgJ2VuJzogJ1dlaWJvIGRldGFpbCcgfSwKICAnbGF5b3V0SGlkZUZvbGxvd0F0TWUnOiB7ICd6aC1jbic6ICfmj5DliLDmiJHnmoTlvq7ljZonLCAnemgtaGsnOiAn5o+Q5Yiw5oiR55qE5b6u5Y2aJywgJ3poLXR3JzogJ+aPkOWIsOaIkeeahOW+ruWNmicsICdlbic6ICdXZWlibyBhdCBtZScgfSwKICAnbGF5b3V0SGlkZUZvbGxvd0Rpc2NvdmVyJzogeyAnemgtY24nOiAn54Ot6Zeo5b6u5Y2aJywgJ3poLWhrJzogJ+eGsemWgOW+ruWNmicsICd6aC10dyc6ICfnhrHploDlvq7ljZonLCAnZW4nOiAnSG90IFdlaWJvJyB9LAogICdsYXlvdXRIaWRlRm9sbG93V2hpc3Blcic6IHsgJ3poLWNuJzogJ+aChOaChOWFs+azqCcsICd6aC1oayc6ICfmgoTmgoTpl5zms6gnLCAnemgtdHcnOiAn5oKE5oKE6Zec5rOoJywgJ2VuJzogJ1NlY3JldCBGb2xsb3dpbmcnIH0sCiAgJ2xheW91dEhpZGVGb2xsb3dWaWRlbyc6IHsgJ3poLWNuJzogJ+inhumikeW8ueWxgicsICd6aC1oayc6ICfoppbpoLvlvYjlsaQnLCAnemgtdHcnOiAn5b2x54mH5b+r6aGv5bGkJywgJ2VuJzogJ1ZpZGVvIHBvcC11cCBsYXllcicgfSwKICAnbGF5b3V0SGlkZUZvbGxvd1JlY29tbWVuZCc6IHsgJ3poLWNuJzogJ+WFs+azqOaOqOiNkCcsICd6aC1oayc6ICfpl5zms6jmjqjolqYnLCAnemgtdHcnOiAn6Zec5rOo5o6o6JamJywgJ2VuJzogJ0ZvbGxvdyBSZWNvbW1lbmQnIH0sCiAgLy8g5a+86Iiq5qCPCiAgJ2xheW91dEhpZGVOYXYnOiB7ICd6aC1jbic6ICfpmpDol4/mqKHlnZcgLSDlr7zoiKrmoI8nLCAnemgtaGsnOiAn6Zqx6JeP5qih57WEIC0g5bCO6Ka95YiXJywgJ3poLXR3JzogJ+maseiXj+aooee1hCAtIOWwjuimveWIlycsICdlbic6ICdIaWRlIG1vZHVsZXMgLSBOYXZpZ2F0aW9uIEJhcicgfSwKICAnbGF5b3V0SGlkZU5hdkxvZ29JbWcnOiB7ICd6aC1jbic6ICfoioLml6Xlvr3moIcnLCAnemgtaGsnOiAn56+A5pel5b695qiZJywgJ3poLXR3JzogJ+evgOaXpeW+veaomScsICdlbic6ICdIb2xpZGF5IGxvZ28nIH0sCiAgJ2xheW91dEhpZGVOYXZNYWluJzogeyAnemgtY24nOiAn6aaW6aG1JywgJ3poLWhrJzogJ+mmlumggScsICd6aC10dyc6ICfpppbpoIEnLCAnZW4nOiAnSG9tZScgfSwKICAnbGF5b3V0SGlkZU5hdlRWJzogeyAnemgtY24nOiAn6KeG6aKRJywgJ3poLWhrJzogJ+inhumikScsICd6aC10dyc6ICfop4bpopEnLCAnZW4nOiAn6KeG6aKRIChWaWRlbyknIH0sCiAgJ2xheW91dEhpZGVOYXZIb3QnOiB7ICd6aC1jbic6ICflj5HnjrAnLCAnemgtaGsnOiAn5Y+R546wJywgJ3poLXR3JzogJ+WPkeeOsCcsICdlbic6ICdEaXNjb3ZlcicgfSwKICAnbGF5b3V0SGlkZU5hdkdhbWUnOiB7ICd6aC1jbic6ICfmuLjmiI8nLCAnemgtaGsnOiAn6YGK5oiyJywgJ3poLXR3JzogJ+mBiuaIsicsICdlbic6ICdHYW1lJyB9LAogICdsYXlvdXRIaWRlTmF2SG90U2VhcmNoJzogeyAnemgtY24nOiAn5aSn5a625q2j5Zyo5pCcJywgJ3poLWhrJzogJ+Wkp+Wutuato+WcqOaQnCcsICd6aC10dyc6ICflpKflrrbmraPlnKjnhrHmkJwnLCAnZW4nOiAnSG90IHNlYXJjaCcgfSwKICAnbGF5b3V0SGlkZU5hdkhvdFNlYXJjaERlc2MnOiB7CiAgICAnemgtY24nOiAn5bu66K6u5L2/55SoQUJQ562J5omp5bGV77yM5re75Yqg6KeE5YiZ4oCcIDxjb2RlPio6Ly9zLndlaWJvLmNvbS9hamF4L2pzb25wL2dldHRvcHN1Zyo8L2NvZGU+IOKAne+8jOS7pei+vuWIsOabtOWlveeahOaViOaenOOAgicsCiAgfSwKICAnc2VhcmNoQmFyUGxhY2Vob2xkZXInOiB7ICd6aC1jbic6ICfmkJzntKLlvq7ljZrjgIHmib7kuronLCAnemgtaGsnOiAn5pCc57Si5b6u5Y2a44CB5om+5Lq6JywgJ3poLXR3JzogJ+aQnOe0ouW+ruWNmuOAgeaJvuS6uicsICdlbic6ICdTZWFyY2ggZm9yIFdlaWJvLCBQZW9wbGUnIH0sCiAgJ2xheW91dEhpZGVOYXZOb3RpY2VOZXcnOiB7ICd6aC1jbic6ICfmlrDmtojmga/orqHmlbAnLCAnemgtaGsnOiAn5paw5raI5oGv6KiI5pW4JywgJ3poLXR3JzogJ+aWsOa2iOaBr+ioiOaVuCcsICdlbic6ICdDb3VudCBmb3IgbmV3IG5vdGljZScgfSwKICAnbGF5b3V0SGlkZU5hdk5ldyc6IHsgJ3poLWNuJzogJ+aPkOekuue6oueCuScsICd6aC1oayc6ICfmj5DnpLrntIXpu54nLCAnemgtdHcnOiAn5o+Q56S657SF6bueJywgJ2VuJzogJ1JlZCBkb3QgdGlwcycgfSwKICAnbGF5b3V0SGlkZU5hdkhvdFRpcCc6IHsgJ3poLWNuJzogJ+eDremXqOm7hOetvuaPkOmGkicsICd6aC1oayc6ICfnhrHploDpu4PnsL3mj5DphpInLCAnemgtdHcnOiAn54ax6ZaA6buD57C95o+Q6YaSJywgJ2VuJzogJ1llbGxvdyB0aXAgZm9yIG5ldyBob3RzJyB9LAogIC8vIOW3puagjwogICdsYXlvdXRIaWRlTGVmdCc6IHsgJ3poLWNuJzogJ+makOiXj+aooeWdlyAtIOW3puagjycsICd6aC1oayc6ICfpmrHol4/mqKHntYQgLSDlt6bmrIQnLCAnemgtdHcnOiAn6Zqx6JeP5qih57WEIC0g5bem5qyEJywgJ2VuJzogJ0hpZGUgbW9kdWxlcyAtIExlZnQgQ29sdW1uJyB9LAogICdsYXlvdXRIaWRlTGVmdEhvbWUnOiB7ICd6aC1jbic6ICfpppbpobUnLCAnemgtaGsnOiAn6aaW6aCBJywgJ3poLXR3JzogJ+mmlumggScsICdlbic6ICdIb21lJyB9LAogICdsYXlvdXRIaWRlTGVmdEZhdic6IHsgJ3poLWNuJzogJ+aIkeeahOaUtuiXjycsICd6aC1oayc6ICfmiJHnmoTmlLbol48nLCAnemgtdHcnOiAn5oiR55qE5pS26JePJywgJ2VuJzogJ0Zhdm9yaXRlJyB9LAogICdsYXlvdXRIaWRlTGVmdExpa2UnOiB7ICd6aC1jbic6ICfmiJHnmoTotZ4nLCAnemgtaGsnOiAn5oiR55qE6K6aJywgJ3poLXR3JzogJ+aIkeeahOiumicsICdlbic6ICdMaWtlJyB9LAogICdsYXlvdXRIaWRlTGVmdEhvdCc6IHsgJ3poLWNuJzogJ+eDremXqOW+ruWNmicsICd6aC1oayc6ICfnhrHploDlvq7ljZonLCAnemgtdHcnOiAn54ax6ZaA5b6u5Y2aJywgJ2VuJzogJ0hvdCBXZWlibycgfSwKICAnbGF5b3V0SGlkZUxlZnRUVic6IHsgJ3poLWNuJzogJ+eDremXqOinhumikScsICd6aC1oayc6ICfnhrHploDoppbpoLsnLCAnemgtdHcnOiAn54ax6ZaA6KaW6aC7JywgJ2VuJzogJ0hvdCBWaWRlbycgfSwKICAnbGF5b3V0SGlkZUxlZnROZXdGZWVkJzogeyAnemgtY24nOiAn5pyA5paw5b6u5Y2aJywgJ3poLWhrJzogJ+acgOaWsOW+ruWNmicsICd6aC10dyc6ICfmnIDmlrDlvq7ljZonLCAnZW4nOiAn5pyA5paw5b6u5Y2aIChOZXdlc3QpJyB9LAogICdsYXlvdXRIaWRlTGVmdEZyaWVuZHMnOiB7ICd6aC1jbic6ICflpb3lj4vlnIgnLCAnemgtaGsnOiAn5aW95Y+L5ZyIJywgJ3poLXR3JzogJ+WlveWPi+WciCcsICdlbic6ICdGcmllbmRzJyB9LAogICdsYXlvdXRIaWRlTGVmdEdyb3VwVG9NZSc6IHsgJ3poLWNuJzogJ+e+pOW+ruWNmicsICd6aC1oayc6ICfnvqTlvq7ljZonLCAnemgtdHcnOiAn576k5b6u5Y2aJywgJ2VuJzogJ+e+pOW+ruWNmiAoR3JvdXApJyB9LAogICdsYXlvdXRIaWRlTGVmdFNwZWNpYWwnOiB7ICd6aC1jbic6ICfnibnliKvlhbPms6gnLCAnemgtaGsnOiAn54m55Yir6Zec5rOoJywgJ3poLXR3JzogJ+eJueWIq+mXnOazqCcsICdlbic6ICdTcGVjaWFsIEZvY3VzJyB9LAogICdsYXlvdXRIaWRlTGVmdFdoaXNwZXInOiB7ICd6aC1jbic6ICfmgoTmgoTlhbPms6gnLCAnemgtaGsnOiAn5oKE5oKE6Zec5rOoJywgJ3poLXR3JzogJ+aChOaChOmXnOazqCcsICdlbic6ICdTZWNyZXQgRm9sbG93aW5nJyB9LAogICdsYXlvdXRIaWRlTGVmdFZQbHVzJzogeyAnemgtY24nOiAn5LuY6LS56K6i6ZiF77yIVivvvIknLCAnemgtaGsnOiAn5LuY6LK76KiC6Zax77yIVivvvIknLCAnemgtdHcnOiAn5LuY6LK76KiC6Zax77yIVivvvIknLCAnZW4nOiAnUGFpZCBTdWJzY3JpYiAoVispJyB9LAogICdsYXlvdXRIaWRlTGVmdE5ldyc6IHsgJ3poLWNuJzogJ+aWsOW+ruWNmuaPkOekuue6oueCuScsICd6aC1oayc6ICfmlrDlvq7ljZrmj5DnpLrntIXpu54nLCAnemgtdHcnOiAn5paw5b6u5Y2a5o+Q56S657SF6bueJywgJ2VuJzogJ1JlZCBkb3QgZm9yIG5ldyBXZWlibycgfSwKICAnbGF5b3V0SGlkZUxlZnROZXdzJzogeyAnemgtY24nOiAn5paw5raI5oGv6K6h5pWwJywgJ3poLWhrJzogJ+aWsOa2iOaBr+ioiOaVuCcsICd6aC10dyc6ICfmlrDmtojmga/oqIjmlbgnLCAnZW4nOiAnQ291bnRzIGZvciBOZXdzJyB9LAogICdsYXlvdXRIaWRlTGVmdENvdW50JzogeyAnemgtY24nOiAn5paw5YiG57uE5b6u5Y2a6K6h5pWwJywgJ3poLWhrJzogJ+aWsOWIhue1hOW+ruWNmuioiOaVuCcsICd6aC10dyc6ICfmlrDliIbntYTlvq7ljZroqIjmlbgnLCAnZW4nOiAnQ291bnRzIGZvciBXZWlibyBieSBHcm91cCcgfSwKICAvLyDkuK3moI8KICAnbGF5b3V0SGlkZU1pZGRsZSc6IHsgJ3poLWNuJzogJ+makOiXj+aooeWdlyAtIOS4reagjycsICd6aC1oayc6ICfpmrHol4/mqKHntYQgLSDkuK3mrIQnLCAnemgtdHcnOiAn6Zqx6JeP5qih57WEIC0g5Lit5qyEJywgJ2VuJzogJ0hpZGUgbW9kdWxlcyAtIE1pZGRsZSBDb2x1bW4nIH0sCiAgJ2xheW91dEhpZGVNaWRkbGVSZWNvbW1lbmRlZFRvcGljJzogeyAnemgtY24nOiAn54Ot6Zeo5b6u5Y2a77yI5Y+R5biD5qGG5LiK5pa577yJJywgJ3poLWhrJzogJ+eDremXqOW+ruWNmu+8iOeZvOW4g+ahhuS4iuaWue+8iScsICd6aC10dyc6ICfng63pl6jlvq7ljZrvvIjnmbzluIPmoYbkuIrmlrnvvIknLyogYXMgaXMgKi8sICdlbic6ICfng63pl6jlvq7ljZogKEhvdCBXZWlibyksIG9uIHRvcCBvZiBwdWJsaXNoZXInIH0sCiAgJ2xheW91dEhpZGVNaWRkbGVGZWVkUmVjb21tYW5kJzogeyAnemgtY24nOiAn5b6u5Y2a5YW06Laj5o6o6I2Q77yI6aG26YOo77yJJywgJ3poLWhrJzogJ+W+ruWNmuiIiOi2o+aOqOiWpu+8iOmggumDqO+8iScsICd6aC10dyc6ICflvq7ljZroiIjotqPmjqjolqbvvIjpoILpg6jvvIknLCAnZW4nOiAnRmVlZCBSZWNvbW1lbmRhdGlvbiwgdG9wJyB9LAogICdsYXlvdXRIaWRlTWlkZGxlTWVtYmVyVGlwJzogeyAnemgtY24nOiAn5byA6YCa5Lya5ZGY5o+Q56S677yI5bqV6YOo77yJJywgJ3poLWhrJzogJ+mWi+mAmuacg+WToeaPkOekuu+8iOW6lemDqO+8iScsICd6aC10dyc6ICfplovpgJrmnIPlk6Hmj5DnpLrvvIjlupXpg6jvvIknLCAnZW4nOiAnVGlwIG9mIEpvaW5pbmcgV2VpYm8gVklQLCBib3R0b20nIH0sCiAgLy8g5Y+z5qCPCiAgJ2xheW91dEhpZGVSaWdodCc6IHsgJ3poLWNuJzogJ+makOiXj+aooeWdlyAtIOWPs+agjycsICd6aC1oayc6ICfpmrHol4/mqKHntYQgLSDlj7PmrIQnLCAnemgtdHcnOiAn6Zqx6JeP5qih57WEIC0g5Y+z5qyEJywgJ2VuJzogJ0hpZGUgbW9kdWxlcyAtIFJpZ2h0IENvbHVtbicgfSwKICAnbGF5b3V0SGlkZVJpZ2h0SW5mbyc6IHsgJ3poLWNuJzogJ+S4quS6uuS/oeaBrycsICd6aC1oayc6ICfkuKrkurrkv6Hmga8nLCAnemgtdHcnOiAn5Liq5Lq65L+h5oGvJywgJ2VuJzogJ1BlcnNvbmFsIEluZm8nIH0sCiAgJ2xheW91dEhpZGVSaWdodFJlY29tTXVzaWNSYW5rJzogeyAnemgtY24nOiAn5qac5Y2V77yI5paw5q2M5qac562J77yJJywgJ3poLWhrJzogJ+amnOWWru+8iOaWsOatjOamnOetie+8iScsICd6aC10dyc6ICfmppzllq7vvIjmlrDmrYzmppznrYnvvIknLCAnZW4nOiAnUmFuayBMaXN0IChTb25nIGxpc3QsIGV0Yy4pJyB9LAogICdsYXlvdXRIaWRlUmlnaHRSZWNvbU11c2ljUmFua0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5YyF5ous4oCc5Lqa5rSy5paw5q2M5qac5a6e5pe26LaL5Yq/4oCd4oCc5b6u5Y2a55S15b2x54Ot6K6u5qac4oCd4oCc5Lqa5rSy5aW95Lmm5qac5a6e5pe26LaL5Yq/4oCd4oCc5Li75pKt57qi5Lq65qac4oCd4oCc5Lqa5rSy5Yqo5ryr5qac4oCd562J44CCJwogIH0sCiAgJ2xheW91dEhpZGVSaWdodEhvdFRvcGljJzogeyAnemgtY24nOiAn54Ot6Zeo6K+d6aKYJywgJ3poLWhrJzogJ+eGsemWgOipsemhjCcsICd6aC10dyc6ICfnhrHploDoqbHpoYwnLCAnZW4nOiAnSG90IFRvcGljJyB9LAogICdsYXlvdXRIaWRlUmlnaHRIb3RUb3BpY0V4cGFuZCc6IHsgJ3poLWNuJzogJ+eDremXqOivnemimOS4reeahOivnemimOaPj+i/sCcsICd6aC1oayc6ICfnhrHploDoqbHpoYzkuK3nmoToqbHpoYzmj4/ov7AnLCAnemgtdHcnOiAn54ax6ZaA6Kmx6aGM5Lit55qE6Kmx6aGM5o+P6L+wJywgJ2VuJzogJ1RvcGljIGRlc2NyaXB0aW9uIGluIEhvdCBUb3BpYycgfSwKICAnbGF5b3V0SGlkZVJpZ2h0R3JvdXBzJzogeyAnemgtY24nOiAn5YiG57uE5oiQ5ZGY5YiX6KGoJywgJ3poLWhrJzogJ+WIhue1hOaIkOWToeWIl+ihqCcsICd6aC10dyc6ICfliIbntYTmiJDlk6HliJfooagnLCAnZW4nOiAnTWVtYmVycyBvZiBncm91cCcgfSwKICAnbGF5b3V0SGlkZVJpZ2h0UmVjb21Hcm91cFVzZXInOiB7ICd6aC1jbic6ICflu7rorq7liqDlhaXor6XliIbnu4QnLCAnemgtaGsnOiAn5bu66K2w5Yqg5YWl6Kmy5YiG57WEJywgJ3poLXR3JzogJ+W7uuitsOWKoOWFpeipsuWIhue1hCcsICdlbic6ICdTdWdnZXN0IHRvIGFkZCB0byB0aGlzIGdyb3VwJyB9LAogICdsYXlvdXRIaWRlUmlnaHRIb25nYmFvUmFuayc6IHsgJ3poLWNuJzogJ+iuqee6ouWMhemjnicsICd6aC1oayc6ICforpPntIXljIXpo5snLCAnemgtdHcnOiAn6K6T57SF5YyF6aObJywgJ2VuJzogJ+iuqee6ouWMhemjniAoUmVkIEVudmVsb3BlKScgfSwKICAnbGF5b3V0SGlkZVJpZ2h0SW50ZXJlc3QnOiB7ICd6aC1jbic6ICflj6/og73mhJ/lhbTotqPnmoTkuronLCAnemgtaGsnOiAn5Y+v6IO95oSf6IiI6Laj55qE5Lq6JywgJ3poLXR3JzogJ+WPr+iDveaEn+iIiOi2o+eahOS6uicsICdlbic6ICdZb3UgbWF5IGtub3cnIH0sCiAgJ2xheW91dEhpZGVSaWdodE1vdmllJzogeyAnemgtY24nOiAn55S15b2x54Ot6K+E5qacJywgJ3poLWhrJzogJ+eUteW9seeDreivhOamnCcsICd6aC10dyc6ICfnlLXlvbHng63or4TmppwnLCAnZW4nOiAn55S15b2x54Ot6K+E5qacIChIb3QgTW92aWUpJyB9LAogICdsYXlvdXRIaWRlUmlnaHRBdHRGZWVkJzogeyAnemgtY24nOiAn5aW95Y+L5YWz5rOo5Yqo5oCBJywgJ3poLWhrJzogJ+WlveWPi+WFs+azqOWKqOaAgScsICd6aC10dyc6ICflpb3lj4vlhbPms6jliqjmgIEnLCAnZW4nOiAn5aW95Y+L5YWz5rOo5Yqo5oCBIChGcmllbmRzXCcgQXR0ZW50aW9uKScgfSwKICAnbGF5b3V0SGlkZVJpZ2h0QXR0RmVlZERlc2MnOiB7CiAgICAnemgtY24nOiAn5byA5ZCv6K+l6ZqQ6JeP6YCJ6aG55Y+q6IO96K6p5oKo6Ieq5bex5LiN5YaN55yL5Yiw4oCc5aW95Y+L5YWz5rOo5Yqo5oCB4oCd5qih5Z2X77yM5bm25LiN6IO96Zi75q2i5oKo5Ye6546w5Zyo5Yir5Lq655qE4oCc5aW95Y+L5YWz5rOo5Yqo5oCB4oCd5Lit44CCJwogIH0sCiAgJ2xheW91dEhpZGVSaWdodE1lbWJlcic6IHsgJ3poLWNuJzogJ+S8muWRmOS4k+WMuicsICd6aC1oayc6ICfmnIPlk6HlsIjljYAnLCAnemgtdHcnOiAn5pyD5ZOh5bCI5Y2AJywgJ2VuJzogJ1dlaWJvIFZJUCcgfSwKICAnbGF5b3V0SGlkZVJpZ2h0VGFvYmFvTW92aWUnOiB7ICd6aC1jbic6ICfmt5jlrp0mYW1wO+W+ruWNmiDnlLXlvbHpooTllK7mppwnLCAnemgtaGsnOiAn5reY5a6dJmFtcDvlvq7ljZog55S15b2x6aKE5ZSu5qacJywgJ3poLXR3JzogJ+a3mOWunSZhbXA75b6u5Y2aIOeUteW9semihOWUruamnCcvKiBhcyBpcyAqLywgJ2VuJzogJ+a3mOWunSZhbXA75b6u5Y2aIOeUteW9semihOWUruamnCAoVGFvYmFvIE1vdmllKScgfSwKICAnbGF5b3V0SGlkZVJpZ2h0Tm90aWNlJzogeyAnemgtY24nOiAn5YWs5ZGK5qCPJywgJ3poLWhrJzogJ+WFrOWRiuashCcsICd6aC10dyc6ICflhazlkYrmrIQnLCAnZW4nOiAnQnVsbGV0aW4gQm9hcmQnIH0sCiAgLy8g5b6u5Y2a5YaFCiAgJ2xheW91dEhpZGVXZWlibyc6IHsgJ3poLWNuJzogJ+makOiXj+aooeWdlyAtIOW+ruWNmuWGhScsICd6aC1oayc6ICfpmrHol4/mqKHntYQgLSDlvq7ljZrlhacnLCAnemgtdHcnOiAn6Zqx6JeP5qih57WEIC0g5b6u5Y2a5YWnJywgJ2VuJzogJ0hpZGUgbW9kdWxlcyAtIFdlaWJvJyB9LAogICdsYXlvdXRIaWRlV2VpYm9SZWNvbUZlZWQnOiB7ICd6aC1jbic6ICfnsr7lvanlvq7ljZrmjqjojZAnLCAnemgtaGsnOiAn57K+5b2p5b6u5Y2a5o6o6JamJywgJ3poLXR3JzogJ+eyvuW9qeW+ruWNmuaOqOiWpicsICdlbic6ICdXZWlibyB5b3UgbWF5IGludGVyZXN0ZWQgaW4nIH0sCiAgJ2xheW91dEhpZGVXZWlib0ZlZWRPdXRlclRpcCc6IHsgJ3poLWNuJzogJ+a2iOaBr+a1geaPkOekuuaoquW5hScsICd6aC1oayc6ICfmtojmga/mtYHmj5DnpLrmqavluYUnLCAnemgtdHcnOiAn5raI5oGv5rWB5o+Q56S65qmr5bmFJywgJ2VuJzogJ1RpcHMgZm9yIGZlZWQnIH0sCiAgJ2xheW91dEhpZGVXZWlib0ZlZWRPdXRlclRpcERlc2MnOiB7CiAgICAnemgtY24nOiAn5raI5oGv5rWB5YaF6YOo55qE5o+Q56S65qiq5bmF77yM5aaC4oCcIOezu+e7n+aPkOekuu+8muagueaNruS9oOeahOWxj+iUveiuvue9ru+8jOezu+e7n+W3sui/h+a7pOaOiemDqOWIhuW+ruWNmuOAguKAneetieWGheWuueOAgicKICB9LAogICdsYXlvdXRIaWRlV2VpYm9GZWVkVGlwJzogeyAnemgtY24nOiAn6K+E6K665qGG5o+Q56S65qiq5bmFJywgJ3poLWhrJzogJ+ipleirluahhuaPkOekuuapq+W5hScsICd6aC10dyc6ICfoqZXoq5bmoYbmj5DnpLrmqavluYUnLCAnZW4nOiAnVGlwcyBmb3IgY29tbWVudCcgfSwKICAnbGF5b3V0SGlkZVdlaWJvRmVlZFRpcERlc2MnOiB7CiAgICAnemgtY24nOiAn57uP5bi45Ye6546w5Zyo6K+E6K665qGG5LiK5pa555qE5qiq5bmF77yM6YCa5bi45YyF5ZCr5aaC4oCc5b6u5Y2a56S+5Yy6566h55CG5Lit5b+D5Li+5oql5aSE55CG5aSn5Y6F77yM5qyi6L+O5p+l6ZiF77yB4oCd562J5YaF5a6544CCJwogICAgLy8g6Iux6K+t55WM6Z2i5qiq5bmF5YaF5a655peg57+76K+RCiAgfSwKICAnbGF5b3V0SGlkZVdlaWJvR3JvdXBUaXAnOiB7ICd6aC1jbic6ICfpobbpg6jliIbnu4TmiJblpb3lj4vlnIjmj5DphpInLCAnemgtaGsnOiAn6aCC6YOo5YiG57WE5oiW5aW95Y+L5ZyI5o+Q6YaSJywgJ3poLXR3JzogJ+mggumDqOWIhue1hOaIluWlveWPi+WciOaPkOmGkicsICdlbic6ICdUaXBzIGZvciBXZWlibyBmb3IgZ3JvdXBzIG9yIGZyaWVuZHMnIH0sCiAgJ2xheW91dEhpZGVXZWlib1ZJUEJhY2tncm91bmQnOiB7ICd6aC1jbic6ICfoh6rlrprkuYnljaHniYfog4zmma8nLCAnemgtaGsnOiAn6Ieq6KiC5Y2h54mH6IOM5pmvJywgJ3poLXR3JzogJ+iHquioguWNoeeJh+iDjOaZrycsICdlbic6ICdDdXN0b21pemVkIENhcmQgQmFja2dyb3VuZCcgfSwKICAnbGF5b3V0SGlkZVdlaWJvTGFzdFBpYyc6IHsgJ3poLWNuJzogJ+WbvueJh+WIl+ihqOWwgeW6lScsICd6aC1oayc6ICflnJbniYfmuIXllq7lsIHlupUnLCAnemgtdHcnOiAn5ZyW54mH5riF5Zau5bCB5bqVJywgJ2VuJzogJ0JhY2sgY292ZXIgb2YgcGljdHVyZSBsaXN0JyB9LAogICdsYXlvdXRIaWRlV2VpYm9QaWNUYWcnOiB7ICd6aC1jbic6ICflm77niYfmoIfnrb4nLCAnemgtaGsnOiAn5ZyW54mH5qiZ57GkJywgJ3poLXR3JzogJ+WclueJh+aomeexpCcsICdlbic6ICdUYWdzIGZvciBwaWN0dXJlJyB9LAogICdsYXlvdXRIaWRlV2VpYm9Tb25UaXRsZSc6IHsgJ3poLWNuJzogJ+WQjOa6kOi9rOWPkeWQiOW5tuaPkOekuicsICd6aC1oayc6ICflkIzmupDovazlj5HlkIjlubbmj5DnpLonLCAnemgtdHcnOiAn5ZCM5rqQ6L2s5Y+R5ZCI5bm25o+Q56S6JywgJ2VuJzogJ+WQjOa6kOi9rOWPkeWQiOW5tiAoTWVyZ2VkIGZvcndhcmRzKScgfSwKICAnbGF5b3V0SGlkZVdlaWJvQ2FyZCc6IHsgJ3poLWNuJzogJ+W+ruWNmuWNoeeJhycsICd6aC1oayc6ICflvq7ljZrljaHniYcnLCAnemgtdHcnOiAn5b6u5Y2a5Y2h54mHJywgJ2VuJzogJ1dlaWJvIENhcmRzJyB9LAogICdsYXlvdXRIaWRlV2VpYm9DYXJkRGVzYyc6IHsKICAgICd6aC1jbic6ICflvq7ljZrlhoXlr7nliIbkuqvlhoXlrrnnmoTmkZjopoHmj4/ov7DvvIzlpoLor53popjljaHniYfjgIHplb/lvq7ljZrljaHniYfjgIHliIbkuqvlhoXlrrnljaHniYfnrYnjgILpmpDol4/lkI7mgqjlj6/ku6XlvIDlkK/lt6XlhbfpgInpobnljaHkuK3nmoTigJxbW3Rvb2wud2VpYm90b29sLmNhcmRfYnV0dG9uXV3igJ3lip/og73vvIzngrnlh7vpk77mjqXlnKjlvZPliY3pobXpnaLnm7TmjqXmmL7npLrplb/lvq7ljZrmiJbooqvliIbkuqvnmoTop4bpopHnrYnjgIInLAogIH0sCiAgJ2xheW91dEhpZGVXZWlib0FydGljYWxQYXknOiB7ICd6aC1jbic6ICflvq7ljZrmiZPotY8nLCAnemgtaGsnOiAn5b6u5Y2a5omT6LWPJywgJ3poLXR3JzogJ+W+ruWNmuaJk+i1jycsICdlbic6ICflvq7ljZrmiZPotY8gKFdlaWJvIEFjdGljYWwgUGF5KScgfSwKICAnbGF5b3V0SGlkZVdlaWJvVGFnJzogeyAnemgtY24nOiAn5b6u5Y2a5qCH562+JywgJ3poLWhrJzogJ+W+ruWNmuaomeexpCcsICd6aC10dyc6ICflvq7ljZrmqJnnsaQnLCAnZW4nOiAnVGFncyBmb3IgV2VpYm8nIH0sCiAgJ2xheW91dEhpZGVXZWlib01vdmllVGFnJzogeyAnemgtY24nOiAn5b6u5Y2a55S15b2xL+ivnemimCcsICd6aC1oayc6ICflvq7ljZrpm7vlvbEv6Kmx6aGMJywgJ3poLXR3JzogJ+W+ruWNmumbu+W9sS/oqbHpoYwnLCAnZW4nOiAnV2VpYm8gTW92aWUgLyBUb3BpYycgfSwKICAnbGF5b3V0SGlkZVdlaWJvTW92aWVUYWdEZXNjJzogeyAnemgtY24nOiAn5L2N5LqO5b6u5Y2a5bqV6YOo55qE5qC55o2u5b6u5Y2a5q2j5paH5YaF5a6555qE5YWz6ZSu5a2X6Ieq5Yqo55Sf5oiQ55qE6K+d6aKY44CB55S15b2x562J55qE6ZO+5o6l44CCJyB9LAogICdsYXlvdXRIaWRlV2VpYm9Tb3VyY2UnOiB7ICd6aC1jbic6ICfmnaXmupAnLCAnemgtaGsnOiAn5L6G5rqQJywgJ3poLXR3JzogJ+S+hua6kCcsICdlbic6ICdTb3VyY2UnIH0sCiAgJ2xheW91dEhpZGVXZWlib1BvcCc6IHsgJ3poLWNuJzogJ+mYheivu+aVsOWSjOaOqOW5vycsICd6aC1oayc6ICfplrHoroDmlbjlkozmjqjlu6MnLCAnemgtdHcnOiAn6Zax6K6A5pW45ZKM5o6o5bujJywgJ2VuJzogJ1JlYWRpbmcgQ291bnQgJmFtcDsgUHJvbW90ZScgfSwKICAnbGF5b3V0SGlkZVdlaWJvTGlrZSc6IHsgJ3poLWNuJzogJ+i1niAtIOW+ruWNmicsICd6aC1oayc6ICforpogLSDlvq7ljZonLCAnemgtdHcnOiAn6K6aIC0g5b6u5Y2aJywgJ2VuJzogJ0xpa2UgLSBXZWlibycgfSwKICAnbGF5b3V0SGlkZVdlaWJvTGlrZUNvbW1lbnQnOiB7ICd6aC1jbic6ICfotZ4gLSDor4TorronLCAnemgtaGsnOiAn6K6aIC0g6KmV6KuWJywgJ3poLXR3JzogJ+iumiAtIOipleirlicsICdlbic6ICdMaWtlIC0gQ29tbWVudCcgfSwKICAnbGF5b3V0SGlkZVdlaWJvTGlrZVBvcHVwJzogeyAnemgtY24nOiAn6LWe55qE5oCB5bqm6YCJ5oupJywgJ3poLWhrJzogJ+i0iueahOaFi+W6pumBuOaThycsICd6aC10dyc6ICfotIrnmoTmhYvluqbpgbjmk4cnLCAnZW4nOiAnQXR0aXR1ZGUgb2YgTGlrZScgfSwKICAnbGF5b3V0SGlkZVdlaWJvRm9yd2FyZCc6IHsgJ3poLWNuJzogJ+i9rOWPkScsICd6aC1oayc6ICfovYnnmbwnLCAnemgtdHcnOiAn6L2J55m8JywgJ2VuJzogJ0ZvcndhcmQnIH0sCiAgJ2xheW91dEhpZGVXZWlib0Zhdm91cml0ZSc6IHsgJ3poLWNuJzogJ+aUtuiXjycsICd6aC1oayc6ICfmlLbol48nLCAnemgtdHcnOiAn5pS26JePJywgJ2VuJzogJ0Zhdm91cml0ZScgfSwKICAnbGF5b3V0SGlkZVdlaWJvUHJvbW90ZU90aGVyJzogeyAnemgtY24nOiAn5biu5LiK5aS05p2hJywgJ3poLWhrJzogJ+W4ruS4iuWktOadoScsICd6aC10dyc6ICfluK7kuIrlpLTmnaEnLCAnZW4nOiAn5biu5LiK5aS05p2hJyB9LAogICdsYXlvdXRIaWRlV2VpYm9SZXBvcnQnOiB7ICd6aC1jbic6ICfkuL7miqUnLCAnemgtaGsnOiAn6IiJ5aCxJywgJ3poLXR3JzogJ+iIieWgsS/mqqLoiIknLCAnZW4nOiAnUmVwb3J0JyB9LAogICdsYXlvdXRIaWRlV2VpYm9Vc2VDYXJkQmFja2dyb3VuZCc6IHsgJ3poLWNuJzogJ+S9v+eUqOatpOWNoeeJh+iDjOaZrycsICd6aC1oayc6ICfkvb/nlKjmraTljaHniYfog4zmma8nLCAnemgtdHcnOiAn5L2/55So5q2k5Y2h54mH6IOM5pmvJywgJ2VuJzogJ+S9v+eUqOatpOWNoeeJh+iDjOaZrycgfSwKICAvLyDkuKrkurrkuLvpobUKICAnbGF5b3V0SGlkZVBlcnNvbic6IHsgJ3poLWNuJzogJ+makOiXj+aooeWdlyAtIOS4quS6uuS4u+mhtScsICd6aC1oayc6ICfpmrHol4/mqKHntYQgLSDlgIvkurrkuLvpoIEnLCAnemgtdHcnOiAn6Zqx6JeP5qih57WEIC0g5YCL5Lq65Li76aCBJywgJ2VuJzogJ0hpZGUgbW9kdWxlcyAtIFBlcnNvbmFsIGhvbWUgcGFnZScgfSwKICAnbGF5b3V0SGlkZVBlcnNvbk1vdmVUaGluZ3MnOiB7ICd6aC1jbic6ICfnp7vliqjpg6jku7bvvIjkvJrlkZjmqKHmnb/vvIknLCAnemgtaGsnOiAn56e75YuV6YOo5Lu277yI5pyD5ZOh5qih5p2/77yJJywgJ3poLXR3JzogJ+enu+WLlemDqOS7tu+8iOacg+WToeaooeadv++8iScsICdlbic6ICdNb3ZpbmcgVGhpbmdzIChWSVAgVGVtcGxhdGUpJyB9LAogICdsYXlvdXRIaWRlUGVyc29uQ292ZXInOiB7ICd6aC1jbic6ICflsIHpnaLlm74nLCAnemgtaGsnOiAn5bCB6Z2i5ZyWJywgJ3poLXR3JzogJ+WwgemdouWclicsICdlbic6ICdDb3ZlciBQaWN0dXJlJyB9LAogICdsYXlvdXRIaWRlUGVyc29uQkdJbWcnOiB7ICd6aC1jbic6ICfog4zmma/lm74nLCAnemgtaGsnOiAn6IOM5pmv5ZyWJywgJ3poLXR3JzogJ+iDjOaZr+WclicsICdlbic6ICdCYWNrZ3JvdW5kIFBpY3R1cmUnIH0sCiAgJ2xheW91dEhpZGVQZXJzb25CYWRnZUljb24nOiB7ICd6aC1jbic6ICfli4vnq6AnLCAnemgtaGsnOiAn5Yuz56ugJywgJ3poLXR3JzogJ+WLs+eroCcsICdlbic6ICdCYWRnZXMnIH0sCiAgJ2xheW91dEhpZGVQZXJzb25WZXJpZnknOiB7ICd6aC1jbic6ICfkuKrkurrotYTmlpnorqTor4EnLCAnemgtaGsnOiAn5YCL5Lq66LOH5paZ6KqN6K2JJywgJ3poLXR3JzogJ+WAi+S6uuizh+aWmeiqjeitiScsICdlbic6ICdQZXJzb24gSW5mbyBWZXJpZmljYXRpb24nIH0sCiAgJ2xheW91dEhpZGVQZXJzb25FZGl0UGVyc29uSW5mbyc6IHsgJ3poLWNuJzogJ+e8lui+keS4quS6uui1hOaWmScsICd6aC1oayc6ICfnvJbovpHkuKrkurrotYTmlpknLCAnemgtdHcnOiAn57yW6L6R5Liq5Lq66LWE5paZJywgJ2VuJzogJ+e8lui+keS4quS6uui1hOaWmSAoRWRpdCBwZXJzb24gaW5mbyknIH0sCiAgJ2xheW91dEhpZGVQZXJzb25TdGF0cyc6IHsgJ3poLWNuJzogJ+WFs+azqC/nsonkuJ0v5b6u5Y2a5pWwJywgJ3poLWhrJzogJ+mXnOazqC/nsonntbIv5b6u5Y2a5pW4JywgJ3poLXR3JzogJ+mXnOazqC/nsonntbIv5b6u5Y2a5pW4JywgJ2VuJzogJ051bWJlcnMgb2YgRm9sbG93aW5nL0ZvbGxvd2Vycy9XZWlibycgfSwKICAnbGF5b3V0SGlkZVBlcnNvbk15RGF0YSc6IHsgJ3poLWNuJzogJ+aIkeeahOW+ruWNmuS6uuawlCcsICd6aC1oayc6ICfmiJHnmoTlvq7ljZrkurrmsJQnLCAnemgtdHcnOiAn5oiR55qE5b6u5Y2a5Lq65rCUJywgJ2VuJzogJ1dlaWJvIFBvcHVsYXJpdHknIH0sCiAgJ2xheW91dEhpZGVQZXJzb25TdWdnZXN0VXNlcic6IHsgJ3poLWNuJzogJ+WPr+iDveaEn+WFtOi2o+eahOS6uicsICd6aC1oayc6ICflj6/og73mhJ/lhbTotqPnmoTkuronLCAnemgtdHcnOiAn5Y+v6IO95oSf5YW06Laj55qE5Lq6Jy8qIGFzIGlzICovLCAnZW4nOiAnU3VnZ2VzdGVkJyB9LAogICdsYXlvdXRIaWRlUGVyc29uR3JvdXAnOiB7ICd6aC1jbic6ICflhazlvIDliIbnu4QnLCAnemgtaGsnOiAn5YWs5byA5YiG57uEJywgJ3poLXR3JzogJ+WFrOW8gOWIhue7hCcvKiBhcyBpcyAqLywgJ2VuJzogJ+WFrOW8gOWIhue7hCAoUHVibGljIEdyb3VwKScgfSwKICAnbGF5b3V0SGlkZVBlcnNvblJlbGF0aW9uJzogeyAnemgtY24nOiAn5b6u5YWz57O7JywgJ3poLWhrJzogJ+W+ruWFs+ezuycsICd6aC10dyc6ICflvq7lhbPns7snLyogYXMgaXMgKi8sICdlbic6ICdXZWlibyByZWxhdGlvbnMnIH0sCiAgJ2xheW91dEhpZGVQZXJzb25BbGJ1bSc6IHsgJ3poLWNuJzogJ+WbvueJhycsICd6aC1oayc6ICfnm7jlhoonLCAnemgtdHcnOiAn55u45YaKJywgJ2VuJzogJ0FsYnVtJyB9LAogICdsYXlvdXRIaWRlUGVyc29uSG90VG9waWMnOiB7ICd6aC1jbic6ICfor53popgnLCAnemgtaGsnOiAn6Kmx6aGMJywgJ3poLXR3JzogJ+ipsemhjCcsICdlbic6ICdUb3BpYycgfSwKICAnbGF5b3V0SGlkZVBlcnNvbkhvdFdlaWJvJzogeyAnemgtY24nOiAn54Ot6Zeo5b6u5Y2aJywgJ3poLWhrJzogJ+eGsemWgOW+ruWNmicsICd6aC10dyc6ICfnhrHploDlvq7ljZonLCAnZW4nOiAnSG90IFdlaWJvJyB9LAogICdsYXlvdXRIaWRlUGVyc29uVXNlckxpc3QnOiB7ICd6aC1jbic6ICfkuI7ku5Yv5aW555u45Ly855qE5Lq6JywgJ3poLWhrJzogJ+iIh+S7li/lpbnnm7jkvLznmoTkuronLCAnemgtdHcnOiAn6IiH5LuWL+WlueebuOS8vOeahOS6uicsICdlbic6ICd3aXRoIEhlL1NoZVNpbWlsYXIgUGVyc29uJyAvKiBhcyBpcyAqLyB9LAogICdsYXlvdXRIaWRlUGVyc29uSG9uZ2Jhbyc6IHsgJ3poLWNuJzogJ+W+ruWNmue6ouWMhScsICd6aC1oayc6ICflvq7ljZrnuqLljIUnLCAnemgtdHcnOiAn5b6u5Y2a57qi5YyFJywgJ2VuJzogJ+W+ruWNmue6ouWMhSAoUmVkIHBhY2spJyB9LAogICdsYXlvdXRIaWRlUGVyc29uV2Vud29Ecic6IHsgJ3poLWNuJzogJ+eIsemXruWMu+eUnycsICd6aC1oayc6ICfniLHpl67ljLvnlJ8nLCAnemgtdHcnOiAn54ix6Zeu5Yy755SfJywgJ2VuJzogJ+eIsemXruWMu+eUnyAoSWFzayBtZWRpY2FsKScgfSwKICAnbGF5b3V0SGlkZVBlcnNvblRpbWVsaW5lJzogeyAnemgtY24nOiAn5pe26Ze06L20JywgJ3poLWhrJzogJ+aZgumWk+i7uCcsICd6aC10dyc6ICfmmYLplpPou7gnLCAnZW4nOiAnVGltZWxpbmUnIH0sCiAgLy8g5Liq5Lq65Li76aG16L655qCP5qih5Z2XCiAgJ2xheW91dEhpZGVQTGVmdCc6IHsgJ3poLWNuJzogJ+makOiXj+aooeWdlyAtIOi+ueagj+WFtuS7licsICd6aC1oayc6ICfpmrHol4/lhbbku5YgLSDpgormrITlhbbku5YnLCAnemgtdHcnOiAn6Zqx6JeP5qih57WEIC0g6YKK5qyE5YW25LuWJywgJ2VuJzogJ0hpZGUgbW9kdWxlcyAtIE90aGVycyBpbiBzaWRlIGNvbHVtbicgfSwKICAnbGF5b3V0SGlkZVBMZWZ0RGVzYyc6IHsKICAgICd6aC1jbic6ICfovrnmoI/pmaTkuIrov7DnmoTkuIDkupvnu5/kuIDnmoTmqKHlnZflpJbvvIzmnInkuIDkupvlj6/ku6Xoh6rlrprkuYnnmoTmqKHlnZfvvIjkuLvopoHmmK/kvIHkuJrorqTor4HnlKjmiLfvvInjgILov5nkupvmqKHlnZfml6Dms5XkuIDkuIDliJfkuL7vvIzkvaDlj6/ku6XlsIbopoHlsY/olL3nmoTmqKHlnZfnmoTmoIfpopjmt7vliqDliLDov5nph4zmnaXlsY/olL3ov5nkupvmqKHlnZfjgIInCiAgfSwKICAnbGF5b3V0SGlkZVBMZWZ0RGV0YWlscyc6IHsgJ3poLWNuJzogJ+makOiXj+S4quS6uuS4u+mhtei+ueagj+S4reS7peS4i+agh+mimOeahOaooeWdlzxiciAvPuaooeWdlycsICd6aC1oayc6ICfpmrHol4/lgIvkurrkuLvpoIHpgormrITkuK3ku6XkuIvmqJnpoYznmoTmqKHntYQ8YnIgLz7mqKHntYQnLCAnemgtdHcnOiAn6Zqx6JeP5YCL5Lq65Li76aCB6YKK5qyE5Lit5Lul5LiL5qiZ6aGM55qE5qih57WEPGJyIC8+5qih57WEJywgJ2VuJzogJ0hpZGUgbW9kdWxlcyBvbiBwZXJzb25hbCBob21lcGFnZSB3aXRoIHRoZXNlIHRpdGxlczxiciAvPk1vZHVsZXMnIH0sCiAgLy8g5raI5oGv6aG16Z2iCiAgJ2xheW91dEhpZGVNZXNzYWdlcyc6IHsgJ3poLWNuJzogJ+makOiXj+aooeWdlyAtIOa2iOaBr+mhtemdoicsICd6aC1oayc6ICfpmrHol4/mqKHntYQgLSDmtojmga/ntrLpoIEnLCAnemgtdHcnOiAn6Zqx6JeP5qih57WEIC0g5raI5oGv57ay6aCBJywgJ2VuJzogJ0hpZGUgbW9kdWxlcyAtIE5ld3MgcGFnZScgfSwKICAnbGF5b3V0SGlkZU1lc3NhZ2VzSGVscCc6IHsgJ3poLWNuJzogJ+S9v+eUqOWwj+W4ruWKqScsICd6aC1oayc6ICfkvb/nlKjlsI/luavliqknLCAnemgtdHcnOiAn5L2/55So5bCP5bmr5YqpJywgJ2VuJzogJ1RpcHMnIH0sCiAgJ2xheW91dEhpZGVNZXNzYWdlc0ZlZWRiYWNrJzogeyAnemgtY24nOiAn5b6u5Y2a5oSP6KeB5Y+N6aaIJywgJ3poLWhrJzogJ+W+ruWNmuaEj+ingeWPjemmiCcsICd6aC10dyc6ICflvq7ljZrmhI/op4Hlj43ppognLyogYXMgaXMgKi8sICdlbic6ICdGZWVkIEJhY2snLyogYXMgaXMgKi8gfSwKICAnbGF5b3V0SGlkZU1lc3NhZ2VzWW91ZGFvJzogeyAnemgtY24nOiAn5a+85Ye65pS26JeP5aS5JywgJ3poLWhrJzogJ+WvvOWHuuaUtuiXj+WkuScsICd6aC10dyc6ICflr7zlh7rmlLbol4/lpLknLCAnZW4nOiAnRXhwb3J0IGZhdm9yaXRlcycgfSwKICAvLyDmnYLpobkKICAnbGF5b3V0SGlkZU90aGVyJzogeyAnemgtY24nOiAn6ZqQ6JeP5qih5Z2XIC0g5p2C6aG5JywgJ3poLWhrJzogJ+maseiXj+aooee1hCAtIOmbnOmghScsICd6aC10dyc6ICfpmrHol4/mqKHntYQgLSDpm5zpoIUnLCAnZW4nOiAnSGlkZSBtb2R1bGVzIC0gT3RoZXJzJyB9LAogICdsYXlvdXRIaWRlT3RoZXJBZHMnOiB7ICd6aC1jbic6ICflub/lkYonLCAnemgtaGsnOiAn5buj5ZGKJywgJ3poLXR3JzogJ+W7o+WRiicsICdlbic6ICdBZHZlcnRpc2VtZW50JyB9LAogICdsYXlvdXRIaWRlT3RoZXJNdXNpYyc6IHsgJ3poLWNuJzogJ+W+rumfs+S5kCcsICd6aC1oayc6ICflvq7pn7PkuZAnLCAnemgtdHcnOiAn5b6u6Z+z5LmQJy8qIGFzIGlzICovLCAnZW4nOiAn5b6u6Z+z5LmQIChXZWlibyBNdXNpYyknIH0sCiAgJ2xheW91dEhpZGVPdGhlclRlbXBsYXRlJzogeyAnemgtY24nOiAn6K6+572u5qih5p2/JywgJ3poLWhrJzogJ+iDjOaZr+ioreWumicsICd6aC10dyc6ICfog4zmma/oqK3lrponLCAnZW4nOiAnVGVtcGxhdGUgU2V0dGluZ3MnIH0sCiAgJ2xheW91dEhpZGVPdGhlckhvbWVUaXAnOiB7ICd6aC1jbic6ICfpobbpg6jmj5DnpLrmqKrluYUnLCAnemgtaGsnOiAn6aCC6YOo5o+Q56S65qmr5bmFJywgJ3poLXR3JzogJ+mggumDqOaPkOekuuapq+W5hScsICdlbic6ICdUb3AgdGlwcyBiYW5uZXInIH0sCiAgJ2xheW91dEhpZGVPdGhlckhvbWVUaXBEZXNjJzogewogICAgJ3poLWNuJzogJ+WHuueOsOWcqOWvvOiIquagj+S4i+aWueWFtuS7luaJgOacieWGheWuueeahOS4iuaWueeahOaoquW5heOAguS4gOiIrOeUqOadpeaOqOiNkOW+ruWNmumHjeimgeeahOaWsOWKn+iDveOAgicsCiAgfSwKICAnbGF5b3V0SGlkZU90aGVyRm9vdGVyJzogeyAnemgtY24nOiAn6aG16Z2i5bqV6YOoJywgJ3poLWhrJzogJ+mggemdouW6lemDqCcsICd6aC10dyc6ICfpoIHpnaLlupXpg6gnLCAnZW4nOiAnRm9vdGVyJyB9LAogICdsYXlvdXRIaWRlT3RoZXJGb290ZXJEZXNjJzogewogICAgJ3poLWNuJzogJ+mhtemdouW6lemDqOeahOWvvOiIqumTvuaOpeOAgicsCiAgfSwKICAnbGF5b3V0SGlkZU90aGVyV2JJbSc6IHsgJ3poLWNuJzogJ+W+ruWNmuahjOmdouaOqOiNkO+8iOWPs+S4i++8iScsICd6aC1oayc6ICflvq7ljZrmoYzpnaLmjqjolqbvvIjlj7PkuIvvvIknLCAnemgtdHcnOiAn5b6u5Y2a5qGM6Z2i5o6o6Jam77yI5Y+z5LiL77yJJywgJ2VuJzogJ+W+ruWNmuahjOmdojIwMTQgKERlc2t0b3AgV2VpYm8pLCBib3R0b20gcmlnaHQnIH0sCiAgJ2xheW91dEhpZGVPdGhlcldiSW1EZXNjJzogewogICAgJ3poLWNuJzogJ+WBtuWwlOWHuueOsOWcqOWPs+S4i+inkueahOaOqOiNkOWuieijheW+ruWNmuahjOmdoueahOaPkOekuuahhuOAgicsCiAgfSwKICAnbGF5b3V0SGlkZU90aGVySU0nOiB7ICd6aC1jbic6ICfnp4Hkv6HogYrlpKnvvIjlj7PkuIvvvIknLCAnemgtaGsnOiAn56eB5L+h6IGK5aSp77yI5Y+z5LiL77yJJywgJ3poLXR3JzogJ+engeS/oeiBiuWkqe+8iOWPs+S4i++8iScvKiBhcyBpcyAqLywgJ2VuJzogJ0NoYXQgKGJvdHRvbSByaWdodCknIH0sCiAgJ2xheW91dEhpZGVPdGhlcklNRGVzYyc6IHsKICAgICd6aC1jbic6ICfpmpDol4/lkI7mgqjov5jlj6/ku6XlnKjnp4Hkv6HpobXpnaLmlLblj5Hnp4Hkv6HvvJrpvKDmoIfmjIflkJHlj7PkuIrop5Lmtojmga/lm77moIflnKjkuIvmi4noj5zljZXkuK3pgInmi6nigJznp4Hkv6HigJ3ljbPlj6/miZPlvIDnp4Hkv6HpobXpnaLjgIInLAogIH0sCiAgJ2xheW91dEhpZGVPdGhlcklNTmV3cyc6IHsgJ3poLWNuJzogJ+eDreeCueaPkOmGku+8iOWPs+S4i++8iScsICd6aC1oayc6ICfng63ngrnmj5DphpLvvIjlj7PkuIvvvIknLCAnemgtdHcnOiAn54Ot54K55o+Q6YaS77yI5Y+z5LiL77yJJywgJ2VuJzogJ+eDreeCueaPkOmGkiAoTmV3cywgYm90dG9tIHJpZ2h0KScgfSwKICAnbGF5b3V0SGlkZU90aGVyVGlwJzogeyAnemgtY24nOiAn5Yqf6IO95o+Q56S65qGGJywgJ3poLWhrJzogJ+WKn+iDveaPkOekuuahhicsICd6aC10dyc6ICflip/og73mj5DnpLrmoYYnLCAnZW4nOiAnRnVuY3Rpb24gVGlwcycgfSwKICAnbGF5b3V0SGlkZU90aGVyVGlwRGVzYyc6IHsKICAgICd6aC1jbic6ICflgbblsJTkvJrlh7rnjrDnmoTmlrDlip/og73mjqjojZDnmoTlvLnmoYbvvIzlpoLmnpzpmpDol4/kuoblr7nlupTlip/og73nmoTnlYzpnaLlj6/og73lvLnmoYbkvJrmmL7npLrliLDlpYfmgKrnmoTlnLDmlrnjgIInLAogIH0sCiAgJ2xheW91dEhpZGVPdGhlclJlbGF0ZWRXQic6IHsgJ3poLWNuJzogJ+ebuOWFs+W+ruWNmuaOqOiNkCcsICd6aC1oayc6ICfnm7jlhbPlvq7ljZrmjqjojZAnLCAnemgtdHcnOiAn55u45YWz5b6u5Y2a5o6o6I2QJywgJ2VuJzogJ+ebuOWFs+W+ruWNmuaOqOiNkCAoUmVsYXRlZCBXZWlibyknIH0sCiAgJ2xheW91dEhpZGVPdGhlclJlbGF0ZWRXQkRlc2MnOiB7CiAgICAnemgtY24nOiAn5Zyo5Y2V5p2h5b6u5Y2a6aG16Z2i5Y+v5Lul55yL5Yiw55qE55u45YWz5b6u5Y2a5o6o6I2QJywKICB9LAogICdsYXlvdXRIaWRlT3RoZXJSZWxhdGVkVmlkZW8nOiB7ICd6aC1jbic6ICfnm7jlhbPop4bpopHmjqjojZAnLCAnemgtaGsnOiAn55u46Zec6KaW6aC75o6o6JamJywgJ3poLXR3JzogJ+ebuOmXnOimlumgu+aOqOiWpicsICdlbic6ICdSZWxhdGVkIFZpZGVvcycgfSwKICAnbGF5b3V0SGlkZU90aGVyUmVsYXRlZEFydGljYWwnOiB7ICd6aC1jbic6ICflpLTmnaHmlofnq6DpobXmjqjojZDpmIXor7snLCAnemgtaGsnOiAn6aCt5qKd5paH56ug6aCB5o6o6Jam6Zax6K6AJywgJ3poLXR3JzogJ+mgreaineaWh+eroOmggeaOqOiWpumWseiugCcsICdlbic6ICfmjqjojZDpmIXor7sgKFN1Z2dlc3RlZCBBcnRpY2FsKScgfSwKICAnbGF5b3V0SGlkZU90aGVyU2VuZFdlaWJvJzogeyAnemgtY24nOiAn6aaW6aG15aSW55qE5b6u5Y2a5Y+R5biD5qGGJywgJ3poLWhrJzogJ+mmlumggeWklueahOW+ruWNmueZvOS9iOahhicsICd6aC10dyc6ICfpppbpoIHlpJbnmoTlvq7ljZrnmbzkvYjmoYYnLCAnZW4nOiAnQWxsIG90aGVyIFdlaWJvIHB1Ymxpc2hlcnMnIH0sCiAgJ2xheW91dEhpZGVPdGhlclNlbmRXZWlib0Rlc2MnOiB7CiAgICAnemgtY24nOiAn6Zmk5LqG6aaW6aG155qE5b6u5Y2a5Y+R5biD5qGG77yM5Y+z5LiK6KeS5oyJ6ZKu5by55Ye655qE5b+r6YCf5Y+R5biD5qGG5aSW77yb5YW25LuW55qE5ZCE56eN5Y+R5biD5qGG44CC5aaC5b6u5Y2a5paH56ug5LiL5pa56L2s5Y+R55So55qE5Y+R5biD5qGG562J44CCJywKICB9LAogIC8vIOW3peWFtwogICd0b29sRmlsdGVyR3JvdXBUaXRsZSc6IHsgJ3poLWNuJzogJ+WKn+iDveaUuemAoCcsICd6aC1oayc6ICflip/og73mlLnpgKAnLCAnemgtdHcnOiAn5Yqf6IO95pS56YCgJywgJ2VuJzogJ0Z1bmN0aW9ucycgfSwKICAvLyDovrnmoI8KICAnc2lkZUNvbHVtblRvb2xzVGl0bGUnOiB7ICd6aC1jbic6ICfovrnmoI8nLCAnemgtaGsnOiAn6YKK5qyEJywgJ3poLXR3JzogJ+mCiuashCcsICdlbic6ICdTaWRlIENvbHVtbicgfSwKICAnc2hvd0FsbEdyb3VwRGVzYyc6IHsgJ3poLWNuJzogJ+WxleW8gOW3puagj+WIhue7hCcsICd6aC1oayc6ICflsZXplovlt6bmrITliIbntYQnLCAnemgtdHcnOiAn5bGV6ZaL5bem5qyE5YiG57WEJywgJ2VuJzogJ1VuZm9sZCBncm91cHMgaW4gbGVmdCBjb2x1bW4nIH0sCiAgJ3Nob3dBbGxNc2dOYXYnOiB7CiAgICAnemgtY24nOiAn5Zyo6aaW6aG15bem5qCP5pi+56S65raI5oGv5YiG57uE77yM5YyF5ZCr5Lul5LiL5b+r5o236ZO+5o6le3s8aT59fXx8e3s8YXRtZT59fXt7bGVmdE5hdkF0TWV9fXx7ezxjbXQ+fX17e2xlZnROYXZDbXR9fXx7ezxsaWtlPn19e3tsZWZ0TmF2TGlrZX19fHt7PGRtPn19e3tsZWZ0TmF2RE19fXx7ezxtc2dib3g+fX17e2xlZnROYXZNc2dCb3h9fXx7ezxncm91cD59fXt7bGVmdE5hdkdyb3VwfX18e3s8ZG1zdWI+fX17e2xlZnROYXZETVN1Yn19JywKICAgICd6aC1oayc6ICflnKjpppbpoIHlt6bmrITpoa/npLrmtojmga/liIbntYTvvIzljIXlkKvku6XkuIvlv6vmjbfpgKPntZB7ezxpPn19fHx7ezxhdG1lPn19e3tsZWZ0TmF2QXRNZX19fHt7PGNtdD59fXt7bGVmdE5hdkNtdH19fHt7PGxpa2U+fX17e2xlZnROYXZMaWtlfX18e3s8ZG0+fX17e2xlZnROYXZETX19fHt7PG1zZ2JveD59fXt7bGVmdE5hdk1zZ0JveH19fHt7PGdyb3VwPn19e3tsZWZ0TmF2R3JvdXB9fXx7ezxkbXN1Yj59fXt7bGVmdE5hdkRNU3VifX0nLAogICAgJ3poLXR3JzogJ+WcqOmmlumggeW3puashOmhr+ekuua2iOaBr+WIhue1hO+8jOWMheWQq+S7peS4i+W/q+aNt+mAo+e1kHt7PGk+fX18fHt7PGF0bWU+fX17e2xlZnROYXZBdE1lfX18e3s8Y210Pn19e3tsZWZ0TmF2Q210fX18e3s8bGlrZT59fXt7bGVmdE5hdkxpa2V9fXx7ezxkbT59fXt7bGVmdE5hdkRNfX18e3s8bXNnYm94Pn19e3tsZWZ0TmF2TXNnQm94fX18e3s8Z3JvdXA+fX17e2xlZnROYXZHcm91cH19fHt7PGRtc3ViPn19e3tsZWZ0TmF2RE1TdWJ9fScsCiAgICAnZW4nOiAnU2hvdyBuZXdzIGluIGxlZnQgY29sdW1uIG9mIGhvbWUgcGFnZSB3aXRoIGZvbGxvd2luZyBpdGVtc3t7PGk+fX18fHt7PGF0bWU+fX17e2xlZnROYXZBdE1lfX18e3s8Y210Pn19e3tsZWZ0TmF2Q210fX18e3s8bGlrZT59fXt7bGVmdE5hdkxpa2V9fXx8e3s8ZG0+fX17e2xlZnROYXZETX19fHt7PG1zZ2JveD59fXt7bGVmdE5hdk1zZ0JveH19fHt7PGdyb3VwPn19e3tsZWZ0TmF2R3JvdXB9fXx7ezxkbXN1Yj59fXt7bGVmdE5hdkRNU3VifX0nCiAgfSwKICAnc2hvd0FsbE1zZ05hdkRlc2MnOiB7CiAgICAnemgtY24nOiAn5bGP5bmV5YiG6L6o546H6L+H5bCP5pe26K+35Yu/6YCJ5oup6K+l6aG577yM5ZCm5YiZ5Y+v6IO95Lya5pi+56S65LiN5a6M5YWo44CCJwogIH0sCiAgJ2xlZnROYXZNc2cnOiB7ICd6aC1jbic6ICfmtojmga8nLCAnemgtaGsnOiAn5raI5oGvJywgJ3poLXR3JzogJ+a2iOaBrycsICdlbic6ICdOZXdzJyB9LAogICdsZWZ0TmF2QXRNZSc6IHsgJ3poLWNuJzogJ0DmiJHnmoQnLCAnemgtaGsnOiAnQOaIkeeahCcsICd6aC10dyc6ICdA5oiR55qEJywgJ2VuJzogJ0BNeScvKiBhcyBpcyAqLyB9LAogICdsZWZ0TmF2Q210JzogeyAnemgtY24nOiAn6K+E6K66JywgJ3poLWhrJzogJ+ipleirlicsICd6aC10dyc6ICfoqZXoq5YnLCAnZW4nOiAnQ29tbWVudCcgfSwKICAnbGVmdE5hdkxpa2UnOiB7ICd6aC1jbic6ICfotZ4nLCAnemgtaGsnOiAn6K6aJywgJ3poLXR3JzogJ+iumicsICdlbic6ICdMaWtlJyB9LAogICdsZWZ0TmF2RE0nOiB7ICd6aC1jbic6ICfnp4Hkv6EnLCAnemgtaGsnOiAn56eB5L+hJywgJ3poLXR3JzogJ+engeS/oScsICdlbic6ICdNZXNzYWdlJyB9LAogICdsZWZ0TmF2TXNnQm94JzogeyAnemgtY24nOiAn5pyq5YWz5rOo5Lq656eB5L+hJywgJ3poLWhrJzogJ+acqumXnOazqOS6uuengeS/oScsICd6aC10dyc6ICfmnKrpl5zms6jkurrnp4Hkv6EnLCAnZW4nOiAnTWVzc2FnZXMgZnJvbSB0aG9zZSB5b3UgZG9uXCd0IGZvbGxvdycgfSwKICAnbGVmdE5hdkdyb3VwJzogeyAnemgtY24nOiAn576k6YCa55+lJywgJ3poLWhrJzogJ+e+pOmAmuefpScsICd6aC10dyc6ICfnvqTpgJrnn6UnLCAnZW4nOiAn576k6YCa55+lJy8qIGFzIGlzICovIH0sCiAgJ2xlZnROYXZETVN1Yic6IHsgJ3poLWNuJzogJ+iuoumYhea2iOaBrycsICd6aC1oayc6ICforqLpmIXmtojmga8nLCAnemgtdHcnOiAn6K6i6ZiF5raI5oGvJywgJ2VuJzogJ+iuoumYhea2iOaBrycvKiBhcyBpcyAqLyB9LAogICdtZXJnZUxlZnRSaWdodCc6IHsgJ3poLWNuJzogJ+WQiOW5tuW3puWPs+i+ueagj3zliLB7ezxzaWRlPn19e3s8aT59fScsICd6aC1oayc6ICflkIjkvbXlt6blj7PpgormrIR85Yiwe3s8c2lkZT59fXt7PGk+fX0nLCAnemgtdHcnOiAn5ZCI5L215bem5Y+z6YKK5qyEfOWIsHt7PHNpZGU+fX17ezxpPn19JywgJ2VuJzogJ01lcmdlIGxlZnQgJmFtcDsgcmlnaHQgY29sdW1uIHwgdG8ge3s8c2lkZT59fXt7PGk+fX0nIH0sCiAgJ21lcmdlTGVmdFJpZ2h0TGVmdCc6IHsgJ3poLWNuJzogJ+W3puS+pycsICd6aC1oayc6ICflt6blgbQnLCAnemgtdHcnOiAn5bem5YG0JywgJ2VuJzogJ2xlZnQgc2lkZScgfSwKICAnbWVyZ2VMZWZ0UmlnaHRSaWdodCc6IHsgJ3poLWNuJzogJ+WPs+S+pycsICd6aC1oayc6ICflj7PlgbQnLCAnemgtdHcnOiAn5Y+z5YG0JywgJ2VuJzogJ3JpZ2h0IHNpZGUnIH0sCiAgJ21lcmdlTGVmdFJpZ2h0RGVzYyc6IHsKICAgICd6aC1jbic6ICflvIDlkK/mraTpgInpobnlkI7vvIzlt6bmoI/liIfmjaLpobXpnaLlj6/og73kvJrlr7zoh7Tlvq7pn7PkuZDmkq3mlL7kuK3mlq3jgIInCiAgfSwKICAnY2hvc2VTaWRlJzogeyAnemgtY24nOiAn57uf5LiA5Liq5Lq65Li76aG144CB6K+d6aKY44CB5Y2V5p2h5b6u5Y2a562J6aG16Z2i5L6n5qCPfOWIsHt7PHNpZGU+fX0nLCAnemgtaGsnOiAn57Wx5LiA5YCL5Lq65Li76aCB44CB6Kmx6aGM44CB5Zau5qKd5b6u5Y2a562J6aCB6Z2i5YG05qyEfOWIsHt7PHNpZGU+fX0nLCAnemgtdHcnOiAn57Wx5LiA5YCL5Lq65Li76aCB44CB6Kmx6aGM44CB5Zau5qKd5b6u5Y2a562J6aCB6Z2i5YG05qyEfOWIsHt7PHNpZGU+fX0nLCAnZW4nOiAnUmVsb2NhdGUgc2lkZSBiYXIgZm9yIHBhZ2VzIG9mIHVzZXIsIHRvcGljLCBhbmQsIHNpbmdsZSBXZWlibyB8IHRvIHt7PHNpZGU+fX0nIH0sCiAgJ2Nob3NlU2lkZUxlZnQnOiB7ICd6aC1jbic6ICflt6bkvqcnLCAnemgtaGsnOiAn5bem5YG0JywgJ3poLXR3JzogJ+W3puWBtCcsICdlbic6ICdsZWZ0IHNpZGUnIH0sCiAgJ2Nob3NlU2lkZVJpZ2h0JzogeyAnemgtY24nOiAn5Y+z5L6nJywgJ3poLWhrJzogJ+WPs+WBtCcsICd6aC10dyc6ICflj7PlgbQnLCAnZW4nOiAncmlnaHQgc2lkZScgfSwKICAnZmlsdGVSaWdodFRvcGljJzogeyAnemgtY24nOiAn5bqU55So5b6u5Y2a6L+H5ruk6buR5ZCN5Y2V5Yiw5Y+z5qCP54Ot6Zeo6K+d6aKYJywgJ3poLWhrJzogJ+aHieeUqOW+ruWNmuevqemBuOm7keWQjeWWruWIsOWPs+ashOeGsemWgOipsemhjCcsICd6aC10dyc6ICfmh4nnlKjlvq7ljZrnr6npgbjpu5HlkI3llq7liLDlj7PmrITnhrHploDoqbHpoYwnLCAnZW4nOiAnQXBwbHkgYmxhY2tsaXN0IGZpbHRlcnMgdG8gSG90IFRvcGljIGluIHJpZ2h0IGNvbHVtbicgfSwKICAnZmlsdGVSaWdodFRvcGljQ291bnQnOiB7ICd6aC1jbic6ICfng63pl6jor53popjliJfooajpmpDol4986ZiF6K+75pWw5bCR5LqOe3s8bnVtYmVyPn195LiH55qE6K+d6aKYJywgJ3poLWhrJzogJ+eGsemWgOipsemhjOa4heWWrumaseiXj3zplrHoroDmlbjlsJHmlrx7ezxudW1iZXI+fX3okKznmoToqbHpoYwnLCAnemgtdHcnOiAn54ax6ZaA6Kmx6aGM5riF5Zau6Zqx6JePfOmWseiugOaVuOWwkeaWvHt7PG51bWJlcj59feiQrOeahOipsemhjCcsICdlbic6ICdIaWRlIGhvdCB0b3BpY3Mgd2l0aCB8IGxlc3MgdGhhbiB7ezxudW1iZXI+fX3kuIcgcmVhZGluZ3MnIH0sCiAgJ2FkZFJpZ2h0VXNlckxpc3QnOiB7ICd6aC1jbic6ICflnKjpppbpobXlj7PovrnmoI/mmL7npLrmlLbol4/luJDlj7fliJfooah7ezxpPn19JywgJ3poLWhrJzogJ+WcqOmmlumggeWPs+mCiuashOmhr+ekuuaUtuiXj+W4s+iZn+a4heWWrnt7PGk+fX0nLCAnemgtdHcnOiAn5Zyo6aaW6aCB5Y+z6YKK5qyE6aGv56S65pS26JeP5biz6Jmf5riF5Zaue3s8aT59fScsICdlbic6ICdBZGQgbGlua3Mgb2YgYWNjb3VudHMgdG8gcmlnaHQgY29sdW1ue3s8aT59fScgfSwKICAnYWRkUmlnaHRVc2VyTGlzdERlc2MnOiB7CiAgICAnemgtY24nOiAn5Zyo6aaW6aG15Y+z6L655qCP5re75Yqg5LiA5Liq4oCc5pS26JeP5biQ5Y+34oCd55qE5YiX6KGo77yM6YeM6Z2i5YiX5Ye65oyH5ZCR6L+Z5Lqb55So5oi355qE5Liq5Lq65Li76aG155qE6ZO+5o6l77yM5pa55L6/5oKo5b+r6YCf5omT5byA5a+55bqU55So5oi355qE5Liq5Lq65Li76aG177yM5p+l55yL5LuW5pyA6L+R55qE5b6u5Y2a44CCJwogIH0sCiAgJ2FkZFJpZ2h0VXNlckxpc3RUb29NYW55VGl0bGUnOiB7ICd6aC1jbic6ICfmlLbol4/luJDlj7fov4flpJonLCAnemgtaGsnOiAn5pS26JeP5biz6Jmf6YGO5aSaJywgJ3poLXR3JzogJ+aUtuiXj+W4s+iZn+mBjuWkmicsICdlbic6ICdUb28gTWFueSBGYXZlIFBlb3BsZScgfSwKICAnYWRkUmlnaHRVc2VyTGlzdFRvb01hbnknOiB7CiAgICAnemgtY24nOiAn5oKo5re75Yqg5LqG6L+H5aSa55qE5pS26JeP5biQ5Y+377yM5Li65LqG6YG/5YWN57uZ5pyN5Yqh5Zmo6YCg5oiQ6L+H5aSn55qE5Y6L5Yqb77yM6Ieq5Yqo5qOA5p+l6aaW6aG15piv5ZCm5pyJ6YGX5ryP55qE5b6u5Y2a55qE5Yqf6IO95bCG5LuF5a+56K+l5YiX6KGo5Lit55qE5YmNIDUwIOS9jeW4kOWPt+eUn+aViOOAgicsCiAgICAnemgtaGsnOiAn5oKo5re75Yqg5LqG6YGO5aSa55qE5pS26JeP5biz6Jmf77yM54K65LqG6YG/5YWN57Wm5Ly65pyN5Zmo6YCg5oiQ6YGO5aSn55qE5aOT5Yqb77yM6Ieq5YuV5qqi5p+l6aaW6aCB5piv5ZCm5pyJ6YG65ryP55qE5b6u5Y2a55qE5Yqf6IO95bCH5YOF5bCN6Kmy5riF5Zau5Lit55qE5YmNIDUwIOS9jeW4s+iZn+eUn+aViOOAgicsCiAgICAnemgtdHcnOiAn5oKo5re75Yqg5LqG6YGO5aSa55qE5pS26JeP5biz6Jmf77yM54K65LqG6YG/5YWN57Wm5Ly65pyN5Zmo6YCg5oiQ6YGO5aSn55qE5aOT5Yqb77yM6Ieq5YuV5qqi5p+l6aaW6aCB5piv5ZCm5pyJ6YG65ryP55qE5b6u5Y2a55qE5Yqf6IO95bCH5YOF5bCN6Kmy5riF5Zau5Lit55qE5YmNIDUwIOS9jeW4s+iZn+eUn+aViOOAgicsCiAgICAnZW4nOiAnVG9vIG1hbnkgZmF2ZSBwZW9wbGU6IFRoZSBmdW5jdGlvbiBmb3IgY2hlY2tpbmcgaWYgdGhlcmUgYXJlIGFueSBXZWlibyBub3Qgc2hvd24gb24gaG9tZSBwYWdlIHdpbGwgb25seSBhcHBseSB0byBmaXJzdCA1MCBhY2NvdW50cyB0byBhdm9pZCB0b28gbWFueSBuZXR3b3JrIGFjY2Vzcy4nCiAgfSwKICAnYWRkUmlnaHRVc2VyTGlzdE5vdGljZSc6IHsgJ3poLWNuJzogJ+iHquWKqOajgOafpeaCqOaYr+WQpumBl+a8j+S6huaUtuiXj+eUqOaIt+eahOW+ruWNmnt7PGk+fX0nLCAnemgtaGsnOiAn6Ieq5YuV5qqi5p+l5oKo5piv5ZCm6YG65ryP5LqG5pS26JeP55So5oi255qE5b6u5Y2ae3s8aT59fScsICd6aC10dyc6ICfoh6rli5XmqqLmn6XmgqjmmK/lkKbpgbrmvI/kuobmlLbol4/nlKjmiLbnmoTlvq7ljZp7ezxpPn19JywgJ2VuJzogJ0NoZWNrIGlmIGFsbCBXZWlibyBmcm9tIGZhdmUgcGVvcGxlIHlvdSBoYXZlIHJlYWQge3s8aT59fScgfSwKICAnYWRkUmlnaHRVc2VyTGlzdE5vdGljZURlc2MnOiB7CiAgICAnemgtY24nOiAn5aaC5p6c5oKo5LiN5oOz6ZSZ6L+H5p+Q5Liq5Lq655qE5b6u5Y2a77yM6YKj5LmI5bCx5bCG5LuW5Yqg5Yiw5pS26JeP5biQ5Y+355qE5YiX6KGo5Lit44CC6ISa5pys5Lya5Zyo5oKo5omT5byA6aaW6aG15pe26Ieq5Yqo5omT5byA6L+Z5Lqb5Lq655qE5Liq5Lq65Li76aG177yM5qOA5p+l5LuW5Lus55qE5b6u5Y2a5piv5ZCm5oKo6YO955yL5Yiw6L+H44CC5LiA5pem5Y+R546w5LqG5ryP5o6J55qE5b6u5Y2a77yM6ISa5pys5Lya5Zyo5biQ5Y+35peB6L6555So5bCP57qi54K55qCH6K6w44CCJwogIH0sCiAgJ2FkZFJpZ2h0VXNlckxpc3RDb25maWdUaXRsZSc6IHsgJ3poLWNuJzogJ+aUtuiXj+W4kOWPt+iuvue9riAtIFlldCBBbm90aGVyIFdlaWJvIEZpbHRlcicsICd6aC1oayc6ICfmlLbol4/luLPomZ/oqK3lrpogLSBZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXInLCAnemgtdHcnOiAn5pS26JeP5biz6Jmf6Kit5a6aIC0gWWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyJywgJ2VuJzogJ0ZhdmUgUGVvcGxlIFNldHRpbmcgLSBZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXInIH0sCiAgJ3JpZ2h0VXNlckxpc3RUaXRsZSc6IHsgJ3poLWNuJzogJ+aUtuiXj+W4kOWPtycsICd6aC1oayc6ICfmlLbol4/luLPomZ8nLCAnemgtdHcnOiAn5pS26JeP5biz6JmfJywgJ2VuJzogJ0ZhdmUgUGVvcGxlJyB9LAogIC8vIOa1ruWKqOWFg+e0oAogICdmaXhlZEl0ZW1zVGl0bGUnOiB7ICd6aC1jbic6ICfmta7liqjlhYPntKAnLCAnemgtaGsnOiAn5rWu5YuV5YWD57SgJywgJ3poLXR3JzogJ+a1ruWLleWFg+e0oCcsICdlbic6ICdGbG9hdGluZyBJdGVtcycgfSwKICAnZmxvYXROYXYnOiB7ICd6aC1jbic6ICfoh6rliqjpmpDol4/lr7zoiKrmoI8nLCAnemgtaGsnOiAn6Ieq5YuV6Zqx6JeP5bCO6Ka95YiXJywgJ3poLXR3JzogJ+iHquWLlemaseiXj+WwjuimveWIlycsICdlbic6ICdBdXRvIGhpZGUgbmF2IGJhcicgfSwKICAnZml4ZWRMZWZ0JzogeyAnemgtY24nOiAn5YWB6K646aaW6aG15bem6L655qCP6ZqP6aG16Z2i5rua5Yqo5aeL57uI5pi+56S6JywgJ3poLWhrJzogJ+WFgeiosemmlumggeW3pumCiuashOmaqOmggemdoua7vuWLleWni+e1gumhr+ekuicsICd6aC10dyc6ICflhYHoqLHpppbpoIHlt6bpgormrITpmqjpoIHpnaLmu77li5Xlp4vntYLpoa/npLonLCAnZW4nOiAnRmxvYXRpbmcgbGVmdCBjb2x1bW4nIH0sCiAgJ2ZpeGVkUmlnaHQnOiB7ICd6aC1jbic6ICflhYHorrjpppbpobXlj7PovrnmoI/pmo/pobXpnaLmu5rliqjlp4vnu4jmmL7npLp7ezxpPn19JywgJ3poLWhrJzogJ+WFgeiosemmlumggeWPs+mCiuashOmaqOmggemdoua7vuWLleWni+e1gumhr+ekunt7PGk+fX0nLCAnemgtdHcnOiAn5YWB6Kix6aaW6aCB5Y+z6YKK5qyE6Zqo6aCB6Z2i5ru+5YuV5aeL57WC6aGv56S6e3s8aT59fScsICdlbic6ICdGbG9hdGluZyByaWdodCBjb2x1bW57ezxpPn19JyB9LAogICdmaXhlZFJpZ2h0RGVzYyc6IHsKICAgICd6aC1jbic6ICflpoLmnpzlkIzml7blkK/nlKjkuobigJxbW3Rvb2wuc2lkZWJhci5tZXJnZV9sZWZ0X3JpZ2h0XV3igJ3lkozigJxbW3Rvb2wuZml4ZWQuZml4ZWRfbGVmdF1d4oCd77yM5YiZ6K+l6YCJ6aG55bCG5LiN55Sf5pWI44CCJywKICB9LAogICdmaXhlZE5ld0ZlZWRUaXAnOiB7ICd6aC1jbic6ICflhYHorrjmlrDlvq7ljZrmj5DnpLrpmo/pobXpnaLmu5rliqjlp4vnu4jmmL7npLonLCAnemgtaGsnOiAn5YWB6Kix5paw5b6u5Y2a5o+Q56S66Zqo6aCB6Z2i5ru+5YuV5aeL57WC6aGv56S6JywgJ3poLXR3JzogJ+WFgeioseaWsOW+ruWNmuaPkOekuumaqOmggemdoua7vuWLleWni+e1gumhr+ekuicsICdlbic6ICdGbG9hdGluZyBuZXcgZmVlZHMgdGlwJyB9LAogICdmaXhlZE90aGVycyc6IHsgJ3poLWNuJzogJ+WFgeiuuOWFtuS7luWFg+e0oOmaj+mhtemdoua7muWKqOWni+e7iOaYvuekuicsICd6aC1oayc6ICflhYHoqLHlhbbku5blhYPntKDpmqjpoIHpnaLmu77li5Xlp4vntYLpoa/npLonLCAnemgtdHcnOiAn5YWB6Kix5YW25LuW5YWD57Sg6Zqo6aCB6Z2i5ru+5YuV5aeL57WC6aGv56S6JywgJ2VuJzogJ090aGVyIGZsb2F0aW5nIGl0ZW1zJyB9LAogIC8vIOW+ruWNmgogICd3ZWlib1Rvb2xzVGl0bGUnOiB7ICd6aC1jbic6ICflvq7ljZonLCAnemgtaGsnOiAn5b6u5Y2aJywgJ3poLXR3JzogJ+W+ruWNmicsICdlbic6ICdXZWlibycgfSwKICAndW5mb2xkTG9uZ1dlaWJvJzogeyAnemgtY24nOiAn6Ieq5Yqo5bGV5byAfOS4jei2hei/h3t7PGNvdW50Pn195a2X55qE5b6u5Y2afO+8iOavj+S4quaNouihjOespuiuoXt7PGJyPn195a2X77yJJywgJ3poLWhrJzogJ+iHquWLleWxlemWi3zkuI3otoXpgY57ezxjb3VudD59feWAi+Wtl+eahOW+ruWNmnzvvIjmr4/lgIvmj5vooYznrKboqIh7ezxicj59feWtl++8iScsICd6aC10dyc6ICfoh6rli5XlsZXplot85LiN6LaF6YGOe3s8Y291bnQ+fX3lgIvlrZfnmoTlvq7ljZp877yI5q+P5YCL5o+b6KGM56ym6KiIe3s8YnI+fX3lrZfvvIknLCAnZW4nOiAnQXV0b21hdGljYWxseSB1bmZvbGQgd2VpYm8gfCB3aXRoaW4ge3s8Y291bnQ+fX0gY2hhcmFjdGVycyB8fCAoY291bnQgZWFjaCBsaW5lIGJyZWFrIGFzIHt7PGJyPn19IGNoYXJhY3RlcnMpJyB9LAogICd1bmZvbGRXZWlib0xlbmd0aCc6IHsgJ3poLWNuJzogJ++8iOe6pnt7bGVuZ3RofX3lrZfvvIknLCAnemgtaGsnOiAn77yI57SEe3tsZW5ndGh9feWtl++8iScsICd6aC10dyc6ICfvvIjntIR7e2xlbmd0aH195a2X77yJJywgJ2VuJzogJyhhYm91dCB7e2xlbmd0aH19IGNoYXJhY3RvcnMpJyB9LAogICdjbGVhckRlZlRvcGljRGVzYyc6IHsgJ3poLWNuJzogJ+a4hemZpOWPkeW4g+ahhuS4reeahOm7mOiupOivnemimCcsICd6aC1oayc6ICfmuIXpmaTnmbzluIPmoYbkuK3nmoTpoJDoqK3oqbHpoYwnLCAnemgtdHcnOiAn5riF6Zmk55m85biD5qGG5Lit55qE6aCQ6Kit6Kmx6aGMJywgJ2VuJzogJ1JlbW92ZSBkZWZhdWx0IHRvcGljIGluIFB1Ymxpc2hlcicgfSwKICAnZGlzYWJsZU5vdGlmaWNhdGlvbic6IHsgJ3poLWNuJzogJ+emgeeUqOW+ruWNmueahOahjOmdouaPkOekuiB7ezxpPn19JywgJ3poLWhrJzogJ+mYu+atouW+ruWNmueahOahjOmdouaPkOekuiB7ezxpPn19JywgJ3poLXR3JzogJ+mYu+atouW+ruWNmueahOahjOmdouaPkOekuiB7ezxpPn19JywgJ2VuJzogJ0Rpc2FibGUgZGVza3RvcCBub3RpZmljYXRpb24gZnJvbSBXZWlibyB7ezxpPn19JyB9LAogICdkaXNhYmxlTm90aWZpY2F0aW9uRGVzYyc6IHsKICAgICd6aC1jbic6ICfli77pgInku6XnpoHnlKjlvq7ljZrnmoTmoYzpnaLmj5DnpLrvvIzmgqjkuZ/lj6/ku6Xnm7TmjqXlnKjmtY/op4jlmajnmoTmnYPpmZDnrqHnkIbkuK3npoHnlKjlvq7ljZrnmoTmoYzpnaLmj5DnpLrlip/og73vvIzkvYbov5nmoLflgZrmgqjlsIblkIzmoLfml6Dms5Xkvb/nlKjohJrmnKzmj5DkvpvnmoTmoYzpnaLmj5DnpLrlip/og73jgIInCiAgfSwKICAnZmFzdEVtb2ppSW5wdXRUb3AnOiB7ICd6aC1jbic6ICfnva7pobYnLCAnemgtaGsnOiAn572u6aCCJywgJ3poLXR3JzogJ+e9rumggicsICdlbic6ICdUb3AnIH0sCiAgJ2Zhc3RFbW9qaUlucHV0VG9wTm90aWNlJzogeyAnemgtY24nOiAn5bCG5LiL5pa56KGo5oOF5ouW5pS+6Iez5q2k572u6aG2JywgJ3poLWhrJzogJ+Wwh+S4i+aWueihqOaDheaLluaUvuiHs+atpOe9rumggicsICd6aC10dyc6ICflsIfkuIvmlrnooajmg4Xmi5bmlL7oh7PmraTnva7poIInLCAnZW4nOiAnRHJhZyBlbW9qaSBhbmQgZHJvcCBoZXJlIHRvIHN0aWNreScgfSwKICAnZmFzdEVtb2ppSW5wdXRSZWNlbnQnOiB7ICd6aC1jbic6ICfmnIDov5EnLCAnemgtaGsnOiAn5pyA6L+RJywgJ3poLXR3JzogJ+acgOi/kScsICdlbic6ICdSZWNlbnQnIH0sCiAgJ2Zhc3RFbW9qaUNsZWFyJzogeyAnemgtY24nOiAn5riF56m65YiX6KGoJywgJ3poLWhrJzogJ+a4hemZpOa4heWWricsICd6aC10dyc6ICfmuIXpmaTmuIXllq4nLCAnZW4nOiAnQ2xlYXIgTGlzdCcgfSwKICAncGVyc29uYWxSZWRpcmVjdFdlaWJvJzogeyAnemgtY24nOiAn55So5oi35Li76aG16buY6K6k5pi+56S65YWo6YOo5b6u5Y2a6ICM6Z2e54Ot6Zeo5b6u5Y2aJywgJ3poLWhrJzogJ+eUqOaItuS4u+mggem7mOiqjemhr+ekuuWFqOmDqOW+ruWNmuiAjOmdnueDremXqOW+ruWNmicsICd6aC10dyc6ICfnlKjmiLbkuLvpoIHpu5joqo3poa/npLrlhajpg6jlvq7ljZrogIzpnZ7ng63pl6jlvq7ljZonLCAnZW4nOiAnUGVyc29uYWwgcGFnZSBzaG93IGFsbCBXZWlibyBpbnN0ZWFkIG9mIGhvdCBieSBkZWZhdWx0JyB9LAogICdjYXJkQnV0dG9uJzogeyAnemgtY24nOiAn5L2/55So5b6u5Y2a5Y2h54mH55qE5oyJ6ZKu5pu/5o2i5a+55bqU6ZO+5o6le3s8aT59fScsICd6aC1oayc6ICfkvb/nlKjlvq7ljZrljaHniYfnmoTmjInpiJXmm7/mj5vlsI3mh4npgKPntZB7ezxpPn19JywgJ3poLXR3JzogJ+S9v+eUqOW+ruWNmuWNoeeJh+eahOaMiemIleabv+aPm+WwjeaHiemAo+e1kHt7PGk+fX0nLCAnZW4nOiAnUmVwbGFjZSB0aGUgY29ycmVzcG9uZGluZyBsaW5rcyBieSBidXR0b25zIGluIFdlaWJvIGNhcmRzJyB9LAogICdjYXJkQnV0dG9uRGVzYyc6IHsKICAgICd6aC1jbic6ICfpu5jorqTmg4XlhrXkuIvlj6rmnInngrnlh7vljaHniYfkuK3nmoTmjInpkq7miY3kvJrlnKjlvZPliY3pobXmmL7npLrplb/lvq7ljZrmiJbliIbkuqvnmoTop4bpopHvvIzngrnlh7vpk77mjqXliJnkvJrnm7TmjqXlnKjmlrDpobXmiZPlvIDjgILlkK/nlKjor6Xlip/og73lj6/ku6Xkvb/ngrnlh7vpk77mjqXml7bnmoTlj43lupTkuI7ngrnlh7vmjInpkq7ml7bnm7jlkIzjgILlkK/nlKjlkI7mgqjov5jlj6/ku6XlnKjmqKHlnZfpgInpobnljaHkuK3pgInmi6npmpDol4/lvq7ljZrlhoXnmoTigJxbW2xheW91dC53ZWliby5jYXJkXV3igJ3pmpDol4/mjonmlbTkuKrljaHniYfjgIInLAogIH0sCiAgJ25vVGFnRGlhbG9nJzogeyAnemgtY24nOiAn5bGP6JS95pS26JeP5b6u5Y2a5pe255qE5re75Yqg5qCH562+5a+56K+d5qGGJywgJ3poLWhrJzogJ+mYu+aTi+aUtuiXj+W+ruWNmuaZgueahOa3u+WKoOaomeexpOWwjeipseaWueWhiicsICd6aC10dyc6ICfpmLvmk4vmlLbol4/lvq7ljZrmmYLnmoTmt7vliqDmqJnnsaTlsI3oqbHmlrnloYonLCAnZW4nOiAnQmxvY2sgdGhlIGRpYWxvZyBhZnRlciBtYXJraW5nIHdlaWJvIGZhdm9yaXRlJyB9LAogICdmb2xkRGV0YWlscyc6IHsgJ3poLWNuJzogJ+aUtui1tycsICd6aC1oayc6ICfmlLbotbcnLCAnemgtdHcnOiAn5pS26LW3JywgJ2VuJzogJ+aUtui1tycvKiBhcyBpcyAqLyB9LAogICdyZXBsYWNlTGlua0J5VXJsJzogeyAnemgtY24nOiAn5bCG5b6u5Y2a5Lit55qE572R6aG16ZO+5o6l5pu/5o2i5Li655+t572R5Z2AJywgJ3poLWhrJzogJ+Wwh+W+ruWNmuS4reeahOe9kemhtemTvuaOpeabv+aPm+eCuuefree2suWdgCcsICd6aC10dyc6ICflsIflvq7ljZrkuK3nmoTnvZHpobXpk77mjqXmm7/mj5vngrrnn63ntrLlnYAnLCAnZW4nOiAnUmVwbGFjZSDnvZHpobXpk77mjqUgaW4gV2VpYm8gYnkgc2hvcnRlbmVkIFVSTCcgfSwKICAncmVwbGFjZUltYWdlRW1vamknOiB7ICd6aC1jbic6ICflsIblvq7ljZrkuK3lm77niYfooajnpLrnmoQgVW5pY29kZSDooajmg4XnrKblj7fmm7/mjaLkuLrmlofmnKx7ezxpPn19JywgJ3poLWhrJzogJ+Wwh+W+ruWNmuS4reWclueJh+ihqOekuueahCBVbmljb2RlIEVtb2ppIOabv+aPm+eCuuaWh+acrHt7PGk+fX0nLCAnemgtdHcnOiAn5bCH5b6u5Y2a5Lit5ZyW54mH6KGo56S655qEIFVuaWNvZGUgRW1vamkg5pu/5o+b54K65paH5pyse3s8aT59fScsICdlbic6ICdVc2UgdGV4dCBmb3IgdW5pY29kZSBlbW9qaSBpbnN0ZWFkIG9mIGltYWdlIHt7PGk+fX0nIH0sCiAgJ3JlcGxhY2VJbWFnZUVtb2ppRGVzYyc6IHsKICAgICd6aC1jbic6ICfkvb/nlKjmlofmnKzmm7/mjaLlr7nlupTlm77niYfjgILooajmg4XkvJrpmo/mgqjkvb/nlKjnmoTmk43kvZzns7vnu5/jgIHmtY/op4jlmajjgIHlronoo4XnmoTlrZfkvZPnmoTkuI3lkIzogIzmmL7npLrmiJDkuI3nmoTmoLflrZDjgIJGaXJlZm94IOWSjCBTYWZhcmkg5Y+v5Lul5b6X5Yiw6L6D5aW955qE5pWI5p6c44CCPGhyIC8+5pu/5o2i5YmNIDxzcGFuIHN0eWxlPSJmb250LXNpemU6IDIwcHgiPjxpbWcgd2lkdGg9IjIwcHgiIGhlaWdodD0iMjBweCIgc3JjPSIvL2ltZy50LnNpbmFqcy5jbi8vdDQvYXBwc3R5bGUvZXhwcmVzc2lvbi9lbWltYWdlL2VlODE5Mi5wbmciPjxpbWcgd2lkdGg9IjIwcHgiIGhlaWdodD0iMjBweCIgc3JjPSIvL2ltZy50LnNpbmFqcy5jbi8vdDQvYXBwc3R5bGUvZXhwcmVzc2lvbi9lbWltYWdlL2VlODA5OC5wbmciPjxpbWcgd2lkdGg9IjIwcHgiIGhlaWdodD0iMjBweCIgc3JjPSIvL2ltZy50LnNpbmFqcy5jbi8vdDQvYXBwc3R5bGUvZXhwcmVzc2lvbi9lbWltYWdlL2VlODRiMi5wbmciPjxpbWcgd2lkdGg9IjIwcHgiIGhlaWdodD0iMjBweCIgc3JjPSIvL2ltZy50LnNpbmFqcy5jbi8vdDQvYXBwc3R5bGUvZXhwcmVzc2lvbi9lbWltYWdlL2VlOGNhYy5wbmciPjxpbWcgd2lkdGg9IjIwcHgiIGhlaWdodD0iMjBweCIgc3JjPSIvL2ltZy50LnNpbmFqcy5jbi8vdDQvYXBwc3R5bGUvZXhwcmVzc2lvbi9lbWltYWdlL2VlODk5Mi5wbmciPjxpbWcgd2lkdGg9IjIwcHgiIGhlaWdodD0iMjBweCIgc3JjPSIvL2ltZy50LnNpbmFqcy5jbi8vdDQvYXBwc3R5bGUvZXhwcmVzc2lvbi9lbWltYWdlL2VlODg4Yi5wbmciPjxpbWcgd2lkdGg9IjIwcHgiIGhlaWdodD0iMjBweCIgc3JjPSIvL2ltZy50LnNpbmFqcy5jbi8vdDQvYXBwc3R5bGUvZXhwcmVzc2lvbi9lbWltYWdlL2VlODRhZC5wbmciPjxpbWcgd2lkdGg9IjIwcHgiIGhlaWdodD0iMjBweCIgc3JjPSIvL2ltZy50LnNpbmFqcy5jbi8vdDQvYXBwc3R5bGUvZXhwcmVzc2lvbi9lbWltYWdlL2VlOTQ5My5wbmciPjwvc3Bhbj48YnIgLz7mm7/mjaLlkI4gPHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMjBweCI+8J+QtuKave+4j/Cfj4Hwn5Kb4pqg77iP8J+TtvCfgITvuI/wn4eo8J+Hszwvc3Bhbj4nCiAgfSwKICAnY3VzdG9taXplU291cmNlV2VpYm8nOiB7ICd6aC1jbic6ICfoh6rlrprkuYnmnaXmupDlvq7ljZrku4XmmL7npLrigJzmnaXoh6rlvq7ljZogd2VpYm8uY29t4oCdJywgJ3poLWhrJzogJ+iHquioguS+hua6kOW+ruWNmuWDhemhr+ekuuOAjOS+huiHquW+ruWNmiB3ZWliby5jb23jgI0nLCAnemgtdHcnOiAn6Ieq6KiC5L6G5rqQ5b6u5Y2a5YOF6aGv56S644CM5L6G6Ieq5b6u5Y2aIHdlaWJvLmNvbeOAjScsICdlbic6ICdXZWlibyB3aXRoIGN1c3RvbWl6ZSBzb3VyY2Ugc2hvdyAiY29tZSBmcm9tIOW+ruWNmiB3ZWliby5jb20iIG9ubHknIH0sCiAgJ3dlaWJvVmlhVGV4dCc6IHsgJ3poLWNuJzogJ+adpeiHqicsICd6aC1oayc6ICfmnaXoh6onLCAnemgtdHcnOiAn5p2l6IeqJywgJ2VuJzogJ+adpeiHqicvKiBhcyBpcyAqLyB9LAogICdjdXN0b21pemVTb3VyY2VXZWlib0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5b6u5Y2a5Lya5ZGY5Zyo5Y+R5biD5b6u5Y2a5pe25Y+v5Lul5L2/55So6Ieq5a6a5LmJ5paH5pys5p2l5pi+56S65Liq5oCn5YyW5p2l5rqQ77yM5oKo5Y+v5Lul6ZqQ6JeP6L+Z5Lqb5b6u5Y2a5oiW5bCG6L+Z5Lqb5b6u5Y2a55qE5p2l5rqQ5pi+56S65Li66buY6K6k5p2l5rqQJywKICB9LAogICdmb2xkQ2hpbGRDb21tZW50JzogeyAnemgtY24nOiAn6buY6K6k5oqY5Y+g5LqM57qn6K+E6K66JywgJ3poLWhrJzogJ+mgkOioreaKmOeWiuS6jOe0muipleirlicsICd6aC10dyc6ICfpoJDoqK3mipjnlorkuozntJroqZXoq5YnLCAnZW4nOiAnRm9sZCBjaGlsZCBjb21tZW50cyBieSBkZWZhdWx0JyB9LAogICdjb21tZW50U2hvd0FsbCc6IHsgJ3poLWNuJzogJ+afpeeci+ivhOiuuuaXtuiHquWKqOWIh+aNouWIsOWFqOmDqOivhOiuuicsICd6aC1oayc6ICfmn6XplrHoqZXoq5bmmYLoh6rli5XliIfmj5vliLDlhajpg6joqZXoq5YnLCAnemgtdHcnOiAn5p+l6Zax6KmV6KuW5pmC6Ieq5YuV5YiH5o+b5Yiw5YWo6YOo6KmV6KuWJywgJ2VuJzogJ0F1dG9tYXRpY2FsbHkgc3dpdGNoIHZpZXcgb2YgY29tbWVudHMgdG8gYWxsJyB9LAogICdzaG93Vm90ZVJlc3VsdCc6IHsgJ3poLWNuJzogJ+aKleelqOW+ruWNmuaYvuekuuaKleelqOaDheWGtXt7PGk+fX0nLCAnemgtaGsnOiAn5oqV56Wo5b6u5Y2a6aGv56S65oqV56Wo5oOF5rOBe3s8aT59fScsICd6aC10dyc6ICfmipXnpajlvq7ljZrpoa/npLrmipXnpajmg4Xms4F7ezxpPn19JywgJ2VuJzogJ1Nob3cgdm90ZXMgZm9yIGZlZWRzIHdpdGggdm90aW5nIHt7PGk+fX0nIH0sCiAgJ3Nob3dWb3RlUmVzdWx0RGV0YWlsJzogeyAnemgtY24nOiAn5Zyo5b2T5YmN6aG16Z2i5bGV56S65oqV56Wo57uT5p6c6ICM5peg6ZyA5omT5byA5paw6aG144CC5bGV56S65LuF5L6b5p+l55yL77yM5aaC6ZyA5oqV56Wo5LuN6ZyA6KaB5Zyo5paw6aG16Z2i5omT5byA44CC5Y+m6K+35rOo5oSP77yM5peg6K665piv5ZCm5byA5ZCv5pys5Yqf6IO977yM5b6u5Y2a5oqV56Wo5Lya5a+86Ie05oKo6Ieq5Yqo54K56LWe6K+l5b6u5Y2a44CCJyB9LAogICdmb2xsb3dWb3RlTGluayc6IHsgJ3poLWNuJzogJ+eCuei1nuW+ruWNmuW5tuWPguS4juaKleelqCcsICd6aC1oayc6ICfpu57otIrlvq7ljZrkuKblj4PoiIfmipXnpagnLCAnemgtdHcnOiAn6bue6LSK5b6u5Y2a5Lim5Y+D6IiH5oqV56WoJywgZW46ICdMaWtlIHRoaXMgZmVlZCBhbmQgdm90ZScgfSwKICAvLyDlm77niYflkozop4bpopEKICAnbWVkaWFUb29sc1RpdGxlJzogeyAnemgtY24nOiAn5Zu+54mH5LiO6KeG6aKRJywgJ3poLWhrJzogJ+WclueJh+iIh+imlumguycsICd6aC10dyc6ICflnJbniYfoiIfoppbpoLsnLCAnZW4nOiAnSW1hZ2VzICZhbXA7IFZpZGVvcycgfSwKICAndmlld09yaWdpbmFsJzogewogICAgJ3poLWNuJzogJ+afpeeci+WbvueJh+a3u+WKoOKAnOafpeeci+WOn+WbvuKAnemTvuaOpXzmiZPlvIB7ezxvcGVuPn19IHt7PGk+fX18fHt7PGRpcmVjdD59feeCueWHu+e8qeeVpeWbvuaXtuebtOaOpeafpeeci+WOn+WbvicsCiAgICAnemgtaGsnOiAn5p+l55yL5ZyW54mH5re75Yqg44CM5p+l55yL5Y6f5ZyW44CN6YCj57WQfOaJk+mWi3t7PG9wZW4+fX0ge3s8aT59fXx8e3s8ZGlyZWN0Pn196bue5pOK57iu5ZyW5pmC55u05o6l5p+l55yL5Y6f5ZyWJywKICAgICd6aC10dyc6ICfmn6XnnIvlnJbniYfmt7vliqDjgIzmn6XnnIvljp/lnJbjgI3pgKPntZB85omT6ZaLe3s8b3Blbj59fSB7ezxpPn19fHx7ezxkaXJlY3Q+fX3pu57mk4rnuK7lnJbmmYLnm7TmjqXmn6XnnIvljp/lnJYnLAogICAgJ2VuJzogJ2FkZCAiT3JpZ2luYWwgUGljdHVyZSIgbGluayBmb3IgaW1hZ2VzIHwgd2hpY2ggdGFyZ2V0IHRvIHt7PG9wZW4+fX0ge3s8aT59fSB8fCB7ezxkaXJlY3Q+fX0gVmlldyBvcmlnbmFsIHBpY3R1cmUgYnkgY2xpY2tpbmcgb24gdGh1bWJuYWlsJwogIH0sCiAgJ3ZpZXdPcmlnaW5hbFBhZ2UnOiB7ICd6aC1jbic6ICfljIXlkKvljp/lm77nmoTnvZHpobUnLCAnemgtaGsnOiAn5YyF5ZCr5Y6f5ZyW55qE57ay6aCBJywgJ3poLXR3JzogJ+WMheWQq+WOn+WclueahOe2sumggScsICdlbic6ICdwYWdlIHdpdGggb3JpZ2luYWwgcGljdHVyZScgfSwKICAndmlld09yaWdpbmFsSW1hZ2UnOiB7ICd6aC1jbic6ICfljp/lm74nLCAnemgtaGsnOiAn5Y6f5ZyWJywgJ3poLXR3JzogJ+WOn+WclicsICdlbic6ICdvcmlnaW5hbCBwaWN0dXJlJyB9LAogICd2aWV3T3JpZ2luYWxUaXRsZSc6IHsgJ3poLWNuJzogJ+afpeeci+WOn+WbviAtIFlBV0YnLCAnemgtaGsnOiAn5p+l55yL5Y6f5ZyWIC0gWUFXRicsICd6aC10dyc6ICfmn6XnnIvljp/lnJYgLSBZQVdGJywgJ2VuJzogJ1ZpZXcgT3JpZ2luYWwgUGljdHVyZSAtIFlBV0YnIH0sCiAgJ3ZpZXdPcmlnaW5hbFRleHQnOiB7ICd6aC1jbic6ICfmn6XnnIvljp/lm74nLCAnemgtaGsnOiAn5p+l55yL5Y6f5ZyWJywgJ3poLXR3JzogJ+afpeeci+WOn+WclicsICdlbic6ICdPcmlnaW5hbCBQaWN0dXJlJyB9LAogICd2aWV3T3JpZ2luYWxGQ1RleHQnOiB7ICd6aC1jbic6ICfmn6XnnIvlm77niYcnLCAnemgtaGsnOiAn5p+l55yL5ZyW54mHJywgJ3poLXR3JzogJ+afpeeci+WclueJhycsICdlbic6ICdWaWV3IFBpY3R1cmUnIH0sCiAgJ3ZpZXdPcmlnaW5hbERlc2MnOiB7ICd6aC1jbic6ICfpgInmi6nmiZPlvIDljIXlkKvljp/lm77nmoTnvZHpobXml7bvvIzohJrmnKzkvJrnlJ/miJDkuIDkuKrkuIDmrKHmgKfnmoTmn6XnnIvlvZPliY3lm77niYfnmoTnvZHpobXjgILlpoLmnpzmgqjlkK/nlKjkuoblkITnsbvlub/lkYrlsY/olL3mj5Lku7bvvIzor6XpobXpnaLlj6/og73kvJrooqvor6/mnYDmi6bmiKrjgILlr7nkuo7lhbzlrrkgRWFzeUxpc3Qg55qE5bm/5ZGK5bGP6JS95o+S5Lu277yM6K+35Zyo55m95ZCN5Y2V5Lit5re75YqgIDxjb2RlPkBAfGJsb2I6aHR0cHM6Ly93ZWliby5jb20kcG9wdXA8L2NvZGU+IOWSjCA8Y29kZT5AQHxibG9iOmh0dHBzOi8vZC53ZWliby5jb20kcG9wdXA8L2NvZGU+IOS7peWFgeiuuOivpeW8ueeql+OAgicgfSwKICAnZG93bmxvYWRJbWFnZSc6IHsKICAgICd6aC1jbic6ICfmn6XnnIvlm77niYfmt7vliqDigJzmiZPljIXkuIvovb3igJ3pk77mjqXvvIjor5XpqozmgKfvvIkge3s8aT59fXx8e3s8ZGlyZWN0Pn1954K55Ye757yp55Wl5Zu+5pe255u05o6l5byA5aeL5LiL6L29JywKICAgICd6aC1oayc6ICfmn6XnnIvlnJbniYfmt7vliqDjgIzlhajpg6jkuIvovInjgI3pgKPntZDvvIjoqabpqZfmgKfvvIkge3s8aT59fXx8e3s8ZGlyZWN0Pn196bue5pOK57iu5ZyW5pmC55u05o6l6ZaL5aeL5LiL6LyJJywKICAgICd6aC10dyc6ICfmn6XnnIvlnJbniYfmt7vliqDjgIzlhajpg6jkuIvovInjgI3pgKPntZDvvIjoqabpqZfmgKfvvIkge3s8aT59fXx8e3s8ZGlyZWN0Pn196bue5pOK57iu5ZyW5pmC55u05o6l6ZaL5aeL5LiL6LyJJywKICAgICdlbic6ICdhZGQgIkRvd25sb2FkIEFsbCIgbGluayBmb3IgaW1hZ2VzIChFeHBlcmltZW50YWwpIHt7PGk+fX0gfHwge3s8ZGlyZWN0Pn19IFRyaWdnZXIgZG93bmxvYWQgYnkgY2xpY2tpbmcgb24gdGh1bWJuYWlsJwogIH0sCiAgJ2Rvd25sb2FkSW1hZ2VUZXh0JzogeyAnemgtY24nOiAn5omT5YyF5LiL6L29JywgJ3poLWhrJzogJ+WFqOmDqOS4i+i8iScsICd6aC10dyc6ICflhajpg6jkuIvovIknLCAnZW4nOiAnRG93bmxvYWQgQWxsJyB9LAogICdkb3dubG9hZEltYWdlRGVzYyc6IHsgJ3poLWNuJzogJ+iEmuacrOS8muWwhuaJgOacieWbvueJh+aJk+WMheaIkCB0YXIg5YyF5LiL6L2977yM5ZCE57G75Y6L57yp5bel5YW36YO95Y+v5p+l55yL6K+l57G75Z6L55qE5paH5Lu244CCV2luZG93cyDnlKjmiLflj6/ku6Xlronoo4UgNy16aXAg5omT5byAIHRhciDljIXjgILov5nnp43mlofku7bmoLzlvI/ku4XnlKjkuo7lsIbmlofku7bmiZPljIXvvIzkvYbkuI3kvJrljovnvKnvvIzlm6DmraTkvZPnp6/ovoPlpKfvvIzlpoLpnIDkv53lrZjor7flho3ooYzljovnvKnjgIInIH0sCiAgJ2Rvd25sb2FkSW1hZ2VEb3dubG9hZGluZyc6IHsgJ3poLWNuJzogJ+ato+WcqOS4i+i9vScsICd6aC1oayc6ICfmraPlnKjkuIvovIknLCAnemgtdHcnOiAn5q2j5Zyo5LiL6LyJJywgJ2VuJzogJ0Rvd25sb2FkaW5nLi4uJyB9LAogICdkb3dubG9hZEltYWdlc0ZhaWxUaXRsZSc6IHsgJ3poLWNuJzogJ+S4i+i9veWksei0pScsICd6aC1oayc6ICfkuIvovInlpLHmlZcnLCAnemgtdHcnOiAn5LiL6LyJ5aSx5pWXJywgJ2VuJzogJ0Rvd25sb2FkIEZhaWxlZCcgfSwKICAnZG93bmxvYWRJbWFnZXNGYWlsVGV4dCc6IHsgJ3poLWNuJzogJ+S4i+i9veWbvueJh+aXtuWPkeeUn+mUmeivr++8jOS4i+i9veWksei0pScsICd6aC1oayc6ICfkuIvovInlnJbniYfmmYLnmbznlJ/pjK/oqqTvvIzkuIvovInlpLHmlZcnLCAnemgtdHcnOiAn5LiL6LyJ5ZyW54mH5pmC55m855Sf6Yyv6Kqk77yM5LiL6LyJ5aSx5pWXJywgJ2VuJzogJ0ltYWdlcyBkb3dubG9hZGluZyBmYWlsZWQuJyB9LAogICdwYXVzZUFuaW1hdGVkSW1hZ2UnOiB7ICd6aC1jbic6ICfliqjnlLvlm77lg48oR0lGKeWcqOe8qeeVpeWbvuaYvuekuuaXtuS/neaMgemdmeatont7PGk+fX0nLCAnemgtaGsnOiAn5YuV55Wr5ZyW5YOPKEdJRinlnKjmiYDlnJbpoa/npLrmmYLkv53mjIHpnZzmraJ7ezxpPn19JywgJ3poLXR3JzogJ+WLleeVq+WcluWDjyhHSUYp5Zyo5omA5ZyW6aGv56S65pmC5L+d5oyB6Z2c5q2ie3s8aT59fScsICdlbic6ICdQYXVzZSB0aHVtYm5haWwgYW5pbWF0ZWQgaW1hZ2UgKEdJRikge3s8aT59fScgfSwKICAncGF1c2VBbmltYXRlZEltYWdlRGVzYyc6IHsgJ3poLWNuJzogJ+ivpeWKn+iDveS7heW9seWTjeaYvuekuuaViOaenO+8jOW5tuS4jeS8mumZjeS9jue9kee7nOaVsOaNrueUqOmHj+OAgicgfSwKICAndXNlQnVpbHRJblZpZGVvUGxheWVyJzogewogICAgJ3poLWNuJzogJ+S9v+eUqOa1j+iniOWZqOWOn+eUn+inhumikeaSreaUvuWZqHt7PGk+fX18fOmfs+mHj3t7PHZvbHVtZT59fXx7ezxtZW1vcml6ZT59feiusOS9j+S4iuasoeiuvue9rueahOmfs+mHjycsCiAgICAnemgtaGsnOiAn5L2/55So54CP6Ka95Zmo5YWn5bu65b2x54mH5pKt5pS+5Zmoe3s8aT59fXx86Z+z6YePe3s8dm9sdW1lPn19fHt7PG1lbW9yaXplPn196KiY5L2P5LiK5qyh6Kit5a6a55qE6Z+z6YePJywKICAgICd6aC10dyc6ICfkvb/nlKjngI/opr3lmajlhaflu7rlvbHniYfmkq3mlL7lmah7ezxpPn19fHzpn7Pph497ezx2b2x1bWU+fX18e3s8bWVtb3JpemU+fX3oqJjkvY/kuIrmrKHoqK3lrprnmoTpn7Pph48nLAogICAgJ2VuJzogJ1VzZSBicm93c2VyIGJ1aWx0LWluIHZpZGVvIHBsYXllcnt7PGk+fX18fFZvbHVtZSB7ezx2b2x1bWU+fX0lfHt7PG1lbW9yaXplPn19IG1lbW9yaXplIGxhc3Qgdm9sdW1lJywKICB9LAogICd1c2VCdWlsdEluVmlkZW9QbGF5ZXJEZXNjJzogeyAnemgtY24nOiAn5LiA5qyh5oCn6Kej5Yaz6Ieq5Yqo5pKt5pS+5ZKM5Lqk5LqS6YC76L6R55qE5ZCE56eN6Zeu6aKY77yM5byA5ZCv5pe25YW25LuW6KeG6aKR55u45YWz55qE5pS56YCg5Yqf6IO95LiN5YaN55Sf5pWI44CC5LiN5pSv5oyB55u05pKt6KeG6aKR44CC5pKt5pS+5Y+v6IO95LiN5Lya6KKr5b6u5Y2a5q2j56Gu6K6h5YWl5pKt5pS+5pWw44CCJyB9LAogICdtZWRpYVZpZGVvVHlwZSc6IHsgJ3poLWNuJzogJ+inhumikScsICd6aC1oayc6ICflvbHniYcnLCAnemgtdHcnOiAn5b2x54mHJywgJ2VuJzogJ1ZpZGVvJyB9LAogICdkaXNhYmxlVmlkZW9Db250ZXh0TWVudSc6IHsgJ3poLWNuJzogJ+WcqOinhumikeS4iuS9v+eUqOWOn+eUn+WPs+mUruiPnOWNle+8iOaWueS+v+S4i+i9veinhumike+8iScsICd6aC1oayc6ICflnKjlvbHniYfkuIrkvb/nlKjljp/nlJ/lj7PpjbXlip/og73ooajvvIjmlrnkvr/lvbHniYfkuIvovInvvIknLCAnemgtdHcnOiAn5Zyo5b2x54mH5LiK5L2/55So5Y6f55Sf5Y+z6Y215Yqf6IO96KGo77yI5pa55L6/5b2x54mH5LiL6LyJ77yJJywgJ2VuJzogJ1VzZSBuYXRpdmUgcmlnaHQtY2xpY2sgbWVudSBvbiB2aWRlbyAoZm9yIHZpZGVvIGRvd25sb2FkaW5nKScgfSwKICAnZGlzYWJsZUxpdmVQaG90byc6IHsgJ3poLWNuJzogJ+emgeeUqOW+ruWNmiBMaXZlIFBob3RvIOaSreaUvicsICd6aC1oayc6ICfpmLvmraLlvq7ljZrmkq3mlL4gTGl2ZSBQaG90bycsICd6aC10dyc6ICfpmLvmraLlvq7ljZrmkq3mlL4gTGl2ZSBQaG90bycsICdlbic6ICdEaXNhYmxlIHBsYXlpbmcgbGl2ZSBwaG90bycgfSwKICAnZGlzYWJsZVZpZGVvQ2xpY2tQb3AnOiB7ICd6aC1jbic6ICfngrnlh7vop4bpopHml7bkuI3mmL7npLrlvLnlh7rmoYYnLCAnemgtaGsnOiAn6bue5pOK6KaW6aC75pmC5LiN6aGv56S65b+r6aGv5pa55aGKJywgJ3poLXR3JzogJ+m7nuaTiuimlumgu+aZguS4jemhr+ekuuW/q+mhr+aWueWhiicsICdlbic6ICdBdm9pZCBzaG93aW5nIHBvcC11cCBkaWFsb2cgYnkgY2xpY2tpbmcgdmlkZW9zJyB9LAogICd2aWRlb0Z1bGxTY3JlZW5Ob3RQb3AnOiB7ICd6aC1jbic6ICfop4bpopHkuI3mmL7npLrlvLnlh7rmoYbmjInpkq4nLCAnemgtaGsnOiAn6KaW6aC75LiN6aGv56S65b+r6aGv5pa55aGK5oyJ6YiVJywgJ3poLXR3JzogJ+imlumgu+S4jemhr+ekuuW/q+mhr+aWueWhiuaMiemIlScsICdlbic6ICdObyBwb3AtdXAgYnV0dG9uIG9uIHZpZGVvcycgfSwKICAndmlkZW9Ob0F1dG9OZXh0JzogeyAnemgtY24nOiAn56aB5q2i6KeG6aKR5by55Ye65qGG6Ieq5Yqo5pKt5pS+5o6o6I2Q6KeG6aKRJywgJ3poLWhrJzogJ+emgeatouimlumgu+W/q+mhr+aWueWhiuiHquWLleaSreaUvuaOqOiWpuimlumguycsICd6aC10dyc6ICfnpoHmraLoppbpoLvlv6vpoa/mlrnloYroh6rli5Xmkq3mlL7mjqjolqboppbpoLsnLCAnZW4nOiAnUHJldmVudCBwb3AtdXAgYXV0b21hdGljYWxseSBwbGF5aW5nIG5leHQgc3VnZ2VzdGVkIHZpZGVvcycgfSwKICAvLyDlhbPms6gKICAnZm9sbG93aW5nVG9vbHNUaXRsZSc6IHsgJ3poLWNuJzogJ+WFs+azqCcsICd6aC1oayc6ICfpl5zms6gnLCAnemgtdHcnOiAn6Zec5rOoJywgJ2VuJzogJ0ZvbGxvd2luZycgfSwKICAnYXV0b0NoZWNrRm9sbG93aW5nJzogeyAnemgtY24nOiAn6Ieq5Yqo5qOA5p+l5YWz5rOo5YiX6KGo5bm25o+Q56S65Y+Y5YyWfHt7PGZyZXF1ZW5jeT59fXt7PGk+fX0nLCAnemgtaGsnOiAn6Ieq5YuV5qqi5p+l6Zec5rOo5riF5Zau5Lim5o+Q56S66K6K5YyWfHt7PGZyZXF1ZW5jeT59fXt7PGk+fX0nLCAnemgtdHcnOiAn6Ieq5YuV5qqi5p+l6Zec5rOo5riF5Zau5Lim5o+Q56S66K6K5YyWfHt7PGZyZXF1ZW5jeT59fXt7PGk+fX0nLCAnZW4nOiAnQXV0b21hdGljYWxseSBjaGVja3MgYW5kIHByb21wdCBhbnkgY2hhbmdlcyBhYm91dCBmb2xsb3dpbmcgbGlzdCB8IHt7PGZyZXF1ZW5jeT59fXt7PGk+fX0nIH0sCiAgJ2F1dG9DaGVja0ZvbGxvd2luZ0Rlc2MnOiB7CiAgICAnemgtY24nOiAn5byA5ZCv5pys5Yqf6IO95ZCO6ISa5pys5Lya5q+P6ZqU5LiA5q615pe26Ze077yM5qOA5p+l5oKo55qE5YWz5rOo5YiX6KGo77yM5bm25ZKM5LiK5LiA5qyh5b6X5Yiw55qE57uT5p6c5q+U6L6D77yM5bCG5LiN5ZCM5LmL5aSE5bGV56S65Ye65p2l44CC6ISa5pys5qOA5p+l5YWz5rOo5YiX6KGo5Y+q6IO95YOP5oKo5Zyo572R6aG15Lit5qOA5p+l5YWz5rOo5YiX6KGo5LiA5qC377yM5LiA6aG15LiA6aG155qE57+755yL77yM5Zug5q2k5qOA5p+l5Y+v6IO96ZyA6KaB6L6D6ZW/55qE5pe26Ze077yM5aaC5p6c5oKo5YWz5rOo5LqG5aSn6YeP55qE5biQ5Y+377yM6K+36ICD6JmR6ZmN5L2O6Ieq5Yqo5qOA5p+l55qE6aKR546H44CCJwogIH0sCiAgJ2F1dG9DaGVja0ZvbGxvd2luZzEnOiB7ICd6aC1jbic6ICfmr4/lpKknLCAnemgtaGsnOiAn5q+P5aSpJywgJ3poLXR3JzogJ+avj+WkqScsICdlbic6ICdldmVyeSBkYXknIH0sCiAgJ2F1dG9DaGVja0ZvbGxvd2luZzMnOiB7ICd6aC1jbic6ICfmr4/kuInlpKknLCAnemgtaGsnOiAn5q+P5LiJ5aSpJywgJ3poLXR3JzogJ+avj+S4ieWkqScsICdlbic6ICdldmVyeSAzIGRheXMnIH0sCiAgJ2F1dG9DaGVja0ZvbGxvd2luZzcnOiB7ICd6aC1jbic6ICfmr4/lkagnLCAnemgtaGsnOiAn5q+P6YCxJywgJ3poLXR3JzogJ+avj+mAsScsICdlbic6ICdldmVyeSB3ZWVrJyB9LAogICdhdXRvQ2hlY2tGb2xsb3dpbmdMYXN0VGltZSc6IHsgJ3poLWNuJzogJ+S4iuasoeajgOafpeaXtumXtO+8micsICd6aC1oayc6ICfkuIrmrKHmqqLmn6XmmYLplpMnLCAnemgtdHcnOiAn5LiK5qyh5qqi5p+l5pmC6ZaTJywgJ2VuJzogJ0xhc3QgY2hlY2tpbmcgdGltZTogJyB9LAogICdhdXRvQ2hlY2tGb2xsb3dpbmdOZXZlcic6IHsgJ3poLWNuJzogJ+WwmuacquajgOafpScsICd6aC1oayc6ICflsJrmnKrmqqLmn6UnLCAnemgtdHcnOiAn5bCa5pyq5qqi5p+lJywgJ2VuJzogJ05ldmVyJyB9LAogICdhdXRvQ2hlY2tGb2xsb3dpbmdOb3cnOiB7ICd6aC1jbic6ICfnq4vljbPmo4Dmn6UnLCAnemgtaGsnOiAn56uL5Y2z5qqi5p+lJywgJ3poLXR3JzogJ+eri+WNs+aqouafpScsICdlbic6ICdDaGVjayBOb3cnIH0sCiAgJ2F1dG9DaGVja0ZvbGxvd2luZ1J1bm5pbmcnOiB7ICd6aC1jbic6ICfvvIjmraPlnKjmo4Dmn6XvvIknLCAnemgtaGsnOiAn77yI5q2j5Zyo5qqi5p+l77yJJywgJ3poLXR3JzogJ+ato+WcqOaqouafpScsICdlbic6ICcoQ2hlY2tpbmcpJyB9LAogICdhdXRvQ2hlY2tGb2xsb3dpbmdEb3dubG9hZCc6IHsgJ3poLWNuJzogJ+WvvOWHuuWFs+azqOWIl+ihqCcsICd6aC1oayc6ICfljK/lh7rpl5zms6jmuIXllq4nLCAnemgtdHcnOiAn5Yyv5Ye66Zec5rOo5riF5ZauJywgJ2VuJzogJ0V4cG9ydCBGb2xsb3cgTGlzdCcgfSwKICAnYXV0b0NoZWNrRm9sbG93aW5nQ2xlYW4nOiB7ICd6aC1jbic6ICfmuIXpmaTmnKzlnLDmlbDmja4nLCAnemgtaGsnOiAn5riF6Zmk5pys5qmf6LOH5paZJywgJ3poLXR3JzogJ+a4hemZpOacrOapn+izh+aWmScsICdlbic6ICdDbGVhciBMb2NhbCBkYXRhJyB9LAogICdhdXRvQ2hlY2tGb2xsb3dpbmdEaWFsb2dUaXRsZSc6IHsgJ3poLWNuJzogJ+WFs+azqOWIl+ihqOWPmOWMlicsICd6aC1oayc6ICfpl5zms6jmuIXllq7ororljJYnLCAnemgtdHcnOiAn6Zec5rOo5riF5Zau6K6K5YyWJywgJ2VuJzogJ0ZvbGxvd2luZyBMaXN0IENoYW5nZXMnIH0sCiAgJ2F1dG9DaGVja0ZvbGxvd2luZ1RpdGxlJzogeyAnemgtY24nOiAn5YWz5rOo5YiX6KGo5Y+Y5YyWJywgJ3poLWhrJzogJ+mXnOazqOa4heWWruiuiuWMlicsICd6aC10dyc6ICfpl5zms6jmuIXllq7ororljJYnLCAnZW4nOiAnRm9sbG93aW5nIExpc3QgQ2hhbmdlcycgfSwKICAnYXV0b0NoZWNrRm9sbG93aW5nVGlwJzogewogICAgJ3poLWNuJzogJ+aCqOeahOWFs+azqOWIl+ihqOiHquS7juS4iuasoeajgOafpeW5tuehruiupOiHs+S7iuWPkeeUn+S6huWmguS4i+WPmOWMlu+8jOivt+aCqOWkjeafpe+8micsCiAgICAnemgtaGsnOiAn5oKo55qE6Zec5rOo5riF5Zau6Ieq5b6e5LiK5qyh5qqi5p+l5Lim56K66KqN6Iez5LuK55m855Sf5LqG5aaC5LiL6K6K5YyW77yM6KuL5oKo6KSH5p+l77yaJywKICAgICd6aC10dyc6ICfmgqjnmoTpl5zms6jmuIXllq7oh6rlvp7kuIrmrKHmqqLmn6XkuKbnorroqo3oh7Pku4rnmbznlJ/kuoblpoLkuIvororljJbvvIzoq4vmgqjopIfmn6XvvJonLAogICAgJ2VuJzogJ1lvdXIgZm9sbG93aW5nIGxpc3QgaGFkIGJlZW4gY2hhbmdlZCBzaW5jZSBsYXN0IGNoZWNraW5nLCBwbGVhc2UgcmV2aWV3OiAnLAogIH0sCiAgJ2F1dG9DaGVja0ZvbGxvd2luZ1RpcERldGFpbCc6IHsKICAgICd6aC1jbic6ICfov5nkupvlj5jljJblj6/og73mmK/lm6DkuLrohJrmnKzlnKjmo4Dmn6Xml7bnmoTkuI3lh4bnoa7vvIzmgqjoh6rlt7HmnInmhI/miJbml6DmhI/nmoTmk43kvZzvvIzmiJbkuIDkupvmk43kvZzmiJblupTnlKjnmoTkv67mlLnlr7zoh7TnmoTjgILlpoLmnpzmgqjnmoTlhbPms6jliJfooajnu4/luLjlh7rnjrDpooTmnJ/kuYvlpJbnmoTlj5jliqjvvIzor7fmo4Dmn6U8YSBocmVmPSIvL2FwcC53ZWliby5jb20vbXkiIHRhcmdldD0iX2JsYW5rIj7mgqjnmoTlupTnlKjmjojmnYM8L2E+44CCJywKICAgICd6aC1oayc6ICfpgJnkupvororljJblj6/og73mmK/lm6DngrrohbPmnKzlnKjmqqLmn6XmmYLnmoTkuI3mupbnorrvvIzmgqjoh6rlt7HmnInmhI/miJbnhKHmhI/nmoTmk43kvZzvvIzmiJbkuIDkupvmk43kvZzmiJbmh4nnlKjnmoTkv67mlLnlsI7oh7TnmoTjgILlpoLmnpzmgqjnmoTpl5zms6jmuIXllq7ntpPluLjlh7rnj77poJDmnJ/kuYvlpJbnmoTororli5XvvIzoq4vmqqLmn6U8YSBocmVmPSIvL2FwcC53ZWliby5jb20vbXkiIHRhcmdldD0iX2JsYW5rIj7mgqjnmoTmh4nnlKjmjojmrIo8L2E+44CCJywKICAgICd6aC10dyc6ICfpgJnkupvororljJblj6/og73mmK/lm6DngrrohbPmnKzlnKjmqqLmn6XmmYLnmoTkuI3mupbnorrvvIzmgqjoh6rlt7HmnInmhI/miJbnhKHmhI/nmoTmk43kvZzvvIzmiJbkuIDkupvmk43kvZzmiJbmh4nnlKjnmoTkv67mlLnlsI7oh7TnmoTjgILlpoLmnpzmgqjnmoTpl5zms6jmuIXllq7ntpPluLjlh7rnj77poJDmnJ/kuYvlpJbnmoTororli5XvvIzoq4vmqqLmn6U8YSBocmVmPSIvL2FwcC53ZWliby5jb20vbXkiIHRhcmdldD0iX2JsYW5rIj7mgqjnmoTmh4nnlKjmjojmrIo8L2E+44CCJywKICAgICdlbic6ICdUaGVzZSBjaGFuZ2VzIG9jY3VycmVkIG1pZ2h0IGJlIGNhdXNlZCBieTogaW5hY2N1cmF0ZSBzY3JpcHQgY2hlY2tpbmcgYmVoYXZpb3VyOyB5b3VyIG93biBvcGVyYXRpb25zLCB3aGV0aGVyIHlvdSBkbyBpbnRlcmVzdGVkIG9yIGJ5IG1pc3Rha2U7IG9yIHNvbWUgb3RoZXIgb3BlcmF0aW9ucyBvciBhcHBsaWNhdGlvbnMgdGhhdCBoYXMgdGhlIGF1dGhvcml0eSB0byBtYWtlIHRoZXNlIGNoYW5nZXMuIElmIHlvdXIgZm9sbG93aW5nIGxpc3QgY29udGludW91c2x5IHNob3dzIHVuZXhwZWN0ZWQgY2hhbmdlcywgcGxlYXNlIHJldmlldyA8YSBocmVmPSIvL2FwcC53ZWliby5jb20vbXkiIHRhcmdldD0iX2JsYW5rIj55b3VyIGFwcGxpY2F0aW9uIGF1dGhvcmlzYXRpb25zPC9hPi4nLAogIH0sCiAgJ2F1dG9DaGVja0ZvbGxvd2luZ0FkZCc6IHsgJ3poLWNuJzogJ+aWsOWinuWmguS4i+WFs+azqCcsICd6aC1oayc6ICfmlrDlop7lpoLkuIvpl5zms6gnLCAnemgtdHcnOiAn5paw5aKe5aaC5LiL6Zec5rOoJywgJ2VuJzogJ1JlY2VudCBGb2xsb3dpbmcnIH0sCiAgJ2F1dG9DaGVja0ZvbGxvd2luZ0xvc3QnOiB7ICd6aC1jbic6ICflh4/lsJHlpoLkuIvlhbPms6gnLCAnemgtaGsnOiAn5rib5bCR5aaC5LiL6Zec5rOoJywgJ3poLXR3JzogJ+a4m+WwkeWmguS4i+mXnOazqCcsICdlbic6ICdSZWNlbnQgVW5mb2xsb3dlZCcgfSwKICAndW5mb2xkVFRBcnRpY2FsJzogeyAnemgtY24nOiAn5aS05p2h5paH56ug55u05o6l5pi+56S65YWo5paH5Lul5YWN6K+v5pON5L2c5YWz5rOo5L2c6ICFJywgJ3poLWhrJzogJ+mgreaineaWh+eroOebtOaOpemhr+ekuuWFqOaWh+S7peWFjeiqpOaTjeS9nOmXnOazqOS9nOiAhScsICd6aC10dyc6ICfpoK3mop3mlofnq6Dnm7TmjqXpoa/npLrlhajmlofku6XlhY3oqqTmk43kvZzpl5zms6jkvZzogIUnLCAnZW4nOiAnVW5mb2xkIGFydGljYWwgdG8gYXZvaWQgZm9sbG93IGFydGljYWwgYXV0aG9yJyB9LAogICd1bmNoZWNrRm9sbG93UHJlc2VudGVyJzogeyAnemgtY24nOiAn6K+d6aKY6aG16Z2i5Y+R5biD5qGG5Y+W5raI6buY6K6k5Yu+6YCJ5YWz5rOo5Li75oyB5Lq6JywgJ3poLWhrJzogJ+ipsemhjOmggemdoueZvOS9iOahhuWPlua2iOmgkOioreWLvumBuOmXnOazqOS4u+aMgeS6uicsICd6aC10dyc6ICfoqbHpoYzpoIHpnaLnmbzkvYjmoYblj5bmtojpoJDoqK3li77pgbjpl5zms6jkuLvmjIHkuronLCAnZW4nOiAnVW5jaGVjayBmb2xsb3cgcHJlc2VudGVyIGluIHRvcGljIHBhZ2UnIH0sCiAgLy8g5YW25LuWCiAgJ290aGVyVG9vbHNUaXRsZSc6IHsgJ3poLWNuJzogJ+WFtuS7licsICd6aC1oayc6ICflhbbku5YnLCAnemgtdHcnOiAn5YW25LuWJywgJ2VuJzogJ090aGVycycgfSwKICAnZmFzdEVtb2ppSW5wdXQnOiB7ICd6aC1jbic6ICfooajmg4XpgInmi6nmoYbkvJjlhYjliJflh7rluLjnlKjlj4rnva7pobbooajmg4UnLCAnemgtaGsnOiAn6KGo5oOF6YG45pOH5qGG5YSq5YWI5YiX5Ye65bi455So5Y+K572u6aCC6KGo5oOFJywgJ3poLXR3JzogJ+ihqOaDhemBuOaTh+ahhuWEquWFiOWIl+WHuuW4uOeUqOWPiue9rumgguihqOaDhScsICdlbic6ICdMaXN0IHRvcCBhbmQgcmVjZW50IGVtb2ppIG9uIHRoZSB0b3Agb2YgZW1vamkgc2VsZWN0b3InIH0sCiAgJ3Nob3dMb2NhbFRpbWUnOiB7ICd6aC1jbic6ICfmmL7npLrml7bpl7Tml7bkvb/nlKjmnKzmnLrml7bljLonLCAnemgtaGsnOiAn6aGv56S65pmC6ZaT5pmC5L2/55So5pys5qmf5pmC5Y2AJywgJ3poLXR3JzogJ+mhr+ekuuaZgumWk+aZguS9v+eUqOacrOapn+aZguWNgCcsICdlbic6ICdTaG93IHRpbWVzdGFtcCB3aXRoIGxvY2FsIHRpbWUgem9uZScgfSwKICAvLyDmoLflvI8KICAnc3R5bGVGaWx0ZXJHcm91cFRpdGxlJzogeyAnemgtY24nOiAn5aSW6KeC5qC35byPJywgJ3poLWhrJzogJ+WkluingOaoo+W8jycsICd6aC10dyc6ICflpJbop4DmqKPlvI8nLCAnZW4nOiAnQXBwZWFyYW5jZScgfSwKICAvLyDmloflrZcKICAndGV4dFN0eWxlVGl0bGUnOiB7ICd6aC1jbic6ICfmloflrZcnLCAnemgtaGsnOiAn5paH5a2XJywgJ3poLXR3JzogJ+aWh+WtlycsICdlbic6ICdUZXh0JyB9LAogICdjdXN0b21Gb250RmFtaWx5JzogeyAnemgtY24nOiAn5pu/5o2i6buY6K6k5a2X5L2T5Li6fOilv+aWh3t7PHdmPn19fOS4reaWh3t7PGNmPn19JywgJ3poLWhrJzogJ+abv+aPm+mgkOioreWtl+W9oueCunzopb/mlod7ezx3Zj59fXzkuK3mlod7ezxjZj59fScsICd6aC10dyc6ICfmm7/mj5vpoJDoqK3lrZflvaLngrp86KW/5paHe3s8d2Y+fX185Lit5paHe3s8Y2Y+fX0nLCAnZW4nOiAnUmVwbGFjZSB0aGUgZGVmYXVsdCBmb250IGFzIHwgV2VzdGVybiB7ezx3Zj59fSB8IENoaW5lc2Uge3s8Y2Y+fX0nIH0sCiAgJ3dlaWJvTGFyZ2VGb250JzogeyAnemgtY24nOiAn5aKe5aSn5b6u5Y2a5q2j5paH5a2X5Y+35Li6fOWOn+Wkp+Wwj+eahHt7PHJhdGlvPn19JywgJ3poLWhrJzogJ+WinuWkp+W+ruWNmuato+aWh+Wtl+Wei+Wkp+Wwj+eCunzljp/lpKflsI/nmoR7ezxyYXRpbz59fScsICd6aC10dyc6ICflop7lpKflvq7ljZrmraPmloflrZflnovlpKflsI/ngrp85Y6f5aSn5bCP55qEe3s8cmF0aW8+fX0nLCAnZW4nOiAnSW5jcmVhc2UgZm9udCBzaXplIG9mIFdlaWJvIGNvbnRlbnQgdG8gfCB7ezxyYXRpbz59fScgfSwKICAnd2VpYm9MYXJnZUZvbnQxMjAnOiB7ICd6aC1jbic6ICcxMjAlJywgJ3poLWhrJzogJzEyMCUnLCAnemgtdHcnOiAnMTIwJScsICdlbic6ICcxMjAlJyB9LAogICd3ZWlib0xhcmdlRm9udDE1MCc6IHsgJ3poLWNuJzogJzE1MCUnLCAnemgtaGsnOiAnMTUwJScsICd6aC10dyc6ICcxNTAlJywgJ2VuJzogJzE1MCUnIH0sCiAgJ3dlaWJvTGFyZ2VGb250MjAwJzogeyAnemgtY24nOiAnMjAwJScsICd6aC1oayc6ICcyMDAlJywgJ3poLXR3JzogJzIwMCUnLCAnZW4nOiAnMjAwJScgfSwKICAnd2VpYm9MYXJnZUZvbnQzMDAnOiB7ICd6aC1jbic6ICczMDAlJywgJ3poLWhrJzogJzMwMCUnLCAnemgtdHcnOiAnMzAwJScsICdlbic6ICczMDAlJyB9LAogIC8vIOeJiOmdogogICdsYXlvdXRTdHlsZVRpdGxlJzogeyAnemgtY24nOiAn54mI6Z2iJywgJ3poLWhrJzogJ+eJiOmdoicsICd6aC10dyc6ICfniYjpnaInLCAnZW4nOiAnTGF5b3V0JyB9LAogICdhdmF0YXJTaGFwZSc6IHsgJ3poLWNuJzogJ+e7n+S4gOWktOWDj+W9oueKtuS4unx7ezxzaGFwZT59fScsICd6aC1oayc6ICfntbHkuIDpoK3lg4/lvaLni4Dngrp8e3s8c2hhcGU+fX0nLCAnemgtdHcnOiAn57Wx5LiA6aCt5YOP5b2i54uA54K6fHt7PHNoYXBlPn19JywgJ2VuJzogJ1Nob3cgYWxsIGF2YXRhcnMgYXMgfCB7ezxzaGFwZT59fScgfSwKICAnYXZhdGFyU2hhcGVDaXJjbGUnOiB7ICd6aC1jbic6ICflnIblvaInLCAnemgtaGsnOiAn5ZyT5b2iJywgJ3poLXR3JzogJ+Wck+W9oicsICdlbic6ICdDaXJjbGUnIH0sCiAgJ2F2YXRhclNoYXBlU3F1YXJlJzogeyAnemgtY24nOiAn5pa55b2iJywgJ3poLWhrJzogJ+aWueW9oicsICd6aC10dyc6ICfmlrnlvaInLCAnZW4nOiAnU3F1YXJlJyB9LAogICdkYXJrTmF2QmFyJzogeyAnemgtY24nOiAn5L2/55So5rex6Imy55qE5a+86Iiq5qCPJywgJ3poLWhrJzogJ+S9v+eUqOa3seiJsueahOWwjuimveWIlycsICd6aC10dyc6ICfkvb/nlKjmt7HoibLnmoTlsI7opr3liJcnLCAnZW4nOiAnRGFyayBuYXYgYmFyJyB9LAogICdyZW9yZGVyTmF2QmFyJzogeyAnemgtY24nOiAn5oGi5aSN57uP5YW45a+86Iiq5qCP5qC35byPe3s8aT59fScsICd6aC1oayc6ICfmgaLlvqnntpPlhbjlsI7opr3liJfmqKPlvI97ezxpPn19JywgJ3poLXR3JzogJ+aBouW+qee2k+WFuOWwjuimveWIl+aoo+W8j3t7PGk+fX0nLCAnZW4nOiAnUmVzdG9yZSBjbGFzc2ljYWwgc3R5bGUgbmF2aWdhdG9yIHt7PGk+fX0nIH0sCiAgJ3Jlb3JkZXJOYXZCYXJEZXNjJzogewogICAgJ3poLWNuJzogJ+W+ruWNmuWtl+agt+e0p+i0tOWcqOagh+ivhuWPs+S+p+aYvuekuu+8jOKAnOmmlumhteKAneKAnOeDremXqOKAneKAnOa4uOaIj+KAneeahOmTvuaOpeWHuueOsOWcqOaQnOe0ouahhueahOW3puS+p+OAgicKICB9LAogICduYXZIaWRlTmFtZSc6IHsgJ3poLWNuJzogJ+WwhuWvvOiIquagj+S4iueahOeUqOaIt+WQjXx7ezxhY3Q+fX17ezxpPn19JywgJ3poLWhrJzogJ+Wwh+WwjuimveWIl+S4iueahOeUqOaItuWQjXx7ezxhY3Q+fX17ezxpPn19JywgJ3poLXR3JzogJ+Wwh+WwjuimveWIl+S4iueahOeUqOaItuWQjXx7ezxhY3Q+fX17ezxpPn19JywgJ2VuJzogJ1VzZXJuYW1lIG9uIG5hdiBiYXIgd2lsbCBiZSB8IHt7PGFjdD59fXt7PGk+fX0nIH0sCiAgJ25hdkhpZGVOYW1lUmVwbGFjZSc6IHsgJ3poLWNuJzogJ+abv+aNouS4uuKAnHt7bmF2SGlkZU5hbWVSZXBsYWNlVGV4dH194oCdJywgJ3poLWhrJzogJ+abv+aPm+eCuuOAjHt7bmF2SGlkZU5hbWVSZXBsYWNlVGV4dH1944CNJywgJ3poLXR3JzogJ+abv+aPm+eCuuOAjHt7bmF2SGlkZU5hbWVSZXBsYWNlVGV4dH1944CNJywgJ2VuJzogJ3JlcGxhY2VkIHRvIHRleHQgInt7bmF2SGlkZU5hbWVSZXBsYWNlVGV4dH19IicgfSwKICAnbmF2SGlkZU5hbWVIaWRkZW4nOiB7ICd6aC1jbic6ICfpmpDol48nLCAnemgtaGsnOiAn6Zqx6JePJywgJ3poLXR3JzogJ+maseiXjycsICdlbic6ICdoaWRkZW4nIH0sCiAgJ25hdkhpZGVOYW1lRGVzYyc6IHsKICAgICd6aC1jbic6ICfmraTlpJbmgqjov5jlj6/ku6XlnKjniYjpnaLmuIXnkIbpgInpobnljaHmiJblnKjmraTli77pgInvvIzku6XpmpDol4/pmpDol4/lj7PmoI/nmoQgW1tsYXlvdXQucmlnaHQuaW5mb11dIOaooeWdl+OAguatpOWklui/mOWPr+S7peWcqOWKn+iDveaUuemAoOmAiemhueWNoeaIluatpOWkhOmAieaLqSBbW3Rvb2wuZml4ZWQuaGlkZV9uYXZfYmFyXV0g44CCJwogIH0sCiAgJ25hdkhpZGVOYW1lUmVwbGFjZVRleHQnOiB7ICd6aC1jbic6ICfkuKrkurrkuLvpobUnLCAnemgtaGsnOiAn5YCL5Lq65Li76aCBJywgJ3poLXR3JzogJ+WAi+S6uuS4u+mggScsICdlbic6ICdNeSBQcm9maWxlJyB9LAogICd3aWR0aFdlaWJvJzogeyAnemgtY24nOiAn6K6+572u5b6u5Y2a5a695bqm5Li6fHt7PHdpZHRoPn195YOP57SgIHt7PGk+fX0nLCAnemgtaGsnOiAn6Kit572u5b6u5Y2a5a+s5bqm54K6fHt7PHdpZHRoPn195ZyW5YWDIHt7PGk+fX0nLCAnemgtdHcnOiAn6Kit572u5b6u5Y2a5a+s5bqm54K6fHt7PHdpZHRoPn195ZyW5YWDIHt7PGk+fX0nLCAnZW4nOiAnU2V0IHdpZHRoIG9mIFdlaWJvIHRvIHwge3s8d2lkdGg+fX1weCB7ezxpPn19JyB9LAogICd3aWR0aFdlaWJvRGVzYyc6IHsKICAgICd6aC1jbic6ICflpoLmnpzmgqjlvIDlkK/kuoZbW3Rvb2wuc2lkZWJhci5tZXJnZV9sZWZ0X3JpZ2h0XV3vvIzosIPmlbTor6Xlrr3luqbkuLogNzUwcHgg5Y+v5Lul5oGi5aSN5Y6f5pyJ55qE6aG16Z2i5a695bqm44CCJwogIH0sCiAgJ3dlaWJvT25seSc6IHsKICAgICd6aC1jbic6ICfpmIXor7vop4blm7585a695bqme3s8d2lkdGg+fX3lg4/ntKB8fOW/q+aNt+mUrnt7PGtleT59fXx8e3s8c3dpdGNoPn195Zyo5b6u5Y2a5YiX6KGo6aG26YOo5pi+56S65b+r5o235byA5YWz5oyJ6ZKuJywKICAgICd6aC1oayc6ICfplrHoroDoppblnJZ85a+s5bqme3s8d2lkdGg+fX3lnJblhYN8fOW/q+mAn+mNtXt7PGtleT59fXx8e3s8c3dpdGNoPn195Zyo5b6u5Y2a5riF5Zau6aCC6YOo6aGv56S65b+r6YCf6ZaL6Zec5oyJ6YiVJywKICAgICd6aC10dyc6ICfplrHoroDoppblnJZ85a+s5bqme3s8d2lkdGg+fX3lnJblhYN8fOW/q+mAn+mNtXt7PGtleT59fXx8e3s8c3dpdGNoPn195Zyo5b6u5Y2a5riF5Zau6aCC6YOo6aGv56S65b+r6YCf6ZaL6Zec5oyJ6YiVJywKICAgICdlbic6ICdSZWFkaW5nIFZpZXcgfCB3aWR0aCB7ezx3aWR0aD59fXB4IHx8IHNob3J0Y3V0IHt7PGtleT59fSB8fCB7ezxzd2l0Y2g+fX0gc2hvdyBzd2l0Y2ggYnV0dG9uIGF0IHRvcCBvZiBXZWlibyBsaXN0JwogIH0sCiAgJ3dlaWJvT25seUJ1dHRvbkRlc2MnOiB7ICd6aC1jbic6ICfliIfmjaLop4blm74nLCAnemgtaGsnOiAn5YiH5o+b6KaW5ZyWJywgJ3poLXR3JzogJ+WIh+aPm+imluWclicsICdlbic6ICdTd2l0Y2ggVmlldycgfSwKICAna2V5SW5wdXRUaXAnOiB7ICd6aC1jbic6ICfmjInkuIvplK7nm5jkv67mlLnlv6vmjbfplK7orr7nva4nLCAnemgtaGsnOiAn5oyJ5LiL6Y2155uk5L+u5pS55b+r6YCf6Y216Kit572uJywgJ3poLXR3JzogJ+aMieS4i+mNteebpOS/ruaUueW/q+mAn+mNteioree9ricsICdlbic6ICdQcmVzcyBrZXkgdG8gbW9kaWZ5IHNob3J0Y3V0IGtleSBzZXR0aW5nJyB9LAogICdzZXRTa2luJzogewogICAgJ3poLWNuJzogJ+e7n+S4gOaJgOaciemhtemdouS9v+eUqHzmqKHmnb97ezxza2luPn19IHt7PGk+fX0nLAogICAgJ3poLWhrJzogJ+e1seS4gOaJgOaciemggemdouS9v+eUqHzmqKHmnb97ezxza2luPn19IHt7PGk+fX0nLAogICAgJ3poLXR3JzogJ+e1seS4gOaJgOaciemggemdouS9v+eUqHzmqKHmnb97ezxza2luPn19IHt7PGk+fX0nLAogICAgJ2VuJzogJ1Nob3cgYWxsIHBhZ2VzIHdpdGggfCB0ZW1wbGF0ZSB7ezxza2luPn19IHt7PGk+fX0nLAogIH0sCiAgJ3NldFNraW5EZXNjJzogewogICAgJ3poLWNuJzogJ+W8gOWQr+WQjuaJgOaciemhtemdouWwhuaYvuekuuaCqOmAieaLqeeahOaooeadv++8jOWMheaLrOWFtuS7lueUqOaIt+eahOS4quS6uuS4u+mhteOAguaooeadv+S4jeS8muimhuebluaCqOWcqOS4u+mhteiHquWumuS5ieeahOiDjOaZr+WbvuaIlumFjeiJsu+8jOS9huaYr+S8muimhuebluS4quS6uuS4u+mhteeahOiDjOaZr+WbvuaIlumFjeiJsuOAguaooeadv+aViOaenOS7heWcqOaCqOeahOa1j+iniOWZqOS4reeUn+aViO+8jOS7luS6uuiuv+mXruaCqOeahOS4quS6uuS4u+mhteaXtu+8jOS7jeS8mueci+WIsOaCqOWcqOW+ruWNmuS4reiuvue9rueahOaooeadv+OAgjxiciAvPuaooeadv+eahOmAieaLqeivt+WPguiAgzxhIGhyZWY9Ii8vc2tpbi52aXAud2VpYm8uY29tL2xpc3Q/dG9wbmF2PTEmd3ZyPTYiIHRhcmdldD0iX2JsYW5rIj7mqKHmnb/llYblupc8L2E+77yM5Zyo5qih5p2/5ZWG5bqX5Lit54K55Ye75Zu+54mH6aKE6KeI5LiO5bqU55So5qih5p2/44CCJywKICB9LAogICdzZXRTa2luQnlQcmV2aWV3JzogewogICAgJ3poLWNuJzogJ1lldCBBbm90aGVyIFdlaWJvIEZpbHRlciDmqKHmnb/orr7nva4nLAogIH0sCiAgJ3NldFNraW5CeVByZXZpZXdEZXNjJzogewogICAgJ3poLWNuJzogJ+aCqOimgeWcqCBZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXIg6ISa5pys5Lit5L2/55So4oCce3tuYW1lfX3igJ3mqKHmnb/lkJfvvJ88YnIgLz7lkK/nlKjlkI7mgqjorr/pl67lkITnp43pobXpnaLml7bpg73lsIbkvb/nlKjlvZPliY3nmoTmqKHmnb/jgII8YnIgLz7lnKjohJrmnKzkuK3kvb/nlKjnmq7ogqTkuI3kvJrlvbHlk43lhbbku5bnlKjmiLfmn6XnnIvmgqjkuKrkurrkuLvpobXml7bnmoTmqKHmnb/moLflvI/jgIInLAogICAgJ3poLWhrJzogJ+aCqOimgeWcqCBZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXIg6IWz5pys5Lit5L2/55So44CMe3tuYW1lfX3jgI3mqKHmnb/ll47vvJ88YnIgLz7llZ/nlKjlvozmgqjoqKrllY/lkITnqK7poIHpnaLmmYLpg73lsIfkvb/nlKjnlbbliY3nmoTmqKHmnb/jgII8YnIgLz7lnKjohbPmnKzkuK3kvb/nlKjnmq7ohprkuI3mnIPlvbHpn7/lhbbku5bnlKjmiLbmn6XnnIvmgqjlgIvkurrkuLvpoIHmmYLnmoTmqKHmnb/mqKPlvI/jgIInLAogICAgJ3poLXR3JzogJ+aCqOimgeWcqCBZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXIg6IWz5pys5Lit5L2/55So44CMe3tuYW1lfX3jgI3mqKHmnb/ll47vvJ88YnIgLz7llZ/nlKjlvozmgqjoqKrllY/lkITnqK7poIHpnaLmmYLpg73lsIfkvb/nlKjnlbbliY3nmoTmqKHmnb/jgII8YnIgLz7lnKjohbPmnKzkuK3kvb/nlKjnmq7ohprkuI3mnIPlvbHpn7/lhbbku5bnlKjmiLbmn6XnnIvmgqjlgIvkurrkuLvpoIHmmYLnmoTmqKHmnb/mqKPlvI/jgIInLAogICAgJ2VuJzogJ0RvIHlvdSB3YW50IHRvIGVuYWJsZSB0aGUgdGVtcGxhdGUgInt7bmFtZX19IiBpbiBZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXIgc2NyaXB0PzxiciAvPkFsbCBwYWdlcyB3aWxsIHNob3cgY3VycmVudCB0ZW1wbGF0ZSBpZiB5b3UgY2hvb3NlIGVuYWJsZSBpdC4nLAogIH0sCiAgJ2ZlZWRMaXN0TmF2Rml4JzogeyAnemgtY24nOiAn5aSE55CG5raI5oGv5rWB5a+86Iiq5qCP5o6S54mI6ZSZ5L2N55qE6Zeu6aKY77yI5Li05pe25oCn77yJe3s8aT59fScsICd6aC1oayc6ICfomZXnkIbmtojmga/mtYHlsI7oiKrmrITmjpLniYjpjK/kvY3nmoTllY/poYzvvIjoh6jmmYLmgKfvvIl7ezxpPn19JywgJ3poLXR3JzogJ+iHqOaZguiZleeQhua2iOaBr+a1geWwjuiIquashOaOkueJiOmMr+S9jeeahOWVj+mhjO+8iOiHqOaZguaAp++8iXt7PGk+fX0nLCAnZW4nOiAnRml4IHRoZSB3cm9uZyBsYXlvdXQgb2YgZmVlZCBsaXN0IG5hdiBiYXIgKFRlbXBvcmFyeSkge3s8aT59fScgfSwKICAnZmVlZExpc3ROYXZGaXhEZXNjJzogewogICAgJ3poLWNuJzogJ+WmguaenOaCqOa2iOaBr+a1geWvvOiIquagj+eahOaOkueJiOWHuueOsOmUmeS9je+8jOWvvOiHtOesrOS4gOadoeW+ruWNmueahOS9nOiAheWktOWDj+iiq+aYvuekuuWIsOWPs+S+p++8jOaCqOWPr+S7peWwneivleS4tOaXtuaJk+W8gOacrOWKn+iDveOAguWmguaenOaCqOayoeacieWPkeeOsOS7u+S9leW8guW4uO+8jOivt+S4jeimgeW8gOWQr+acrOWKn+iDveOAguazqOaEj++8muW+ruWNmuS/ruWkjeWvueW6lOWKn+iDveWQjuaCqOWPr+iDvemcgOimgeWFs+mXreacrOWKn+iDveS7peS/neivgeato+W4uOeahOa1j+iniOOAgicsCiAgfSwKICAvLyDlvq7ljZoKICAnd2VpYm9TdHlsZVRpdGxlJzogeyAnemgtY24nOiAn5b6u5Y2aJywgJ3poLWhrJzogJ+W+ruWNmicsICd6aC10dyc6ICflvq7ljZonLCAnZW4nOiAnV2VpYm8nIH0sCiAgJ3Vud3JhcFRleHREZXNjJzogeyAnemgtY24nOiAn5b6u5Y2a5L2c6ICF5ZKM5q2j5paH5ZCM6KGMJywgJ3poLWhrJzogJ+W+ruWNmuS9nOiAheWSjOato+aWh+WQjOihjCcsICd6aC10dyc6ICflvq7ljZrkvZzogIXlkozmraPmloflkIzooYwnLCAnZW4nOiAnTm8gbGluZSBicmVhayBhZnRlciBhdXRob3InIH0sCiAgJ3Vud3JhcENvbnRlbnQnOiB7ICd6aC1jbic6ICflsIblvq7ljZrkuK3nmoTmjaLooYzmmL7npLrkuLp8e3s8dGV4dD59fXt7PGk+fX0nLCAnemgtaGsnOiAn5bCH5b6u5Y2a5Lit55qE5o+b6KGM6aGv56S654K6fHt7PHRleHQ+fX17ezxpPn19JywgJ3poLXR3JzogJ+Wwh+W+ruWNmuS4reeahOaPm+ihjOmhr+ekuueCunx7ezx0ZXh0Pn19e3s8aT59fScsICdlbic6ICdTaG93IGxpbmUgYnJlYWtzIGFzIGNoYXJhY3RlciB8e3s8dGV4dD59fXt7PGk+fX0nIH0sCiAgJ3Vud3JhcENvbnRlbnREZXNjJzogewogICAgJ3poLWNuJzogJ+aCqOi/mOWPr+S7peWcqOiHquWumuS5ieagt+W8j+S4reS9v+eUqOKAnCAueWF3Zi1saW5lYnJlYWs6OmJlZm9yZSB7IGNvbnRlbnQ6ICLij44iIH0g4oCd6Ieq5a6a5LmJ44CC6ZyA6KaB6K6+572u5YaF5a656L+H5ruk5Zmo5pe25oKo5LuN6ZyA6KaB5L2/55So5q2j5YiZ6KGo6L6+5byPPGNvZGU+XFxuPC9jb2RlPuihqOekuuaNouihjOespuOAgicKICB9LAogICdpbWFnZVNpemUnOiB7ICd6aC1jbic6ICfmgaLlpI3lm77niYflpKflsI/kuLrmraPluLjlsLrlr7gge3s8aT59fXx8e3s8cmVwb3N0Pn195ZCM5pe257yp5bCP6KKr6L2s5Y+R55qE5Y6f5b6u5Y2a55qE5a695bqmJywgJ3poLWhrJzogJ+aBouW+qeWclueJh+Wkp+Wwj+eCuuato+W4uOWwuuWvuCB7ezxpPn19fHx7ezxyZXBvc3Q+fX3lkIzmmYLnuK7lsI/ooqvovYnnmbznmoTljp/lvq7ljZrnmoTlr6zluqYnLCAnemgtdHcnOiAn5oGi5b6p5ZyW54mH5aSn5bCP54K65q2j5bi45bC65a+4IHt7PGk+fX18fHt7PHJlcG9zdD59feWQjOaZgue4ruWwj+iiq+i9ieeZvOeahOWOn+W+ruWNmueahOWvrOW6picsICdlbic6ICdSZXN0b3JlIHBpY3R1cmVzIHRvIG5vcm1hbCBzaXplIHt7PGk+fX18fHt7PHJlcG9zdD59fSBhbmQgcmVzdG9yZSB0aGUgc2l6ZSBvZiBvcmlnaW5hbCB3ZWlibycgfSwKICAnaW1hZ2VTaXplRGVzYyc6IHsKICAgICd6aC1jbic6ICfnvKnlsI/lm77niYflsLrlr7jku4XlvbHlk43lm77niYflnKjmgqjnmoTnvZHpobXkuIrnmoTmmL7npLrmlYjmnpzvvIzkuI3og73pmY3kvY7nvZHnu5zmlbDmja7mtYHph4/nlKjph4/jgIInCiAgfSwKICAnbm9XZWlib1NwYWNlJzogeyAnemgtY24nOiAn56e76Zmk5b6u5Y2a5LiO5b6u5Y2a6Ze055qE56m66ZqZJywgJ3poLWhrJzogJ+enu+mZpOW+ruWNmuiIh+W+ruWNmumWk+eahOepuumamScsICd6aC10dyc6ICfnp7vpmaTlvq7ljZroiIflvq7ljZrplpPnmoTnqbrpmpknLCAnZW4nOiAnUmVtb3ZlIHNwYWNlIGJldHdlZW4gV2VpYm8nIH0sCiAgJ2Zyb21JbkJvdHRvbSc6IHsgJ3poLWNuJzogJ+WwhuW+ruWNmueahOWPkeW4g+aXtumXtOWSjOadpea6kOenu+WKqOWIsOW+ruWNmuacq+WwviB7ezxpPn19JywgJ3poLWhrJzogJ+Wwh+W+ruWNmueahOeZvOW4g+aZgumWk+WSjOS+hua6kOenu+WLleWIsOW+ruWNmuacq+WwviB7ezxpPn19JywgJ3poLXR3JzogJ+Wwh+W+ruWNmueahOeZvOW4g+aZgumWk+WSjOS+hua6kOenu+WLleWIsOW+ruWNmuacq+WwviB7ezxpPn19JywgJ2VuJzogJ01vdmUgdGltZXN0YW1wIGFuZCBzb3VyY2Ugb2YgV2VpYm8gdG8gYm90dG9tIHt7PGk+fX0nIH0sCiAgJ3VzZXJQYWdlTm9BdXRob3InOiB7ICd6aC1jbic6ICfkuI3lnKjkuKrkurrkuLvpobXmmL7npLrkvZzogIXlpLTlg4/kuI7nlKjmiLflkI18e3s8d2hvPn19ICcsICd6aC1oayc6ICfkuI3lnKjlgIvkurrkuLvpoIHpoa/npLrkvZzogIXpoK3lg4/oiIfnlKjmiLblkI18e3s8d2hvPn19ICcsICd6aC10dyc6ICfkuI3lnKjlgIvkurrkuLvpoIHpoa/npLrkvZzogIXpoK3lg4/oiIfnlKjmiLblkI18e3s8d2hvPn19ICcsICdlbic6ICdIaWRlIGF2YXRhciBhbmQgdXNlcm5hbWUgb2YgYXV0aG9yIHwgb24ge3s8d2hvPn19ICcgfSwKICAndXNlclBhZ2VOb0F1dGhvck1pbmUnOiB7ICd6aC1jbic6ICfku4Xoh6rlt7HnmoTkuKrkurrkuLvpobUnLCAnemgtaGsnOiAn5YOF6Ieq5bex55qE5YCL5Lq65Li76aCBJywgJ3poLXR3JzogJ+WDheiHquW3seeahOWAi+S6uuS4u+mggScsICdlbic6ICdteSB1c2VyIHBhZ2UnIH0sCiAgJ3VzZXJQYWdlTm9BdXRob3JBbGwnOiB7ICd6aC1jbic6ICfmiYDmnInkurrnmoTkuKrkurrkuLvpobUnLCAnemgtaGsnOiAn5omA5pyJ5Lq655qE5YCL5Lq65Li76aCBJywgJ3poLXR3JzogJ+aJgOacieS6uueahOWAi+S6uuS4u+mggScsICdlbic6ICdhbGwgdXNlciBwYWdlcycgfSwKICAnZnJvbUluQm90dG9tRGVzYyc6IHsKICAgICd6aC1jbic6ICflpoLmnpzmgqjlvIDlkK/kuoZbW3N0eWxlLnN3ZWliby5ub193ZWlib19zcGFjZV1d77yM5L2G5pyq5byA5ZCv5pys5Yqf6IO977yM5YiZ5b6u5Y2a55qE5Y+R5biD5pe26Ze05ZKM5p2l5rqQ5bCG5Lya6KKr6ZqQ6JeP44CCJwogIH0sCiAgJ2hvdmVyU2hvd0ZvbGQnOiB7ICd6aC1jbic6ICfpvKDmoIfmjIflkJHooqvmipjlj6Dlvq7ljZrml7bmmL7npLrlhoXlrrknLCAnemgtaGsnOiAn5ruR6byg5oyH5ZCR6KKr5oqY55aK5b6u5Y2a5pmC6aGv56S65YWn5a65JywgJ3poLXR3JzogJ+a7kem8oOaMh+WQkeiiq+aKmOeWiuW+ruWNmuaZgumhr+ekuuWFp+WuuScsICdlbic6ICdTaG93IGZvbGRlZCBXZWlibyB3aGVuIG1vdXNlIG92ZXInIH0sCiAgJ2xheW91dFJlb3JkZXInOiB7CiAgICAnemgtY24nOiAn6YeN5paw5o6S5YiX5b6u5Y2a5o6n5Yi25oyJ6ZKue3s8aT59fXx8e3s8MT59fXx7ezwyPn19fHt7PDM+fX18e3s8ND59fXx7ezw1Pn19JywKICAgICd6aC1oayc6ICfph43mlrDmjpLliJflvq7ljZrmjqfliLbmjInpiJV7ezxpPn19fHx7ezwxPn19fHt7PDI+fX18e3s8Mz59fXx7ezw0Pn19fHt7PDU+fX0nLAogICAgJ3poLXR3JzogJ+mHjeaWsOaOkuWIl+W+ruWNmuaOp+WItuaMiemIlXt7PGk+fX18fHt7PDE+fX18e3s8Mj59fXx7ezwzPn19fHt7PDQ+fX18e3s8NT59fScsCiAgICAnZW4nOiAnUmVvcmRlciBXZWlibyBjb250cm9sIGJ1dHRvbnN7ezxpPn19fHx7ezwxPn19fHt7PDI+fX18e3s8Mz59fXx7ezw0Pn19fHt7PDU+fX0nCiAgfSwKICAnZm9sZGVkV2VpYm9UZXh0RGVzYyc6IHsgJ3poLWNuJzogJ+iiq+aKmOWPoOW+ruWNmueahOaPkOekuuS/oeaBr+WMheWQq3x7ezx0ZXh0Pn19JywgJ3poLWhrJzogJ+iiq+aKmOeWiuW+ruWNmueahOaPkOekuuioiuaBr+WMheWQq3x7ezx0ZXh0Pn19JywgJ3poLXR3JzogJ+iiq+aKmOeWiuW+ruWNmueahOaPkOekuuioiuaBr+WMheWQq3x7ezx0ZXh0Pn19JywgJ2VuJzogJ1Nob3cgZm9sZGVkIHdlaWJvIHdpdGggaW5mb3JtYXRpb24gYWJvdXQgfCB7ezx0ZXh0Pn19JyB9LAogICdmb2xkZWRXZWlib1RleHRBdXRob3JEZXNjJzogeyAnemgtY24nOiAn5L2c6ICFJywgJ3poLWhrJzogJ+S9nOiAhScsICd6aC10dyc6ICfkvZzogIUnLCAnZW4nOiAnQXV0aG9yJyB9LAogICdmb2xkZWRXZWlib1RleHRSZWFzb25EZXNjJzogeyAnemgtY24nOiAn5oqY5Y+g5Y6f5ZugJywgJ3poLWhrJzogJ+aKmOeWiuWOn+WboCcsICd6aC10dyc6ICfmipjnlorljp/lm6AnLCAnZW4nOiAnUmVhc29uJyB9LAogICdmb2xkZWRXZWlib1RleHRBdXRob3JSZWFzb25EZXNjJzogeyAnemgtY24nOiAn5L2c6ICF5ZKM5oqY5Y+g5Y6f5ZugJywgJ3poLWhrJzogJ+S9nOiAheWSjOaKmOeWiuWOn+WboCcsICd6aC10dyc6ICfkvZzogIXlkozmipjnlorljp/lm6AnLCAnZW4nOiAnQXV0aG9yIGFuZCByZWFzb24nIH0sCiAgJ2ZvbGRlZFdlaWJvVGV4dCc6IHsKICAgICd6aC1jbic6ICci5LiA5p2h5b6u5Y2a6KKr5oqY5Y+g77yM6K+354K55Ye75p+l55yLIicsCiAgICAnemgtaGsnOiAnIuS4gOaineW+ruWNmuiiq+aKmOeWiu+8jOiri+m7nuaTiuafpeeciyInLAogICAgJ3poLXR3JzogJyLkuIDmop3lvq7ljZrooqvmipjnlorvvIzoq4vpu57mk4rmn6XnnIsiJywKICAgICdlbic6ICciQSBXZWlibyB3YXMgZm9sZGVkLCBjbGljayB0byB2aWV3LiInCiAgfSwKICAnZm9sZGVkV2VpYm9UZXh0QXV0aG9yJzogewogICAgJ3poLWNuJzogJyLmnaXoh6ogQCIgYXR0cih5YXdmLWF1dGhvcikgIiDnmoTkuIDmnaHlvq7ljZrooqvmipjlj6DvvIzor7fngrnlh7vmn6XnnIsiJywKICAgICd6aC1oayc6ICci5L6G6IeqIEAiIGF0dHIoeWF3Zi1hdXRob3IpICIg55qE5LiA5qKd5b6u5Y2a6KKr5oqY55aK77yM6KuL6bue5pOK5p+l55yLIicsCiAgICAnemgtdHcnOiAnIuS+huiHqiBAIiBhdHRyKHlhd2YtYXV0aG9yKSAiIOeahOS4gOaineW+ruWNmuiiq+aKmOeWiu+8jOiri+m7nuaTiuafpeeciyInLAogICAgJ2VuJzogJyJBIFdlaWJvIGZyb20gQCIgYXR0cih5YXdmLWF1dGhvcikgIiB3YXMgZm9sZGVkLCBjbGljayB0byB2aWV3LiInCiAgfSwKICAnZm9sZGVkV2VpYm9UZXh0UmVhc29uJzogewogICAgJ3poLWNuJzogJyLkuIDmnaHlvq7ljZoiIGF0dHIoeWF3Zi1yZWFzb24pICLogIzooqvmipjlj6DvvIzor7fngrnlh7vmn6XnnIsiJywKICAgICd6aC1oayc6ICci5LiA5qKd5b6u5Y2aIiBhdHRyKHlhd2YtcmVhc29uKSAi6ICM6KKr5oqY55aK77yM6KuL6bue5pOK5p+l55yLIicsCiAgICAnemgtdHcnOiAnIuS4gOaineW+ruWNmiIgYXR0cih5YXdmLXJlYXNvbikgIuiAjOiiq+aKmOeWiu+8jOiri+m7nuaTiuafpeeciyInLAogICAgJ2VuJzogJyJBIFdlaWJvIHdhcyBmb2xkZWQgIiBhdHRyKHlhd2YtcmVhc29uKSAiLCBjbGljayB0byB2aWV3LiInCiAgfSwKICAnZm9sZGVkV2VpYm9UZXh0QXV0aG9yUmVhc29uJzogewogICAgJ3poLWNuJzogJyLmnaXoh6ogQCIgYXR0cih5YXdmLWF1dGhvcikgIiDnmoTkuIDmnaHlvq7ljZoiIGF0dHIoeWF3Zi1yZWFzb24pICLogIzooqvmipjlj6DvvIzor7fngrnlh7vmn6XnnIsiJywKICAgICd6aC1oayc6ICci5L6G6IeqIEAiIGF0dHIoeWF3Zi1hdXRob3IpICIg55qE5LiA5qKd5b6u5Y2aIiBhdHRyKHlhd2YtcmVhc29uKSAi6ICM6KKr5oqY55aK77yM6KuL6bue5pOK5p+l55yLIicsCiAgICAnemgtdHcnOiAnIuS+huiHqiBAIiBhdHRyKHlhd2YtYXV0aG9yKSAiIOeahOS4gOaineW+ruWNmiIgYXR0cih5YXdmLXJlYXNvbikgIuiAjOiiq+aKmOeWiu+8jOiri+m7nuaTiuafpeeciyInLAogICAgJ2VuJzogJyJBIFdlaWJvIGZyb20gQCIgYXR0cih5YXdmLWF1dGhvcikgIiB3YXMgZm9sZGVkICIgYXR0cih5YXdmLXJlYXNvbikgIiwgY2xpY2sgdG8gdmlldy4iJwogIH0sCiAgJ2xheW91dFJlb3JkZXJEZXNjJzogewogICAgJ3poLWNuJzogJ+aCqOi/mOWPr+S7peWcqOeJiOmdoua4heeQhumAiemhueWNoeS4remakOiXj+aCqOS4jeaDs+eci+WIsOeahOaMiemSru+8jOaIluWcqOatpOWLvumAieS7pemakOiXj++8mltbbGF5b3V0LndlaWJvLnBvcF1dIFtbbGF5b3V0LndlaWJvLmZhdm91cml0ZV1dIFtbbGF5b3V0LndlaWJvLmZvcndhcmRdXSBbW2xheW91dC53ZWliby5saWtlXV0nLAogIH0sCiAgJ2xheW91dFJlb3JkZXJQb3AnOiB7ICd6aC1jbic6ICfmjqjlub8nLCAnemgtaGsnOiAn5o6o5bujJywgJ3poLXR3JzogJ+aOqOW7oycsICdlbic6ICcgUHJvbW90ZScgfSwKICAnbGF5b3V0UmVvcmRlckZhdm9yaXRlJzogeyAnemgtY24nOiAn5pS26JePJywgJ3poLWhrJzogJ+aUtuiXjycsICd6aC10dyc6ICfmlLbol48nLCAnZW4nOiAnRmF2b3VyaXRlJyB9LAogICdsYXlvdXRSZW9yZGVyRm9yd2FyZCc6IHsgJ3poLWNuJzogJ+i9rOWPkScsICd6aC1oayc6ICfovYnnmbwnLCAnemgtdHcnOiAn6L2J55m8JywgJ2VuJzogJ0ZvcndhcmQnIH0sCiAgJ2xheW91dFJlb3JkZXJDb21tZW50JzogeyAnemgtY24nOiAn6K+E6K66JywgJ3poLWhrJzogJ+ipleirlicsICd6aC10dyc6ICfoqZXoq5YnLCAnZW4nOiAnQ29tbWVudCcgfSwKICAnbGF5b3V0UmVvcmRlckxpa2UnOiB7ICd6aC1jbic6ICfotZ4nLCAnemgtaGsnOiAn6K6aJywgJ3poLXR3JzogJ+iumicsICdlbic6ICdMaWtlJyB9LAogICdsYXlvdXRDb21tZW50UmVvcmRlcic6IHsKICAgICd6aC1jbic6ICfph43mlrDmjpLliJfor4TorrrmjqfliLbmjInpkq57ezxpPn19fHx7ezwxPn19fHt7PDI+fX18e3s8Mz59fXx7ezw0Pn19fHt7PDU+fX0nLAogICAgJ3poLWhrJzogJ+mHjeaWsOaOkuWIl+ipleirluaOp+WItuaMiemIlXt7PGk+fX18fHt7PDE+fX18e3s8Mj59fXx7ezwzPn19fHt7PDQ+fX18e3s8NT59fScsCiAgICAnemgtdHcnOiAn6YeN5paw5o6S5YiX6KmV6KuW5o6n5Yi25oyJ6YiVe3s8aT59fXx8e3s8MT59fXx7ezwyPn19fHt7PDM+fX18e3s8ND59fXx7ezw1Pn19JywKICAgICdlbic6ICdSZW9yZGVyIGNvbW1lbnQgY29udHJvbCBidXR0b25ze3s8aT59fXx8e3s8MT59fXx7ezwyPn19fHt7PDM+fX18e3s8ND59fXx7ezw1Pn19JwogIH0sCiAgJ2xheW91dENvbW1lbnRSZW9yZGVyRGVzYyc6IHsKICAgICd6aC1jbic6ICfmgqjov5jlj6/ku6XlnKjniYjpnaLmuIXnkIbpgInpobnljaHkuK3pmpDol4/mgqjkuI3mg7PnnIvliLDnmoTmjInpkq7vvIzmiJblnKjmraTli77pgInku6XpmpDol4/vvJpbW2xheW91dC53ZWliby5yZXBvcnRdXSBbW2xheW91dC53ZWliby5saWtlY29tbWVudF1dJywKICB9LAogICdsYXlvdXRDb21tZW50UmVvcmRlclJlcG9ydCc6IHsgJ3poLWNuJzogJ+S4vuaKpScsICd6aC1oayc6ICfoiInloLEnLCAnemgtdHcnOiAn5qqi6IiJJywgJ2VuJzogJ1JlcG9ydCcgfSwKICAnbGF5b3V0Q29tbWVudFJlb3JkZXJEZWxldGUnOiB7ICd6aC1jbic6ICfliKDpmaQnLCAnemgtaGsnOiAn5Yiq6ZmkJywgJ3poLXR3JzogJ+WIqumZpCcsICdlbic6ICdEZWxldGUnIH0sCiAgJ2xheW91dENvbW1lbnRSZW9yZGVyQ29udmVyc2l0aW9uJzogeyAnemgtY24nOiAn5p+l55yL5a+56K+dJywgJ3poLWhrJzogJ+afpeeci+WwjeipsScsICd6aC10dyc6ICfmn6XnnIvlsI3oqbEnLCAnZW4nOiAnVmlldyBDb252ZXJzYXRpb24nIH0sCiAgJ2xheW91dENvbW1lbnRSZW9yZGVyUmVwbHknOiB7ICd6aC1jbic6ICflm57lpI0nLCAnemgtaGsnOiAn5Zue6KaGJywgJ3poLXR3JzogJ+WbnuimhicsICdlbic6ICdSZXBseScgfSwKICAnbGF5b3V0Q29tbWVudFJlb3JkZXJMaWtlJzogeyAnemgtY24nOiAn6LWeJywgJ3poLWhrJzogJ+iumicsICd6aC10dyc6ICforponLCAnZW4nOiAnTGlrZScgfSwKICAnbG93UmVhZGluZ1dhcm4nOiB7CiAgICAnemgtY24nOiAn5Zyo6Ieq5bex5Liq5Lq65Li76aG16auY5Lqu5pi+56S66ZiF6K+75pWw6YePfOS4jei2hei/h3t7PGNvdW50Pn1955qE5b6u5Y2aJywKICAgICd6aC1oayc6ICflnKjoh6rlt7HlgIvkurrkuLvpoIHpq5jkuq7poa/npLrplrHoroDmlbjph4985LiN6LaF6YGOe3s8Y291bnQ+fX3nmoTlvq7ljZonLAogICAgJ3poLXR3JzogJ+WcqOiHquW3seWAi+S6uuS4u+mggemrmOS6rumhr+ekuumWseiugOaVuOmHj3zkuI3otoXpgY57ezxjb3VudD59feeahOW+ruWNmicsCiAgICAnZW4nOiAnSGlnaGxpZ2h0IHdlaWJvIG9uIG15IHByb2ZpbGUgcGFnZSB3aGljaCBoYXMgfCBubyBtb3JlIHRoYW4ge3s8Y291bnQ+fX0gdmlld3MnLAogIH0sCiAgLy8g6aKc6ImyCiAgJ2NvbG9yU3R5bGVUaXRsZSc6IHsgJ3poLWNuJzogJ+minOiJsicsICd6aC1oayc6ICfpoY/oibInLCAnemgtdHcnOiAn6aGP6ImyJywgJ2VuJzogJ0NvbG9yJyB9LAogICd3aGl0ZWxpc3RIaWdobGlnaHREZXNjJzogeyAnemgtY24nOiAn6auY5Lqu5pi+56S655m95ZCN5Y2V55qE5b6u5Y2afOiDjOaZr+iJsnt7PGNvbG9yPn19fOmAj+aYjuW6pnt7PHRyYW5zcGFyZW5jeT59fSUnLCAnemgtaGsnOiAn6auY5Lqu6aGv56S655m95ZCN5Zau55qE5b6u5Y2afOiDjOaZr+iJsnt7PGNvbG9yPn19fOmAj+aYjuW6pnt7PHRyYW5zcGFyZW5jeT59fSUnLCAnemgtdHcnOiAn6auY5Lqu6aGv56S655m95ZCN5Zau55qE5b6u5Y2afOiDjOaZr+iJsnt7PGNvbG9yPn19fOmAj+aYjuW6pnt7PHRyYW5zcGFyZW5jeT59fSUnLCAnZW4nOiAnSGlnaGxpZ2h0IFdlaWJvIGluIHdoaXRlbGlzdCB3aXRoIHwgYmFja2dyb3VuZCBjb2xvciB7ezxjb2xvcj59fSB8IHRyYW5zcGFyZW5jeSB7ezx0cmFuc3BhcmVuY3k+fX0lJyB9LAogICdjb2xvck92ZXJyaWRlJzogewogICAgJ3poLWNuJzogJ+S/ruaUuee9kemhtemFjeiJsu+8iOWNiumAj+aYjuiDjOaZr++8iXt7PGk+fX18fOS4u+iDjOaZr+iJsnt7PGNvbG9yMj59fXzpgI/mmI7luqZ7ezx0cmFuc3BhcmVuY3kyPn19JXx85Ymv6IOM5pmv6Imye3s8Y29sb3IxPn19fOmAj+aYjuW6pnt7PHRyYW5zcGFyZW5jeTE+fX0lfHzovpPlhaXmoYbog4zmma/oibJ7ezxjb2xvcjM+fX186YCP5piO5bqme3s8dHJhbnNwYXJlbmN5Mz59fSUnLAogICAgJ3poLWhrJzogJ+S/ruaUuee2sumggemFjeiJsu+8iOWNiumAj+aYjuiDjOaZr++8iXt7PGk+fX18fOS4u+iDjOaZr+iJsnt7PGNvbG9yMj59fXzpgI/mmI7luqZ7ezx0cmFuc3BhcmVuY3kyPn19JXx85Ymv6IOM5pmv6Imye3s8Y29sb3IxPn19fOmAj+aYjuW6pnt7PHRyYW5zcGFyZW5jeTE+fX0lfHzovLjlhaXmlrnloYrog4zmma/oibJ7ezxjb2xvcjM+fX186YCP5piO5bqme3s8dHJhbnNwYXJlbmN5Mz59fSUnLAogICAgJ3poLXR3JzogJ+S/ruaUuee2sumggemFjeiJsu+8iOWNiumAj+aYjuiDjOaZr++8iXt7PGk+fX18fOS4u+iDjOaZr+iJsnt7PGNvbG9yMj59fXzpgI/mmI7luqZ7ezx0cmFuc3BhcmVuY3kyPn19JXx85Ymv6IOM5pmv6Imye3s8Y29sb3IxPn19fOmAj+aYjuW6pnt7PHRyYW5zcGFyZW5jeTE+fX0lfHzovLjlhaXmlrnloYrog4zmma/oibJ7ezxjb2xvcjM+fX186YCP5piO5bqme3s8dHJhbnNwYXJlbmN5Mz59fSUnLAogICAgJ2VuJzogJ0NoYW5nZSBjb2xvcnMgb24gcGFnZSAoU2VtaS10cmFuc3BhcmVudCBiYWNrZ3JvdW5kKSB7ezxpPn19IHx8IFByaW1hcnkgQ29sb3Ige3s8Y29sb3IyPn19IHwgdHJhbnNwYXJlbmN5IHt7PHRyYW5zcGFyZW5jeTI+fX0lIHx8IFNlY29uZGFyeSBDb2xvciB7ezxjb2xvcjE+fX0gfCB0cmFuc3BhcmVuY3kge3s8dHJhbnNwYXJlbmN5MT59fSUgfHwgSW5wdXQgYm94IHt7PGNvbG9yMz59fSB8IHRyYW5zcGFyZW5jeSB7ezx0cmFuc3BhcmVuY3kzPn19JScKICB9LAogICdjb2xvck92ZXJyaWRlRGVzYyc6IHsKICAgICd6aC1jbic6ICfmjqjojZDphY3lkIhbW3N0eWxlLmxheW91dC5zZXRfc2tpbl1d5L2/55So77yM5Zyo5ZCE56eN6aG16Z2i6L6+5Yiw5LiA6Ie055qE5pWI5p6c44CCJwogIH0sCiAgLy8g5bGC5Y+g5qC35byP6KGoCiAgJ0NTU1RpdGxlJzogeyAnemgtY24nOiAn5qC35byPJywgJ3poLWhrJzogJ+aoo+W8jycsICd6aC10dyc6ICfmqKPlvI8nLCAnZW4nOiAnQ1NTJyB9LAogICd1c2Vyc3R5bGVUaXRsZSc6IHsKICAgICd6aC1jbic6ICc8c3Bhbj7oh6rlrprkuYlDU1M8YSBjbGFzcz0ieWF3Zi11c2Vyc3R5bGVzLXRpcCIgaHJlZj0iaHR0cHM6Ly91c2Vyc3R5bGVzLm9yZy9zdHlsZXMvYnJvd3NlL3dlaWJvIiB0YXJnZXQ9Il9ibGFuayI+5ZyoIHVzZXJzdHlsZXMub3JnIOS4iuaQnOe0ouagt+W8jzwvYT48YSBjbGFzcz0ieWF3Zi11c2Vyc3R5bGVzLXRpcCIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdGlhbnNoLmdpdGh1Yi5pby95YXdmL3N0eWxpc2guaHRtbCI+5bi455So6Ieq5a6a5LmJQ1NTPC9hPjwvc3Bhbj57e319JywKICAgICd6aC1oayc6ICc8c3Bhbj7oh6roqIJDU1M8YSBjbGFzcz0ieWF3Zi11c2Vyc3R5bGVzLXRpcCIgaHJlZj0iaHR0cHM6Ly91c2Vyc3R5bGVzLm9yZy9zdHlsZXMvYnJvd3NlL3dlaWJvIiB0YXJnZXQ9Il9ibGFuayI+5ZyoIHVzZXJzdHlsZXMub3JnIOS4iuaQnOWwi+aoo+W8jzwvYT48YSBjbGFzcz0ieWF3Zi11c2Vyc3R5bGVzLXRpcCIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdGlhbnNoLmdpdGh1Yi5pby95YXdmL3N0eWxpc2guaHRtbCI+5bi455So6Ieq6KiCQ1NTPC9hPjwvc3Bhbj57e319JywKICAgICd6aC10dyc6ICc8c3Bhbj7oh6roqIJDU1M8YSBjbGFzcz0ieWF3Zi11c2Vyc3R5bGVzLXRpcCIgaHJlZj0iaHR0cHM6Ly91c2Vyc3R5bGVzLm9yZy9zdHlsZXMvYnJvd3NlL3dlaWJvIiB0YXJnZXQ9Il9ibGFuayI+5ZyoIHVzZXJzdHlsZXMub3JnIOS4iuaQnOWwi+aoo+W8jzwvYT48YSBjbGFzcz0ieWF3Zi11c2Vyc3R5bGVzLXRpcCIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdGlhbnNoLmdpdGh1Yi5pby95YXdmL3N0eWxpc2guaHRtbCI+5bi455So6Ieq6KiCQ1NTPC9hPjwvc3Bhbj57e319JywKICAgICdlbic6ICc8c3Bhbj5DdXN0b21pemUgQ1NTPGEgY2xhc3M9Inlhd2YtdXNlcnN0eWxlcy10aXAiIGhyZWY9Imh0dHBzOi8vdXNlcnN0eWxlcy5vcmcvc3R5bGVzL2Jyb3dzZS93ZWlibyIgdGFyZ2V0PSJfYmxhbmsiPlNlYXJjaCBzdHlsZXMgb24gdXNlcnN0eWxlcy5vcmc8L2E+PGEgY2xhc3M9Inlhd2YtdXNlcnN0eWxlcy10aXAiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3RpYW5zaC5naXRodWIuaW8veWF3Zi9zdHlsaXNoLmh0bWwiPkNvbW1vbiBDdXN0b21pemUgQ1NTPC9hPjwvc3Bhbj57e319JwogIH0sCiAgJ3VzZXJzdHlsZUVkaXREZXNjJzogeyAnemgtY24nOiAn57yW6L6RIFlBV0Yg6Ieq5a6a5LmJIENTUycsICd6aC1oayc6ICfnt6jovK8gWUFXRiDoh6roqIIgQ1NTJywgJ3poLXR3JzogJ+e3qOi8ryBZQVdGIOiHquiogiBDU1MnLCAnZW4nOiAnRWRpdCBZQVdGIEN1c3RvbWl6ZSBDU1MnIH0sCiAgJ3VzZXJzdHlsZUVkaXREZXRhaWxzJzogeyAnemgtY24nOiAnWUFXRiDoh6rlrprkuYkgQ1NT77yaJywgJ3poLWhrJzogJ1lBV0Yg6Ieq6KiCIENTU++8micsICd6aC10dyc6ICdZQVdGIOiHquiogiBDU1PvvJonLCAnZW4nOiAnWUFXRiBDdXN0b21pemUgQ1NT77yaJyB9LAogIC8vIOiEmuacrAogICdzY3JpcHRGaWx0ZXJHcm91cFRpdGxlJzogeyAnemgtY24nOiAn5YWz5LqO6ISa5pysJywgJ3poLWhrJzogJ+mXnOaWvOiFs+acrCcsICd6aC10dyc6ICfpl5zmlrzohbPmnKwnLCAnZW4nOiAnQWJvdXQgU2NyaXB0JyB9LAogIC8vIOWFqOmAieivpeWIhue7hAogICdjb25maWdTZWxlY3RBbGxEZXNjJzogeyAnemgtY24nOiAn5YWo6YCJ5pys57uEJywgJ3poLWhrJzogJ+WFqOmBuOacrOe1hCcsICd6aC10dyc6ICflhajpgbjmnKzntYQnLCAnZW4nOiAnU2VsZWN0IEdyb3VwJyB9LAogIC8vIOWvvOWFpeWvvOWHugogICdjb25maWdJbXBvcnRBbmRFeHBvcnQnOiB7ICd6aC1jbic6ICforr7nva4nLCAnemgtaGsnOiAn6Kit5a6aJywgJ3poLXR3JzogJ+ioreWumicsICdlbic6ICdTZXR0aW5nJyB9LAogICdjb25maWdJbXBvcnRCdXR0b24nOiB7ICd6aC1jbic6ICflr7zlhaUnLCAnemgtaGsnOiAn5Yyv5YWlJywgJ3poLXR3JzogJ+WMr+WFpScsICdlbic6ICdJbXBvcnQnIH0sCiAgJ2NvbmZpZ0ltcG9ydFdhcm5pbmdUaXRsZSc6IHsgJ3poLWNuJzogJ+iuvue9ruWvvOWFpScsICd6aC1oayc6ICfoqK3lrprljK/lhaUnLCAnemgtdHcnOiAn6Kit5a6a5Yyv5YWlJywgJ2VuJzogJ1NldHRpbmcgSW1wb3J0JyB9LAogICdjb25maWdJbXBvcnRXYXJuaW5nJzogewogICAgJ3poLWNuJzogJ+WvvOWFpeeahOiuvue9ruS8muimhuebluaCqOW9k+WJjeW3suacieeahOiuvue9ru+8jOehruWunuimgeWvvOWFpeiuvue9ruWQl++8nycsCiAgICAnemgtaGsnOiAn5Yyv5YWl55qE6Kit5a6a5pyD6KaG6JOL5oKo55W25YmN5bey5pyJ55qE6Kit5a6a77yM5oKo56K65a6a6KaB5Yyv5YWl6Kit5a6a5ZeO77yfJywKICAgICd6aC10dyc6ICfljK/lhaXnmoToqK3lrprmnIPopobok4vmgqjnlbbliY3lt7LmnInnmoToqK3lrprvvIzmgqjnorrlrpropoHljK/lhaXoqK3lrprll47vvJ8nLAogICAgJ2VuJzogJ1RoZSBpbXBvcnRlZCBzZXR0aW5ncyBtYXkgcmVwbGFjZSB5b3VyIGN1cnJlbnQgc2V0dGluZ3MuIEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBpbXBvcnQgdGhpcyBmaWxlPycKICB9LAogICdjb25maWdJbXBvcnRTdWNjZXNzVGl0bGUnOiB7ICd6aC1jbic6ICforr7nva7lr7zlhaXlrozmiJAnLCAnemgtaGsnOiAn6Kit5a6a5Yyv5YWl5a6M5oiQJywgJ3poLXR3JzogJ+ioreWumuWMr+WFpeWujOaIkCcsICdlbic6ICdJbXBvcnQgc2V0dGluZ3MgY29tcGxldGVkJyB9LAogICdjb25maWdJbXBvcnRTdWNjZXNzJzogeyAnemgtY24nOiAn5bey57uP5oiQ5Yqf5Zyw5a+85YWl5LqG6K6+572uJywgJ3poLWhrJzogJ+W3sue7j+aIkOWKn+WcsOWMr+WFpeS6huioreWumicsICd6aC10dyc6ICflt7Lnu4/miJDlip/lnLDljK/lhaXkuoboqK3lrponLCAnZW4nOiAnU3VjY2Vzc2Z1bGx5IGltcG9ydGVkIHNldHRpbmdzJyB9LAogICdjb25maWdJbXBvcnRGYWlsVGl0bGUnOiB7ICd6aC1jbic6ICforr7nva7lr7zlhaXlpLHotKUnLCAnemgtaGsnOiAn6Kit5a6a5Yyv5YWl5aSx6LSlJywgJ3poLXR3JzogJ+ioreWumuWMr+WFpeWksei0pScsICdlbic6ICdJbXBvcnQgc2V0dGluZ3MgZmFpbGVkJyB9LAogICdjb25maWdJbXBvcnRGYWlsJzogewogICAgJ3poLWNuJzogJ+WvvOWFpeiuvue9ruaWh+S7tuaXtuWHuueOsOmUmeivr++8jOWPr+iDveaYr+S9v+eUqOS6humUmeivr+eahOaWh+S7tu+8jOaWh+S7tuW3suaNn+Wdj+aIluaWh+S7tueahOeJiOacrOS4jeaUr+aMgScsCiAgICAnemgtaGsnOiAn5Yyv5YWl6Kit5a6a5qqU5qGI5pmC5Ye654++6Yyv6Kqk77yM5Y+v6IO95piv5L2/55So5LqG6Yyv6Kqk55qE5qqU5qGI77yM5qqU5qGI5bey5pCN5aOe5oiW54K65LiN5pSv5o+055qE54mI5pysJywKICAgICd6aC10dyc6ICfljK/lhaXoqK3lrprmqpTmoYjmmYLlh7rnj77pjK/oqqTvvIzlj6/og73mmK/kvb/nlKjkuobpjK/oqqTnmoTmqpTmoYjvvIzmqpTmoYjlt7LmkI3lo57miJbngrrkuI3mlK/mj7TnmoTniYjmnKwnLAogICAgJ2VuJzogJ0Vycm9yIG9jY3VycmVkIGR1cmluZyBpbXBvcnRpbmcgcHJvY2Vzcy4gV3JvbmcgZmlsZSBtYXkgYmUgdXNlZCwgdGhlIGZpbGUgbWF5IGJlIGJyb2tlbiwgb3IgdGhlIHZlcnNpb24gb2Ygc2V0dGluZyBmaWxlIGlzIG5vdCBzdXBwb3J0ZWQuJwogIH0sCiAgJ2NvbmZpZ0V4cG9ydEJ1dHRvbic6IHsgJ3poLWNuJzogJ+WvvOWHuicsICd6aC1oayc6ICfljK/lh7onLCAnemgtdHcnOiAn5Yyv5Ye6JywgJ2VuJzogJ0V4cG9ydCcgfSwKICAnY29uZmlnUmVzZXRCdXR0b24nOiB7ICd6aC1jbic6ICfph43nva4nLCAnemgtaGsnOiAn6YeN6KitJywgJ3poLXR3JzogJ+mHjeiorScsICdlbic6ICdSZXNldCcgfSwKICAnY29uZmlnUmVzZXRXYXJuaW5nVGl0bGUnOiB7ICd6aC1jbic6ICforr7nva7ph43nva4nLCAnemgtaGsnOiAn6Kit5a6a6YeN6KitJywgJ3poLXR3JzogJ+ioreWumumHjeiorScsICdlbic6ICdTZXR0aW5nIFJlc2V0JyB9LAogICdjb25maWdSZXNldFdhcm5pbmcnOiB7ICd6aC1jbic6ICfov5nlsIbkvJrmuIXnqbrmgqjlvZPliY3nmoTmiYDmnInphY3nva7vvIznoa7lrp7opoHph43nva7orr7nva7lkJfvvJ8nLCAnemgtaGsnOiAn6YCZ5bCH5pyD5riF56m65oKo55W25YmN55qE5omA5pyJ6Kit5a6a77yM5oKo56K65a6a6KaB6YeN572u6Kit5a6a5ZeO77yfJywgJ3poLXR3JzogJ+mAmeWwh+acg+a4heepuuaCqOeVtuWJjeeahOaJgOacieioreWumu+8jOaCqOeiuuWumuimgemHjee9ruioreWumuWXju+8nycsICdlbic6ICdZb3UgYXJlIGRlbGV0aW5nIGFsbCB5b3VyIHNldHRpbmdzLiBBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gcmVzZXQgeW91ciBzZXR0aW5ncz8nIH0sCiAgJ2NvbmZpZ0ltcG9ydFdicEJ1dHRvbic6IHsgJ3poLWNuJzogJ+S7juKAnOecvOS4jeingeW/g+S4jeeDpuKAneWvvOWFpeiuvue9ricsICd6aC1oayc6ICflvp7igJznnLzkuI3opovlv4PkuI3nhanigJ3ljK/lhaXoqK3lrponLCAnemgtdHcnOiAn5b6e4oCc55y85LiN6KaL5b+D5LiN54Wp4oCd5Yyv5YWl6Kit5a6aJywgJ2VuJzogJ0ltcG9ydCBmcm9tIFdlaWJvIENsZWFuZXIgKOecvOS4jeingeW/g+S4jeeDpiknIH0sCiAgJ2NvbmZpZ0ltcG9ydFdicFdhcm5pbmcnOiB7CiAgICAnemgtY24nOiAn5rOo5oSP77ya5LuO5YW25LuW6ISa5pys5a+85YWl6K6+572u5pe277yM5Zug5Li66ISa5pys55qE5YW35L2T5Yqf6IO95LiO5a6e546w5pa55byP562J5LiN5ZCM77yM5a+85YWl5bel5YW355qE6IO95Yqb6ZmQ5Yi2562J5Y6f5Zug77yM6L2s5o2i5YmN5ZCO5bm26Z2e5a6M5YWo55u45ZCM44CCJywKICAgICd6aC1oayc6ICfms6jmhI/vvJrlvp7lhbbku5bohbPmnKzljK/lhaXoqK3lrprmmYLvvIzlm6DngrrohbPmnKznmoTlhbfpq5Tlip/og73oiIflr6bnj77mlrnlvI/nrYnkuI3lkIzvvIzlsI7lhaXlt6XlhbfnmoTog73lipvpmZDliLbnrYnljp/lm6DvvIzovYnmj5vliY3lvozkuKbpnZ7lrozlhajnm7jlkIzjgIInLAogICAgJ3poLXR3JzogJ+azqOaEj++8muW+nuWFtuS7luiFs+acrOWMr+WFpeioreWumuaZgu+8jOWboOeCuuiFs+acrOeahOWFt+mrlOWKn+iDveiIh+WvpuePvuaWueW8j+etieS4jeWQjO+8jOWwjuWFpeW3peWFt+eahOiDveWKm+mZkOWItuetieWOn+WboO+8jOi9ieaPm+WJjeW+jOS4pumdnuWujOWFqOebuOWQjOOAgicsCiAgICAnZW4nOiAnTm90ZTogU2V0dGluZ3MgaW1wb3J0ZWQgZnJvbSBvdGhlciBzY3JpcHRzIG1heSBiZSBtb2RpZmllZCBkdWUgdG8gdGhlIGRpZmZlcmVuY2Ugb2YgZnVuY3Rpb25zIGFuZCBpbXBsZW1lbnRhdGlvbnMsIGFuZCB0aGUgbGltaXRhdGlvbiBvZiB0aGlzIHNldHRpbmdzIGltcG9ydGluZyB0b29sLicsCiAgfSwKICAvLyDmm7TmlrAKICAndXBkYXRlSW5mb1RpdGxlJzogeyAnemgtY24nOiAn5pu05pawJywgJ3poLWhrJzogJ+abtOaWsCcsICd6aC10dyc6ICfmm7TmlrAnLCAnZW4nOiAnVXBkYXRlJyB9LAogICd1cGRhdGVJbmZvRGVzY3JpcHRpb24nOiB7ICd6aC1jbic6ICfmm7TmlrDlkI7mmL7npLrmlrDlip/og73mj5DnpLonLCAnemgtaGsnOiAn5pu05paw5b6M6aGv56S65paw5Yqf6IO95o+Q56S6JywgJ3poLXR3JzogJ+abtOaWsOW+jOmhr+ekuuaWsOWKn+iDveaPkOekuicsICdlbic6ICdTaG93IG5ldyBmZWF0dXJlcyBhZnRlciB1cGRhdGUnIH0sCiAgJ2luc3RhbGxTdWNjZXNzVGl0bGUnOiB7ICd6aC1jbic6ICdZQVdGIOWuieijheaIkOWKnycsICd6aC1oayc6ICflronoo53miJDlip8nLCAnemgtdHcnOiAn5a6J6KOd5oiQ5YqfJywgJ2VuJzogJ0luc3RhbGxhdGlvbiBzdWNjZXNzZWQnIH0sCiAgJ2luc3RhbGxTdWNjZXNzVGV4dCc6IHsKICAgICd6aC1jbic6ICfmhJ/osKLmgqjlronoo4UgWUFXRiDohJrmnKzjgILmgqjlj6/ku6Xngrnlh7vlj7PkuIrop5LnmoTmvI/mlpflm77moIfmiZPlvIDov4fmu6Tlmajorr7nva7jgILmraTlpJbmgqjov5jlj6/ku6XpgInkuK3lubbmi5bmi73lhbPplK7lrZfjgIHluJDlj7fjgIHor53popjjgIHmnaXmupDnrYnlhoXlrrnliLDnvZHpobXlj7PkuIrop5LvvIzlv6vpgJ/liJvlu7rov4fmu6TlmajjgIInLAogICAgJ3poLWhrJzogJ+aEn+isneaCqOWuieijnSBZQVdGIOiFs+acrOOAguaCqOWPr+S7pem7nuaTiuWPs+S4iuinkueahOa8j+aWl+WcluekuuaJk+mWi+mBjua/vuWZqOioree9ruOAguatpOWkluaCqOmChOWPr+S7pemBuOS4reS4puaLluaLvemXnOmNteWtl+OAgeW4s+iZn+OAgeipsemhjOOAgeS+hua6kOetieWFp+WuueWIsOe2sumggeWPs+S4iuinku+8jOW/q+mAn+WJteW7uumBjua/vuWZqOOAgicsCiAgICAnemgtdHcnOiAn5oSf6Kyd5oKo5a6J6KOdIFlBV0Yg6IWz5pys44CC5oKo5Y+v5Lul6bue5pOK5Y+z5LiK6KeS55qE5ryP5paX5ZyW56S65omT6ZaL6YGO5r++5Zmo6Kit572u44CC5q2k5aSW5oKo6YKE5Y+v5Lul6YG45Lit5Lim5ouW5ou96Zec6Y215a2X44CB5biz6Jmf44CB6Kmx6aGM44CB5L6G5rqQ562J5YWn5a655Yiw57ay6aCB5Y+z5LiK6KeS77yM5b+r6YCf5Ym15bu66YGO5r++5Zmo44CCJywKICAgICdlbic6ICdUaGFuayB5b3UgZm9yIGluc3RhbGxpbmcgWUFXRi4gWW91IGNhbiBjbGljayBvbiB0aGUgZnVubmVsIGljb24gYXQgdGhlIHRvcC1yaWdodCBjb3JuZXIgdG8gb3BlbiB1cCBmaWx0ZXIgc2V0dGluZyBtZW51LiBZb3UgbWF5IGFsc28gcXVpY2tseSBjcmVhdGUgZmlsdGVycyBieSBkcmFnZ2luZyBhbmQgZHJvcHBpbmcga2V5d29yZHMsIGFjY291bnRzLCB0b3BpY3MgYW5kIHNvdXJjZXMgdG8gdGhlIHRvcC1yaWdodCBjb3JuZXIuJwogIH0sCiAgJ3VwZGF0ZVN1Y2Nlc3NUaXRsZSc6IHsgJ3poLWNuJzogJ1lldCBBbm90aGVyIFdlaWJvIEZpbHRlciDmlrDlip/og73mj5DnpLonLCAnemgtaGsnOiAnWWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyIOaWsOWKn+iDveaPkOekuicsICd6aC10dyc6ICdZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXIg5paw5Yqf6IO95o+Q56S6JywgJ2VuJzogJ1lldCBBbm90aGVyIFdlaWJvIEZpbHRlciBuZXcgZmVhdHVyZXMgbm90aWZpY2F0aW9uJyB9LAogICd1cGRhdGVTdWNjZXNzSGVhZGVyJzogeyAnemgtY24nOiAn5oKo55qEIFlBV0Yg6ISa5pys5bey5pu05pawJywgJ3poLWhrJzogJ+aCqOeahCBZQVdGIOiFs+acrOW3suabtOaWsCcsICd6aC10dyc6ICfmgqjnmoQgWUFXRiDohbPmnKzlt7Lmm7TmlrAnLCAnZW4nOiAnWW91ciBZQVdGIHNjcmlwdCBoYXMgYmVlbiB1cGRhdGVkJyB9LAogICd1cGRhdGVTdWNjZXNzRGVzYyc6IHsgJ3poLWNuJzogJ+W9k+WJjeeJiOacrOa3u+WKoOaIluabtOaWsOS6huS7peS4i3t7Y291bnR9femhueWKn+iDvScsICd6aC1oayc6ICfnlbbliY3niYjmnKzmt7vliqDmiJbmm7TmlrDkuobku6XkuIt7e2NvdW50fX3poIXlip/og70nLCAnemgtdHcnOiAn55W25YmN54mI5pys5re75Yqg5oiW5pu05paw5LqG5Lul5LiLe3tjb3VudH196aCF5Yqf6IO9JywgJ2VuJzogJ1RoZSBjdXJyZW50IHZlcnNpb24gaGFzIGFkZGVkIG9yIHVwZGF0ZWQgdGhlIGZvbGxvd2luZyB7e2NvdW50fX0gZmVhdHVyZShzKScgfSwKICAvLyDku47nnLzkuI3op4Hlv4PkuI3ng6blr7zlhaXorr7nva4KICAnd2JwSW1wb3J0U3VjY2Vzc1RpdGxlJzogeyAnemgtY24nOiAnWWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyIOiuvue9ruWvvOWFpeWujOaIkCcsICd6aC1oayc6ICdZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXIg6Kit5a6a5Yyv5YWl5a6M5oiQJywgJ3poLXR3JzogJ1lldCBBbm90aGVyIFdlaWJvIEZpbHRlciDoqK3lrprljK/lhaXlrozmiJAnLCAnZW4nOiAnWWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyIHNldHRpbmcgaW1wb3J0ZWQgU3VjY2Vzc2Z1bGx5JyB9LAogICd3YnBJbXBvcnRTdWNjZXNzSGVhZGVyJzogeyAnemgtY24nOiAn5bey57uP5LuOIOecvOS4jeingeW/g+S4jeeDpiDlr7zlhaXkuoborr7nva4nLCAnemgtaGsnOiAn5bey57aT5b6eIOecvOS4jeimi+W/g+S4jeeFqSDljK/lhaXkuoboqK3lrponLCAnemgtdHcnOiAn5bey57aT5b6eIOecvOS4jeimi+W/g+S4jeeFqSDljK/lhaXkuoboqK3lrponLCAnZW4nOiAnSW1wb3J0ZWQgU2V0dGluZ3MgZnJvbSDnnLzkuI3op4Hlv4PkuI3ng6YnIH0sCiAgJ3dicEltcG9ydFN1Y2Nlc3NEZXNjJzogeyAnemgtY24nOiAn5Lul5LiLe3tjb3VudH196aG55Yqf6IO95Zug6ISa5pys55qE5beu5byC5oiW5a+85YWl5bel5YW355qE6ZmQ5Yi26ZyA6KaB5oKo6K6+572uJywgJ3poLWhrJzogJ+S7peS4i3t7Y291bnR9femgheWKn+iDveWboOiFs+acrOeahOW3rueVsOaIluWMr+WFpeW3peWFt+eahOmZkOWItumcgOimgeaCqOioreWumicsICd6aC10dyc6ICfku6XkuIt7e2NvdW50fX3poIXlip/og73lm6DohbPmnKznmoTlt67nlbDmiJbljK/lhaXlt6XlhbfnmoTpmZDliLbpnIDopoHmgqjoqK3lrponLCAnZW4nOiAnQ2hlY2sgb3V0IGZvbGxvd2luZyB7e2NvdW50fX0gZmVhdHVyZXMuIFRoZXNlIGZlYXR1cmVzIGFyZSBkaWZmZXJlbnQgZnJvbSB0aGUgc2NyaXB0IG9yIHNldHRpbmcgY2Fubm90IGJlIGNvbnZlcnRlZC4nIH0sCiAgLy8g5p2C6aG5CiAgJ3NjcmlwdE90aGVyVGl0bGUnOiB7ICd6aC1jbic6ICfmm7TlpJonLCAnemgtaGsnOiAn5YW25LuWJywgJ3poLXR3JzogJ+WFtuS7licsICdlbic6ICdNb3JlJyB9LAogICdhdXRvQ29tcGxldGVDb25maWcnOiB7ICd6aC1jbic6ICforr7nva7nqpflj6PkuK3kvb/nlKjoh6rliqjooaXlhah7ezxpPn19JywgJ3poLWhrJzogJ+ioreWumuaWueWhiuWFp+S9v+eUqOiHquWLleWujOaIkHt7PGk+fX0nLCAnemgtdHcnOiAn6Kit5a6a5pa55aGK5YWn5L2/55So6Ieq5YuV5a6M5oiQe3s8aT59fScsICdlbic6ICdVc2UgYXV0byBjb21wbGV0ZSBpbiBzZXR0aW5nIGRpYWxvZyB7ezxpPn19JyB9LAogICdhdXRvQ29tcGxldGVDb25maWdEZXNjJzogewogICAgJ3poLWNuJzogJ+WQr+eUqOivpeWKn+iDveWQju+8jOiEmuacrOS8muWcqOaCqOi+k+WFpeeUqOaIt+WQjeaIluivnemimOeahOaXtuWAmeaPkOS+m+WAmemAiemhueaWueS+v+aCqOi+k+WFpeOAguaCqOi+k+WFpeeahOWGheWuueWwhuS8muWunuaXtuWPkemAgeWIsOW+ruWNmueahOacjeWKoeWZqOS4iuS7peS+v+iOt+WPluaOqOiNkOWIl+ihqOOAgicsCiAgfSwKICAnc2VhcmNoRW5hYmxlJzogeyAnemgtY24nOiAn5Zyo5pCc57Si6aG16Z2i5ZCv55So6ISa5pys77yI6K+V6aqM5oCn77yJJywgJ3poLWhrJzogJ+WcqOaQnOWwi+e2sumggeWVn+eUqOiFs+acrO+8iOippumpl+aAp++8iScsICd6aC10dyc6ICflnKjmkJzlsIvntrLpoIHllZ/nlKjohbPmnKzvvIjoqabpqZfmgKfvvIknLCAnZW4nOiAnRW5hYmxlIG9uIHNlYXJjaCBwYWdlIChFeHBlcmltZW50YWwpJyB9LAogIC8vIOiwg+ivlQogICdzY3JpcHREZWJ1Z1RpdGxlJzogeyAnemgtY24nOiAn6LCD6K+VJywgJ3poLWhrJzogJ+WBtemMrycsICd6aC10dyc6ICflgbXpjK8nLCAnZW4nOiAnRGVidWcnIH0sCiAgJ3NjcmlwdERlYnVnJzogeyAnemgtY24nOiAn5Zyo5o6n5Yi25Y+w5omT5Y2w6LCD6K+V5L+h5oGve3s8aT59fScsICd6aC1oayc6ICflsIflgbXpjK/oqIrmga/liJfljbDliLDkuLvmjqflj7B7ezxpPn19JywgJ3poLXR3JzogJ+Wwh+WBtemMr+ioiuaBr+WIl+WNsOWIsOS4u+aOp+WPsHt7PGk+fX0nLCAnZW4nOiAnUHJpbnQgZGVidWcgaW5mbyB0byBjb25zb2xlIHt7PGk+fX0nIH0sCiAgJ3NjcmlwdERlYnVnRGVzYyc6IHsKICAgICd6aC1jbic6ICflpoLmnpzmgqjnmoTohJrmnKzlh7rnjrDpl67popjvvIzmgqjlj6/ku6XmiZPlvIDosIPor5Xlip/og73lkI7lkJHkvZzogIXmj5DkvpvmjqfliLblj7DnmoTovpPlh7rku6Xmlrnkvr/op6PlhrPpl67popjjgILkvYbor7fms6jmhI/vvIw8c3Ryb25nPuaJk+W8gOiwg+ivleWKn+iDveWPr+iDveS8muWinuWKoOWGheWtmOWNoOeUqOOAgemZjeS9jue9kemhteeahOWPjeW6lOmAn+W6pueUmuiHs+WvvOiHtOa1j+iniOWNoemhvzwvc3Ryb25nPuOAguiwg+ivleWKn+iDveS+m+iEmuacrOW8gOWPkeWSjOe7tOaKpOS9v+eUqO+8jDxzdHJvbmc+5LiN5bu66K6u5LiA6Iis55So5oi35omT5byA6LCD6K+V5Yqf6IO9PC9zdHJvbmc+44CCJwogIH0sCiAgLy8g5YWz5LqOCiAgJ3NjcmlwdEFib3V0VGl0bGUnOiB7ICd6aC1jbic6ICflhbPkuo4nLCAnemgtaGsnOiAn6Zec5pa8JywgJ3poLXR3JzogJ+mXnOaWvCcsICdlbic6ICdBYm91dCcgfSwKICAnc2NyaXB0QWJvdXQnOiB7CiAgICAnemgtY24nOiAnPHA+WWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyIChZQVdGKSB7e3ZlcnNpb259fTwvcD48cD7mgqjlj6/ku6XlhbPms6ggPGEgaHJlZj0iLy93ZWliby5jb20veWF3ZnNjcmlwdCIgdXNlcmNhcmQ9ImlkPTU2MDEwMzMxMTEiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJyZXIiPkBZQVdG6ISa5pysPC9hPiDkuobop6PohJrmnKzmnIDmlrDnmoTmm7TmlrDjgII8YnIgLz7lpoLmnpzmgqjop4nlvpfohJrmnKznu5nmgqjlvojlpKfnmoTluK7liqnvvIzluK7liqnlrqPkvKDohJrmnKzmmK/lr7nmiJHku6zmnIDlpKfnmoTmlK/mjIHjgII8L3A+PHA+5aaC5p6c5oKo5Zyo5L2/55So6L+H56iL5Lit6YGH5Yiw5Lu75L2V6ISa5pys55qE6ZSZ6K+v77yM5oiW5a+56ISa5pys5pyJ5Lu75L2V5bu66K6u77yM5oKo5Y+v5Lul5YiwPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdGlhbnNoLmdpdGh1Yi5pby95YXdmL2lzc3Vlcy5odG1sIiByZWw9Im5vcmVmZXJyZXIiPuWPjemmiOmhtemdojwvYT7mj5DkvpvmiqXlkYrvvIzmiJY8YSBhY3Rpb24tZGF0YT0idWlkPTU2MDEwMzMxMTEmbmljaz1ZQVdG6ISa5pysIiBhY3Rpb24tdHlwZT0id2ViaW0uY29udmVyc2F0aW9uIiBocmVmPSJqYXZhc2NyaXB0OjsiPuengeS/oSBAWUFXRuiEmuacrDwvYT4g77yb5Y+N6aaI5YmN5bu66K6u5YWI6ZiF6K+7PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdGlhbnNoLmdpdGh1Yi5pby95YXdmL2ZxYS5odG1sIiByZWw9Im5vcmVmZXJyZXIiPuW4uOingemXrumimDwvYT7jgII8L3A+PHA+6ISa5pys5L2/55SoIE1JVCDljY/orq7lvIDmlL7mupDku6PnoIHvvIzkvZzogIUgPGEgaHJlZj0iLy93ZWliby5jb20vdHNoOTAiIHVzZXJjYXJkPSJpZD0zOTIxNTg5MDU3IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub3JlZmVycmVyIj5AdHNoOTA8L2E+IO+8jOaCqOWPr+S7pTxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90aWFuc2gveWF3ZiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9yZWZlcnJlciI+5ZyoIEdpdEh1YiDkuIrmn6XpmIU8L2E+77yM5qyi6L+O5Lu75L2V5Lq66LSh54yu5Luj56CB44CCPGJyIC8+6ISa5pys5Lit5Y+C6ICD5bm25L2/55So5LqGIDxhIGhyZWY9Imh0dHBzOi8vYml0YnVja2V0Lm9yZy9zYWx2aWF0aS93ZWliby1jbGVhbmVyIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub3JlZmVycmVyIj7nnLzkuI3op4Hlv4PkuI3ng6Y8L2E+IOeahOmDqOWIhuS7o+eggeOAgjwvcD4nLAogICAgJ3poLWhrJzogJzxwPllldCBBbm90aGVyIFdlaWJvIEZpbHRlciAoWUFXRikge3t2ZXJzaW9ufX08L3A+PHA+5oKo5Y+v5Lul6Zec5rOoIDxhIGhyZWY9Ii8vd2VpYm8uY29tL3lhd2ZzY3JpcHQiIHVzZXJjYXJkPSJpZD01NjAxMDMzMTExIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub3JlZmVycmVyIj5AWUFXRuiFs+acrDwvYT4g556t6Kej6IWz5pys5pyA5paw55qE5pu05paw44CCPGJyIC8+5aaC5p6c5oKo6Ka65b6X6IWz5pys57Wm5oKo5b6I5aSn55qE5bmr5Yqp77yM5bmr5Yqp5a6j5YKz6IWz5pys5piv5bCN5oiR5YCR5pyA5aSn55qE5pSv5oyB44CCPC9wPjxwPuWmguaenOaCqOWcqOS9v+eUqOmBjueoi+S4remBh+WIsOS7u+S9leiFs+acrOeahOmMr+iqpO+8jOaIluWwjeiFs+acrOacieS7u+S9leW7uuitsO+8jOaCqOWPr+S7peWIsDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3RpYW5zaC5naXRodWIuaW8veWF3Zi9pc3N1ZXMuaHRtbCIgcmVsPSJub3JlZmVycmVyIj7lm57ppYvpoIHpnaI8L2E+5o+Q5L6b5aCx5ZGK77yM5oiWPGEgYWN0aW9uLWRhdGE9InVpZD01NjAxMDMzMTExJm5pY2s9WUFXRuiEmuacrCIgYWN0aW9uLXR5cGU9IndlYmltLmNvbnZlcnNhdGlvbiIgaHJlZj0iamF2YXNjcmlwdDo7Ij7np4Hkv6EgQFlBV0bohJrmnKw8L2E+IO+8m+Wbnumli+WJjeW7uuitsOWFiOmWseiugDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3RpYW5zaC5naXRodWIuaW8veWF3Zi9mcWEuaHRtbCIgcmVsPSJub3JlZmVycmVyIj7luLjopovllY/poYzvvIjnsKHpq5TvvIk8L2E+44CCPC9wPjxwPuiFs+acrOS9v+eUqCBNSVQg5Y2U5a6a6ZaL5pS+5Y6f5aeL56iL5byP56K877yM5L2c6ICFIDxhIGhyZWY9Ii8vd2VpYm8uY29tL3RzaDkwIiB1c2VyY2FyZD0iaWQ9MzkyMTU4OTA1NyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9yZWZlcnJlciI+QHRzaDkwPC9hPiDvvIzmgqjlj6/ku6U8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGlhbnNoL3lhd2YiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJyZXIiPuWcqCBHaXRIdWIg5LiK5p+l6ZaxPC9hPu+8jOatoei/juS7u+S9leS6uuiyoueNu+eoi+W8j+eivOOAgjxiciAvPuiFs+acrOS4reWPg+iAg+S4puS9v+eUqOS6hiA8YSBocmVmPSJodHRwczovL2JpdGJ1Y2tldC5vcmcvc2FsdmlhdGkvd2VpYm8tY2xlYW5lciIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9yZWZlcnJlciI+55y85LiN6KaL5b+D5LiN54WpPC9hPiDnmoTpg6jliIbnqIvlvI/norzjgII8L3A+JywKICAgICd6aC10dyc6ICc8cD5ZZXQgQW5vdGhlciBXZWlibyBGaWx0ZXIgKFlBV0YpIHt7dmVyc2lvbn19PC9wPjxwPuaCqOWPr+S7pemXnOazqCA8YSBocmVmPSIvL3dlaWJvLmNvbS95YXdmc2NyaXB0IiB1c2VyY2FyZD0iaWQ9NTYwMTAzMzExMSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9yZWZlcnJlciI+QFlBV0bohbPmnKw8L2E+IOeereino+iFs+acrOacgOaWsOeahOabtOaWsOOAgjxiciAvPuWmguaenOaCqOimuuW+l+iFs+acrOe1puaCqOW+iOWkp+eahOW5q+WKqe+8jOW5q+WKqeWuo+WCs+iFs+acrOaYr+WwjeaIkeWAkeacgOWkp+eahOaUr+aMgeOAgjwvcD48cD7lpoLmnpzmgqjlnKjkvb/nlKjpgY7nqIvkuK3pgYfliLDku7vkvZXohbPmnKznmoTpjK/oqqTvvIzmiJblsI3ohbPmnKzmnInku7vkvZXlu7rorbDvvIzmgqjlj6/ku6XliLA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly90aWFuc2guZ2l0aHViLmlvL3lhd2YvaXNzdWVzLmh0bWwiIHJlbD0ibm9yZWZlcnJlciI+5Zue6aWL6aCB6Z2iPC9hPuaPkOS+m+WgseWRiu+8jOaIljxhIGFjdGlvbi1kYXRhPSJ1aWQ9NTYwMTAzMzExMSZuaWNrPVlBV0bohJrmnKwiIGFjdGlvbi10eXBlPSJ3ZWJpbS5jb252ZXJzYXRpb24iIGhyZWY9ImphdmFzY3JpcHQ6OyI+56eB5L+hIEBZQVdG6ISa5pysPC9hPiDvvJvlm57ppYvliY3lu7rorbDlhYjplrHoroA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly90aWFuc2guZ2l0aHViLmlvL3lhd2YvZnFhLmh0bWwiIHJlbD0ibm9yZWZlcnJlciI+5bi46KaL5ZWP6aGM77yI57Ch6auU77yJPC9hPuOAgjwvcD48cD7ohbPmnKzkvb/nlKggTUlUIOWNlOWumumWi+aUvuWOn+Wni+eoi+W8j+eivO+8jOS9nOiAhSA8YSBocmVmPSIvL3dlaWJvLmNvbS90c2g5MCIgdXNlcmNhcmQ9ImlkPTM5MjE1ODkwNTciIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJyZXIiPkB0c2g5MDwvYT4g77yM5oKo5Y+v5LulPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RpYW5zaC95YXdmIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub3JlZmVycmVyIj7lnKggR2l0SHViIOS4iuafpemWsTwvYT7vvIzmraHov47ku7vkvZXkurrosqLnjbvnqIvlvI/norzjgII8YnIgLz7ohbPmnKzkuK3lj4PogIPkuKbkvb/nlKjkuoYgPGEgaHJlZj0iaHR0cHM6Ly9iaXRidWNrZXQub3JnL3NhbHZpYXRpL3dlaWJvLWNsZWFuZXIiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJyZXIiPuecvOS4jeimi+W/g+S4jeeFqTwvYT4g55qE6YOo5YiG56iL5byP56K844CCPC9wPicsCiAgICAnZW4nOiAnPHA+WWV0IEFub3RoZXIgV2VpYm8gRmlsdGVyIChZQVdGKSB7e3ZlcnNpb259fTwvcD48cD5Gb2xsb3cgPGEgaHJlZj0iLy93ZWliby5jb20veWF3ZnNjcmlwdCIgbmFtZWNhcmQ9ImlkPTU2MDEwMzMxMTEiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJyZXIiPkBZQVdG6ISa5pysPC9hPiBmb3IgbGFzdCB1cGRhdGUgaW5mby48YnIgLz5QbGVhc2UgaGVscCB1cyBzcHJlYWQgdGhlIHdvcmQgaWYgdGhlIHNjcmlwdCBoZWxwcyB5b3UuPC9wPjxwPklmIHlvdSBmaW5kIGFueSBidWdzIG9yIGhhdmUgZmVhdHVyZSByZXF1ZXN0cywgcGxlYXNlIHJlcG9ydCB0aGVtIGluIHRoZSA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly90aWFuc2guZ2l0aHViLmlvL3lhd2YvaXNzdWVzLmh0bWwiIHJlbD0ibm9yZWZlcnJlciI+aXNzdWVzIHBhZ2U8L2E+LCBvciA8YSBhY3Rpb24tZGF0YT0idWlkPTU2MDEwMzMxMTEmbmljaz1ZQVdG6ISa5pysIiBhY3Rpb24tdHlwZT0id2ViaW0uY29udmVyc2F0aW9uIiBocmVmPSJqYXZhc2NyaXB0OjsiPnNlbmQgbWVzc2FnZSB0byBAWUFXRuiEmuacrDwvYT4gLiBQbGVhc2UgcmVhZCA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly90aWFuc2guZ2l0aHViLmlvL3lhd2YvZnFhLmh0bWwiIHJlbD0ibm9yZWZlcnJlciI+RlFBIChDaGluZXNlKTwvYT4gcGFnZSBmb3IgY29tbW9uIHF1ZXN0aW9ucy48L3A+PHA+VGhlIHNjcmlwdCBpcyBsaXNjZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBBdXRob3IgaXMgPGEgaHJlZj0iLy93ZWliby5jb20vdHNoOTAiIHVzZXJjYXJkPSJpZD0zOTIxNTg5MDU3IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub3JlZmVycmVyIj5AdHNoOTA8L2E+LiBZb3UgbWF5IDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90aWFuc2gveWF3ZiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9yZWZlcnJlciI+dmlldyB0aGUgcHJvamVjdCBvbiBHaXRIdWI8L2E+LiBQdWxsIHJlcXVlc3QgaXMgd2VsY29tZWQuPGJyIC8+U29tZSBjb2RlcyBvZiB0aGlzIHNjcmlwdCBjb21lIGZyb20gPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vYml0YnVja2V0Lm9yZy9zYWx2aWF0aS93ZWliby1jbGVhbmVyIiByZWw9Im5vcmVmZXJyZXIiPjxzcGFuIGxhbmc9InpoLWNuIj7nnLzkuI3op4Hlv4PkuI3ng6Y8L3NwYW4+IChXZWlibyBDbGVhbmVyKTwvYT4gc2NyaXB0LjwvcD4nLAogIH0sCiAgLy8g5ouW5ou9CiAgJ2Ryb3BBcmVhVGl0bGUnOiB7ICd6aC1jbic6ICfmi5bmlL7oh7PmraQ8YnIgLz7lv6vpgJ/liJvlu7rov4fmu6TlmagnLCAnemgtaGsnOiAn5ouW5pS+6Iez5q2kPGJyIC8+5b+r6YCf5Ym15bu656+p6YG45ZmoJywgJ3poLXR3JzogJ+aLluaUvuiHs+atpDxiciAvPuW/q+mAn+WJteW7uuevqemBuOWZqCcsICdlbic6ICdEcm9wIEhlcmUgdG8gQ3JlYXRlIEZpbHRlcicgfSwKICAnZHJvcEFyZWFUZXh0JzogewogICAgJ3poLWNuJzogJ+Wwhuimgeiuvue9rui/h+a7pOWZqOeahOWGheWuueaLluaLveiHs+atpO+8jOWNs+WPr+W/q+mAn+WIm+W7uui/h+a7pOWZqOOAgueOsOW3suWPr+ivhuWIq++8mjxiciAvPjx1bD48bGk+5b6u5Y2a5q2j5paH55qE5paH5a2X5oiW6ZO+5o6lPC9saT48bGk+55So5oi35aS05YOP5oiW6ZO+5o6lPC9saT48bGk+6K+d6aKYPC9saT48bGk+5p2l5rqQ6ZO+5o6lPC9saT48L3VsPicsCiAgICAnemgtaGsnOiAn5bCH6KaB6Kit572u56+p6YG45Zmo55qE5YWn5a655ouW5ou96Iez5q2k77yM5Y2z5Y+v5b+r6YCf5Ym15bu656+p6YG45Zmo44CC54++5bey5Y+v6K2Y5Yil77yaPGJyIC8+PHVsPjxsaT7lvq7ljZrmraPmlofnmoTmloflrZfmiJbpgKPntZA8L2xpPjxsaT7kvb/nlKjogIXpoK3lg4/miJbpgKPntZA8L2xpPjxsaT7oqbHpoYw8L2xpPjxsaT7kvobmupDpgKPntZA8L2xpPjwvdWw+JywKICAgICd6aC10dyc6ICflsIfopoHoqK3nva7nr6npgbjlmajnmoTlhaflrrnmi5bmi73oh7PmraTvvIzljbPlj6/lv6vpgJ/libXlu7rnr6npgbjlmajjgILnj77lt7Llj6/orZjliKXvvJo8YnIgLz48dWw+PGxpPuW+ruWNmuato+aWh+eahOaWh+Wtl+aIlumAo+e1kDwvbGk+PGxpPuS9v+eUqOiAhemgreWDj+aIlumAo+e1kDwvbGk+PGxpPuipsemhjDwvbGk+PGxpPuS+hua6kOmAo+e1kDwvbGk+PC91bD4nLAogICAgJ2VuJzogJ0Ryb3AgaXRlbXMgaGVyZSB0byBjcmVhdGUgZmlsdGVyLiBUaGVzZSBpdGVtcyBtYXkgYmUgcmVjb2duaXplZDo8YnIgLz48dWw+PGxpPlRleHQgb3IgbGluayBpbiBXZWlibyBjb250ZW50PC9saT48bGk+QXZhdGFyIG9yIHVzZXIgbGluazwvbGk+PGxpPnRvcGljPC9saT48bGk+c291cmNlPC9saT48L3VsPicKICB9LAogICdmYXN0Q3JlYXRlQ2hvc2VUaXRsZSc6IHsgJ3poLWNuJzogJ+WIm+W7uui/h+a7pOWZqCcsICd6aC1oayc6ICflibXlu7rnr6npgbjlmagnLCAnemgtdHcnOiAn5Ym15bu656+p6YG45ZmoJywgJ2VuJzogJ0NyZWF0ZSBGaWx0ZXInIH0sCiAgJ2Zhc3RGaWx0ZXJDaG9zZVRleHQnOiB7ICd6aC1jbic6ICfor7fpgInmi6nopoHliJvlu7rnmoTov4fmu6TlmajvvJonLCAnemgtaGsnOiAn6KuL6YG45pOH6KaB5Ym15bu655qE56+p6YG45Zmo77yaJywgJ3poLXR3JzogJ+iri+mBuOaTh+imgeWJteW7uueahOevqemBuOWZqO+8micsICdlbic6ICdDaG9zZSB0aGUgZmlsdGVyKHMpIHlvdSB3YW50OicgfSwKICAvLyDmianlsZUKICAnc2NyaXB0RXh0ZW5zaW9uVGl0bGUnOiB7ICd6aC1jbic6ICfmianlsZUnLCAnemgtaGsnOiAn5pO05YWFJywgJ3poLXR3JzogJ+aTtOWFhScsICdlbic6ICdFeHRlbnNpb24nIH0sCiAgJ3NjcmlwdEV4dGVuc2lvbkVuYWJsZSc6IHsgJ3poLWNuJzogJ+WQr+eUqOWvuSBZQVdGIOeahOaJqeWxlScsICd6aC1oayc6ICfllZ/nlKjlsI0gWUFXRiDnmoTmk7TlhYUnLCAnemgtdHcnOiAn5ZWf55So5bCNIFlBV0Yg55qE5pO05YWFJywgJ2VuJzogJ0VuYWJsZSBFeHRlbnNpb24gZm9yIFlBV0YnIH0sCiAgJ3NjcmlwdEV4dGVuc2lvbldhcm5pbmcnOiB7CiAgICAnemgtY24nOiAn5rOo5oSP77yM5omp5bGV5Lul55So5oi36ISa5pys55qE5b2i5byP5a6J6KOF77yM5oKo5Y+q5bqU5b2T5LuO5oKo5L+h5Lu755qE5p2l5rqQ5a6J6KOF55So5oi36ISa5pys77yM5oG25oSP55qE6ISa5pys5Y+v6IO95Lya5L6154qv5oKo55qE6ZqQ56eB5bm25Zyo5oKo5LiN55+l5oOF55qE5oOF5Ya15LiL5Lul5oKo55qE5ZCN5LmJ6L+b6KGM5pON5L2c44CC5aaC5p6c5oKo5biM5pyb57yW5YaZIFlBV0Yg55qE5omp5bGV77yM6K+35Y+C6ICD5bi46KeB6Zeu6aKY44CCJywKICAgICd6aC1oayc6ICfms6jmhI/vvIzmk7TlhYXku6XnlKjmiLbohbPmnKznmoTlvaLlvI/lronoo53vvIzmgqjlj6rmh4nnlbblvp7mgqjkv6Hku7vnmoTkvobmupDlronoo53nlKjmiLbohbPmnKzvvIzmg6HmhI/nmoTohbPmnKzlj6/og73mnIPljbHlrrPmgqjnmoTpmrHnp4HvvIzkuKblnKjmgqjkuI3nn6Xmg4XnmoTmg4Xms4HkuIvku6XmgqjnmoTlkI3nvqnln7fooYzjgILlpoLmnpzmgqjluIzmnJvmkrDlr6sgWUFXRiDnmoTmk7TlsZXvvIzoq4vlj4PogIPluLjopovllY/poYzvvIjnsKHpq5TvvInjgIInLAogICAgJ3poLXR3JzogJ+azqOaEj++8jOaTtOWFheS7peeUqOaItuiFs+acrOeahOW9ouW8j+Wuieijne+8jOaCqOWPquaHieeVtuW+nuaCqOS/oeS7u+eahOS+hua6kOWuieijneeUqOaItuiFs+acrO+8jOaDoeaEj+eahOiFs+acrOWPr+iDveacg+WNseWus+aCqOeahOmaseenge+8jOS4puWcqOaCqOS4jeefpeaDheeahOaDheazgeS4i+S7peaCqOeahOWQjee+qeWft+ihjOOAguWmguaenOaCqOW4jOacm+aSsOWvqyBZQVdGIOeahOaTtOWxle+8jOiri+WPg+iAg+W4uOimi+WVj+mhjO+8iOewoemrlO+8ieOAgicsCiAgICAnZW4nOiAnTm90aWNlOiBFeHRlbnNpb24gd2FzIGluc3RhbGxlZCBhcyB1c2Vyc2NyaXB0LiBZb3Ugc2hvdWxkIG9ubHkgaW5zdGFsbCBzY3JpcHRzIHRydXN0ZWQuIE1hbGljaW91cyBzY3JpcHRzIGNhbiB2aW9sYXRlIHlvdXIgcHJpdmFjeSBhbmQgYWN0IG9uIHlvdXIgYmVoYWxmIHdpdGhvdXQgeW91ciBrbm93bGVkZ2UuIFBsZWFzZSByZWZlciB0byB0aGUgRlFBIFBhZ2UsIGlmIHlvdSB3YW50IHRvIHdyaXRlIHlvdXIgZXh0ZW5zaW9uIGZvciBZQVdGLicsCiAgfSwKICAnc3Vic2NyaWJlRmlsdGVyR3JvdXBUaXRsZSc6IHsgJ3poLWNuJzogJ+inhOWImeiuoumYhScsICd6aC1oayc6ICfopo/liYfoqILplrEnLCAnemgtdHcnOiAn6KaP5YmH6KiC6ZaxJywgJ2VuJzogJ1N1YnNjcmliZScgfSwKICAnc3Vic2NyaWJlTGlzdFRpdGxlJzogeyAnemgtY24nOiAn6K6i6ZiF55qE6KeE5YiZJywgJ3poLWhrJzogJ+iogumWseeahOimj+WJhycsICd6aC10dyc6ICfoqILplrHnmoTopo/liYcnLCAnZW4nOiAnUnVsZXMgU3Vic2NyaWJlZCcgfSwKICAnc3Vic2NyaWJlRGlzYWJsZUJ1dHRvbic6IHsgJ3poLWNuJzogJ+emgeeUqCcgfSwKICAnc3Vic2NyaWJlRW5hYmxlQnV0dG9uJzogeyAnemgtY24nOiAn5ZCv55SoJyB9LAogICdzdWJzY3JpYmVEZXRhaWxCdXR0b24nOiB7ICd6aC1jbic6ICfor6bnu4YnIH0sCiAgJ2V4dGVuc2lvbkZpbHRlckdyb3VwVGl0bGUnOiB7ICd6aC1jbic6ICfmianlsZXlip/og70nLCAnemgtaGsnOiAn5pO05YWF5Yqf6IO9JywgJ3poLXR3JzogJ+aTtOWFheWKn+iDvScsICdlbic6ICdFeHRlbnNpb24nIH0sCn07CgovLyDpobXpnaLluLjph48KdmFyIGh0bWwgPSB7CiAgJ3wnOiAnPC9sYWJlbD48bGFiZWw+JywgLy8g5YWI5YWz6Zet5YmN6Z2i55qEbGFiZWzvvIzlho3ku47lkI7pnaLlvIDkuIDkuKrvvIzmiYDku6Xov5nph4zmsqHlhpnlj40KICAnfHwnOiAnPC9sYWJlbD48YnIgLz48bGFiZWw+JywKICAnc2VsZWN0JzogJzxzZWxlY3Q+e3tvcHRpb25zfX08L3NlbGVjdD4nLAogICdvcHRpb24nOiAnPG9wdGlvbiB2YWx1ZT0ie3t2YWx1ZX19Ij57e3t0ZXh0fX19PC9vcHRpb24+JywKICAvLyDlr7nor53moYYKICAnY292ZXInOiAnPGRpdiBub2RlLXR5cGU9Im91dGVyIiBzdHlsZT0icG9zaXRpb246IGZpeGVkOyB0b3A6IDBweDsgbGVmdDogMHB4OyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOyBiYWNrZ3JvdW5kOiBub25lIHJlcGVhdCBzY3JvbGwgMCUgMCUgcmdiKDAsIDAsIDApOyBvcGFjaXR5OiAwLjM7IHotaW5kZXg6IDk5OTk7Ij48L2Rpdj4nLAogICdkaWFsb2cnOiAnPGRpdiBpZD0ie3tpZH19IiBjbGFzcz0iV19sYXllciB5YXdmLUxheWVyIiBzdHlsZT0idG9wOiAxOTNweDsgbGVmdDogMzc2cHg7Ij48ZGl2IHRhYmluZGV4PSIwIj48L2Rpdj48ZGl2IGNsYXNzPSJjb250ZW50IiBub2RlLXR5cGU9ImF1dG9IZWlnaHQiPjxkaXYgY2xhc3M9IldfbGF5ZXJfdGl0bGUiIG5vZGUtdHlwZT0idGl0bGUiIHN0eWxlPSIiPnt7dGl0bGV9fTwvZGl2PjxkaXYgY2xhc3M9IldfbGF5ZXJfY2xvc2UiPjxhIGNsYXNzPSJXX2ZpY29uIGZpY29uX2Nsb3NlIFNfZmljb24iIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIG5vZGUtdHlwZT0iY2xvc2UiPlg8L2E+PC9kaXY+PGRpdiBub2RlLXR5cGU9ImlubmVyIj48L2Rpdj48L2Rpdj48L2Rpdj4nLAogICdhbGVydCc6ICc8ZGl2IGNsYXNzPSJXX2xheWVyIHlhd2YtTGF5ZXIiIGlkPSJ7e2lkfX0iPjxkaXYgdGFiaW5kZXg9IjAiPjwvZGl2PjxkaXYgY2xhc3M9ImNvbnRlbnQiPjxkaXYgY2xhc3M9IldfbGF5ZXJfdGl0bGUiIG5vZGUtdHlwZT0idGl0bGUiPnt7dGl0bGV9fTwvZGl2PjxkaXYgY2xhc3M9IldfbGF5ZXJfY2xvc2UiPjxhIGNsYXNzPSJXX2ZpY29uIGZpY29uX2Nsb3NlIFNfZmljb24iIG5vZGUtdHlwZT0iY2xvc2UiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPlg8L2E+PC9kaXY+PGRpdiBub2RlLXR5cGU9ImlubmVyIj48ZGl2IGNsYXNzPSJsYXllcl9wb2ludCI+PGRsIGNsYXNzPSJwb2ludCBjbGVhcmZpeCI+PGR0IG5vZGUtdHlwZT0iaWNvbiI+PHNwYW4gY2xhc3M9IldfaWNvbiBpY29uX3t7aWNvbn19QiI+PC9zcGFuPjwvZHQ+PGRkIG5vZGUtdHlwZT0idGV4dCI+PHAgY2xhc3M9IlNfdHh0MSI+e3t0ZXh0fX08L3A+PC9kZD48L2RsPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IldfbGF5ZXJfYnRuIFNfYmcxIj48YSBhY3Rpb24tdHlwZT0ib2siIG5vZGUtdHlwZT0ib2siIGNsYXNzPSJXX2J0bl9hIGJ0bl8zNHB4IiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij48c3Bhbj57e29rQnV0dG9uVGl0bGV9fTwvc3Bhbj48L2E+PC9kaXY+PC9kaXY+PC9kaXY+JywKICAnY29uZmlybSc6ICc8ZGl2IGNsYXNzPSJXX2xheWVyIHlhd2YtTGF5ZXIiIGlkPSJ7e2lkfX0iPjxkaXYgdGFiaW5kZXg9IjAiPjwvZGl2PjxkaXYgY2xhc3M9ImNvbnRlbnQiPjxkaXYgY2xhc3M9IldfbGF5ZXJfdGl0bGUiIG5vZGUtdHlwZT0idGl0bGUiPnt7dGl0bGV9fTwvZGl2PjxkaXYgY2xhc3M9IldfbGF5ZXJfY2xvc2UiPjxhIGNsYXNzPSJXX2ZpY29uIGZpY29uX2Nsb3NlIFNfZmljb24iIG5vZGUtdHlwZT0iY2xvc2UiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPlg8L2E+PC9kaXY+PGRpdiBub2RlLXR5cGU9ImlubmVyIj48ZGl2IGNsYXNzPSJsYXllcl9wb2ludCI+PGRsIGNsYXNzPSJwb2ludCBjbGVhcmZpeCI+PGR0IG5vZGUtdHlwZT0iaWNvbiI+PHNwYW4gY2xhc3M9IldfaWNvbiBpY29uX3t7aWNvbn19QiI+PC9zcGFuPjwvZHQ+PGRkIG5vZGUtdHlwZT0idGV4dCI+PHAgY2xhc3M9IlNfdHh0MSI+e3t0ZXh0fX08L3A+PC9kZD48L2RsPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IldfbGF5ZXJfYnRuIFNfYmcxIj48YSBhY3Rpb24tdHlwZT0ib2siIG5vZGUtdHlwZT0ib2siIGNsYXNzPSJXX2J0bl9hIGJ0bl8zNHB4IiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij48c3Bhbj57e29rQnV0dG9uVGl0bGV9fTwvc3Bhbj48L2E+PGEgYWN0aW9uLXR5cGU9ImNhbmNlbCIgbm9kZS10eXBlPSJjYW5jZWwiIGNsYXNzPSJXX2J0bl9iIGJ0bl8zNHB4IiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij48c3Bhbj57e2NhbmNlbEJ1dHRvblRpdGxlfX08L3NwYW4+PC9hPjwvZGl2PjwvZGl2PjwvZGl2PicsCiAgJ2J1YmJsZSc6ICc8ZGl2IGNsYXNzPSJXX2xheWVyIHlhd2YtTGF5ZXIgV19sYXllcl9wb3AgeWF3Zi1idWJibGUiPjxkaXYgY2xhc3M9ImNvbnRlbnQgbGF5ZXJfbWluaV9pbmZvIj48ZGl2IGNsYXNzPSJtYWluX3R4dCI+e3t7dGV4dH19fTwvZGl2PjxkaXYgY2xhc3M9IldfbGF5ZXJfYXJyb3ciPjxzcGFuIGNsYXNzPSJXX2Fycm93X2JvciIgbm9kZS10eXBlPSJhcnJvdyI+PGkgY2xhc3M9IlNfbGluZTMiPjwvaT48ZW0gY2xhc3M9IlNfYmcyX2JyIj48L2VtPjwvc3Bhbj48ZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PicsCiAgLy8g5ryP5paX5Zu+5qCHCiAgJ2ljb24nOiAnPGRpdiBjbGFzcz0iZ25fc2V0X2xpc3QgeWF3Zi1nbl9zZXRfbGlzdCI+PGEgbm9kZS10eXBlPSJmaWx0ZXIiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJnbl9maWx0ZXIiPjxlbSBjbGFzcz0iV19maWNvbiBmaWNvbl9tYWlsIFNfZmljb24iPlk8L2VtPjwvYT48L2Rpdj4nLAogICdtZW51aXRlbSc6ICc8dWw+PGxpIGNsYXNzPSJsaW5lIFNfbGluZTEgeWF3Zi1jb25maWctbWVudWxpbmUiPjwvbGk+PGxpPjxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJ5YXdmLWNvbmZpZy1tZW51aXRlbSI+e3tmaWx0ZXJNZW51SXRlbX19PC9hPjwvbGk+PC91bD4nLAogIC8vIOiuvue9rueql+WPowogICdjb25maWdIZWFkZXJUb3AnOiAnPGRpdiBjbGFzcz0iV0JfbWluaXRhYiB5YXdmLWNvbmZpZy1oZWFkZXIiIG5vZGUtdHlwZT0ieWF3Zi1jb25maWctaGVhZGVyIj48dWwgY2xhc3M9Im1pbml0Yl91bCBTX2xpbmUxIFNfYmcxIGNsZWFyZml4Ij4nLAogICdjb25maWdIZWFkZXJJdGVtJzogJzxsaSBjbGFzcz0ibWluaXRiX2l0ZW0gU19saW5lMSB7e2xpY2xhc3N9fSI+PGEgY2xhc3M9Im1pbml0Yl9sayBTX3R4dDEge3thY2xhc3N9fSIgYWN0aW9uLXR5cGU9InRhYl9pdGVtIiBvbmNsaWNrPSJyZXR1cm4gZmFsc2U7IiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57e25hbWV9fTwvYT48c3BhbiBjbGFzcz0ieWF3Zi1jdXJfYmxvY2siPjwvc3Bhbj48L2xpPicsCiAgJ2NvbmZpZ0hlYWRlclNlYXJjaCc6ICc8bGkgY2xhc3M9Im1pbml0Yl9pdGVtIFNfbGluZTEiPjxsYWJlbCBjbGFzcz0ibWluaXRiX2xrIFNfdHh0MSI+PGlucHV0IGlkPSJ5YXdmLWNvbmZpZy1zZWFyY2giIGNsYXNzPSJ5YXdmLWNvbmZpZy1zZWFyY2giIHR5cGU9InNlYXJjaCIgLz48c3BhbiBjbGFzcz0ieWF3Zi1jb25maWctc2VhcmNoLWxvZ28gV19maWNvbiBTX3R4dDIiPmY8L3NwYW4+PHNwYW4gY2xhc3M9Inlhd2YtY3VyX2Jsb2NrIj48L3NwYW4+PC9sYWJlbD48L2xpPicsCiAgJ2NvbmZpZ0hlYWRlckJvdHRvbSc6ICc8L3VsPjwvZGl2PicsCiAgJ2NvbmZpZ0xheWVyVG9wJzogJzxkaXYgbm9kZS10eXBlPSJ5YXdmLWNvbmZpZy1ib2R5IiBjbGFzcz0ieWF3Zi1jb25maWctYm9keSB5YXdmLXdpbmRvdy1ib2R5Ij4nLAogICdjb25maWdMYXllckl0ZW0nOiAnPGRpdiBjbGFzcz0ie3tuYW1lfX0geWF3Zi1jb25maWctbGF5ZXIiIG5vZGUtdHlwZT0ie3tuYW1lfX0iIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+PC9kaXY+JywKICAnY29uZmlnTGF5ZXJCb3R0b20nOiAnPC9kaXY+JywKICAnY29uZmlnRm9vdGVyJzogJycsCiAgJ3NlYXJjaE5vdEZvdW5kJzogJzxkaXYgY2xhc3M9IldCX2VtcHR5Ij48ZGl2IGNsYXNzPSJXQl9pbm5lcndyYXAiPjxkaXYgY2xhc3M9ImVtcHR5X2NvbiBjbGVhcmZpeCI+PHAgY2xhc3M9Imljb25fYmVkIj48aSBjbGFzcz0iV19pY29uIGljb25fd2FybkIiPjwvaT48L3A+PHAgY2xhc3M9InRleHQiPnt7c2VhcmNoTm90Rm91bmR9fTwvcD48L2Rpdj48L2Rpdj48L2Rpdj4nLAogICdzaWNvbic6ICc8aSBjbGFzcz0iV19pY29uIGljb25fe3tpY29ufX1TIHlhd2YtY29uZmlnU0ljb24iPjwvaT4nLAogIC8vIOiuvue9rueql+WPo+WGheaWh+WtlwogICdjb25maWdEZWZhdWx0JzogJzxkaXYgY2xhc3M9Inlhd2YtdGV4dCI+e3t7dGV4dH19fTwvZGl2PicsCiAgJ2NvbmZpZ1N1YnRpdGxlJzogJzxkaXYgY2xhc3M9Inlhd2YtZ3JvdXBTdWJ0aXRsZSI+e3t7dGV4dH19fTwvZGl2PicsCiAgJ2NvbmZpZ1RleHQnOiAnPGRpdiBjbGFzcz0ieWF3Zi1ncm91cFRleHQiPnt7e3RleHR9fX08L2Rpdj4nLAogICdjb25maWdSZW1hcmsnOiAnPGRpdiBjbGFzcz0ieWF3Zi1ncm91cFJlbWFyayI+e3t7dGV4dH19fTwvZGl2PicsCiAgJ2NvbmZpZ0xhYmVsJzogJzxkaXYgY2xhc3M9Inlhd2YtZ3JvdXBMYWJlbCI+PGxhYmVsPnt7e3RleHR9fX08L2xhYmVsPjwvZGl2PicsCiAgLy8g6K6+572u6aG5CiAgJ2NvbmZpZ0Jvb2xlYW4nOiAnPGRpdiBjbGFzcz0ieWF3Zi1jb25maWdCb29sZWFuIHlhd2YtY29uZmlnSXRlbSI+PGxhYmVsPnt7dGV4dH19PC9sYWJlbD48L2Rpdj4nLAogICdjb25maWdCb29sZWFuSW5wdXQnOiAnPGRpdiBjbGFzcz0ieWF3Zi1jb25maWdJbnB1dCB5YXdmLWNvbmZpZ0Jvb2xlYW5JbnB1dCI+PGlucHV0IHlhd2YtY2k9Int7a2V5fX0iIGNsYXNzPSJXX2NoZWNrYm94IHlhd2YtY29uZmlnQm9vbGVhbklucHV0IiB0eXBlPSJjaGVja2JveCIgbmFtZT0ieWF3Zi17e2tleX19Ij48L2Rpdj4nLAogICdjb25maWdTZWxlY3QnOiAnPGRpdiBjbGFzcz0ieWF3Zi1jb25maWdTZWxlY3QgeWF3Zi1jb25maWdJdGVtIj48bGFiZWw+e3t0ZXh0fX08L2xhYmVsPjwvZGl2PicsCiAgJ2NvbmZpZ1NlbGVjdElucHV0JzogJzxkaXYgY2xhc3M9Inlhd2YtY29uZmlnSW5wdXQgeWF3Zi1jb25maWdTZWxlY3RJbnB1dCI+PHNlbGVjdCB5YXdmLWNpPSJ7e2tleX19IiBjbGFzcz0ieWF3Zi1jb25maWdTZWxlY3RTZWxlY3QiIG5hbWU9Inlhd2Yte3trZXl9fSI+PC9zZWxlY3Q+PC9kaXY+JywKICAnY29uZmlnU3RyaW5nJzogJzxkaXYgY2xhc3M9Inlhd2YtY29uZmlnU3RyaW5nIHlhd2YtY29uZmlnSXRlbSI+PGxhYmVsPnt7dGV4dH19PC9sYWJlbD48L2Rpdj4nLAogICdjb25maWdTdHJpbmdJbnB1dCc6ICc8ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ0lucHV0IHlhd2YtY29uZmlnU3RyaW5nSW5wdXQiPjx0ZXh0YXJlYSB5YXdmLWNpPSJ7e2tleX19IiBjbGFzcz0iV19pbnB1dCB5YXdmLWNvbmZpZ1N0cmluZ0lucHV0IiBuYW1lPSJ5YXdmLXt7a2V5fX0iPjwvdGV4dGFyZWE+PC9kaXY+JywKICAnY29uZmlnQ29sb3InOiAnPGRpdiBjbGFzcz0ieWF3Zi1jb25maWdDb2xvciB5YXdmLWNvbmZpZ0l0ZW0iPjxsYWJlbD57e3RleHR9fTwvbGFiZWw+PC9kaXY+JywKICAnY29uZmlnQ29sb3JJbnB1dCc6ICc8ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ0lucHV0IHlhd2YtY29uZmlnQ29sb3JJbnB1dCI+PGlucHV0IHlhd2YtY2k9Int7a2V5fX0iIGNsYXNzPSJXX2YxNCB5YXdmLWNvbmZpZ0NvbG9ySW5wdXQiIG5hbWU9Inlhd2Yte3trZXl9fSIgdHlwZT0iY29sb3IiIHN0eWxlPSJ3aWR0aDogNDBweDsiIC8+PC9kaXY+JywKICAnY29uZmlnTnVtYmVyJzogJzxkaXYgY2xhc3M9Inlhd2YtY29uZmlnTnVtYmVyIHlhd2YtY29uZmlnSXRlbSI+PGxhYmVsPnt7dGV4dH19PC9sYWJlbD48L2Rpdj4nLAogICdjb25maWdOdW1iZXJJbnB1dCc6ICc8ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ0lucHV0IHlhd2YtY29uZmlnTnVtYmVySW5wdXQiPjxpbnB1dCB5YXdmLWNpPSJ7e2tleX19IiB0eXBlPSJudW1iZXIiIGNsYXNzPSJXX2YxNCB5YXdmLWNvbmZpZ051bWJlcklucHV0IiBuYW1lPSJ5YXdmLXt7a2V5fX0iIHN0eWxlPSJ3aWR0aDogNjBweDsiIC8+PC9kaXY+JywKICAnY29uZmlnUmFuZ2UnOiAnPGRpdiBjbGFzcz0ieWF3Zi1jb25maWdSYW5nZSB5YXdmLWNvbmZpZ0l0ZW0iPjxsYWJlbD57e3RleHR9fTwvbGFiZWw+PC9kaXY+JywKICAnY29uZmlnUmFuZ2VJbnB1dCc6ICc8ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ0lucHV0IHlhd2YtY29uZmlnUmFuZ2VJbnB1dCI+PGlucHV0IHR5cGU9Im51bWJlciIgbWluPSIwIiBtYXg9IjEwMCIgbWF4bGVuZ3RoPSIzIiB5YXdmLWNpPSJ7e2tleX19IiBjbGFzcz0iV19mMTQgeWF3Zi1jb25maWdSYW5nZUlucHV0IiBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQ7IiBuYW1lPSJ5YXdmLXt7aWR9fSIgLz48ZGl2IGNsYXNzPSJ5YXdmLXJhbmdlLWNvbnRhaW5lciI+PGlucHV0IHR5cGU9InJhbmdlIiBzdHlsZT0iaGVpZ2h0OiAxZW07IHdpZHRoOiA2NnB4OyBtYXJnaW4tbGVmdDogN3B4OyBtYXJnaW4tcmlnaHQ6IDdweDsgIiB0YWJpbmRleD0iLTEiIC8+PC9kaXY+PC9kaXY+JywKICAnY29uZmlnS2V5JzogJzxkaXYgY2xhc3M9Inlhd2YtY29uZmlnS2V5IHlhd2YtY29uZmlnSXRlbSI+PGxhYmVsPnt7dGV4dH19PC9sYWJlbD48L2Rpdj4nLAogICdjb25maWdLZXlJbnB1dCc6ICc8ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ0lucHV0IHlhd2YtY29uZmlnS2V5SW5wdXQiPjxidXR0b24gY2xhc3M9IldfZjE0IHlhd2YtY29uZmlnS2V5TmFtZSI+PC9idXR0b24+PGlucHV0IHR5cGU9ImhpZGRlbiIgeWF3Zi1jaT0ie3trZXl9fSIgbmFtZT0ieWF3Zi17e2tleX19IiAvPjxzcGFuIGNsYXNzPSJ5YXdmLWNvbmZpZ0tleVRpcCI+e3trZXlJbnB1dFRpcH19PC9zcGFuPjwvZGl2PicsCiAgJ2NvbmZpZ1N1YnNjcmliZSc6ICc8ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ1N1YnNjcmliZSB5YXdmLWNvbmZpZ0l0ZW0gIj48ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ1N1YnNjcmliZUljb24iPjxpbWcgd2lkdGg9IjY0IiBoZWlnaHQ9IjY0IiBzcmM9Int7aWNvbn19Ij48L2Rpdj48ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ1N1YnNjcmliZVRpdGxlIj48ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ1N1YnNjcmliZU5hbWUiPnt7bmFtZX19PC9kaXY+PGRpdiBjbGFzcz0ieWF3Zi1jb25maWdTdWJzY3JpYmVEYXRlIj57e2RhdGV9fTwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9Inlhd2YtY29uZmlnU3Vic2NyaWJlSW5mbyI+e3tkZXNjcmlwdGlvbn19PC9kaXY+PGRpdiBjbGFzcz0ieWF3Zi1jb25maWdTdWJzY3JpYmVCdXR0b24iPjxhIGhyZWY9ImphdmFzY3JpcHQ6OyIgY2xhc3M9IldfYnRuX2IgeWF3Zi1zdWJzY3JpYmVEaXNhYmxlIj48c3BhbiBjbGFzcz0iV19mMTQiPnt7c3Vic2NyaWJlRGlzYWJsZUJ1dHRvbn19PC9zcGFuPjwvYT48YSBocmVmPSJqYXZhc2NyaXB0OjsiIGNsYXNzPSJXX2J0bl9iIHlhd2Ytc3Vic2NyaWJlRW5hYmxlIj48c3BhbiBjbGFzcz0iV19mMTQiPnt7c3Vic2NyaWJlRW5hYmxlQnV0dG9ufX08L3NwYW4+PC9hPjxhIGhyZWY9IiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9yZWZlcnJlciIgY2xhc3M9IldfYnRuX2IgeWF3Zi1zdWJzY3JpYmVEZXRhaWwiPjxzcGFuIGNsYXNzPSJXX2YxNCI+e3tzdWJzY3JpYmVEZXRhaWxCdXR0b259fTwvc3Bhbj48L2E+PC9kaXY+PC9kaXY+JywKICAnY29uZmlnU3RyaW5ncyc6ICc8ZGl2IGNsYXNzPSJ5YXdmLWNvbmZpZ1N0cmluZ3MgeWF3Zi1jb25maWdJdGVtIj48Zm9ybSBhY3Rpb249IiMiPjxsYWJlbD48c3BhbiBjbGFzcz0ieWF3Zi1jb25maWdEZXNjIHlhd2YtY29uZmlnU3RyaW5nc0Rlc2MiPnt7e3RleHR9fX08L3NwYW4+PGlucHV0IGlkPSJ5YXdmLXt7a2V5fX0iIGNsYXNzPSJXX2lucHV0IHlhd2YtY29uZmlnU3RyaW5nc0lucHV0IiB0eXBlPSJ0ZXh0IiBuYW1lPSJ5YXdmLXt7a2V5fX0iPjwvbGFiZWw+PGJ1dHRvbiBpZD0ieWF3Zi1hZGQte3trZXl9fSIgY2xhc3M9IldfYnRuX2EgeWF3Zi1jb25maWdBZGQiIHR5cGU9InN1Ym1pdCI+PHNwYW4+e3tjb25maWdTdHJpbmdzQWRkfX08L3NwYW4+PC9idXR0b24+PC9mb3JtPjx1bCBjbGFzcz0ieWF3Zi1jb25maWdTdHJpbmdzSXRlbXMgeWF3Zi1jb25maWdJdGVtcyI+PC91bD48L2Rpdj4nLAogICdjb25maWdTdHJpbmdzSXRlbSc6ICc8bGkgY2xhc3M9IldfYnRuX2IgV19idG5fdGFnIHlhd2YtY29uZmlnU3RyaW5nc0l0ZW0iIG5vZGUtdHlwZT0idGFnX2l0ZW0iIHRpdGxlPSJ7e1tpdGVtXX19Ij48YSBjbGFzcz0iV19maWNvbiBmaWNvbl9jbG9zZSBTX2ZpY29uIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij5YPC9hPnt7W2l0ZW1dfX08L2xpPicsCiAgJ2NvbmZpZ1VzZXJzJzogJzxkaXYgY2xhc3M9Inlhd2YtY29uZmlnVXNlcnMgeWF3Zi1jb25maWdJdGVtIj48Zm9ybSBhY3Rpb249IiMiPjxsYWJlbD48c3BhbiBjbGFzcz0ieWF3Zi1jb25maWdEZXNjIHlhd2YtY29uZmlnVXNlcnNEZXNjIj57e3t0ZXh0fX19PC9zcGFuPjxpbnB1dCBpZD0ieWF3Zi17e2tleX19IiBjbGFzcz0iV19pbnB1dCB5YXdmLWNvbmZpZ1VzZXJzSW5wdXQiIHR5cGU9InRleHQiIG5hbWU9Inlhd2Yte3trZXl9fSI+PC9sYWJlbD48YnV0dG9uIGlkPSJ5YXdmLWFkZC17e2tleX19IiBjbGFzcz0iV19idG5fYSB5YXdmLWNvbmZpZ0FkZCIgdHlwZT0ic3VibWl0Ij48c3Bhbj57e2NvbmZpZ1VzZXJzQWRkfX08L3NwYW4+PC9idXR0b24+PC9mb3JtPjx1bCBjbGFzcz0ieWF3Zi1jb25maWdVc2Vyc0l0ZW1zIHlhd2YtY29uZmlnSXRlbXMiPjwvdWw+PC9kaXY+JywKICAnY29uZmlnVXNlcnNJdGVtJzogJzxsaSBjbGFzcz0ieWF3Zi1jb25maWdVc2Vyc0l0ZW0iPjxkaXYgY2xhc3M9InNoaWVsZF9vYmplY3RfY2FyZCI+PGRpdiBjbGFzcz0iY2FyZF9iZyBjbGVhcmZpeCI+PGRpdiBjbGFzcz0iY2FyZF9waWMiPjxzcGFuIGNsYXNzPSJwaWMiPjxpbWcgY2xhc3M9IldfZmFjZV9yYWRpdXMiIHdpZHRoPSI1MCIgaGVpZ2h0PSI1MCIgYWx0PSIiIHNyYz0ie3thdmF0YXJ9fSI+PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9ImNhcmRfY29udGVudCI+PGRpdiBjbGFzcz0ib2JqZWN0X2luZm8gY2xlYXJmaXgiPjxwIGNsYXNzPSJXX2ZsIj48c3BhbiBjbGFzcz0ib2JqZWN0X25hbWUiIHVpZD0ie3tpZH19IiB0aXRsZT0ie3tuYW1lfX0iPnt7bmFtZX19PC9zcGFuPjwvcD48cCBjbGFzcz0iV19mciI+PGEgY2xhc3M9IldfZmljb24gZmljb25fY2xvc2UgU19maWNvbiIgYWN0aW9uLWRhdGE9InVpZD17e2lkfX0iIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPlg8L2E+PC9wPjwvZGl2PjxkaXYgY2xhc3M9Im90aGVyX2luZm8iPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvbGk+JywKICAnY29uZmlnUHJlZmlsbCc6ICc8c3BhbiBjbGFzcz0ieWF3Zi1jb25maWdQcmVmaWxsIiBpZD0ie3tpZH19Ij48L3NwYW4+JywKICAnc2NyaXB0SWNvbic6ICc8ZGl2IGlkPSJ5YXdmLXNjcmlwdC1pY29uIiBzdHlsZT0iYmFja2dyb3VuZDogdXJsKHt7aWNvbn19KTsgd2lkdGg6IDcycHg7IGhlaWdodDogNzJweDsgZmxvYXQ6IHJpZ2h0OyBtYXJnaW46IDAgMmVtIj48L2Rpdj4nLAogICdyZWZDb25maWdJdGVtJzogJzxzcGFuIHlhd2YtcmVmPSJ7e3JlZn19Ij48L3NwYW4+JywKICAvLyDoh6rliqjooaXlhajlip/og70KICAnc3VnZ2VzdGlvbkNvbnRhaW5lcic6ICc8ZGl2IGNsYXNzPSJsYXllcl9tZW51X2xpc3QgeWF3Zi1hdXRvQ29tcGxldGVMaXN0IiB5YXdmLWNvbXBsZXRlLWl0ZW1zPSIwIj48dWw+PC91bD48L2Rpdj4nLAogICdzdWdnZXN0aW9uSXRlbSc6ICc8bGkgeWF3Zi1zdWdnZXN0aW9uPSJ7e3RleHR9fSI+PGE+e3t0ZXh0fX08L2E+PC9saT4nLAogIC8vIOmAieS4reW9k+WJjeWIhue7hOaJgOaciQogICdjb25maWdTZWxlY3RBbGwnOiAnPGRpdiBjbGFzcz0ieWF3Zi1jb25maWdTZWxlY3RBbGwgeWF3Zi1jb25maWdJdGVtIj48YSBjbGFzcz0iV19idG5fYiIgaHJlZj0iamF2YXNjcmlwdDo7Ij48c3BhbiBjbGFzcz0iV19mMTIiPnt7Y29uZmlnU2VsZWN0QWxsRGVzY319PC9zcGFuPjwvYT48L2Rpdj4nLAogIC8vIOS9v+eUqOWIhue7hOS7o+abv+mmlumhtQogICdzZWxlY3RHcm91cEJ1dHRvbic6ICc8ZGl2IHN0eWxlPSJtYXJnaW46IDAgMCAwIDRlbTsiPnt7c2VsZWN0ZWRHcm91cH19PHNwYW4gY2xhc3M9Inlhd2Ytc2VsZWN0LWdyb3VwLXNob3ciPjwvc3Bhbj48YSBocmVmPSJqYXZhc2NyaXB0OjsiIGNsYXNzPSJXX2J0bl9iIHlhd2Ytc2VsZWN0LWdyb3VwLWJ1dHRvbiIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxZW07Ij48c3BhbiBjbGFzcz0iV19mMTQiPnt7c2VsZWN0R3JvdXBCdXR0b259fTwvc3Bhbj48L2E+PC9kaXY+JywKICAnc2VsZWN0R3JvdXBIZWFkZXInOiAnPGRpdiBjbGFzcz0ieWF3Zi1zZWxlY3QtZ3JvdXAtaGVhZGVyIHlhd2Ytd2luZG93LWhlYWRlciI+e3tzZWxlY3RHcm91cEhlYWRlcn19PC9kaXY+JywKICAnc2VsZWN0R3JvdXBCb2R5JzogJzxkaXYgY2xhc3M9Inlhd2Ytc2VsZWN0LWdyb3VwLWJvZHkgeWF3Zi13aW5kb3ctYm9keSI+PHNwYW4gY2xhc3M9Inlhd2Ytc2VsZWN0LWdyb3VwLWxvYWRpbmciPnt7c2VsZWN0R3JvdXBMb2FkaW5nfX08L3NwYW4+PHVsIGNsYXNzPSIiPjwvdWw+PC9kaXY+JywKICAnc2VsZWN0R3JvdXBJdGVtJzogJzxsaT48YSBocmVmPSJqYXZhc2NyaXB0OjsiPjxzcGFuIGNsYXNzPSJpY29fYmxvY2siPjwvc3Bhbj48c3BhbiBnaWQ9Int7aWR9fSI+e3tuYW1lfX08L3NwYW4+PC9hPjwvbGk+JywKICAnc2VsZWN0R3JvdXBJdGVtRG90JzogJzxlbSBub2RlLXR5cGU9ImxlZnRfaXRlbSIgY2xhc3M9IldfZmljb24gZmljb25fZG90IFNfZmljb24iPkQ8L2VtPicsCiAgJ3NlbGVjdEdyb3VwSXRlbUNob3NlZCc6ICc8ZW0gbm9kZS10eXBlPSJsZWZ0X2l0ZW0iIGNsYXNzPSJXX2ZpY29uIGZpY29uX2RvdCBTX2ZpY29uIj5CPC9lbT4nLAogIC8vIOS9v+eUqOWkmuS4quWIhue7hOS7o+abv+mmlumhtQogICdsb2FkV2VpYm9CeU11bHRpR3JvdXBNb3JlJzogJzxkaXYgY2xhc3M9IldCX2NhcmR3cmFwIFNfYmcyIHlhd2YtbXVsdGlHcm91cE1vcmUiPjxhIGNsYXNzPSJXQl9jYXJkbW9yZSBXQl9jYXJkbW9yZV9ub2JvcmRlciBjbGVhcmZpeCIgaHJlZj0iamF2YXNjcmlwdDo7Ij48c3BhbiBjbGFzcz0ibW9yZV90eHQgV19mMTQiPnt7bG9hZFdlaWJvQnlNdWx0aUdyb3VwTW9yZX19PGVtIGNsYXNzPSJXX2ZpY29uIGZpY29uX2Fycm93X2Rvd24iPmM8L2VtPjwvc3Bhbj48L2E+PC9kaXY+JywKICAnbG9hZFdlaWJvQnlNdWx0aUdyb3VwRG9uZUFsbCc6ICc8ZGl2IGNsYXNzPSJXQl9jYXJkd3JhcCBTX2JnMiB5YXdmLW11bHRpR3JvdXBEb25lIj48ZGl2IGNsYXNzPSJXQl9jYXJkdGl0bGVfYSBXX3RjIj57e2xvYWRXZWlib0J5TXVsdGlHcm91cERvbmVBbGx9fTwvZGl2PjwvZGl2PicsCiAgJ2xvYWRXZWlib0J5TXVsdGlHcm91cERvbmVHcm91cCc6ICc8ZGl2IGNsYXNzPSJXQl9jYXJkd3JhcCBTX2JnMiB5YXdmLW11bHRpR3JvdXBEb25lIj48ZGl2IGNsYXNzPSJXQl9jYXJkdGl0bGVfYSBXX3RjIj57e2xvYWRXZWlib0J5TXVsdGlHcm91cERvbmVHcm91cExlZnR9fTxzcGFuIGdpZD0ie3tpZH19Ij48L3NwYW4+e3tsb2FkV2VpYm9CeU11bHRpR3JvdXBEb25lR3JvdXBSaWdodH19PC9kaXY+PC9kaXY+JywKICAnbG9hZFdlaWJvQnlNdWx0aUdyb3VwTG9hZGluZyc6ICc8ZGl2IGNsYXNzPSJXQl9jYXJkd3JhcCBTX2JnMiI+PGRpdiBjbGFzcz0iV0JfZW1wdHkgV0JfZW1wdHlfbmFycm93Ij48ZGl2IGNsYXNzPSJXQl9pbm5lcndyYXAiPjxkaXYgY2xhc3M9ImVtcHR5X2NvbiBjbGVhcmZpeCI+PHAgY2xhc3M9InRleHQiPjxpIGNsYXNzPSJXX2xvYWRpbmciPjwvaT57e2xvYWRXZWlib0J5TXVsdGlHcm91cExvYWRpbmd9fTwvcD48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4nLAogICdsb2FkV2VpYm9CeU11bHRpR3JvdXBXaGlzcGVySWNvbic6ICc8ZW0gY2xhc3M9IldfZmljb24gZmljb25fcF9xdWlldGZvbGxvdyBTX2ZpY29uIj7DojwvZW0+JywKICAvLyDlr7zlhaXlr7zlh7oKICAnY29uZmlnSW1wb3J0RXhwb3J0JzogJzxkaXYgY2xhc3M9Inlhd2YtY29uZmlnSW1wb3J0RXhwb3J0IHlhd2YtY29uZmlnSXRlbSI+PGxhYmVsPjxpbnB1dCB0eXBlPSJmaWxlIiBzdHlsZT0iIHdpZHRoOiAxcHg7IGhlaWdodDogMXB4OyBtYXJnaW46IDAgLTFweCAwIDA7IG9wYWNpdHk6IDA7IiAvPjxzcGFuIGNsYXNzPSJXX2J0bl9iIHlhd2YtaW1wb3J0Ij48c3BhbiBjbGFzcz0iV19mMTQiPnt7Y29uZmlnSW1wb3J0QnV0dG9ufX08L3NwYW4+PC9zcGFuPjwvbGFiZWw+PGEgY2xhc3M9IldfYnRuX2IgeWF3Zi1leHBvcnQiIGhyZWY9ImphdmFzY3JpcHQ6OyI+PHNwYW4gY2xhc3M9IldfZjE0Ij57e2NvbmZpZ0V4cG9ydEJ1dHRvbn19PC9zcGFuPjwvYT48YSBjbGFzcz0iV19idG5fYiB5YXdmLXJlc2V0IiBocmVmPSJqYXZhc2NyaXB0OjsiPjxzcGFuIGNsYXNzPSJXX2YxNCI+e3tjb25maWdSZXNldEJ1dHRvbn19PC9zcGFuPjwvYT48L2Rpdj4nLAogICdjb25maWdJbXBvcnRXYnAnOiAnPGRpdiBjbGFzcz0ieWF3Zi1jb25maWdJbXBvcnRXYnAgeWF3Zi1jb25maWdJdGVtIj48YSBjbGFzcz0iV19idG5fYiIgaHJlZj0iamF2YXNjcmlwdDo7Ij48c3BhbiBjbGFzcz0iV19mMTQiPnt7Y29uZmlnSW1wb3J0V2JwQnV0dG9ufX08L3NwYW4+PC9hPjxiciAvPjxkaXYgY2xhc3M9Inlhd2YtZ3JvdXBSZW1hcmsiPnt7Y29uZmlnSW1wb3J0V2JwV2FybmluZ319PC9kaXY+PC9kaXY+JywKICAvLyDmlrDlip/og73mj5DnpLrlr7nor53moYYKICAnd2hhdHNOZXdIZWFkZXInOiAnPGRpdiBjbGFzcz0ieWF3Zi13aGF0cy1uZXctaGVhZGVyIHlhd2Ytd2luZG93LWhlYWRlciI+e3t1cGRhdGVTdWNjZXNzSGVhZGVyfX08L2Rpdj4nLAogICd3aGF0c05ld0JvZHknOiAnPGRpdiBjbGFzcz0ieWF3Zi13aGF0cy1uZXctYm9keSB5YXdmLXdpbmRvdy1ib2R5Ij48ZGl2IGNsYXNzPSJ5YXdmLXdoYXRzLW5ldy1kZXNjIHlhd2Ytd2luZG93LWRlc2MiPnt7dXBkYXRlU3VjY2Vzc0Rlc2N9fTwvZGl2PjwvZGl2PicsCiAgJ3doYXRzTmV3Rm9vdGVyJzogJzxkaXYgY2xhc3M9Inlhd2Ytd2hhdHMtbmV3LWZvb3RlciB5YXdmLXdpbmRvdy1mb290ZXIiPjxociAvPjwvZGl2PicsCiAgJ3doYXRzTmV3Qm90dG9tJzogJzxkaXYgY2xhc3M9Inlhd2Ytd2hhdHMtbmV3LWJvdHRvbSB5YXdmLXdpbmRvdy1ib3R0b20iPjwvZGl2PicsCiAgLy8g5LuOIFdCUCDlr7zlhaXmiJDlip/lr7nor53moYYKICAnd2JwSW1wb3J0U3VjY2Vzc0hlYWRlcic6ICc8ZGl2IGNsYXNzPSJ3YnAtaW1wb3J0LXN1Y2Nlc3MtaGVhZGVyIj57e3dicEltcG9ydFN1Y2Nlc3NIZWFkZXJ9fTwvZGl2PicsCiAgJ3dicEltcG9ydFN1Y2Nlc3NCb2R5JzogJzxkaXYgY2xhc3M9IndicC1pbXBvcnQtc3VjY2Vzcy1ib2R5IHlhd2Ytd2luZG93LWJvZHkiPjxkaXYgY2xhc3M9IndicC1pbXBvcnQtc3VjY2Vzcy1kZXNjIj57e3dicEltcG9ydFN1Y2Nlc3NEZXNjfX08L2Rpdj48L2Rpdj4nLAogIC8vIOWQiOW5tuW3pui+ueagj+WNoOS9jeespgogICdsZWZ0RmFrZSc6ICc8ZGl2IHN0eWxlPSJkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IiBpZD0ieWF3Zi1sZWZ0LWZha2UiPjwvZGl2PicsCiAgLy8g5bem5qCP5pi+56S65raI5oGvCiAgJ2xlZnRNc2dIZWFkZXInOiAnPGRpdiBjbGFzcz0ibGV2X0JveCBsZXZfQm94X25vYm9yZGVyIHlhd2YtbGVmdE1zZyI+PGgzIGNsYXNzPSJsZXYiPjxhIGhyZWY9Ii9hdC93ZWlibz9sZWZ0bmF2PTEiIGNsYXNzPSJTX3R4dDEiIG5vZGUtdHlwZT0iaXRlbSIgc3VkYS11YXRyYWNrPSJrZXk9VjZ1cGRhdGVfbGVmdG5hdmlnYXRlJmFtcDt2YWx1ZT1tZXNzYWdlIiBicGZpbHRlcj0ibWVzc2FnZSI+PHNwYW4gY2xhc3M9ImxldnR4dCI+e3tsZWZ0TmF2TXNnfX08L3NwYW4+PC9hPjwvaDM+JywKICAnbGVmdE1zZ0F0TWUnOiAnPGRpdiBjbGFzcz0ibGV2IiB5YXdmLWlkPSJsZWZ0bmF2X21zZ19hdCI+PGEgY2xhc3M9IlNfdHh0MSIgbm09Im1lbnRpb25fYWxsIiBicGZpbHRlcj0ibWVzc2FnZSIgaHJlZmV4dHJhPSIvYXQvd2VpYm98L2F0L2NvbW1lbnQiIG50PSJtZW50aW9uIiBub2RlLXR5cGU9Iml0ZW0iIGhyZWY9Ii9hdC93ZWlibz9sZWZ0bmF2PTEmYW1wO3d2cj02JmFtcDtub2ZpbHRlcj0xIj48c3BhbiBjbGFzcz0iaWNvX2Jsb2NrIj48ZW0gbm9kZS10eXBlPSJsZWZ0X2l0ZW0iIGNsYXNzPSJXX2ZpY29uIGZpY29uX2RvdCBTX2ZpY29uIj5EPC9lbT48L3NwYW4+PHNwYW4gY2xhc3M9ImxldnR4dCI+e3tsZWZ0TmF2QXRNZX19PC9zcGFuPjwvYT48L2Rpdj4nLAogICdsZWZ0TXNnQ210JzogJzxkaXYgY2xhc3M9ImxldiIgeWF3Zi1pZD0ibGVmdG5hdl9tc2dfY210Ij48YSBjbGFzcz0iU190eHQxIiBubT0iY210X2FsbCIgYnBmaWx0ZXI9Im1lc3NhZ2UiIGhyZWZleHRyYT0iL2NvbW1lbnQvaW5ib3h8L2NvbW1lbnQvb3V0Ym94IiBub2RlLXR5cGU9Iml0ZW0iIGhyZWY9Ii9jb21tZW50L2luYm94P2xlZnRuYXY9MSZhbXA7d3ZyPTYiPjxzcGFuIGNsYXNzPSJpY29fYmxvY2siPjxlbSBub2RlLXR5cGU9ImxlZnRfaXRlbSIgY2xhc3M9IldfZmljb24gZmljb25fZG90IFNfZmljb24iPkQ8L2VtPjwvc3Bhbj48c3BhbiBjbGFzcz0ibGV2dHh0Ij57e2xlZnROYXZDbXR9fTwvc3Bhbj48L2E+PC9kaXY+JywKICAnbGVmdE1zZ0xpa2UnOiAnPGRpdiBjbGFzcz0ibGV2IiB5YXdmLWlkPSJsZWZ0bmF2X21zZ19saWtlIj48YSBjbGFzcz0iU190eHQxIiBubT0iYXR0aXR1ZGUiIGJwZmlsdGVyPSJtZXNzYWdlIiBub2RlLXR5cGU9Iml0ZW0iIGhyZWY9Ii9saWtlL2luYm94P2xlZnRuYXY9MSZhbXA7d3ZyPTYiPjxzcGFuIGNsYXNzPSJpY29fYmxvY2siPjxlbSBub2RlLXR5cGU9ImxlZnRfaXRlbSIgY2xhc3M9IldfZmljb24gZmljb25fZG90IFNfZmljb24iPkQ8L2VtPjwvc3Bhbj48c3BhbiBjbGFzcz0ibGV2dHh0Ij57e2xlZnROYXZMaWtlfX08L3NwYW4+PC9hPjwvZGl2PicsCiAgJ2xlZnRNc2dETSc6ICc8ZGl2IGNsYXNzPSJsZXYiIHlhd2YtaWQ9ImxlZnRuYXZfbXNnX2RtIj48YSBjbGFzcz0iU190eHQxIiBubT0iZG0iIGJwZmlsdGVyPSJtZXNzYWdlIiBocmVmZXh0cmE9Ii9tZXNzYWdlc3wvbWVzc2FnZS9oaXN0b3J5IiBub2RlLXR5cGU9Iml0ZW0iIGhyZWY9Ii9tZXNzYWdlcz9sZWZ0bmF2PTEmYW1wO3d2cj02Ij48c3BhbiBjbGFzcz0iaWNvX2Jsb2NrIj48ZW0gbm9kZS10eXBlPSJsZWZ0X2l0ZW0iIGNsYXNzPSJXX2ZpY29uIGZpY29uX2RvdCBTX2ZpY29uIj5EPC9lbT48L3NwYW4+PHNwYW4gY2xhc3M9ImxldnR4dCI+e3tsZWZ0TmF2RE19fTwvc3Bhbj48L2E+PC9kaXY+JywKICAnbGVmdE1zZ0JveCc6ICc8ZGl2IGNsYXNzPSJsZXYiIHlhd2YtaWQ9ImxlZnRuYXZfbXNnX21zZ2JveCI+PGEgY2xhc3M9IlNfdHh0MSIgbm09Im1zZ2JveF9jIiBicGZpbHRlcj0ibWVzc2FnZSIgbm9kZS10eXBlPSJpdGVtIiBocmVmPSIvbm90ZXNib2FyZD9sZWZ0bmF2PTEmYW1wO3d2cj02Ij48c3BhbiBjbGFzcz0iaWNvX2Jsb2NrIj48ZW0gbm9kZS10eXBlPSJsZWZ0X2l0ZW0iIGNsYXNzPSJXX2ZpY29uIGZpY29uX2RvdCBTX2ZpY29uIj5EPC9lbT48L3NwYW4+PHNwYW4gY2xhc3M9ImxldnR4dCI+e3tsZWZ0TmF2TXNnQm94fX08L3NwYW4+PC9hPjwvZGl2PicsCiAgJ2xlZnRNc2dHcm91cCc6ICc8ZGl2IGNsYXNzPSJsZXYiIHlhd2YtaWQ9ImxlZnRuYXZfbXNnX2dyb3VwIj48YSBjbGFzcz0iU190eHQxIiBubT0iY2hhdF9ncm91cF9ub3RpY2UiIGJwZmlsdGVyPSJtZXNzYWdlIiBub2RlLXR5cGU9Iml0ZW0iIGhyZWY9Ii9tZXNzYWdlcz9sZWZ0bmF2PTEmYW1wO3d2cj02JmFtcDtpc19ub3RpY2U9MSI+PHNwYW4gY2xhc3M9Imljb19ibG9jayI+PGVtIG5vZGUtdHlwZT0ibGVmdF9pdGVtIiBjbGFzcz0iV19maWNvbiBmaWNvbl9kb3QgU19maWNvbiI+RDwvZW0+PC9zcGFuPjxzcGFuIGNsYXNzPSJsZXZ0eHQiPnt7bGVmdE5hdkdyb3VwfX08L3NwYW4+PC9hPjwvZGl2PicsCiAgJ2xlZnRNc2dETVN1Yic6ICc8ZGl2IGNsYXNzPSJsZXYiIHlhd2YtaWQ9ImxlZnRuYXZfbXNnX2Rtc3ViIj48YSBjbGFzcz0iU190eHQxIiBubT0iZG1fZ3JvdXAiIGJwZmlsdGVyPSJtZXNzYWdlIiBub2RlLXR5cGU9Iml0ZW0iIGhyZWY9Ii9tZXNzYWdlL3N1Yj9sZWZ0bmF2PTEmd3ZyPTYiPjxzcGFuIGNsYXNzPSJpY29fYmxvY2siPjxlbSBjbGFzcz0iV19maWNvbiBmaWNvbl9kb3QgU19maWNvbiIgbm9kZS10eXBlPSJsZWZ0X2l0ZW0iPkQ8L2VtPjwvc3Bhbj48c3BhbiBjbGFzcz0ibGV2dHh0Ij57e2xlZnROYXZETVN1Yn19PC9zcGFuPjwvYT48L2Rpdj4nLAogICdsZWZ0TXNnRm9vdGVyJzogJzwvZGl2PicsCiAgLy8g5Y+z5L6n5qCP5pS26JeP55So5oi35YiX6KGoCiAgJ3JpZ2h0VXNlckxpc3QnOiAnPGRpdiBpZD0ieWF3Zi1yaWdodG1vZF91c2VybGlzdCI+PGRpdiBjbGFzcz0iV0JfY2FyZHdyYXAgU19iZzIiPjxkaXYgdWNhcmRjb25mPSJ0eXBlPTEiIGNsYXNzPSJXQl9yaWdodF9tb2R1bGUiPjxkaXYgY2xhc3M9IldCX2NhcmR0aXRsZV9iIFNfbGluZTIiPjxoNCBjbGFzcz0ib2JqX25hbWUiPjxzcGFuIHRpdGxlPSJ7e3JpZ2h0VXNlckxpc3RUaXRsZX19IiBjbGFzcz0ibWFpbl90aXRsZSBXX2ZiIFdfZjE0IFNfdHh0MSI+PC9hPnt7cmlnaHRVc2VyTGlzdFRpdGxlfX08L2g0PjxkaXYgY2xhc3M9Im9wdF9ib3giPjxhIGNsYXNzPSJXX2ZpY29uIGZpY29uX3NldHVwIFNfZmljb24iPko8L2E+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iV0JfaW5uZXJ3cmFwIj48ZGl2IGNsYXNzPSJtX3dyYXAgY2xlYXJmaXgiPjx1bCBjbGFzcz0iZ3JvdXBfbGlzdCI+PC91bD48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4nLAogICdyaWdodFVzZXJMaXN0SXRlbSc6ICc8bGkgbm9kZS10eXBlPSJyb3ciIGNsYXNzPSJTX2xpbmUyIj48ZGl2IGNsYXNzPSJwaWMiPjxhIGhyZWY9Ii91L3t7aWR9fSIgdGl0bGU9Int7bmFtZX19IiB0YXJnZXQ9Il9ibGFuayI+PGltZyB3aWR0aD0iMzAiIGhlaWdodD0iMzAiIHNyYz0ie3thdmF0YXJ9fSIgYWx0PSJ7e25hbWV9fSIgdXNlcmNhcmQ9ImlkPXt7aWR9fSI+PC9hPjwvZGl2PjxkaXYgY2xhc3M9ImNvbiI+PHAgY2xhc3M9Im5hbWUiPjxhIHVzZXJjYXJkPSJpZD17e2lkfX0iIGhyZWY9Ii91L3t7aWR9fSIgY2xhc3M9IlNfdHh0MSBXX2ZiIiB0YXJnZXQ9Il9ibGFuayI+e3tuYW1lfX08L2E+PHNwYW4gY2xhc3M9IldfbmV3IiBzdHlsZT0iZGlzcGxheTpub25lIj48L3NwYW4+PC9wPjwvZGl2PjwvbGk+JywKICAncmlnaHRVc2VyTGlzdENvbmZpZyc6ICc8ZGl2IGNsYXNzPSJ5YXdmLWZhdmUtcGVvcGxlLWNvbmZpZy1ib2R5IHlhd2Ytd2luZG93LWJvZHkiPjwvZGl2PicsCiAgLy8g5bGP6JS95b6u5Y2aCiAgJ2hpZGVCb3hTaW1wbGUnOiAnPGRpdiBjbGFzcz0ieWF3Zi1oaWRlX2JveCI+PGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgdGl0bGU9Int7aGlkZVRoaXNXZWlib319Ij48aSBjbGFzcz0iV19maWNvbiBmaWNvbl9jbG9zZSBTX2ZpY29uIj5YPC9pPjwvYT48L2Rpdj4nLAogIC8vIOafpeeci+WOn+WbvgogICd2aWV3T3JpZ2luYWxMaW5rJzogJzxsaT48c3BhbiBjbGFzcz0ibGluZSBTX2xpbmUxIj48YSBjbGFzcz0iU190eHQxIiBocmVmPSJqYXZhc2NyaXB0OjsiIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iV19maWNvbiBmaWNvbl9zZWFyY2ggU19maWNvbiI+bDwvaT57e3ZpZXdPcmlnaW5hbFRleHR9fTwvYT48L3NwYW4+PC9saT4nLAogICd2aWV3T3JpZ2luYWxGQ0xpbmsnOiAnPGEgaW1hZ2VjYXJkPSJwaWQ9e3twaWR9fSIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+PGkgY2xhc3M9IldfZmljb24gZmljb25fY2RfaW1nIFdCZmljb24iPsKhPC9pPnt7dmlld09yaWdpbmFsRkNUZXh0fX08L2E+JywKICAvLyDkuIvovb3lm77niYcKICAnZG93bmxvYWRJbWFnZUxpbmsnOiAnPGxpPjxzcGFuIGNsYXNzPSJsaW5lIFNfbGluZTEiPjxhIGNsYXNzPSJTX3R4dDEiIGhyZWY9ImphdmFzY3JpcHQ6OyIgdGFyZ2V0PSJfYmxhbmsiPjxpIGNsYXNzPSJXX2ZpY29uIGZpY29uX3NlYXJjaCBTX2ZpY29uIj58PC9pPjxzcGFuIGNsYXNzPSJ5YXdmLXRleHQiPnt7ZG93bmxvYWRJbWFnZVRleHR9fTwvc3Bhbj48L2E+PC9zcGFuPjwvbGk+JywKICAvLyDop4bpopHkvY3nva7moIforrDnrKYKICAndmlkZW9GYWtlUGxhY2Vob2xkZXJDb250YWluZXInOiAnPGRpdiBjbGFzcz0ieWF3Zi12aWRlby1mYWtlLXBsYWNlaG9sZGVyLWNvbnRhaW5lciIgc3R5bGU9ImhlaWdodDogMDsgd2lkdGg6IDEwMCU7IG92ZXJmbG93OiBoaWRkZW47IHBvc2l0aW9uOiByZWxhdGl2ZTsiPjwvZGl2PicsCiAgJ3ZpZGVvRmFrZVBsYWNlaG9sZGVyJzogJzxkaXYgY2xhc3M9Inlhd2YtdmlkZW8tZmFrZS1wbGFjZWhvbGRlciIgeWF3Zi1mYWtlLXBsYWNlaG9sZGVyPSJ5YXdmLWZha2UtcGxhY2Vob2xkZXIiIHN0eWxlPSJ3aWR0aDogMXB4OyBoZWlnaHQ6IDIwMDAwMDBweDsgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IC0xMDAwMDAwcHg7IHotaW5kZXg6IC0xOyIgbm9kZS10eXBlPSJmbF9oNV92aWRlbyI+PC9kaXY+JywKICAndmlkZW9Eb2N1bWVudEhlaWdodE5vdGlmaWVyJzogJzxkaXYgc3R5bGU9IndpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwcHg7IGRpc3BsYXk6IHRhYmxlOyBjbGVhcjogYm90aDsgb3ZlcmZsb3c6IGhpZGRlbjsgcG9zaXRpb246IHJlbGF0aXZlOyI+PC9kaXY+JywKICAvLyDop4bpopHlsI/mj5DnpLoKICAndmlkZW9UaXAnOiAnPGkgY2xhc3M9IldfaWNvbl90YWdfdjIiPnt7bWVkaWFWaWRlb1R5cGV9fTwvaT4nLAogIC8vIOinhumikeaSreaUvgogICd2aWRlb0ZvbGQnOiAnPGRpdiBjbGFzcz0idGFiX2ZlZWRfYSBjbGVhcmZpeCI+PGRpdiBjbGFzcz0idGFiIj48dWwgY2xhc3M9ImNsZWFyZml4Ij48bGk+PHNwYW4gY2xhc3M9ImxpbmUgU19saW5lMSI+PGEgYWN0aW9uLXR5cGU9ImZlZWRfbGlzdF9tZWRpYV90b1NtYWxsIiBocmVmPSJqYXZhc2NyaXB0OjsiIGNsYXNzPSJTX3R4dDEiIHlhd2YtbGluay10eXBlPSJrIj48aSBjbGFzcz0iV19maWNvbiBmaWNvbl9hcnJvd19mb2xkIFNfZmljb24iPms8L2k+e3tmb2xkRGV0YWlsc319PC9hPjwvc3Bhbj48L2xpPjwvdWw+PC9kaXY+PC9kaXY+JywKICAvLyDmi5bmi70KICAnZHJvcEFyZWEnOiAnPGRpdiBpZD0ieWF3Zi1kcm9wLWFyZWEiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+PGRpdiBjbGFzcz0ieWF3Zi1kcm9wLWFyZWEtZGVzYyI+PGRpdiBjbGFzcz0ieWF3Zi1kcm9wLWFyZWEtdGl0bGUiPnt7ZHJvcEFyZWFUaXRsZX19PC9kaXY+PGRpdiBjbGFzcz0ieWF3Zi1kcm9wLWFyZWEtdGV4dCI+e3tkcm9wQXJlYVRleHR9fTwvZGl2PjwvZGl2PjxkaXYgY29udGVudGVkaXRhYmxlPSJ0cnVlIiBpZD0ieWF3Zi1kcm9wLWFyZWEtY29udGVudCI+PC9kaXY+PC9kaXY+JywKICAnZmFzdEZpbHRlckhlYWRlcic6ICc8ZGl2IGlkPSJ5YXdmLWZhc3QtZmlsdGVyLWNob3NlIj48ZGl2IGNsYXNzPSJ5YXdmLWZhc3QtZmlsdGVyLW9wdGlvbiI+PHNwYW4gY2xhc3M9Inlhd2YtZmFzdC1maWx0ZXItdGV4dCI+e3tmYXN0RmlsdGVyQ2hvc2VUZXh0fX08L3NwYW4+PHVsIGlkPSJ5YXdmLWZhc3QtZmlsdGVyLWxpc3QiPicsCiAgJ2Zhc3RGaWx0ZXJJdGVtJzogJzxsaSBjbGFzcz0ieWF3Zi1mYXN0LWZpbHRlci1pdGVtIj48bGFiZWw+PGlucHV0IGNsYXNzPSJXX2NoZWNrYm94IHlhd2YtY29uZmlnQm9vbGVhbklucHV0IiB0eXBlPSJjaGVja2JveCI+PHNwYW4gY2xhc3M9Inlhd2YtZmFzdEZpbHRlckl0ZW1Jbm5lciI+PC9zcGFuPjwvbGFiZWw+PHNlbGVjdCB2YWx1ZT0iYmxhY2tsaXN0Ij48b3B0aW9uIHZhbHVlPSJ3aGl0ZWxpc3QiPnt7d2hpdGVsaXN0QWN0aW9uRGVzY319PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iYmxhY2tsaXN0Ij57e2JsYWNrbGlzdEFjdGlvbkRlc2N9fTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9ImZvbGRsaXN0Ij57e2ZvbGRsaXN0QWN0aW9uRGVzY319PC9vcHRpb24+PC9zZWxlY3Q+PC9saT4nLAogICdmYXN0RmlsdGVyRm9vdGVyJzogJzwvdWw+PC9kaXY+PGRpdiBjbGFzcz0iV19sYXllcl9idG4gU19iZzIiPjxhIGFjdGlvbi10eXBlPSJvayIgbm9kZS10eXBlPSJvayIgY2xhc3M9IldfYnRuX2EgYnRuXzM0cHgiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPjxzcGFuPnt7b2tCdXR0b25UaXRsZX19PC9zcGFuPjwvYT48YSBhY3Rpb24tdHlwZT0iY2FuY2VsIiBub2RlLXR5cGU9ImNhbmNlbCIgY2xhc3M9IldfYnRuX2IgYnRuXzM0cHgiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPjxzcGFuPnt7Y2FuY2VsQnV0dG9uVGl0bGV9fTwvc3Bhbj48L2E+PC9kaXY+PC9kaXY+JywKICAnZmFzdEZpbHRlclN0cmluZyc6ICc8bGFiZWw+PHNwYW4+PC9zcGFuPjwvbGFiZWw+JywKICAnZmFzdEZpbHRlclN0cmluZ0lucHV0JzogJzxpbnB1dCB3aWR0aD0iMTIiIGNsYXNzPSJpbnB1dF9kZWZhdWx0IiB0eXBlPSJ0ZXh0IiAvPicsCiAgLy8g6Ieq5Yqo5qOA5p+l5YWz5rOo5YiX6KGo5Y+R55Sf55qE5Y+Y5YyWCiAgJ2F1dG9DaGVja0ZvbGxvd2luZ0JvZHknOiAnPGRpdj48ZGl2IGNsYXNzPSJ5YXdmLWZvbGxvd2luZy1ub3RpY2UtaGVhZGVyIHlhd2Ytd2luZG93LWhlYWRlciI+e3thdXRvQ2hlY2tGb2xsb3dpbmdUaXRsZX19PC9kaXY+PGRpdiBjbGFzcz0ieWF3Zi1mb2xsb3dpbmctbm90aWNlLWJvZHkgeWF3Zi13aW5kb3ctYm9keSI+PGRpdiBjbGFzcz0ieWF3Zi1mb2xsb3dpbmctbm90aWNlLWRlc2MgeWF3Zi13aW5kb3ctZGVzYyI+e3thdXRvQ2hlY2tGb2xsb3dpbmdUaXB9fTwvZGl2PjxkaXYgY2xhc3M9Inlhd2YtZm9sbG93aW5nLW5vdGljZS10ZXh0IiBzdHlsZT0ibWFyZ2luLXRvcDo1cHg7Ij57e2F1dG9DaGVja0ZvbGxvd2luZ1RpcERldGFpbH19PC9kaXY+PGRpdiBjbGFzcz0ieWF3Zi1mb2xsb3dpbmctYWRkIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPjxkaXYgY2xhc3M9Inlhd2YtZm9sbG93aW5nLWl0ZW1zLXRpdGxlIj57e2F1dG9DaGVja0ZvbGxvd2luZ0FkZH19PC9kaXY+PGRpdiBjbGFzcz0ieWF3Zi1mb2xsb3dpbmctaXRlbXMtY29udGFpbmVyIj48dWwgY2xhc3M9Inlhd2YtY29uZmlnVXNlcnNJdGVtcyB5YXdmLWNvbmZpZ0l0ZW1zIj48L3VsPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9Inlhd2YtZm9sbG93aW5nLWxvc3QiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+PGRpdiBjbGFzcz0ieWF3Zi1mb2xsb3dpbmctaXRlbXMtdGl0bGUiPnt7YXV0b0NoZWNrRm9sbG93aW5nTG9zdH19PC9kaXY+PGRpdiBjbGFzcz0ieWF3Zi1mb2xsb3dpbmctaXRlbXMtY29udGFpbmVyIj48dWwgY2xhc3M9Inlhd2YtY29uZmlnVXNlcnNJdGVtcyB5YXdmLWNvbmZpZ0l0ZW1zIj48L3VsPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgbm9kZS10eXBlPSJjb25maXJtQm94IiBjbGFzcz0ieWF3Zi1mb2xsb3dpbmctbm90aWNlLWJ1dHRvbnMgeWF3Zi13aW5kb3ctYnV0dG9ucyBXX2xheWVyX2J0biBTX2JnMSI+PGEgY2xhc3M9Inlhd2YtZm9sbG93aW5nLW5vdGljZS1jb25maXJtIFdfYnRuX2EgYnRuXzM0cHgiIG5vZGUtdHlwZT0iY29uZmlybSIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIj57e29rQnV0dG9uVGl0bGV9fTwvYT48L2Rpdj48L2Rpdj4nLAogICdhdXRvQ2hlY2tGb2xsb3dpbmdJdGVtJzogJzxsaSBjbGFzcz0ieWF3Zi1jb25maWdVc2Vyc0l0ZW0iPjxkaXYgY2xhc3M9InNoaWVsZF9vYmplY3RfY2FyZCI+PGRpdiBjbGFzcz0iY2FyZF9iZyBjbGVhcmZpeCI+PGRpdiBjbGFzcz0iY2FyZF9waWMiPjxzcGFuIGNsYXNzPSJwaWMiPjxhIGhyZWY9Int7ZG9tYWluVVJMfX0vdS97e2lkfX0iIHRhcmdldD0iX2JsYW5rIj48aW1nIGNsYXNzPSJXX2ZhY2VfcmFkaXVzIiB3aWR0aD0iNTAiIGhlaWdodD0iNTAiIGFsdD0iIiBzcmM9Int7YXZhdGFyfX0iIHVzZXJjYXJkPSJpZD17e2lkfX0iIC8+PC9hPjwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPSJjYXJkX2NvbnRlbnQiPjxkaXYgY2xhc3M9Im9iamVjdF9pbmZvIGNsZWFyZml4Ij48cCBjbGFzcz0iV19mbCI+PGEgaHJlZj0ie3tkb21haW5VUkx9fS91L3t7aWR9fSIgdGFyZ2V0PSJfYmxhbmsiIHVzZXJjYXJkPSJpZD17e2lkfX0iIGNsYXNzPSJvYmplY3RfbmFtZSBTX3R4dDEiIHVpZD0ie3tpZH19IiB0aXRsZT0ie3tuYW1lfX0iPnt7bmFtZX19PC9hPjwvcD48cCBjbGFzcz0iV19mciI+PC9wPjwvZGl2PjxkaXYgY2xhc3M9Im90aGVyX2luZm8iPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvbGk+JywKICAnYXV0b0NoZWNrRm9sbG93aW5nT3RoZXJJdGVtJzogJzxsaSBjbGFzcz0ieWF3Zi1jb25maWdVc2Vyc0l0ZW0iPjxkaXYgY2xhc3M9InNoaWVsZF9vYmplY3RfY2FyZCI+PGRpdiBjbGFzcz0iY2FyZF9iZyBjbGVhcmZpeCI+PGRpdiBjbGFzcz0iY2FyZF9waWMiPjxzcGFuIGNsYXNzPSJwaWMiPjxhIGhyZWY9Int7aHJlZn19IiB0YXJnZXQ9Il9ibGFuayI+PGltZyBjbGFzcz0iV19mYWNlX3JhZGl1cyIgd2lkdGg9IjUwIiBoZWlnaHQ9IjUwIiBhbHQ9IiIgc3JjPSJ7e2F2YXRhcn19IiAvPjwvYT48L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz0iY2FyZF9jb250ZW50Ij48ZGl2IGNsYXNzPSJvYmplY3RfaW5mbyBjbGVhcmZpeCI+PHAgY2xhc3M9IldfZmwiPjxhIGhyZWY9Int7aHJlZn19IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9Im9iamVjdF9uYW1lIFNfdHh0MSIgdGl0bGU9Int7bmFtZX19Ij57e25hbWV9fTwvYT48L3A+PHAgY2xhc3M9IldfZnIiPjwvcD48L2Rpdj48ZGl2IGNsYXNzPSJvdGhlcl9pbmZvIj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2xpPicsCiAgJ2F1dG9DaGVja0ZvbGxvd2luZ0NvbmZpZyc6ICc8ZGl2IHN0eWxlPSJtYXJnaW46IDAgMCAwIDRlbTsiPnt7YXV0b0NoZWNrRm9sbG93aW5nTGFzdFRpbWV9fTxzcGFuIGNsYXNzPSJ5YXdmLWZvbGxvd2luZy1sYXN0Ij48L3NwYW4+PGEgaHJlZj0iamF2YXNjcmlwdDo7IiBjbGFzcz0iV19idG5fYiB5YXdmLWZvbGxvd2luZy1jaGVjay1ub3ciIHN0eWxlPSJkaXNwbGF5Om5vbmU7IG1hcmdpbi1sZWZ0OjFlbTsiPjxzcGFuIGNsYXNzPSJXX2YxNCI+e3thdXRvQ2hlY2tGb2xsb3dpbmdOb3d9fTwvc3Bhbj48L2E+PHNwYW4gY2xhc3M9Inlhd2YtZm9sbG93aW5nLWNoZWNraW5nIiBzdHlsZT0iZGlzcGxheTpub25lOyBtYXJnaW4tbGVmdDoxZW07Ij57e2F1dG9DaGVja0ZvbGxvd2luZ1J1bm5pbmd9fTwvc3Bhbj48YSBocmVmPSJqYXZhc2NyaXB0OjsiIGNsYXNzPSJXX2J0bl9iIHlhd2YtZm9sbG93aW5nLWRvd25sb2FkIiBzdHlsZT0iZGlzcGxheTpub25lOyBtYXJnaW4tbGVmdDoxZW07Ij48c3BhbiBjbGFzcz0iV19mMTQiPnt7YXV0b0NoZWNrRm9sbG93aW5nRG93bmxvYWR9fTwvc3Bhbj48L2E+PGEgaHJlZj0iamF2YXNjcmlwdDo7IiBjbGFzcz0iV19idG5fYiB5YXdmLWZvbGxvd2luZy1jbGVhciIgc3R5bGU9ImRpc3BsYXk6bm9uZTsgbWFyZ2luLWxlZnQ6MWVtOyI+PHNwYW4gY2xhc3M9IldfZjE0Ij57e2F1dG9DaGVja0ZvbGxvd2luZ0NsZWFufX08L3NwYW4+PC9hPjwvZGl2PicsCiAgLy8g6KGo5oOF6L6T5YWlCiAgJ2Zhc3RFbW9qaUlucHV0JzogJzxkaXYgY2xhc3M9ImZhY2VzX2xpc3QgeWF3Zi1mYWNlc19saXN0IiBub2RlLXR5cGU9InNjcm9sbFZpZXciPjxkaXYgeWF3Zi1mYWNlPSJ0b3AiIG5vZGUtdHlwZT0ibGlzdCI+PHNwYW4+e3tmYXN0RW1vamlJbnB1dFRvcH19PC9zcGFuPjx1bD48bGk+PC9saT48bGk+PC9saT48bGk+PC9saT48bGk+PC9saT48bGk+PC9saT48bGk+PC9saT48bGk+PC9saT48bGk+PC9saT48bGk+PC9saT48bGk+PC9saT48L3VsPjxzcGFuIGlkPSJ5YXdmLWZhY2UtZHJvcC1hcmVhIj57e2Zhc3RFbW9qaUlucHV0VG9wTm90aWNlfX08L3NwYW4+PC9kaXY+PGRpdiB5YXdmLWZhY2U9InJlY2VudCIgbm9kZS10eXBlPSJsaXN0Ij48c3Bhbj57e2Zhc3RFbW9qaUlucHV0UmVjZW50fX08L3NwYW4+PHVsPjxsaT48L2xpPjxsaT48L2xpPjxsaT48L2xpPjxsaT48L2xpPjxsaT48L2xpPjxsaT48L2xpPjxsaT48L2xpPjxsaT48L2xpPjxsaT48L2xpPjxsaT48L2xpPjwvdWw+PC9kaXY+PC9kaXY+JywKICAnZmFzdEVtb2ppTGlzdEl0ZW0nOiAnPGxpIHRpdGxlPSJ7e3RpdGxlfX0iIGFjdGlvbi1kYXRhPSJpbnNlcnQ9e3t0ZXh0fX0iIGFjdGlvbi10eXBlPSJzZWxlY3QiPjxpbWcgc3JjPSJ7e2ltZ319Ij48L2xpPicsCiAgJ2Zhc3RFbW9qaUxpc3RJdGVtSU0nOiAnPGxpIHRpdGxlPSJ7e3RleHR9fSIgYWN0aW9uLWRhdGE9InRleHQ9e3t0ZXh0fX0iIGFjdGlvbi10eXBlPSJ3ZWJpbV9waGl6X2ZhY2UiPjxpbWcgc3JjPSJ7e2ltZ319Ij48L2xpPicsCiAgJ2Zhc3RFbW9qaUNsZWFyQnV0dG9uJzogJzxhIGNsYXNzPSJXX2J0bl9iIHlhd2YtY2xlYXItZW1vamkiIGhyZWY9ImphdmFzY3JpcHQ6OyI+PHNwYW4gY2xhc3M9IldfZjE0Ij57e2Zhc3RFbW9qaUNsZWFyfX08L3NwYW4+PC9hPicsCiAgLy8g5Y+q55yL5b6u5Y2a5YiX6KGoCiAgJ3dlaWJvT25seUJ1dHRvbic6ICc8ZGl2IGlkPSJ5YXdmLXdlaWJvLW9ubHkiPjxzcGFuPjxhIGNsYXNzPSJTX3R4dDEiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPnt7d2VpYm9Pbmx5QnV0dG9uRGVzY319PC9hPjwvc3Bhbj48L2Rpdj4nLAogIC8vIOWIhue7hOaIlueJueWIq+WFs+azqOeahOacquivu+aPkOekugogICdub3RpY2VDb250YWluZXInOiAnPGRpdiBjbGFzcz0iV0JfZmVlZF90eXBlIFNXX2Z1biBTX2xpbmUyIiBhY3Rpb24tdHlwZT0iZmVlZF9saXN0X2l0ZW0iIHlhd2YtZGlzcGxheT0ibm90aWNlIj48L2Rpdj4nLAogIC8vIOacieaWsOW+ruWNmueahOabv+S7o+aPkOekugogICdmZWVkTGlzdE5ld0Jhcic6ICc8ZGl2IGNsYXNzPSJXQl9jYXJkd3JhcCBXQl9ub3RlcyIgeWF3Zi1pZD0iaG9tZV9uZXdfZmVlZF90aXAiPjxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPjwvYT48L2Rpdj4nLAogICdmZWVkVGltZVRpcCc6ICc8ZGl2IGNsYXNzPSJXQl9jYXJkd3JhcCBTX2JnMiB5YXdmLXRpbWVUaXAiPjxkaXYgY2xhc3M9IldCX2NhcmR0aXRsZV9hIFdfdGMiPjxhIG5vZGUtdHlwZT0iZmVlZF9saXN0X2l0ZW1fZGF0ZSIgZGF0ZT0ie3tkYXRlfX0iIHN0eWxlPSJjb2xvcjppbmhlcml0Ij48L2E+IHt7e3RpbWV9fX08L2Rpdj48L2Rpdj4nLAogIC8vIOmhtuagj+W+veaghwogICduYXZMb2dvJzogJzxzcGFuIGNsYXNzPSJsb2dvIj48L3NwYW4+JywKICAvLyDpobbmoI/mj5DnpLoKICAndG9wTWVudUxpc3RUaXBzJzogJzxkaXYgY2xhc3M9ImduX3RvcG1lbnVsaXN0X3RpcHMgeWF3Zi1nbl90b3BtZW51bGlzdF90aXBzIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPjxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJXX2ZpY29uIGZpY29uX2Nsb3NlIFNfZmljb24iPlg8L2E+PHVsPjwvdWw+PC9kaXY+JywKICAvLyDmnaXoh6og5b6u5Y2aIHdlaWJvLmNvbQogICd3ZWlib1ZpYVdlaWJvQ29tJzogJzxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Ii8vd2VpYm8uY29tLyIgdGFyZ2V0PSJfYmxhbmsiIGFjdGlvbi10eXBlPSJhcHBfc291cmNlIiBjbGFzcz0iU190eHQyIj57e2RlZmF1bHRTb3VyY2V9fTwvYT4nLAogIC8vIOS6jOe6p+ivhOiuuuWxleW8gAogICd1bmZvbGRDaGlsZENvbW1lbnQnOiAnPGEgY2xhc3M9IlNfdHh0MSIgYWN0aW9uLXR5cGU9ImNsaWNrX21vcmVfY2hpbGRfY29tbWVudF9iaWciIGFjdGlvbi1kYXRhPSJtb3JlX2NvbW1lbnQ9YmlnJmFtcDtyb290X2NvbW1lbnRfaWQ9e3tjb21tZW50X2lkfX0mYW1wO2lzX2NoaWxkX2NvbW1lbnQ9dHVyZSZhbXA7aWQ9e3ttaWR9fSI+KHt7Y2hpbGRfY291bnR9fSk8L2E+JywKfTsKCi8vIOWFtuS7luWcqOWhq+WGmeagvOW8j+WMluWtl+espuS4suaXtuiHquWKqOWhq+WGmeeahOWGheWuuQp2YXIgZmlsbCA9IHsKICAnZG9tYWluVVJMJzogewogICAgJ3RvU3RyaW5nJzogZnVuY3Rpb24gKCkgewogICAgICBpZiAoZG9jdW1lbnQuZG9tYWluID09PSAnd3d3LndlaWJvLmNvbScpIHJldHVybiAnLy93d3cud2VpYm8uY29tJzsKICAgICAgcmV0dXJuICcvL3dlaWJvLmNvbSc7CiAgICB9CiAgfSwKfTsKCi8vIOi2hemTvuaOpQp2YXIgdXJsID0gewogICduZXdjYXJkJzogJ3t7ZG9tYWluVVJMfX0vYWovdXNlci9uZXdjYXJkP3R5cGU9MSZ7e3F1ZXJ5fX0mX3Q9MSZjYWxsYmFjaz17e2NhbGxiYWNrfX0nLAogICd2aWV3X2NtdF9vcmknOiAnLy93dzEuc2luYWltZy5jbi9sYXJnZS97e3BpZH19LmpwZycsCiAgJ2Jsb2NrX3diJzogJ3t7ZG9tYWluVVJMfX0vYWovZmlsdGVyL2Jsb2NrP2Fqd3ZyPTYnLAogICdkZWxfY210JzogJ3t7ZG9tYWluVVJMfX0vYWovY29tbWVudC9kZWw/YWp3dnI9NicsCiAgJ3ZpZGVvX3Nob3cnOiAnLy92aWRlby53ZWliby5jb20vc2hvdz9maWQ9e3tpZH19JywKICAndXNlcic6ICd7e2RvbWFpblVSTH19L3Uve3t1aWR9fScsCiAgJ3RvcHN1Z2dlc3QnOiAnLy9zLndlaWJvLmNvbS9hamF4L3RvcHN1Z2dlc3QucGhwP2tleT17e3F1ZXJ5fX0mX3Y9e3tjYWxsYmFja319JywKICAndG9waWNzdWdnZXN0JzogJ3t7ZG9tYWluVVJMfX0vYWovbWJsb2cvdG9waWM/YWp3dnI9NiZxPXt7cXVlcnl9fScsCiAgJ2F0dGVudGlvbic6ICd7e2RvbWFpblVSTH19L2FqL21ibG9nL2F0dGVudGlvbj9hand2cj02JnE9e3txdWVyeX19JywKICAnZ2V0bG9uZ3RleHQnOiAne3tkb21haW5VUkx9fS9wL2FqL21ibG9nL2dldGxvbmd0ZXh0P2Fqd3ZyPTYmbWlkPXt7bWlkfX0nLAogICdteWZvbGxvdyc6ICd7e2RvbWFpblVSTH19L3t7dWlkfX0vbXlmb2xsb3cnLAogICdzdG9jayc6ICd7e2RvbWFpblVSTH19L3AvMjMwNjc3e3tzdG9ja2lkfX0nLAogICd0b3BpYyc6ICd7e2RvbWFpblVSTH19L2sve3t0b3BpY319JywKICAnbGlzdF9ncm91cCc6ICd7e2RvbWFpblVSTH19L2FqL2YvZ3JvdXAvbGlzdCcsCiAgJ2dyb3VwX2ZlZWRzJzogJ3t7ZG9tYWluVVJMfX0vYWovbWJsb2cvZnNlYXJjaD97e3BhcmFtfX0nLAogICd2b3RlJzogJy8vdm90ZS53ZWliby5jb20vaDUvaW5kZXgvaW5kZXg/dm90ZV9pZD17e3ZvdGVJZH19JywKfTsKCnZhciBmb250ID0gewogICd3ZXN0JzogWwogICAgWydUaW1lcycsICdUaW1lcyddLAogICAgWyciVGltZXMgTmV3IFJvbWFuIicsICdUaW1lcyBOZXcgUm9tYW4nXSwKICAgIFsnR2VvcmdpYScsICdHZW9yZ2lhJ10sCiAgICBbJ0FyaWFsJywgJ0FyaWFsJ10sCiAgICBbJ0hlbHZldGljYScsICdIZWx2ZXRpY2EnXSwKICAgIFsnVmVyZGFuYScsICdWZXJkYW5hJ10sCiAgICBbJyIuU0ZOU0Rpc3BsYXktUmVndWxhciInLCAnU2FuIEZyYW5jaXNjbyddLAogIF0sCiAgJ2NoaW5lc2UnOiBbCiAgICBbJyJTaW1TdW4iLCAi5a6L5L2TIicsICfkuK3mmJPlrovkvZMnXSwKICAgIFsnIkhlaXRpIFNDIiwgIum7keS9ky3nroAiJywgJ+m7keS9ky3nroAnXSwKICAgIFsnIlBpbmdGYW5nIFNDIiwgIuiLueaWuS3nroAiJywgJ+iLueaWuS3nroAnXSwKICAgIFsnIlNUSGVpdGkiLCAi5Y2O5paH6buR5L2TIicsICfljY7mlofpu5HkvZMnXSwKICAgIFsnIkhpcmFnaW5vIFNhbnMgR0IiLCAi5Yas6Z2S6buR5L2T566A5L2T5Lit5paHIicsICflhqzpnZLpu5HkvZMnXSwKICAgIFsnIk1pY3Jvc29mdCBZYUhlaSIsICLlvq7ova/pm4Xpu5EiJywgJ+W+rui9r+mbhem7kSddLAogICAgWyciRGVuZ1hpYW4iLCAi562J57q/IicsICfnrYnnur8nXSwKICAgIFsnIldlblF1YW5ZaSBaZW4gSGVpIiwgIuaWh+aziempv+ato+m7kSInLCAn5paH5rOJ6am/5q2j6buRJ10sCiAgICBbJyJXZW5RdWFuWWkgTWljcm8gSGVpIiwgIuaWh+aziempv+W+ruexs+m7kSInLCAn5paH5rOJ6am/5b6u57Gz6buRJ10sCiAgICBbJyJOb3RvIFNhbnMgQ0pLIFNDIiwgIlNvdXJjZSBIYW4gU2FucyBTQyIsICLmgJ3mupDpu5HkvZMgU0MiJywgJ+aAnea6kOm7keS9kyddLAogICAgWyciTm90byBTZXJpZiBDSksgU0MiLCAiU291cmNlIEhhbiBTZXJpZiBTQyIsICLmgJ3mupDlrovkvZMgU0MiJywgJ+aAnea6kOWui+S9kyddLAogICAgWyciU2ltS2FpIiwgIualt+S9kyInLCAn5Lit5piT5qW35L2TJ10sCiAgICBbJyJQTWluZ0xpVSIsICLmlrDntLDmmI7pq5QiJywgJ+aWsOe0sOaYjumrlCddLAogICAgWyciTWluZ0xpVSIsICLntLDmmI7pq5QiJywgJ+e0sOaYjumrlCddLAogICAgWyciSGVpdGkgVEMiLCAi6buR6auULee5gSInLCAn6buR6auULee5gSddLAogICAgWyciUGluZ0ZhbmcgVEMiLCAi6JiL5pa5Lee5gSInLCAn6JiL5pa5Lee5gSddLAogICAgWyciUGluZ0ZhbmcgSEsiLCAi6JiL5pa5Lea4ryInLCAn6JiL5pa5Lea4ryddLAogICAgWyciTGlIZWkgUHJvIE1lZGl1bSIsICLlhLfpu5EgUHJvIicsICflhLfpu5EgUHJvJ10sCiAgICBbJyJNaWNyb3NvZnQgSmhlbmdIZWkiLCAi5b6u6Luf5q2j6buR6auUIicsICflvq7ou5/mraPpu5Hpq5QnXSwKICAgIFsnIk5vdG8gU2FucyBDSksgVEMiLCAiU291cmNlIEhhbiBTYW5zIFRDIiwgIuaAnea6kOm7kemrlCBUQyInLCAn5oCd5rqQ6buR6auUJ10sCiAgICBbJyJOb3RvIFNlcmlmIENKSyBUQyIsICJTb3VyY2UgSGFuIFNlcmlmIFRDIiwgIuaAnea6kOWui+mrlCBUQyInLCAn5oCd5rqQ5a6L6auUJ10sCiAgICBbJyJERkthaS1TQiIsICJCaWF1S2FpIiwgIuaomealt+mrlCInLCAn5qiZ5qW36auUJ10sCiAgXQp9OwoKLy8g5b6u5Y2a5L2/55SoIHNvZnRiYW5rIOeahCBlbW9qaSDnvJbnoIHvvIzmiJHku6zlsIblroPku6zovazmjaLliLDmoIflh4bnmoQgdW5pY29kZQovLyDplK7mmK8gc29mdGJhbmsg5omp5bGVIHVuaWNvZGUg6KGo5oOF55qE56CB5L2N54K55YeP5Y67IDB4ZTAwMCDvvJvlgLzmmK8gdW5pY29kZSDnoIHkvY3ngrkKdmFyIGVtb2ppID0geyAxOiAxMjgxMDIsIDI6IDEyODEwMywgMzogMTI4MTM5LCA0OiAxMjgxMDQsIDU6IDEyODEwNSwgNjogMTI4MDg1LCA3OiAxMjgwOTQsIDg6IDEyODI0NywgOTogOTc0MiwgMTA6IDEyODI0MSwgMTE6IDEyODIyNCwgMTI6IDEyODE4NywgMTM6IDEyODA3NCwgMTQ6IDEyODA3NywgMTU6IDk3NTcsIDE2OiA5OTk0LCAxNzogOTk5NiwgMTg6IDEyODU4NywgMTk6IDEyNzkzNSwgMjA6IDk5NzEsIDIxOiAxMjc5MzQsIDIyOiA5OTE4LCAyMzogMTI3OTQwLCAyNDogOTkxNywgMjU6IDEyODAzMywgMjY6IDEyODA1MiwgMjc6IDEyODY2MywgMjg6IDk5NzMsIDI5OiA5OTkyLCAzMDogMTI4NjQzLCAzMTogMTI4NjQ1LCAzMjogMTAwNjcsIDMzOiAxMDA3MSwgMzQ6IDEwMDg0LCAzNTogMTI4MTQ4LCAzNjogMTI4MzM2LCAzNzogMTI4MzM3LCAzODogMTI4MzM4LCAzOTogMTI4MzM5LCA0MDogMTI4MzQwLCA0MTogMTI4MzQxLCA0MjogMTI4MzQyLCA0MzogMTI4MzQzLCA0NDogMTI4MzQ0LCA0NTogMTI4MzQ1LCA0NjogMTI4MzQ2LCA0NzogMTI4MzQ3LCA0ODogMTI3ODAwLCA0OTogMTI4MzA1LCA1MDogMTI3ODAxLCA1MTogMTI3ODc2LCA1MjogMTI4MTQxLCA1MzogMTI4MTQyLCA1NDogMTI3OTY4LCA1NTogOTk2MiwgNTY6IDEyNzk3MCwgNTc6IDEyODY0OSwgNTg6IDk5ODEsIDU5OiAxMjg1MDcsIDYwOiAxMjc5MDgsIDYxOiAxMjc5MDksIDYyOiAxMjc5MjUsIDYzOiAxMjgyNzMsIDY0OiAxMjc5MjcsIDY1OiAxMjc5MjgsIDY2OiAxMjc5MzAsIDY3OiAxMjc4NjAsIDY4OiAxMjc4NjQsIDY5OiA5NzQ5LCA3MDogMTI3ODU2LCA3MTogMTI3ODY2LCA3MjogOTkyNCwgNzM6IDk3MjksIDc0OiA5NzI4LCA3NTogOTc0OCwgNzY6IDEyNzc2NCwgNzc6IDEyNzc0OCwgNzg6IDEyODEyNCwgNzk6IDEyODA0OSwgODA6IDEyODA0NywgODE6IDEyODA1OSwgODI6IDEyODA0MSwgODM6IDEyODA0NSwgODQ6IDEyODA1MSwgODU6IDEyODAzOSwgODY6IDEyODUyMywgODc6IDEyODUxNSwgODg6IDEyODU0MiwgODk6IDEyODU0NCwgOTA6IDEyODE2OSwgMjU3OiAxMjgyMzQsIDI1ODogMTI4MjM4LCAyNTk6IDk5OTMsIDI2MDogMTI4MjQyLCAyNjE6IDEyODU0MCwgMjYyOiAxMjg1MjUsIDI2MzogMTI4NTYxLCAyNjQ6IDEyODUzMSwgMjY1OiAxMjgwNTMsIDI2NjogMTI4MDI1LCAyNjc6IDEyODA1NSwgMjY4OiAxMjgxMjUsIDI2OTogMTI4NjQwLCAyNzA6IDEyODA4MSwgMjcxOiAxMjgxNjEsIDI3MjogMTI3ODA4LCAyNzM6IDEyODE0MywgMjc0OiAxMjc4NzMsIDI3NTogMTI4Mjk5LCAyNzY6IDEyODI2OSwgMjc3OiAxMjc5MzksIDI3ODogMTI4Mjk2LCAyNzk6IDEyNzg3OCwgMjgwOiAxMjc4MDksIDI4MTogMTI3ODEwLCAyODI6IDEyODEyNywgMjgzOiAxMjgxMjMsIDI4NDogMTI4MTI4LCAyODU6IDEyODI5MywgMjg2OiAxMjgxODgsIDI4NzogMTI4MTg2LCAyODg6IDEyNzgyOCwgMjg5OiA5OTcwLCAyOTA6IDk5NzgsIDI5MTogOTgzMiwgMjkyOiAxMjc5MDUsIDI5MzogMTI3OTE1LCAyOTQ6IDEyODE5MSwgMjk1OiAxMjgxOTIsIDI5NjogMTI4MjUxLCAyOTc6IDEyODI1MiwgMjk4OiAxMjgyNTAsIDI5OTogMTI4MTI2LCAzMDA6IDEyMzQ5LCAzMDE6IDEyNjk4MCwgMzAyOiAxMjczODYsIDMwMzogMTI4MTc2LCAzMDQ6IDEyNzkxOSwgMzA1OiAxMjc5NDIsIDMwNjogMTI3OTM3LCAzMDc6IDEyNzkyMCwgMzA4OiAxMjgwMTQsIDMwOTogMTI4Njc2LCAzMTA6IDEyODY5MCwgMzExOiAxMjg2NzksIDMxMjogMTI4Njk3LCAzMTM6IDEyODY5OCwgMzE0OiAxMjg3MDAsIDMxNTogMTI4MTM3LCAzMTY6IDEyODE2NCwgMzE3OiA5ODg5LCAzMTg6IDEyODA5NiwgMzE5OiAxMjg3MDQsIDMyMDogMTI4NzAxLCAzMjE6IDEyODI2NiwgMzIyOiAxMjgyMjYsIDMyMzogMTI3ODg0LCAzMjQ6IDEyODI3NCwgMzI1OiAxMjgyNzUsIDMyNjogMTI3NzUwLCAzMjc6IDEyNzg1OSwgMzI4OiAxMjgyMTEsIDMyOTogMTI4MTc3LCAzMzA6IDEyODE4NSwgMzMxOiAxMjgyMjUsIDMzMjogMTI4MTcwLCAzMzM6IDEyNzk3NCwgMzM0OiAxMjg2NzcsIDMzNTogMTI3MzU5LCAzMzY6IDEyODY1NSwgMzM3OiAxMjg2OTksIDMzODogMTI4MTEwLCAzMzk6IDEyNzk3MSwgMzQwOiAxMjc5NzUsIDM0MTogMTI3OTczLCAzNDI6IDEyNzk3OCwgMzQzOiAxMjc5NzksIDM0NDogMTI3OTc2LCAzNDU6IDEyODY1MiwgMzQ2OiAxMjg2NjEsIDEwOTE6IDEyNzc0NCwgMTA4NDogMTI3NzQ2LCAxMDk5OiAxMjc3NDcsIDEwOTc6IDEyNzc0OSwgMTA5ODogMTI3NzUxLCAxMTAwOiAxMjc3NTIsIDEwODY6IDEyNzc1NCwgODIxOiAxMjc3NzUsIDU3NTogOTgwMCwgNTc2OiA5ODAxLCA1Nzc6IDk4MDIsIDU3ODogOTgwMywgNTc5OiA5ODA0LCA1ODA6IDk4MDUsIDU4MTogOTgwNiwgNTgyOiA5ODA3LCA1ODM6IDk4MDgsIDU4NDogOTgwOSwgNTg1OiA5ODEwLCA1ODY6IDk4MTEsIDU4NzogOTkzNCwgNzcyOiAxMjc3OTksIDEwOTU6IDEyNzgxMSwgNzcxOiAxMjc4MDIsIDc3MzogMTI3ODAzLCA3NzU6IDEyNzc5NiwgNzc2OiAxMjc3OTcsIDEwOTI6IDEyNzgwNiwgODM3OiAxMjc4MjIsIDgzODogMTI3ODE4LCA4Mzk6IDEyNzgyNywgODQwOiAxMjc4MTcsIDg0MTogMTI3ODEzLCA4NDI6IDEyNzgxNCwgMTA0OTogMTI4MDY0LCAxMDUxOiAxMjgwNjYsIDEwNTA6IDEyODA2NywgMTA1MjogMTI4MDY4LCAxMDMzOiAxMjgwNjksIDc5NjogMTI4MTMyLCA3OTc6IDEyODEzMywgNzk4OiAxMjgxMzQsIDc5OTogMTI4MTM1LCA4MDA6IDEyODEzNiwgMTA2NDogMTI4MTA3LCAxMDY1OiAxMjgxMTEsIDEzMDE6IDEyODExMywgMTMwMjogMTI4MTE0LCAxMzAzOiAxMjgxMTUsIDEzMDQ6IDEyODExNiwgMTMwNTogMTI4MTE3LCAxMzA2OiAxMjgxMTgsIDEzMDc6IDEyODExOSwgMTMwODogMTI4MTIwLCA1OTU6IDEyODEyOSwgMTMxMDogMTI4MTMwLCAxMzExOiAxMjgxMzEsIDEzMjU6IDEyODAxMywgMTMyNjogMTI4MDIwLCAxMzI3OiAxMjgwMjMsIDEzMjg6IDEyODA0MywgMTMxODogMTI4MDI0LCAxMzE5OiAxMjgwNDAsIDEzMjA6IDEyODAxOCwgMTMyMTogMTI4MDE3LCAxMDg5OiAxMjgwMjYsIDEzMTc6IDEyODAyNywgMTMxNDogMTI4MDMyLCAxMzE1OiAxMjgwMzYsIDEzMTM6IDEyODAzOCwgMTMxMjogMTI4MDQ0LCAxMzE2OiAxMjgwNTcsIDEzMjI6IDEyODA1OCwgMTMyMzogMTI4MDQ2LCAxMzI0OiAxMjgwNDgsIDEzMjk6IDEyODA1NiwgMTMzNDogMTI4MDYyLCAxMDI3OiAxMjg1NTMsIDEwNDA6IDEyODU2MiwgMTAzMDogMTI4NTY1LCAxMDM5OiAxMjg1NjAsIDEwMzg6IDEyODUzMCwgMTAyODogMTI4NTQ4LCAxMDQ4OiAxMjg1MzYsIDEwNDc6IDEyODUzOCwgMTAzNjogMTI4NTY3LCAxMDM3OiAxMjg1NjMsIDEwNDU6IDEyODUxNywgMTAzNDogMTI4NTE4LCAxMDQyOiAxMjg1MTQsIDEwNDQ6IDk3ODYsIDEwNDM6IDEyODU0NiwgMTA0MTogMTI4NTU3LCAxMDM1OiAxMjg1NTIsIDEwNDY6IDEyODU0NSwgMTAzMTogMTI4NTM0LCAxMDMyOiAxMjg1NTQsIDEwMjY6IDEyODUyNywgMTAyNTogMTI4NTQ5LCAxMDI5OiAxMjg1MjEsIDEwNTk6IDEyODU4MSwgMTA2MDogMTI4NTgyLCAxMDYyOiAxMjg1ODMsIDEwNjM6IDEyODU4OCwgMTA1MzogMTI4NTkxLCAxMjgxOiAxMjc5NzcsIDEyODQ6IDEyNzk4MCwgMTI4NTogMTI3OTgzLCAxMjg2OiAxMjc5ODQsIDEyODg6IDEyNzk4MSwgNTE0OiA5ODc1LCA3Nzk6IDEyNzk4MiwgMTI4OTogMTI4NTA4LCAxMzA5OiAxMjg1MDksIDc5NDogMTI4MDk3LCA3OTU6IDEyODA5OCwgNzcwOiAxMjgwODQsIDc5MjogMTI4MDgyLCA3OTM6IDEyODA4NywgODAxOiAxMjgwODgsIDgwMjogMTI4MDg5LCA4MDM6IDEyODA5MiwgMTI5OTogWzEyNzQ2NCwgMTI3NDc1XSwgMTI5NDogWzEyNzQ2NSwgMTI3NDY2XSwgMTI5NzogWzEyNzQ2NiwgMTI3NDgwXSwgMTI5MzogWzEyNzQ2NywgMTI3NDc5XSwgMTI5NjogWzEyNzQ2OCwgMTI3NDYzXSwgMTI5NTogWzEyNzQ3MCwgMTI3NDgxXSwgMTI5MTogWzEyNzQ3MSwgMTI3NDc3XSwgMTMwMDogWzEyNzQ3MiwgMTI3NDc5XSwgMTI5ODogWzEyNzQ3OSwgMTI3NDgyXSwgMTI5MjogWzEyNzQ4MiwgMTI3NDgwXSwgNTc0OiAxMjgzMDIsIDUyMTogMTI4MzA0LCA3ODM6IDEyODEzOCwgMTMzMDogMTI3MzQ0LCAxMzMxOiAxMjczNDUsIDEzMzI6IDEyNzM3NCwgMTMzMzogMTI3MzU4LCA3ODg6IDEyNzg3MiwgODQzOiAxMjc4NzQsIDEwOTY6IDEyNzg3NywgNzg0OiAxMjc4ODAsIDc4NjogMTI3ODgxLCAxMDc4OiAxMjc4ODUsIDEwODA6IDEyNzg4NiwgMTA4MTogMTI3ODkxLCAxMDgyOiAxMjc4OTAsIDEwODM6IDEyNzg4NywgMTA4ODogMTI3ODc5LCAxMDkwOiAxMjc4ODgsIDEwOTM6IDEyNzg3NSwgMTA5NDogMTI3ODg5LCA3Njk6IDEyODIyMSwgNzkxOiAxMjgyMjcsIDc5MDogMTI4MTg5LCA3ODc6IDk5ODYsIDEwNjY6IDEyNzkzNiwgMTA2NzogMTI3OTQ0LCAxMDY5OiAxMjc5NDYsIDEwNzY6IDEyODY0NywgMTA3NzogMTI4NjQ0LCAxMDcwOiAxMjg2NjUsIDEwNzE6IDEyODY2NiwgMTA3MjogMTI4NjU4LCAxMDczOiAxMjg2NTcsIDEwNzQ6IDEyODY1OSwgMTA3NTogMTI3OTA2LCAxMjg3OiAxMjc5MTAsIDc3ODogMTI3OTExLCAxMjgyOiAxMjc5MTIsIDEyODM6IDEyNzkxMywgODA0OiAxMjc5MTYsIDEwNjg6IDEyNzkyMSwgODA2OiAxMjc5MjYsIDc3NDogMTI4MTQ0LCAxMDYxOiAxMjgxNDUsIDEwODU6IDEyODE0NiwgNTE5OiAxMjgyODYsIDU5MDogMTY5LCA1OTE6IDE3NCwgMTMzNTogODQ4MiwgNTI4OiBbMzUsIDg0MTldLCA1NDA6IFs0OSwgODQxOV0sIDU0MTogWzUwLCA4NDE5XSwgNTQyOiBbNTEsIDg0MTldLCA1NDM6IFs1MiwgODQxOV0sIDU0NDogWzUzLCA4NDE5XSwgNTQ1OiBbNTQsIDg0MTldLCA1NDY6IFs1NSwgODQxOV0sIDU0NzogWzU2LCA4NDE5XSwgNTQ4OiBbNTcsIDg0MTldLCA1NDk6IFs0OCwgODQxOV0sIDUyMzogMTI4MjQ2LCA1OTI6IDEyODI0MywgNTkzOiAxMjgyNDQsIDgzNDogMTI3ODMzLCA4MzI6IDEyNzgzNiwgODI1OiAxMjc4MzgsIDgyNjogMTI3ODQ2LCA4Mjc6IDEyNzgzOSwgODI4OiAxMjc4NDEsIDgyOTogMTI3ODMyLCA4MzA6IDEyNzgzNCwgODMxOiAxMjc4MzcsIDgzMzogMTI3ODM1LCA4MzU6IDEyNzg0MiwgODM2OiAxMjc4NDMsIDg0NDogMTI3ODU3LCA4NDU6IDEyNzg1OCwgMTA4NzogMTI3ODQ3LCA4MjQ6IDEyNzg2MSwgNzgwOiAxMjc4NjcsIDU2NjogODU5OSwgNTY4OiA4NjAwLCA1Njc6IDg1OTgsIDU2OTogODYwMSwgNTYyOiAxMTAxNCwgNTYzOiAxMTAxNSwgNTY0OiAxMDE0NSwgNTY1OiAxMTAxMywgNTcwOiA5NjU0LCA1NzE6IDk2NjQsIDU3MjogOTE5MywgNTczOiA5MTk0LCA4MTg6IDExMDkzLCA4MTk6IDEwMDYwLCA4MjI6IDEwMDY4LCA4MjM6IDEwMDY5LCA1Mjk6IDEwMTc1LCA4MDc6IDEyODE0NywgODA4OiAxMjgxNTEsIDgwOTogMTI4MTUyLCA4MTA6IDEyODE1MywgODExOiAxMjgxNTQsIDgxMjogMTI4MTU1LCA4MTM6IDEyODE1NiwgMTA3OTogMTI4MTU3LCA1MTY6IDEyODE1OSwgNTI0OiA5ODI5LCA1MjY6IDk4MjQsIDUyNTogOTgzMCwgNTI3OiA5ODI3LCA3ODI6IDEyODY4NCwgNTIwOiAxMjg2ODUsIDUyMjogOTg1NSwgNTk0OiA5ODg4LCA1MTM6IDEyODY5NCwgNzc3OiAxMjg3MDIsIDUzMjogMTI3Mzc4LCA1NTM6IDEyNzM4MCwgNTMwOiAxMjczODEsIDU4OTogMTI3MzgzLCA1MzE6IDEyNzM4NSwgNTE1OiAxMjc0ODksIDU1MjogMTI3NDkwLCA1NTU6IDEyNzUzOSwgNTU0OiAxMjc1NDEsIDUzMzogMTI3NTQyLCA1MzQ6IDEyNzUxNCwgNTM1OiAxMjc1NDMsIDUzNjogMTI3NTQ0LCA1NTE6IDEyNzU0NSwgNTU2OiAxMjc1MzUsIDU1NzogMTI3NTQ2LCA3ODk6IDEyOTUzLCA3ODE6IDEyOTUxLCA1NTA6IDEyNzU2OCwgODIwOiAxMjgxNjIsIDc4NTogMTI4MTYzLCA4MTc6IDEyODE2NiwgODE2OiAxMjgxNjgsIDgxNDogMTAwMjQsIDUxNzogMTAwMzYsIDUxODogMTAwMzUsIDUzNzogOTg5OCwgNTM4OiAxMjgzMDksIDUzOTogMTI4MzA3LCA4MTU6IDExMDg4LCA4MDU6IDEyODI3NiwgNTg4OiAxMjgyODUsIDU1ODogMTI4MDcwLCA1NTk6IDEyODA3MSwgNTYwOiAxMjgwNzIsIDU2MTogMTI4MDczLCAxMDU0OiAxMjgwNzUsIDEwNTU6IDEyODA3OSwgMTA1NjogMTI4MDc2LCAxMDU3OiAxMjgwNzgsIDEwNTg6IDEyODA4MCB9OwoKLy8g55qu6IKkCnZhciBza2luID0geyBza2luOiB7IF8wMDE6ICLok53oibLlv4Pmg4UiLCBfMDAyOiAi57Sr6I2G6Iqx55OjIiwgXzAwMzogIuaymea7qea8q+atpSIsIF8wMDQ6ICLlh4zmmajkuKTngrnljYoiLCBfMDA1OiAi5qKm5bm75pif56m6IiwgXzAwNjogIuaal+WknOeVmemmmSIsIF8wMDc6ICLmiJHlv4Ppo57nv5QiLCBfMDA4OiAiaGFwcHkgZm9yZXZlciIsIF8wMDk6ICLlvanombkiLCBfMDEwOiAi5qKm5bm75ri45LmQ5Zy6IiwgXzAxMTogIuW9qeiJsuWkqeepuiIsIF8wMTI6ICLlkI3kurrkvJoiLCBfMDEzOiAi5ZOH5Ze3IiwgXzAxNDogIuaIkeaEv+aEjyIsIF8wMTU6ICLnjKvotqMiLCBfMDE2OiAi5L+d5oqk5YyX5Yaw5rSLIiwgXzAxNzogIumtheW9sSIsIF8wMTg6ICLnq6XotqPlvanombkiLCBfMDE5OiAia2lzcyIsIF8wMjA6ICLmvJPlvakiLCBfMDIxOiAi55WZ5rKZIiwgXzAyMjogIuW/g+aZtCIsIF8wMjM6ICJncmVlbndheSIsIF8wMjQ6ICJIZWxsbyBQaWciLCBfMDI1OiAiSWFtIDgw5ZCOIiwgXzAyNjogIuWuiemdmeWknCIsIF8wMjc6ICLnmb7ngbXpuJ8iLCBfMDI4OiAi56Kn6I2J6JOd5aSpIiwgXzAyOTogIueql+WPsCIsIF8wMzA6ICLmoqblubsiLCBfMDMxOiAi6aOe6bif6bG8IiwgXzAzMjogIueyieiJsumjjuS/oeWtkCIsIF8wMzQ6ICLlpI3lj6QiLCBfMDM1OiAi6buR5p2/IiwgXzAzNjogIuWSluWVoSIsIF8wMzc6ICLmg4Xov7flrp3kuL3mnaUiLCBfMDM4OiAi5aSq56m6IiwgXzAzOTogIua2gum4puadvyIsIF8wNDA6ICLmmJ/nqboiLCBfMDQxOiAi6Zuo5aScIiwgXzA0MjogIue6uOmjnuacuiIsIF8wNDM6ICLpo5giLCBfMDQ1OiAicG9wIiwgXzA0NjogIue0q+iJsumjjuaDhSIsIF8wNDc6ICJjb2ZmZWUgYmFyIiwgXzA0ODogIumjjui9u+S6kea3oSIsIF8wNDk6ICLpo47ovbvkupHmt6EiLCBfMDUwOiAi5qKm5bm75pif56m6IiwgXzA1MTogIuS/neaKpOWMl+WGsOa0iyIsIF8wNTI6ICLmvJPlvakiLCBfMDUzOiAi5oOF6L+35a6d5Li95p2lIiwgXzA1NDogIuWkquepuiIsIF8wNTU6ICLpm6jlpJwiLCBfMDU4OiAi6buY6K6kIiwgXzIxMTogIuaIkeS7rOe7k+WpmuWQpyIsIF8yMTI6ICLlubjnpo/lnKjouqvovrkiLCBfMjE0OiAi5paw5bm06Ze55pilIiwgXzI1MjogIueOr+S/neebiui1t+adpSIsIF8yNTM6ICLlnLDnkIPkuIDlsI/ml7YiLCBfMjU0OiAi6ZqP5omL5ouNIiwgXzI1NTogIuS4uueIseebiui1t+i3kSIgfSwgc2tpbnZpcDogeyBfMDAxOiAi6bif5Lq655qE5byC5oOz5LiW55WMIiwgXzAwMjogIue6uOmdouS6uueUnyIsIF8wMDY6ICLnroDnuqbnlJ/mtLsiLCBfMDA5OiAi5ri45oiP5pe25YWJIiwgXzAxMDogIuengOWHuuecn+aIkSIsIF8wMTE6ICLns5bmnpznvKTnurciLCBfMDEzOiAi5oiR55qE57+F6IaAIiwgXzAxNDogIuiOsuiKsSIsIF8wMTY6ICLotoXnuqfnjpvkuL0iLCBfMDE3OiAi5rWq5bCP6IqxIiwgXzAxODogIjgw5ZCOIiwgXzAxOTogIuWPr+eIsea7tOWFlOWtkCIsIF8wMjE6ICLmtbflupXkuJbnlYwiLCBfMDIyOiAi57uZ6Ieq5bex5pS+5Liq5YGHIiwgXzAyMzogIjgw5ZCO55qE5Zue5b+GIiwgXzAyNDogIumprOaIj+WboiIsIF8wMjU6ICLlraTni6znmoTlpJwiLCBfMDI2OiAi5pqW5pqWIiwgXzAyNzogIuWQg+ixhuS6uiIsIF8wMjg6ICJyYWluYm93IiwgXzAzMTogIua1t+S5i+aipuWigyIsIF8wMzI6ICLml4vovazml7blhYkiLCBfMDMzOiAi5Y2I5ZCO5be05aOr5oOF57yYIiwgXzAzNDogIuWwj+m7hOm4rSIsIF8wMzU6ICLlpI/lvq7lh4kiLCBfMDM2OiAi56Kn5rC05pma6IifIiwgXzAzNzogIk1hcnJ5IE1lIiwgXzAzODogIuawtOWiqOmxvCIsIF8wMzk6ICLlpJXlvbEiLCBfMDQwOiAi5b+D5LmL5oGLIiwgXzA0MTogIuW/g+W/g+ebuOWNsCIsIF8wNDI6ICLml4XooYzml7blhYkiLCBfMDQzOiAi5oul5oqx576O5aW9IiwgXzA0NDogIuWvkCIsIF8wNDU6ICLni5fni5fmvKvmraUiLCBfMDQ2OiAi6Zi/54u455qE5rW35rSLIiwgXzA0NzogIuiSsuWFrOiLseeahOaipiIsIF8wNDg6ICLmkq3np43pmLPlhYkiLCBfMDQ5OiAi5bCP5oOF5Lq6IiwgXzA1MDogIua1t+a7qSIsIF8wNTE6ICLlpKnkvb/niLHkuroiLCBfMDU0OiAi5oKg6Zey5Y2I5ZCOIiwgXzA1NjogIuilv+eTnOWls+WtqSIsIF8wNTc6ICLpg4rmuLgiLCBfMDU4OiAi5Y2X5p6B5LyB6bmFIiwgXzA1OTogIuiAgeS4iua1t+WygeaciCIsIF8wNjA6ICLpm77pg70iLCBfMDYxOiAi5rW36L655bqm5YGHIiwgXzA2MjogIuS4gOS4quS6uueahOaXheihjCIsIF8wNjM6ICLnjq/muLjlnLDnkIMiLCBfMDY0OiAi572X5bCP6buR55qE5byC5oOz5LiW55WMIiwgXzA2NTogIuadjumbt+S4jumfqeaihSIsIF8wNjg6ICLoib7njqnlhZQt5a6I5YCZIiwgXzA2OTogIuS/j+earuWWteaYn+S6uiIsIF8wNzA6ICLmoqbmuLjku5nlooMiLCBfMDcxOiAi54ix5oOF55WF5oOzIiwgXzA3MjogIuiQjOeLl+eLlyIsIF8wNzM6ICLpqazog4zkuIrnmoTlpKnnqboiLCBfMDc0OiAi5pqW6ZizIiwgXzA3NTogIua4lOiIn+WUseaZmiIsIF8wNzY6ICLlsI/kvJnkvLQiLCBfMDc4OiAi566A5Y2V55Sf5rS7IiwgXzA3OTogIuWuiOacmyIsIF8wODA6ICLlpb3ln7rlj4siLCBfMDgxOiAi6YO95biC5rWB5rWqIiwgXzA4MjogIui6sueMq+eMqyIsIF8wODM6ICLplK7nm5jku5QiLCBfMDg0OiAi5Y2X55Oc5aS05b+r6LeRIiwgXzA4NTogIumjnuWQkeaciOeQgyIsIF8wODY6ICLmnqvmnpciLCBfMDg3OiAi5p+/5a2Q57qi5LqGIiwgXzA4ODogIlRyaWNrIG9yIFRyZWF0IiwgXzA4OTogIumprOmHjOWlpSIsIF8wOTA6ICLlpKnnqboiLCBfMDkxOiAi56S854mp6L2w54K45py6IiwgXzA5MjogIumYv+eLuOeahOeni+WkqSIsIF8wOTM6ICLli4flo6vni7giLCBfMDk0OiAi6JCM5a6g5YWs5a+TIiwgXzA5NTogIuWugemdmeeahOa1tyIsIF8wOTY6ICLmnIjlhYkiLCBfMDk3OiAiZ29vZCBuaWdodCIsIF8wOTg6ICLllrXmmJ/kurrlkJHliY3lhrIiLCBfMDk5OiAi5qOS5qOS57OWIiwgXzEwMTogIuerpeivnSIsIF8xMDI6ICLnjKvlkqrkuZDpmJ8iLCBfMTA1OiAi6KGo55m9IiwgXzEwNjogIuiHqueUseeMquelniIsIF8xMDc6ICLmoqbkuK3nmoTlsI/lsYsiLCBfMTA4OiAiWE9YTyIsIF8xMDk6ICLnq6XlubTnmoTlsI/nhooiLCBfMTEwOiAi5oiR55qE5Lqk5ZON5LmQIiwgXzExMTogIuS7meS5kOmjmOmjmCIsIF8xMTI6ICLkuIvpm6rllaYiLCBfMTEzOiAi5a+S5YasIiwgXzExNDogIuWQjuWkqSIsIF8xMTU6ICLom4flubTnpZ3npo8iLCBfMTE2OiAi5Zyj6K+e6ICB5Lq6IiwgXzExNzogIuaxn+WNl3N0eWxlIiwgXzExODogIum+hOWumCIsIF8xMjA6ICLov6rlo6vlsLwt5Y+y6L+q5aWHIiwgXzEyMTogIui/quWjq+WwvC3nu7TlsLznhooiLCBfMTIyOiAi6L+q5aOr5bC8LeWwj+mhveeariIsIF8xMjM6ICLov6rlo6vlsLwt546b5Li954yrIiwgXzEyNDogIui/quWjq+WwvC3nvo7kurrpsbwiLCBfMTI1OiAi6L+q5aOr5bC8Leexs+Wlh+exs+WmriIsIF8xMjY6ICLov6rlo6vlsLwt5qyi5LmQ5Zyj6K+eIiwgXzEyNzogIui/quWjq+WwvC3lsI/ku5nlpbMiLCBfMTI4OiAi5a6I5pybIiwgXzEyOTogIuW5veeBteWPpOWgoSIsIF8xMzA6ICLov7fpm74iLCBfMTMxOiAi6YeR6Imy6Ziz5YWJIiwgXzEzMjogIkkgTWlzcyBVIiwgXzEzMzogIuacquadpeOBruagkSIsIF8xMzQ6ICLph5HoibLmtbfmtIsiLCBfMTM1OiAi6Zuo5ZCOIiwgXzEzNjogIuiNieWdoeS4iueahOWls+WtqSIsIF8xMzc6ICJTZXh5IG11c2ljIiwgXzEzODogIuenu+WKqOWfjuWgoSIsIF8xMzk6ICLmi6XmirHniLEiLCBfMTQwOiAi5pil6I2JIiwgXzE0MTogIuiKseS4juidtiIsIF8xNDI6ICLmqLHjga7oirEiLCBfMTQ1OiAi6buR5pqX6Zi25qKvIiwgXzE0NjogIumxvCIsIF8xNDc6ICLlhazkuLsiLCBfMTQ5OiAi5LuZ5aWz55qE6KOZ5pGGIiwgXzE1MDogIuWwj+S7meWlsyIsIF8xNTI6ICLmqLHoirHoiJ4iLCBfMTUzOiAi6Ieq5aix6Ieq5LmQIiwgXzE1NDogIuWTpeWTpSIsIF8xNTY6ICLlrrbmnInph5Hmr5siLCBfMTU4OiAi5reY5rCU5bCP5ZOIIiwgXzE1OTogIua1t+WGm+eLl+eLlyIsIF8xNjA6ICLlt7Tlk6UiLCBfMTYzOiAi6L+q5aOr5bC8LemtlOWig+S7mei4qiIsIF8xNjQ6ICLov6rlo6vlsLwt5YWs5Li7IiwgXzE2NTogIumdkuaYpSIsIF8xNjY6ICLoirHmpIUiLCBfMTY5OiAi5ouJ5ouJIiwgXzE3MzogIuaXp+WfjuW+gOS6iyIsIF8xNzQ6ICLlip/lpKvkuYvnjosiLCBfMTc1OiAi5LiN5piO6aOe6KGM54mpIiwgXzE3NjogIuaYn+mZheaOoumZqSIsIF8xNzg6ICLlsI/ms7Dov6oiLCBfMTc5OiAi6aW85bmy5Za15pif5Lq6IiwgXzE4MTogIuWWteaYn+S6uuS4ieWFhOW8nyIsIF8xODI6ICLpuovpub/llrXmmJ/kuroiLCBfMTg1OiAi5Y+v54ix5Za15pif5Lq6IiwgXzE4NzogIuavjeeIsSIsIF8xODg6ICLlpKfmiYvlsI/miYsiLCBfMTg5OiAi5LiA5a625Lq6IiwgXzE5MjogIumSoumTgeS+oCIsIF8xOTM6ICLpkqLpk4HkvqDlh7rlh7siLCBfMTk0OiAi6L+q5aOr5bC8Leexs+WlhyIsIF8xOTU6ICLov6rlo6vlsLwt57Gz6ICB6bygIiwgXzE5NjogIuiQneiOiSIsIF8xOTc6ICLlvqHlp5AiLCBfMTk4OiAi5Yed5pyb5Zyw55CDIiwgXzE5OTogIuS+nemdoCIsIF8yMDE6ICJDU+aImOWjqyIsIF8yMDI6ICJUYWtlIE1lIEhvbWUiLCBfMjAzOiAi55m76Ii5c3R5bGUiLCBfMjA0OiAi56i76I2J5Lq6IiwgXzIwNTogImhhcHB5IGV2ZXJ5ZGF5IiwgXzIwNjogIueUnOeCuSIsIF8yMDc6ICLlpKfpo47lkLkiLCBfMjA4OiAi54Ok57qi6JavIiwgXzIwOTogIkJhbGwiLCBfMjExOiAi6LSq5ZCD6JuHIiwgXzIxMjogIuWKm+S6ieS4iua4uCIsIF8yMTM6ICLmo4vpgKLlr7nmiYsiLCBfMjE0OiAi5Zui5Zui5ZyG5ZyGIiwgXzIxNjogIuW5tOWknOmlrSIsIF8yMjE6ICLmmKXpm6giLCBfMjIyOiAi5bCY6aOe5omsIiwgXzIyNDogIumbvumcvuWOi+WfjiIsIF8yMjU6ICLku5nlpbPnmoToiJ7ouYgiLCBfMjI2OiAi5peF6KGM6LWP5pilIiwgXzIyNzogIui1j+aYpeWOuyIsIF8yMjg6ICLmnoHpgJ/po5novaYiLCBfMjM0OiAi5Za15pif5Lq655qE5oCd5b+1IiwgXzIzNTogIuS6jOi0p+WWteaYn+S6uiIsIF8yMzY6ICLmgIDlv7UiLCBfMjM3OiAi5Y2W6JCM5Za15pif5Lq6IiwgXzIzODogIumHkeWtl+WhlOeahOenmOWvhiIsIF8yMzk6ICLmr43kurLoioIiLCBfMjQwOiAi56uv5Y2I6IqCIiwgXzI0MjogIuebkuWtkOaYn+eQgyIsIF8yNDM6ICLlv4Plv4Pnm7jljbAiLCBfMjQ0OiAi57KJ6Imy5b+D5oOFIiwgXzI0NTogIuS+j+e9l+e6quWFrOWbrSIsIF8yNDY6ICLkuJbnlYzmna8iLCBfMjQ3OiAi54K555CD5aSn5oiYIiwgXzI1MDogIuadqOa0iyIsIF8yNTE6ICLmnajmtIvnlJ/ml6XkuJPlsZ4iLCBfMzAzOiAi57qq5b+15pelIiwgXzMwNDogIueql+WklueahOaYpeWkqSIsIF8zMDU6ICLpgJ/luqbkuI7mv4Dmg4UiLCBfMzA2OiAi57u/5oSP55uO54S2IiwgXzMwNzogIuWKqOeUu+WfjiIsIF8zMTA6ICLniafkuroiLCBfMzExOiAi576O5aW96aOO5YWJIiwgXzMxMjogIuaYpeWkqeeahOW5u+aDsyIsIF8zMTg6ICLph43ov5TlnLDnkIMiLCBfMzE5OiAi5Yay5LiK5LqR6ZyEIiwgXzMyMDogIumZqOefsyIsIF8zMjU6ICLniLHmg4Xkvb/ogIUiLCBfMzI2OiAi5oCq5YW95aSn5a2mIiwgXzMyODogIuavm+aAquWSjOWwj+S8meS8tCIsIF8zMzA6ICLov6rlo6vlsLwt5aSN5Y+k57Gz6ICB6bygIiwgXzMzMjogIumxvOi3gyIsIF8zMzM6ICLlpJzoibIiLCBfMzM0OiAi5rW35rSLIiwgXzMzNTogIueliOebvCIsIF8zMzc6ICLnjqvnkbDku6PooajmiJHnmoTniLEiLCBfMzM5OiAi56We5YG35aW254i4MiIsIF8zNDI6ICLlnKPor57pqa/pub8iLCBfMzQzOiAi5rip5oOF5Zyj6K+eIiwgXzM0NDogIuWGsOmbquWlh+e8mCIsIF8zNDU6ICLpqa/pvpnpqpHlo6siLCBfMzQ3OiAi6J206J225pil5aSpIiwgXzM0ODogIue7v+iJsueUn+a0uyIsIF8zNDk6ICLlvanoibLmsJTnkIMiLCBfMzUwOiAi6Zuo5ru0IiwgXzM1MTogIuaZtOepuuaalumYsyIsIF8zNTQ6ICLoirHnk6MiLCBfMzU1OiAi5pil6ImyIiwgXzM1ODogImtlZW5555qE5ZKW5ZWhIiwgXzM1OTogImtlZW5555qE6bK46bG8IiwgXzQwMDogIuaYpeWkqeeahOawlOaBryIsIF80MDE6ICLprLzlqIPlqIMiLCBfNDAyOiAi5a+G5a6kIiwgXzQwNDogIuerueael+WQrOmbqCIsIF80MDU6ICLkupHpm74iLCBfNDA3OiAi5rK56I+c6IqxIiwgXzQwODogIuaXhemAlOS4reeahOetieW+hSIsIF80MDk6ICLml4XnqIsiLCBfNDEwOiAi5rG96L2m5LmL5peFIiwgXzQxMTogIuiNt+WFsOmjjui9piIsIF80MTI6ICLov7flvankuYvmiJgiLCBfNDE0OiAi5oiY5Zyw6aOe6L2mIiwgXzQxNTogIuaDheS+o+WWteaYn+S6uiIsIF80MTY6ICLllrXmmJ/kurrlkozpsbwiLCBfNDE3OiAi5LiA6LW35Y2I6KeJIiwgXzQxOTogIueIseW/g+ejgeW4piIsIF80MjA6ICLmnaXoh6rmmJ/mmJ/nmoTmiJEiLCBfNDIyOiAi5qyi5LmQ5Za15pif5Lq6IiwgXzQyMzogIuengeWutumjnueinyIsIF80MjU6ICLkuZDpmJ8iLCBfNjAwOiAi5a62IiwgXzcwMjogIue6quW/teazsOaIiOWwlCIsIF83MDQ6ICJURkJPWVPlsJHlubTlvLoiLCBfNzA5OiAiVEZCT1lT6Z2S5pil5L+u54K85omL5YaMIiwgXzcxMTogIuaWsOeJiOW+ruWNmiIsIF83MTM6ICLmjqLlr7vlubjnpo8iLCBfNzE0OiAi5aSP5aSp5L2g5aW9IiwgXzcxNTogIuaIkeeIseeBq+mUhSIsIF83MTY6ICLnuqLoibLlt7Tlo6siLCBfNzE3OiAi5Luw5pyb5pif56m6IiwgXzcxODogImhhcHB5IGJpcnRoZGF5IiwgXzcxOTogIumTtuadj+efpeeniyIsIF83MjI6ICLnjqnpm6rlkq8iLCBfNzIzOiAi5Za15pif5Lq655qE5pif6ZmF56m/6LaKIiwgXzcyNDogIkppbmdsZSBiZWxscyIsIF83MjU6ICLpl7nmlrDmmKUiLCBfNzI2OiAi5LiJ576K5byA5rOwIiwgXzczMTogIjfmnIjml6XljoYiLCBfNzMyOiAiOOaciOaXpeWOhiIsIF83MzM6ICI55pyI5pel5Y6GIiwgXzczNDogIjEw5pyI5pel5Y6GIiwgXzczNTogIjEx5pyI5pel5Y6GIiwgXzczNjogIjEy5pyI5pel5Y6GIiwgXzczNzogIjHmnIjml6XljoYiLCBfNzM4OiAiMuaciOaXpeWOhiIsIF83Mzk6ICIz5pyI5pel5Y6GIiwgXzc0MDogIueip+azoiIsIF83NDE6ICLkuIDnjKvkuIDkuJbnlYwiLCBfNzQyOiAi5ZGQ5ZaK55qE5rGq5rGqIiwgXzc0MzogIuWutuaciemmi+eMqyIsIF83NDQ6ICLni5fni5fniLHnvo7kuL0iLCBfNzQ1OiAi5rip5p+U5aaC5Za1IiwgXzc0NjogIuiXj+eMq+eMqyIsIF83NDc6ICLkvLTlkJvml4XooYwiLCBfNzQ4OiAi5oiR5oOz6Z2Z6Z2ZIiwgXzc0OTogIuWAvuaDhSIsIF83NTA6ICLnsrznsrzmtbflhYkiLCBfNzUxOiAi5Y2O5pmo5a6HIiwgXzc1MjogIlNOSDQ4IiwgXzc1MzogIuivuuiogCIsIF83NTQ6ICLkuZTmjK/lrociLCBfNzU1OiAi5aae5aae5ZKM56uv5Y2IIiwgXzc1NjogIuaaluaaluWxiyIsIF83NTc6ICLkvp3lgY5pdnZpIiwgXzgwMDogIlRGQk9ZU+aYk+eDiuWNg+eOuiIsIF84MDE6ICLliJ3pm6oiLCBfODAyOiAi5pqW5b+D5ou/6ZOBIiwgXzgwMzogIumZquS8tCIsIF84MDQ6ICJNZXJyeSBYbWFzIiwgXzgwNTogIumAhuWFieajruaelyIsIF84MDY6ICLmiJHniLHmiqvokKgiLCBfODA3OiAi5peF6KGM5oiQ55i+IiwgXzgwODogIuaIkeeIseeUnOeCuSIsIF84MDk6ICLnvorlubTliLAiLCBfODExOiAi5biM5pyb5LmL5qCRIiwgXzgxMjogIua1t+a0iyIsIF84MTM6ICLlsI/lspvlkozoiLkiLCBfODE0OiAi6Zuq5pmvIiwgXzgxNTogIuW9qeiZueS5i+i3ryIgfSwgc2tpbnZpcGY6IHsgXzAwMTogIuWkp+a1tyIsIF8wMDI6ICLkuIvpm6oiLCBfMDAzOiAi5aSp5L2/IiwgXzAwNDogIuWPjOWtkOW6pyIsIF8wMDU6ICLov5zooYwiIH0sIHNraW52aXBnOiB7IF8wMDE6ICLmr5XkuJrlraMiLCBfMDAyOiAi5LiK54+t5peP55qE5ZGo5LiAIiwgXzAwMzogIuS4iuePreaXj+eahOWRqOS6jCIsIF8wMDQ6ICLkuIrnj63ml4/nmoTlkajkuIkiLCBfMDA1OiAi5LiK54+t5peP55qE5ZGo5ZubIiwgXzAwNjogIuS4iuePreaXj+eahOWRqOS6lCIsIF8wMDc6ICLkuIrnj63ml4/nmoTlkajlha0iLCBfMDA4OiAi5LiK54+t5peP55qE5ZGo5aSpIiB9LCBza2ludmlwajogeyBfMDAxOiAi6LaF57qn546b5Li95Yqo5oCB54mIIiB9LCB3ZWVrc2tpbjogeyBfMDAyOiAi5b6u5Y2a57uP5YW4IiB9LCB3ZWVrc2tpbnZpcDogeyBfMDAxOiAi5peF6KGM5pe25YWJIiwgXzAwMjogIue7v+aEjyIsIF8wMDM6ICLkuIrnj63ml4/kuIDlkajlv4Pmg4UiLCBfMDA0OiAi6L+q5aOr5bC8IiB9IH07Cgp2YXIgdXRpbCA9IHt9OwoKLy8g5rWP6KeI5Zmo6K+G5YirCnV0aWwuYnJvd3NlciA9IHt9OwovLyDkuIDkupvlhbzlrrnmgKfku6PnoIEKLy8gQXJyYXkuZnJvbQppZiAoIUFycmF5LmZyb20pIEFycmF5LmZyb20gPSBmdW5jdGlvbiAoKSB7IHZhciByID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZywgbiA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiAiZnVuY3Rpb24iID09IHR5cGVvZiBuIHx8ICJbb2JqZWN0IEZ1bmN0aW9uXSIgPT09IHIuY2FsbChuKSB9LCB0ID0gZnVuY3Rpb24gKHIpIHsgdmFyIG4gPSArcjsgcmV0dXJuIGlzTmFOKG4pID8gMCA6IDAgIT09IG4gJiYgaXNGaW5pdGUobikgPyAobiA+IDAgPyAxIDogLTEpICogTWF0aC5mbG9vcihNYXRoLmFicyhuKSkgOiBuIH0sIGUgPSBNYXRoLnBvdygyLCA1MykgLSAxLCBvID0gZnVuY3Rpb24gKHIpIHsgdmFyIG4gPSB0KHIpOyByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgMCksIGUpIH07IHJldHVybiBmdW5jdGlvbiAocikgeyB2YXIgdCA9IHRoaXMsIGUgPSBPYmplY3Qocik7IGlmIChudWxsID09IHIpIHRocm93IG5ldyBUeXBlRXJyb3IoIkFycmF5LmZyb20gcmVxdWlyZXMgYW4gYXJyYXktbGlrZSBvYmplY3QgLSBub3QgbnVsbCBvciB1bmRlZmluZWQiKTsgdmFyIGEsIGkgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHZvaWQgMDsgaWYgKHZvaWQgMCAhPT0gaSkgeyBpZiAoIW4oaSkpIHRocm93IG5ldyBUeXBlRXJyb3IoIkFycmF5LmZyb206IHdoZW4gcHJvdmlkZWQsIHRoZSBzZWNvbmQgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uIik7IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIChhID0gYXJndW1lbnRzWzJdKSB9IGZvciAodmFyIHUsIGYgPSBvKGUubGVuZ3RoKSwgYyA9IG4odCkgPyBPYmplY3QobmV3IHQoZikpIDogQXJyYXkoZiksIGggPSAwOyBmID4gaDspIHUgPSBlW2hdLCBjW2hdID0gaSA/IHZvaWQgMCA9PT0gYSA/IGkodSwgaCkgOiBpLmNhbGwoYSwgdSwgaCkgOiB1LCBoICs9IDE7IHJldHVybiBjLmxlbmd0aCA9IGYsIGMgfSB9KCk7Ci8vIE9iamVjdC5hc3NpZ24KaWYgKCFPYmplY3QuYXNzaWduKSBPYmplY3QuYXNzaWduID0gZnVuY3Rpb24gKG4pIHsgInVzZSBzdHJpY3QiOyBpZiAodm9pZCAwID09PSBuIHx8IG51bGwgPT09IG4pIHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdCIpOyBmb3IgKHZhciByID0gT2JqZWN0KG4pLCB0ID0gMTsgdCA8IGFyZ3VtZW50cy5sZW5ndGg7IHQrKykgeyB2YXIgZSA9IGFyZ3VtZW50c1t0XTsgaWYgKHZvaWQgMCAhPT0gZSAmJiBudWxsICE9PSBlKSBmb3IgKHZhciBvIGluIGUpIGUuaGFzT3duUHJvcGVydHkobykgJiYgKHJbb10gPSBlW29dKSB9IHJldHVybiByIH07CgovLyDmo4Dmn6XmmK/lkKbmmK8gRmlyZWZveCDmtY/op4jlmagKdXRpbC5icm93c2VyLmZ4ID0ge307CnV0aWwuYnJvd3Nlci5meC52ZXJzaW9uID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgbSA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL15Nb3ppbGxhXC81XC4wIFwoW14pXSs7IHJ2OihbXGQuXSspXCkgR2Vja29cL1tcZF17OH0gRmlyZWZveFwvW1xkLl0rJC8pOwogIHJldHVybiBtICYmIG1bMV0gfHwgbnVsbDsKfSgpKTsKdXRpbC5icm93c2VyLmZ4LmF2YWxpYWJsZSA9ICEhdXRpbC5icm93c2VyLmZ4LnZlcnNpb247CmlmICh1dGlsLmJyb3dzZXIuZnguYXZhbGlhYmxlKSB1dGlsLmJyb3dzZXIuZngubWFpbnZlcnNpb24gPSArdXRpbC5icm93c2VyLmZ4LnZlcnNpb24ubWF0Y2goL15cZCsvKTsKCi8vIOiEmuacrOivhuWIqwp1dGlsLnNjcmlwdCA9IHt9OwovLyDojrflvpfohJrmnKzlm77moIcKdXRpbC5zY3JpcHQuaWNvbiA9IChmdW5jdGlvbiAoKSB7CiAgdHJ5IHsKICAgIHJldHVybiBHTV9pbmZvLnNjcmlwdE1ldGFTdHIubWF0Y2gobmV3IFJlZ0V4cCgnLy8gQChpY29uKSg/OlxccysoLiopKScpKVsyXTsKICB9IGNhdGNoIChlKSB7IHJldHVybiAnaHR0cHM6Ly90aWFuc2guZ2l0aHViLmlvL3lhd2YvaW1nL3lhd2YucG5nJzsgfQp9KCkpOwovLyDmo4Dmn6XmmK/lkKbmmK/ljovnvKnniYjmnKwKdXRpbC5zY3JpcHQuaXNtaW4gPSAoZnVuY3Rpb24gKCkgewogIHRyeSB7CiAgICAvLyDmo4Dmn6XlpJrkvZnnmoTnqbrmoLzmiJbliIblj7fjgIHluIPlsJTlrZfpnaLluLjph4/jgIHmnKrmtojpmaTnmoTmrbvku6PnoIHjgIFpZuivreWPpe+8jOWIpOaWreaYr+WQpuaYr+WOi+e8qeWQjueahOS7o+eggQogICAgdmFyIGZ1bmMgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybgogICAgICBpZiAoZmFsc2UpIHsKICAgICAgICB0cnVlOzsKICAgICAgfQogICAgfSArICcnOwogICAgcmV0dXJuICFmdW5jLm1hdGNoKC9yZXR1cm5bXHNcU10qaWZbXHNcU10qXHNcc3RydWU7O1tcclxuXHNdLyk7CiAgfSBjYXRjaCAoZSkgewogICAgcmV0dXJuIHRydWU7IC8vIOS4jeefpemBk+WTqumHjOWHuueahOmXrumimO+8jOW9k+S9nOaYr+WOi+e8qeeahOavlOi+g+WuieWFqAogIH0KfSgpKTsKLy8g5qOA5p+l5piv5ZCm5byA5ZCv5LqG6LCD6K+VCnV0aWwuc2NyaXB0LmlzZGVidWcgPSAoZnVuY3Rpb24gKCkgewogIGlmICh1dGlsLnNjcmlwdC5pc21pbikgcmV0dXJuIGZhbHNlOwogIHJldHVybiAhIUdNX2dldFZhbHVlKCdkZWJ1ZycsIGZhbHNlKTsKfSgpKTsKCi8vIOS8mOWFiOe6p+iuvue9rgp1dGlsLnByaW9yaXR5ID0gewogICdGSVJTVCc6IDFlNiwKICAnSElHSCc6IDFlNSwKICAnQkVGT1JFJzogMWUzLAogICdERUZBVUxUJzogMCwKICAnQUZURVInOiAtMWUzLAogICdMT1cnOiAtMWU1LAogICdMQVNUJzogLTFlNiwKfTsKCi8vIOWHveaVsOebuOWFs+aTjeS9nAp1dGlsLmZ1bmMgPSB7fTsKCi8vIOWfuuacrOWHveaVsAp2YXIgbm9vcCA9IHV0aWwuZnVuYy5ub29wID0gZnVuY3Rpb24gKCkgeyB9Owp1dGlsLmZ1bmMuaWRlbnRpdHkgPSBmdW5jdGlvbiAoeCkgeyByZXR1cm4geDsgfTsKdXRpbC5mdW5jLmNvbnN0YW50ID0gZnVuY3Rpb24gKHgpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHg7IH07IH07Cgp1dGlsLnVuZXZhbCA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGhlbHBlciA9IGZ1bmN0aW9uIChvYmosIHNlZW4pIHsKICAgIHRyeSB7CiAgICAgIGlmIChvYmogPT09IG51bGwpIHJldHVybiAnbnVsbCc7IC8vIG51bGwKICAgICAgaWYgKG9iaiA9PT0gdm9pZCAwKSByZXR1cm4gJyh2b2lkIDApJzsgLy8gdW5kZWZpbmVkCiAgICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuICcoe30pJzsgLy8gbWF5YmUgdW5kZXRlY3RhYmxlCiAgICAgIGlmICh0eXBlb2Ygb2JqID09PSAnbnVtYmVyJykgewogICAgICAgIGlmICgxIC8gb2JqID09PSAtSW5maW5pdHkpIHJldHVybiAnLTAnOwogICAgICAgIC8vIHRvU3RyaW5nIHNob3VsZCB3b3JrIGFsbCB2YWx1ZXMgYnV0IG5vdCAtMAogICAgICAgIHJldHVybiBOdW1iZXIucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKTsKICAgICAgfQogICAgICAvLyBzdHJpbmcgb3IgYm9vbGVhbgogICAgICBpZiAoIShvYmogaW5zdGFuY2VvZiBPYmplY3QpKSByZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqKTsKICAgICAgLy8gU3RyaW5nLCBOdW1iZXIsIEJvb2xlYW4KICAgICAgaWYgKG9iaiBpbnN0YW5jZW9mIFN0cmluZykgcmV0dXJuICcobmV3IFN0cmluZygnICsgaGVscGVyKFN0cmluZy5wcm90b3R5cGUudmFsdWVPZi5jYWxsKG9iaikpICsgJykpJzsKICAgICAgaWYgKG9iaiBpbnN0YW5jZW9mIE51bWJlcikgcmV0dXJuICcobmV3IE51bWJlcignICsgaGVscGVyKE51bWJlci5wcm90b3R5cGUudmFsdWVPZi5jYWxsKG9iaikpICsgJykpJzsKICAgICAgaWYgKG9iaiBpbnN0YW5jZW9mIEJvb2xlYW4pIHJldHVybiAnKG5ldyBCb29sZWFuKCcgKyBoZWxwZXIoQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKG9iaikpICsgJykpJzsKICAgICAgLy8gUmVnRXhwOyB0b1N0cmluZyBzaG91bGQgd29yawogICAgICBpZiAob2JqIGluc3RhbmNlb2YgUmVnRXhwKSByZXR1cm4gUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaik7CiAgICAgIC8vIERhdGU7IGNvbnZlcnQgb2JqIHRvIE51bWJlciBzaG91bGQgd29yawogICAgICBpZiAob2JqIGluc3RhbmNlb2YgRGF0ZSkgcmV0dXJuICcobmV3IERhdGUoJyArIGhlbHBlcihOdW1iZXIob2JqKSkgKyAnKSknOwogICAgICAvLyBGdW5jdGlvbgogICAgICBpZiAob2JqIGluc3RhbmNlb2YgRnVuY3Rpb24pIHsKICAgICAgICB2YXIgZnVuYyA9IEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaik7CiAgICAgICAgaWYgKC9ce1xzKlxbbmF0aXZlIGNvZGVcXVxzKlx9XHMqJC8udGVzdChmdW5jKSkgcmV0dXJuIG51bGw7CiAgICAgICAgcmV0dXJuICcoJyArIGZ1bmMgKyAnKSc7CiAgICAgIH0KICAgICAgaWYgKHNlZW4uaW5kZXhPZihvYmopICE9PSAtMSkgewogICAgICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHJldHVybiAnW10nOwogICAgICAgIHJldHVybiAnKHt9KSc7CiAgICAgIH0KICAgICAgdmFyIG5ld1NlZW4gPSBzZWVuLmNvbmNhdChbb2JqXSk7CiAgICAgIC8vIEFycmF5CiAgICAgIGlmIChvYmogaW5zdGFuY2VvZiBBcnJheSkgewogICAgICAgIHZhciBhcnJheSA9IG9iai5tYXAoZnVuY3Rpb24gKG8pIHsgcmV0dXJuIGhlbHBlcihvLCBuZXdTZWVuKTsgfSk7CiAgICAgICAgLy8gQWRkIGEgY29tbWEgYXQgZW5kIGlmIGxhc3QgZWxlbWVudCBpcyBhIGhvbGUKICAgICAgICB2YXIgbGFzdEhvbGUgPSBhcnJheS5sZW5ndGggJiYgISgoYXJyYXkubGVuZ3RoIC0gMSkgaW4gYXJyYXkpOwogICAgICAgIHJldHVybiAnWycgKyBhcnJheS5qb2luKCcsICcpICsgKGxhc3RIb2xlID8gJywnIDogJycpICsgJ10nOwogICAgICB9CiAgICAgIC8vIE9iamVjdAogICAgICBpZiAob2JqIGluc3RhbmNlb2YgT2JqZWN0KSB7CiAgICAgICAgdmFyIHBhaXJzID0gW107CiAgICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgICAgcGFpcnMucHVzaChKU09OLnN0cmluZ2lmeShrZXkpICsgJzonICsgaGVscGVyKG9ialtrZXldLCBuZXdTZWVuKSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiAnKHsnICsgcGFpcnMuam9pbignLCAnKSArICd9KSc7CiAgICAgIH0KICAgICAgcmV0dXJuICcoe30pJzsKICAgIH0gY2F0Y2ggKF9pZ25vcmUxKSB7IH0KICAgIC8vIHRoZXJlIHNob3VsZCBiZSBzb21ldGhpbmcgd3Jvbmc7IG1heWJlIG9iaiBpcyBhIFByb3h5CiAgICB0cnkgewogICAgICBpZiAob2JqIGluc3RhbmNlb2YgT2JqZWN0KSByZXR1cm4gJyh7fSknOwogICAgICBlbHNlIHJldHVybiAnbnVsbCc7CiAgICB9IGNhdGNoIChfaWdub3JlMikgeyB9CiAgICAvLyB0aGVyZSByZWFsbHkgc2hvdWxkIGJlIHNvbWV0aGluZyB3cm9uZyB3aGljaCBjYW5ub3QgYmUgaGFuZGxlZAogICAgcmV0dXJuICdudWxsJzsKICB9OwogIHJldHVybiBmdW5jdGlvbiB1bl9ldmFsKG9iaikgewogICAgcmV0dXJuIGhlbHBlcihvYmosIFtdKTsKICB9Owp9KCkpOwoKLy8g5Zyo6aG16Z2i5omn6KGM5LiA5Liq5Ye95pWwCi8vIOWvueS6juWPguaVsO+8jOS8mummluWFiOi9rOaNouS4ukpTT07vvIzlpoLmnpzml6Dms5XovazmjaLkuLpKU09O5YiZ55u05o6ldG9TdHJpbmcKdXRpbC5mdW5jLnBhZ2UgPSBmdW5jdGlvbiAoZikgewogIHZhciBhcmdzID0gQXJyYXkuZnJvbShhcmd1bWVudHMpLnNsaWNlKDEpLm1hcCh1dGlsLnVuZXZhbCkuam9pbignLCAnKTsKICB2YXIganMgPSAndm9pZCgnICsgZiArICcoJyArIGFyZ3MgKyAnKSk7JzsKICB3aW5kb3cuZXZhbChqcyk7IC8vIFlFUyEgZXZhbCEgd2luZG93LmV2YWwhCn07CgovLyDlu7bov5/osIPnlKjlh73mlbAKdXRpbC5mdW5jLmNhbGwgPSBmdW5jdGlvbiAoZikgewogIHNldFRpbWVvdXQuYXBwbHkobnVsbCwgW2YsIDBdLmNvbmNhdChbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpKTsKfTsKCi8vIOWll+S4inRyeS1jYXRjaAp1dGlsLmZ1bmMuY2F0Y2hlZCA9IGZ1bmN0aW9uIChmLCBmYykgewogIHZhciByZXQgPSBmdW5jdGlvbiAoKSB7CiAgICB0cnkgeyByZXR1cm4gZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9CiAgICBjYXRjaCAoZSkgewogICAgICB1dGlsLmVycm9yKCdFeGNlcHRpb24gd2hpbGUgcnVuICVvOiAlb1xuJW8nLCBmLCBlLCBlLnN0YWNrKTsKICAgICAgaWYgKGZjKSBmYyhlKTsKICAgIH0KICB9OwogIHJldC5uYW1lID0gZi5uYW1lOwogIHJldHVybiByZXQ7Cn07CgovLyDluqbph4/lh73mlbDmgKfog70KdXRpbC5mdW5jLnBlcmZvcm1hbmNlID0gKHV0aWwuc2NyaXB0LmlzZGVidWcgJiYgKCdwZXJmb3JtYW5jZScgaW4gd2luZG93KSkgPyAoZnVuY3Rpb24gKGlnbm9yZSkgewogIHZhciBzdGF0dXMgPSB7fSwgcCA9IGZhbHNlOwogIHZhciBzaG93ID0gZnVuY3Rpb24gKCkgewogICAgaWYgKHApIHJldHVybjsgcCA9IHRydWU7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgcCA9IGZhbHNlOwogICAgICBjb25zb2xlLmxvZygncGVyZm9ybWFuY2UgbWVhbnN1cmU6ICVvJywgc3RhdHVzKTsKICAgIH0sIDYwZTMpOwogIH07CiAgdmFyIG1mdW5jID0gZnVuY3Rpb24gKGYpIHsKICAgIHN0YXR1c1tmLm5hbWVdID0geyAndG90YWwnOiAwLCAnZGF0YSc6IFtdIH07CiAgICBjb25zb2xlLmxvZygnJW8gdGltZSBtZWFuc3VyZScsIGYpOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHQgPSBwZXJmb3JtYW5jZS5ub3coKTsKICAgICAgZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB2YXIgZCA9IHBlcmZvcm1hbmNlLm5vdygpIC0gdDsKICAgICAgc3RhdHVzW2YubmFtZV0udG90YWwgKz0gZDsKICAgICAgaWYgKGQgPiBpZ25vcmUpCiAgICAgICAgc3RhdHVzW2YubmFtZV0uZGF0YS5wdXNoKHsgJ2R1cmF0aW9uJzogZCwgJ3RpbWUnOiB0IH0pOwogICAgICBzaG93KCk7CiAgICB9OwogIH0sIG1mdW5jcyA9IHt9LCByZWNvcmRlZCA9IHt9OwogIHJldHVybiBmdW5jdGlvbiAoZikgewogICAgaWYgKCFmLm5hbWUpIHsgY29uc29sZS5sb2coJ2Z1bmN0aW9uIG5hbWUgbmVlZGVkOiAlbycsIGYpOyByZXR1cm4gZjsgfQogICAgaWYgKHJlY29yZGVkW2YubmFtZV0gJiYgcmVjb3JkZWRbZi5uYW1lXSAhPT0gZikgeyBjb25zb2xlLmxvZygnZHVwbGljYXRlIGZ1bmN0aW9uIG5hbWUgKCVzKTogJW8sICVvJywgZi5uYW1lLCByZWNvcmRlZFtmLm5hbWVdLCBmKTsgcmV0dXJuIGY7IH0gZWxzZSByZWNvcmRlZFtmLm5hbWVdID0gZjsKICAgIGlmICghbWZ1bmNzW2YubmFtZV0pIG1mdW5jc1tmLm5hbWVdID0gbWZ1bmMoZik7CiAgICByZXR1cm4gbWZ1bmNzW2YubmFtZV07CiAgfTsKfSgxMCkpIDogdXRpbC5mdW5jLmlkZW50aXR5OwoKLy8g5ZCRIHVuc2FmZVdpbmRvdyDmmrTpnLLmjqXlj6MKdXRpbC5mdW5jLm91dHB1dCA9IGZ1bmN0aW9uIChuYW1lLCBoYW5kbGVyKSB7CiAgdmFyIHB1c2ggPSB1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAoYXJncykgewogICAgYXJncyA9IGFyZ3Mud3JhcHBlZEpTT2JqZWN0IHx8IGFyZ3M7CiAgICB1dGlsLmRlYnVnKCclcy4oJW8pJywgbmFtZSwgYXJncyk7CiAgICBoYW5kbGVyKGFyZ3MpOwogIH0uYmluZCh3aW5kb3cpKTsKICBpZiAodW5zYWZlV2luZG93W25hbWVdKSB7CiAgICB1dGlsLmRlYnVnKCdiZWZvcmUgbG9hZGVkICVzOiAlbycsIG5hbWUsIHVuc2FmZVdpbmRvd1tuYW1lXSk7CiAgICBBcnJheS5mcm9tKHVuc2FmZVdpbmRvd1tuYW1lXSkuZm9yRWFjaChwdXNoKTsKICB9CiAgdHJ5IHsKICAgIHVuc2FmZVdpbmRvd1tuYW1lXSA9IG5ldyBQcm94eSh7ICdwdXNoJzogcHVzaCB9LCB7CiAgICAgICdnZXQnOiBmdW5jdGlvbiAob2JqLCBuYW1lKSB7IGlmIChuYW1lID09PSAncHVzaCcpIHJldHVybiBvYmoucHVzaDsgfSwKICAgICAgJ3NldCc6IGZ1bmN0aW9uICgpIHsgfQogICAgfSk7CiAgfSBjYXRjaCAoZSkgeyB1bnNhZmVXaW5kb3dbbmFtZV0gPSB7ICdwdXNoJzogcHVzaCB9OyB9Cn07CgovLyDlr7nosaHnm7jlhbPlt6XlhbcKdXRpbC5vYmogPSB7fTsKCi8vIOS9v+eUqOeCueWIhumalOeahOWtl+S4sue0ouW8leWvueixoQp1dGlsLm9iai5kb3R0ZWQgPSBmdW5jdGlvbiAobywgcCkgewogIHAgPSBwLnNwbGl0KCcuJyk7CiAgd2hpbGUgKHR5cGVvZiBvICE9PSAndW5kZWZpbmVkJyAmJiBwLmxlbmd0aCkgbyA9IG9bcC5zaGlmdCgpXTsKICByZXR1cm4gbzsKfTsKCi8vIOWtl+espuS4suW3peWFtwp1dGlsLnN0ciA9IHt9OwoKLy8g5aSa6KGM5a2X56ym5LiyCi8vIOS8oOWFpeeahOWHveaVsOWGheWMheWQq+S4gOWkp+auteazqOmHiu+8jOaPkOWPluazqOmHiuWGheWuueS9nOS4uuWtl+espuS4sgovLyDkvKDlhaXnmoTlh73mlbDmnKvlsL7nmoTpmYTliqDlhoXlrrnmmK/kuLrkuobpgb/lhY0gVWdsaWZ5SlMyIOWOi+e8qeaXtumAoOaIkOmUmeivr+iAjOa3u+WKoOeahAp1dGlsLnN0ci5jbXQgPSBmdW5jdGlvbiAoZikgewogIHZhciBzID0gZi50b1N0cmluZygpLnJlcGxhY2UoL15bXHNcU10qXC9cKi4qLywgJycpLnJlcGxhY2UoLy4qXCpcL1tcc1xTXSokLywgJycpLnJlcGxhY2UoL1xyXG58XHJ8XG4vZywgJ1xuJyk7CiAgcmV0dXJuIHM7Cn07CgovLyDku47kuIDkuKrpk77mjqXkuK3miKrlj5bku5bnmoTln5/lkI0KdXRpbC5zdHIuaG9zdCA9IGZ1bmN0aW9uIChsaW5rKSB7CiAgdmFyIHggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgeC5ocmVmID0gbGluazsKICByZXR1cm4geC5ob3N0Owp9OwoKdXRpbC5zdHIuZXNjYXBlID0ge307Ci8vIOWwhuWtl+espuS4sueUqCYjZGTnmoTlvaLlvI/ovazkuYnvvIzku6Xkvr/lsIblhoXlrrnoh7Pkuo4gWE1MIOS4rQp1dGlsLnN0ci5lc2NhcGUueG1sID0gZnVuY3Rpb24gKHMpIHsKICByZXR1cm4gcy5yZXBsYWNlKC9bXHUwMDAwLVx1MDBmZl0vZywgZnVuY3Rpb24gKGMpIHsgcmV0dXJuICcmIycgKyBjLmNoYXJDb2RlQXQoMCk7IH0pOwp9OwovLyDlsIbmraPliJnlvI/nm7jlhbPlrZfnrKbku6XmlpzmnaDovazkuYnvvIzku6Xkvr/liJvlu7rmraPliJnljLnphY0KdXRpbC5zdHIuZXNjYXBlLnJlZ2V4cCA9IGZ1bmN0aW9uIChzKSB7CiAgcmV0dXJuIHMucmVwbGFjZSgvKFsuKis/XiR7fSgpfFxbXF1cL1xcXSkvZywgIlxcJDEiKTsKfTsKCi8vIOWwhiB1dGY4IOe8lueggeeahCBzb2Z0YmFuayDooajmg4XovazmjaLkuLogdW5pY29kZSDvvIwg5L6L5aaCICJlZTgxOTIiIC0+ICLwn5C2Igp1dGlsLnN0ci5jb2RlUG9pbnQgPSBmdW5jdGlvbiAoY29kZVBvaW50KSB7CiAgaWYgKFN0cmluZy5mcm9tQ29kZVBvaW50KSByZXR1cm4gU3RyaW5nLmZyb21Db2RlUG9pbnQoY29kZVBvaW50KTsKICBpZiAoY29kZVBvaW50IDwgMHhGRkZGKSByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlUG9pbnQpOwogIHJldHVybiAoU3RyaW5nLmZyb21DaGFyQ29kZSgoY29kZVBvaW50ID4+IDEwKSArIDB4RDdDMCkgKwogICAgU3RyaW5nLmZyb21DaGFyQ29kZSgoY29kZVBvaW50ICUgMHg0MDApICsgMHhEQzAwKSk7Cn07CnV0aWwuc3RyLmVtb2ppID0gZnVuY3Rpb24gKGNvZGUpIHsKICAvLyDmiJHku6zlsIYgdXRmOCDnvJbnoIHovazmjaLmiJDnoIHkvY3ngrnvvIzlubblh4/ljrsgMHhlMDAwIOWQjuafpeihqAogIHZhciBzb2Z0YmFuayA9IGVtb2ppW2RlY29kZVVSSUNvbXBvbmVudChjb2RlLnJlcGxhY2UoLyguLikvZywgJyUkMScpKS5jaGFyQ29kZUF0KDApIC0gMHhlMDAwXTsKICBpZiAoIXNvZnRiYW5rLmxlbmd0aCkgc29mdGJhbmsgPSBbc29mdGJhbmtdOwogIC8vIOacgOWQjuWwhue7k+aenOi9rOaNouWbnuWtl+espgogIHZhciB1bmljb2RlID0gc29mdGJhbmsubWFwKHV0aWwuc3RyLmNvZGVQb2ludCkuam9pbignJyk7CiAgdXRpbC5kZWJ1ZygnZW1vamkgY29udmVydCAlbyAtPiAlbycsIGNvZGUsIHVuaWNvZGUpOwogIHJldHVybiB1bmljb2RlOwp9OwoKLy8g5Lul5Y+C5pWw5aGr5YWF5a2X56ym5LiyCnV0aWwuc3RyLmZpbGwgPSBmdW5jdGlvbiAoYmFzZSwgZnVuYykgewogIHZhciBhcmdkYXRhcyA9IEFycmF5LmZyb20oYXJndW1lbnRzKS5zbGljZSgxKTsKICB2YXIgZGF0YXMgPSBhcmdkYXRhcy5jb25jYXQoW3RleHQsIGZpbGxdKTsKICAvLyDmib7lkIjpgILnmoTlhoXlrrnloavkuIoKICB2YXIgcGFyc2VyID0gZnVuY3Rpb24gKGRhdGFzKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKGtleSkgewogICAgICB2YXIgcmV0ID0gbnVsbDsKICAgICAgZGF0YXMuc29tZShmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcgJiYga2V5IGluIGRhdGEpIHJldCA9ICcnICsgZGF0YVtrZXldOwogICAgICAgIHJldHVybiByZXQgIT09IG51bGw7CiAgICAgIH0pOwogICAgICByZXR1cm4gcmV0OwogICAgfTsKICB9OwogIHZhciBwYXJzZUZ1bmN0aW9uOwogIGlmICh0eXBlb2YgZnVuYyA9PT0gJ2Z1bmN0aW9uJykgcGFyc2VGdW5jdGlvbiA9IGZ1bmM7CiAgZWxzZSBwYXJzZUZ1bmN0aW9uID0gcGFyc2VyKGRhdGFzKTsKICByZXR1cm4gYmFzZS5yZXBsYWNlKC9ce1x7KFtcW3tdKT8oW2EtekEtWjAtOV9cLV0qKShbXF1cfV0pP1x9XH0vZywgZnVuY3Rpb24gKG8sIGksIHAsIGMpIHsKICAgIHZhciBwcyA9IHAuc3BsaXQoJ3wnKSwgbSA9IHsgJ3snOiAnfScsICdbJzogJ10nLCAnJzogJycgfVtpIHx8ICcnXSA9PT0gKGMgfHwgJycpOwogICAgdmFyIHJldCA9IHBhcnNlRnVuY3Rpb24ocHNbMF0pOwogICAgaWYgKHJldCA9PSBudWxsKSByZXR1cm4gbzsKICAgIGlmIChtICYmIGkgPT09ICd7JykgcmV0ID0gdXRpbC5zdHIuZmlsbChyZXQsIHBhcnNlRnVuY3Rpb24pOwogICAgZWxzZSBpZiAobSAmJiBpID09PSAnWycpIHJldCA9IHV0aWwuc3RyLmVzY2FwZS54bWwocmV0KTsKICAgIGVsc2UgaWYgKCFtKSByZXQgPSAoaSB8fCAnJykgKyByZXQgKyAoYyB8fCAnJyk7CiAgICByZXR1cm4gcmV0OwogIH0pOwp9OwoKLy8g5Lqn55Sf5LiA5Liq5YGH55qE5Zue6LCD5Ye95pWwCnV0aWwuc3RyLmZjYiA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGxhc3QgPSAwOwogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gJ1NUS18nICsgKGxhc3QgPSBNYXRoLm1heChsYXN0ICsgMSwgRGF0ZS5ub3coKSkpOwogIH07Cn0oKSk7CgovLyDku44gSlNPTlAg55qE6L+U5Zue57uT5p6c5Lit5oiq5Y+W5pyJ55So55qE5Lic6KW/CnV0aWwuc3RyLnBhcnNlanNvbnAgPSBmdW5jdGlvbiAocmVzcCkgewogIHJldHVybiBKU09OLnBhcnNlKHJlc3AucmVwbGFjZSgvXnRyeVx7W157XSpcKFx7LywgJ3snKS5yZXBsYWNlKC99XClccyo7P1xzKn1jYXRjaFwoZVwpXHtcfTs/JC8sICd9JykpOwp9OwoKLy8g5qOA5p+l5LiA5Liq5a2X5Liy5piv5ZCm5piv5q2j5YiZ5byP77yM5aaC5p6c5Ye66ZSZ5oql5ZGK55So5oi3Ci8vIOi/lOWbnuS4uuato+WImeW8j+aIliBudWxsCnV0aWwuc3RyLmFkZHJlZ2V4ID0gZnVuY3Rpb24gKHMpIHsKICBzID0gcy50cmltKCk7CiAgaWYgKHMubGVuZ3RoID49IDIgJiYgc1swXSA9PT0gJy8nICYmIHNbcy5sZW5ndGggLSAxXSA9PT0gJy8nKSBzID0gcy5zbGljZSgxLCAtMSk7CiAgdHJ5IHsgUmVnRXhwKHMpLmV4ZWMoJycpOyB9IGNhdGNoIChlKSB7CiAgICB1dGlsLnVpLmFsZXJ0KCd5YXdmLXJlZ2V4cC1iYWQtZm9ybWVkJywgewogICAgICAndGl0bGUnOiB1dGlsLnN0ci5maWxsKCd7e3JlZ2V4cEJhZEZvcm1lZFRpdGxlfX0nKSwKICAgICAgJ3RleHQnOiB1dGlsLnN0ci5maWxsKCd7e3tyZWdleHBCYWRGb3JtZWR9fX0nLCB7ICdyZWdleHAnOiB1dGlsLnN0ci5lc2NhcGUueG1sKHMpIH0pLAogICAgICAnaWNvbic6ICdlcnJvcicKICAgIH0pOwogICAgcyA9IG51bGw7CiAgfQogIGlmIChSZWdFeHAocykgKyAnJyA9PT0gJy8oPzopLycpIHJldHVybiBudWxsOwogIHJldHVybiBzOwp9OwoKLy8g5bCG5a2X56ym5Liy57yW6K+R5oiQ5q2j5YiZ5byPCnV0aWwuc3RyLmNvbXByZWdleCA9IGZ1bmN0aW9uIChyZWdleCkgewogIHRyeSB7IHJldHVybiBSZWdFeHAocmVnZXgpOyB9CiAgY2F0Y2ggKGUpIHsKICAgIHV0aWwuZGVidWcoJ2NvbXBpbGUgcmVnZXhwIGV4Y2VwdGlvbiAlcyA6ICVvJywgcmVnZXgsIGUpOwogICAgcmV0dXJuIG51bGw7CiAgfQp9OwoKLy8g5bCGJui/nuaOpeeahOmUruWAvOWvueWPmOS4uuWvueixoQp1dGlsLnN0ci5wYXJzZXF1ZXJ5ID0gZnVuY3Rpb24gKHN0cikgewogIHZhciBvID0ge307CiAgaWYgKHN0ciA9PT0gJycpIHJldHVybiBvOwogIHN0ci5zcGxpdCgnJicpLm1hcChmdW5jdGlvbiAoa3YpIHsKICAgIGlmIChrdiA9PT0gJycpIHJldHVybjsKICAgIGlmIChrdi5pbmRleE9mKCc9JykgPT09IC0xKSBvW2t2XSA9IG51bGw7CiAgICBlbHNlIHsKICAgICAga3YgPSBrdi5zcGxpdCgnPScsIDIpOwogICAgICBvW2RlY29kZVVSSUNvbXBvbmVudChrdlswXSldID0gZGVjb2RlVVJJQ29tcG9uZW50KGt2WzFdKTsKICAgIH0KICB9KTsKICByZXR1cm4gbzsKfTsKLy8g5bCG5a+56LGh5o2i5oiQICYg6L+e5o6l55qE6ZSu5YC8CnV0aWwuc3RyLnRvcXVlcnkgPSBmdW5jdGlvbiAobykgewogIHJldHVybiBPYmplY3Qua2V5cyhvKS5tYXAoZnVuY3Rpb24gKGspIHsKICAgIGlmIChvW2tdID09IG51bGwgfHwgb1trXSA9PT0gdHJ1ZSkgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChrKTsKICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoaykgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQob1trXSk7CiAgfSkuam9pbignJicpOwp9OwoKLy8g5bCG6aKc6Imy5ZKM6YCP5piO5bqm6L2s5o2i5Li65LiA5Liq6KGo56S66aKc6Imy55qE5a2X56ym5LiyCnV0aWwuc3RyLnJnYmEgPSBmdW5jdGlvbiAoY29sb3IsIHRyYW5zcGFyZW5jeSkgewogIHJldHVybiAncmdiYSgnICsgY29sb3Iuc2xpY2UoMSkKICAgIC5zcGxpdCgvKC4uKS8pLmZpbHRlcihmdW5jdGlvbiAoeCkgeyByZXR1cm4geDsgfSkKICAgIC5tYXAoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHBhcnNlSW50KHgsIDE2KTsgfSkuam9pbignLCcpICsKICAgICcsJyArICgxMDAgLSB0cmFuc3BhcmVuY3kpIC8gMTAwICsgJyknOwp9OwoKLy8g5a2X56ym5LiyIGJhc2U2NCDnvJbnoIEKdXRpbC5zdHIuYmFzZTY0ID0gZnVuY3Rpb24gKHN0cikgewogIHJldHVybiBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChzdHIpKSk7Cn07CgovLyDor7vmlbAKdXRpbC5zdHIucGFyc2VpbnQgPSBmdW5jdGlvbiAoc3RyKSB7CiAgcmV0dXJuICtzdHIucmVwbGFjZSgn5LiHJywgJ2U0JykucmVwbGFjZSgn5Lq/JywgJ2U4Jyk7Cn07CgovLyDmiZPljIXlt6XlhbcKdXRpbC50YXJiYWxsID0ge307CgovLyDlsIbkuIDkuKrmlofku7bovazkuLogdGFyYmFsbAp1dGlsLnRhcmJhbGwuZmlsZSA9IGZ1bmN0aW9uIChmaWxlSW5mbywgYnVmZmVyKSB7CiAgdmFyIGZpbGVuYW1lID0gZmlsZUluZm8uZmlsZW5hbWUsIGNvbnRlbnQgPSBmaWxlSW5mby5jb250ZW50LCBtdGltZSA9IGZpbGVJbmZvLm10aW1lOwogIHZhciBjaGVja3N1bSA9IHsgdmFsdWU6ICcgJy5yZXBlYXQoOCksIHNpemU6IDggfTsKICB2YXIgZmllbGRzID0gWwogICAgLy8g5paH5Lu25ZCN6ZmQ5Yi25LiN6LaF6L+HIDEwMCDkuKrlrZfnrKYKICAgIHsgdmFsdWU6IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChmaWxlbmFtZSkpLCBzaXplOiAxMDAgfSwgLy8gZmlsZW5hbWUKICAgIHsgdmFsdWU6ICcwMDAwNjQ0Jywgc2l6ZTogOCB9LCAvLyBtb2RlCiAgICB7IHZhbHVlOiAnMDAwMDAwMCcsIHNpemU6IDggfSwgLy8gdWlkCiAgICB7IHZhbHVlOiAnMDAwMDAwMCcsIHNpemU6IDggfSwgLy8gZ2lkCiAgICAvLyDmlofku7blpKflsI/kuI3otoXov4cgOEdpQgogICAgeyB2YWx1ZTogY29udGVudC5ieXRlTGVuZ3RoLnRvU3RyaW5nKDgpLnBhZFN0YXJ0KDExLCAnMCcpLCBzaXplOiAxMiB9LCAvLyBzaXplCiAgICAvLyDkv67mlLnml7bpl7Tnm7TmjqXnlKjlvZPliY3ml7bpl7QKICAgIHsgdmFsdWU6IE1hdGguZmxvb3IoK210aW1lIC8gMTAwMCkudG9TdHJpbmcoOCkucGFkU3RhcnQoMTEsICcwJyksIHNpemU6IDEyIH0sIC8vIG10aW1lCiAgICBjaGVja3N1bSwgLy8gY2hrc3VtCiAgICB7IHZhbHVlOiAnMCcsIHNpemU6IDEgfSwgLy8gdHlwZQogICAgeyB2YWx1ZTogJycsIHNpemU6IDEwMCB9LCAvLyBsaW5lIGZpbGVuYW1lCiAgICB7IHZhbHVlOiAndXN0YXInLCBzaXplOiA2IH0sIC8vIHVzdGFyCiAgICB7IHZhbHVlOiAnMDAnLCBzaXplOiAyIH0sIC8vIHVzdGFyIHZlcnNpb24KICBdOwogIGJ1ZmZlci5maWxsKDApOwogIHZhciB3cml0ZUZpZWxkID0gZnVuY3Rpb24gKGZpZWxkKSB7CiAgICB2YXIgZGF0YSA9IEFycmF5LmZyb20oZmllbGQudmFsdWUpLm1hcChmdW5jdGlvbiAoY2hhcikgeyByZXR1cm4gY2hhci5jaGFyQ29kZUF0KCk7IH0pOwogICAgYnVmZmVyLnNldChkYXRhLCBmaWVsZC5vZmZzZXQpOwogIH07CiAgZmllbGRzLnJlZHVjZShmdW5jdGlvbiAob2Zmc2V0LCBmaWVsZCkgeyBmaWVsZC5vZmZzZXQgPSBvZmZzZXQ7IHJldHVybiBvZmZzZXQgKyBmaWVsZC5zaXplOyB9LCAwKTsKICBmaWVsZHMuZm9yRWFjaCh3cml0ZUZpZWxkKTsKICBjaGVja3N1bS52YWx1ZSA9IEFycmF5LmZyb20oYnVmZmVyLnNsaWNlKDAsIDUxMikpLnJlZHVjZShmdW5jdGlvbiAoeCwgeSkgeyByZXR1cm4geCArIHk7IH0pLnRvU3RyaW5nKDgpLnBhZFN0YXJ0KDYsICcwJykgKyAnXDAnOwogIHdyaXRlRmllbGQoY2hlY2tzdW0pOwogIGJ1ZmZlci5zZXQobmV3IFVpbnQ4QXJyYXkoY29udGVudCksIDUxMik7CiAgcmV0dXJuIGJ1ZmZlcjsKfTsKCi8vIOWwhuS4gOe7hOaWh+S7tuaJk+WMhQp1dGlsLnRhcmJhbGwuZmlsZXMgPSBmdW5jdGlvbiAoZmlsZXMpIHsKICB2YXIgdGFyU2l6ZSA9IGZpbGVzLnJlZHVjZShmdW5jdGlvbiAob2Zmc2V0LCBmaWxlKSB7CiAgICB2YXIgc2l6ZSA9IGZpbGUuY29udGVudC5ieXRlTGVuZ3RoOwogICAgZmlsZS50YXJTaXplID0gKHNpemUgPj4gOSA8PCA5KSArIChzaXplICUgNTEyID8gNTEyIDogMCkgKyA1MTI7CiAgICBmaWxlLm9mZnNldCA9IG9mZnNldDsKICAgIHJldHVybiBvZmZzZXQgKyBmaWxlLnRhclNpemU7CiAgfSwgMCkgKyAxMDI0OwogIHZhciBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIodGFyU2l6ZSk7CiAgZmlsZXMuZm9yRWFjaChmdW5jdGlvbiAoZmlsZSkgewogICAgdXRpbC50YXJiYWxsLmZpbGUoZmlsZSwgbmV3IFVpbnQ4QXJyYXkoYnVmZmVyLCBmaWxlLm9mZnNldCwgZmlsZS50YXJTaXplKSk7CiAgfSk7CiAgcmV0dXJuIGJ1ZmZlcjsKfTsKCi8vIOaWh+aho+ebuOWFs+W3peWFtwp1dGlsLmRvbSA9IHt9OwoKLy8g5b+r6YCf5Yib5bu65LiA5q615paH5qGj5YWD57SgCnV0aWwuZG9tLmNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZSh0YWcsIGlubmVyKSB7CiAgaWYgKHRhZyAmJiB0eXBlb2YgaW5uZXIgPT09ICd1bmRlZmluZWQnKQogICAgcmV0dXJuIGNyZWF0ZSgnZGl2JywgdGFnKS5maXJzdENoaWxkOwogIHZhciBkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpOwogIGQuaW5uZXJIVE1MID0gaW5uZXI7CiAgcmV0dXJuIGQ7Cn07CgovLyDmn5DkuKrlhYPntKDmmK/lkKbljLnphY3nibnlrprpgInmi6nlmagKdXRpbC5kb20ubWF0Y2hlcyA9IChmdW5jdGlvbiAoKSB7CiAgLy8g5LiN6IO955u05o6l5omp5bGVIEVsZW1lbnQucHJvdG90eXBlCiAgLy8gaHR0cHM6Ly9idWd6aWwubGEvNzg3MDcwIChtb3ppbGxhMzUpCiAgdmFyIGVwID0gRWxlbWVudC5wcm90b3R5cGUsIG1hdGNoZXMgPSBlcC5tYXRjaGVzIHx8CiAgICBlcC5tb3pNYXRjaGVzU2VsZWN0b3IgfHwgZXAub01hdGNoZXNTZWxlY3RvciB8fAogICAgZXAud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8IGVwLm1zTWF0Y2hlc1NlbGVjdG9yOwogIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCwgc2VsZWN0b3IpIHsKICAgIHRyeSB7IHJldHVybiBtYXRjaGVzLmNhbGwoZWxlbWVudCwgW3NlbGVjdG9yXSk7IH0KICAgIGNhdGNoIChlKSB7IHJldHVybiBudWxsOyB9CiAgfTsKfSgpKTsKCi8vIOaJvuWIsOespuWQiOadoeS7tueahOeItuiKgueCuQp1dGlsLmRvbS5jbG9zZXN0ID0gZnVuY3Rpb24gKG5vZGUsIHNlbGVjdG9yKSB7CiAgaWYgKG5vZGUuY2xvc2VzdCkgcmV0dXJuIG5vZGUuY2xvc2VzdChzZWxlY3Rvcik7CiAgd2hpbGUgKG5vZGUgJiYgIXV0aWwuZG9tLm1hdGNoZXMobm9kZSwgc2VsZWN0b3IpKSBub2RlID0gbm9kZS5wYXJlbnROb2RlOwogIHJldHVybiBub2RlIHx8IG51bGw7Cn07CgovLyDlkIzkuIDkuKrlhYPntKDlpJrkuKrovpPlhaXmoYblkIzmraUKLy8g5bCG6L6T5YWl5qGG5ZKM5p+Q5Liq6K6+572u6aG557uR5a6aCnV0aWwuZG9tLmJpbmQgPSAoZnVuY3Rpb24gKCkgewogIHZhciBiaW5kID0gZnVuY3Rpb24gKHBhcmFtLCBpbnB1dCwgb2JqLCBzdGFuZGxpemUpIHsKICAgIHZhciBmaW5lID0gc3RhbmRsaXplIHx8IHV0aWwuZnVuYy5pZGVudGl0eTsKICAgIHZhciBvbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHZhbCA9IGlucHV0W3BhcmFtXSwgdmFsaWQ7CiAgICAgIHZhbGlkID0gZmluZSh2YWwpOwogICAgICBpZiAoU3RyaW5nKHZhbGlkKSAhPT0gdmFsKSBpbnB1dFtwYXJhbV0gPSB2YWxpZDsKICAgICAgb2JqLnB1dGNvbmYodmFsaWQpOwogICAgfTsKICAgIGlmIChvYmoua2V5KSB1dGlsLmNvbmZpZy5vbnB1dChvYmoua2V5LCBmdW5jdGlvbiAodmFsdWUpIHsgaW5wdXRbcGFyYW1dID0gdmFsdWU7IH0pOwogICAgaW5wdXRbcGFyYW1dID0gZmluZShvYmouZ2V0Y29uZigpKTsKICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIG9uY2hhbmdlKTsKICAgIHJldHVybiBvbmNoYW5nZTsKICB9OwogIHJldHVybiB7CiAgICAndGV4dCc6IGJpbmQuYmluZChudWxsLCAndmFsdWUnKSwKICAgICdjaGVja2JveCc6IGJpbmQuYmluZChudWxsLCAnY2hlY2tlZCcpLAogICAgJ3NlbGVjdCc6IGJpbmQuYmluZChudWxsLCAndmFsdWUnKSwKICB9Owp9KCkpOwoKCnV0aWwuZm9udCA9IHt9OwoKLy8g6K6h566X5paH5a2X5a695bqmCnV0aWwuZm9udC53aWR0aCA9IChmdW5jdGlvbiAoKSB7CiAgLy8g5L2/55So5b6u5Y2a55qE6buY6K6k5a2X5Y+35L2c5Li65bqm6YeP5YC8CiAgdmFyIGZvbnRzaXplID0gMTQ7CiAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpOwogIHZhciBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7CgogIC8vIOS9v+eUqENhbnZhc+iuoeeulwogIC8vIGh0dHBzOi8vYnVnemlsLmxhLzU2MTM2MQogIHJldHVybiBmdW5jdGlvbiAoZm9udG5hbWUsIHRleHQpIHsKICAgIGNvbnRleHQuZm9udCA9ICdib2xkICcgKyBmb250c2l6ZSArICdweCAnICsgZm9udG5hbWU7CiAgICByZXR1cm4gY29udGV4dC5tZWFzdXJlVGV4dCh0ZXh0KS53aWR0aDsKICB9Owp9KCkpOwoKLy8g6YCJ5oup5ZCI6YCC55qE5a2X5L2TCnV0aWwuZm9udC52YWxpZCA9IChmdW5jdGlvbiAoKSB7CiAgLy8g5qOA5p+l6L+Z5Liq5a2X5Liy55qE5a695bqm5p2l5qOA5p+l5a2X5L2T5piv5ZCm5a2Y5ZyoCiAgdmFyIHNhbXBsZVRleHQgPQogICAgJ1RoZSBxdWljayBicm93biBmb3gganVtcHMgb3ZlciB0aGUgbGF6eSBkb2c3NTMxOTAyNDY4LC4hLeWkqeWcsOeOhOm7hOWJh+i/kemBk+efo++8jOOAgu+8mu+8gSc7CiAgLy8g5ZKM6L+Z5Lqb5a2X5L2T6L+b6KGM5q+U6L6DCiAgdmFyIHNhbXBsZUZvbnQgPSBbCiAgICAnbW9ub3NwYWNlJywgJ3NhbnMtc2VyaWYnLCAnc2FucycsICdTeW1ib2wnLCAnQXJpYWwnLCAnRml4ZWQnLAogICAgJ1RpbWVzJywgJ1RpbWVzIE5ldyBSb21hbicsICflrovkvZMnLCAn6buR5L2TJywgJ01pY3Jvc29mdCBZYUhlaScKICBdOwogIC8vIOWmguaenOiiq+ajgOafpeeahOWtl+S9k+WSjOWfuuWHhuWtl+S9k+WPr+S7pea4suafk+WHuuS4jeWQjOeahOWuveW6pgogIC8vIOmCo+S5iOivtOaYjuiiq+ajgOafpeeahOWtl+S9k+aAu+aYr+WtmOWcqOeahAogIHZhciBkaWZmRm9udCA9IGZ1bmN0aW9uIChiYXNlLCB0ZXN0KSB7CiAgICB2YXIgYmFzZVNpemUgPSB1dGlsLmZvbnQud2lkdGgoYmFzZSwgc2FtcGxlVGV4dCwgNzIpOwogICAgdmFyIHRlc3RTaXplID0gdXRpbC5mb250LndpZHRoKHRlc3QgKyAnLCcgKyBiYXNlLCBzYW1wbGVUZXh0LCA3Mik7CiAgICByZXR1cm4gYmFzZVNpemUgIT09IHRlc3RTaXplOwogIH07CiAgcmV0dXJuIGZ1bmN0aW9uICh0ZXN0KSB7CiAgICB2YXIgdmFsaWQgPSBzYW1wbGVGb250LnNvbWUoZnVuY3Rpb24gKGJhc2UpIHsKICAgICAgcmV0dXJuIGRpZmZGb250KGJhc2UsIHRlc3QpOwogICAgfSk7CiAgICByZXR1cm4gdmFsaWQ7CiAgfTsKfSgpKTsKCi8vIOWvuee9kemhteeahOWIpOaWrQp1dGlsLnBhZ2UgPSB7fTsKCi8vIOajgOafpeaYr+WQpuimgeWcqOacrOmhteS4iui/kOihjAp1dGlsLnBhZ2UudmFsaWQgPSBmdW5jdGlvbiAoKSB7CiAgLy8g5b+F6aG755qE5Y+C5pWwCiAgaWYgKCF1bnNhZmVXaW5kb3cuJENPTkZJRykgcmV0dXJuIGZhbHNlOwogIGlmICghdW5zYWZlV2luZG93LiRDT05GSUcudWlkKSByZXR1cm4gZmFsc2U7CiAgaWYgKCF1bnNhZmVXaW5kb3cuJENPTkZJRy5uaWNrKSByZXR1cm4gZmFsc2U7CiAgLy8g5aaC5p6c5piv5pCc57Si6aG177yM6ICM5LiU5pyq5LqO5pCc57Si6aG16Z2i5ZCv55So77yM5YiZ5LiN5bel5L2cCiAgaWYgKHV0aWwucGFnZS5zZWFyY2ggJiYgIXV0aWwucGFnZS5zZWFyY2hlbmFibGUpIHJldHVybiBmYWxzZTsKICAvLyDlpoLmnpzmnInnmbvlvZXmjInpkq7vvIzliJnor7TmmI7msqHmnInnmbvlvZXvvIzmraTml7bkuI3lt6XkvZwKICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmduX2xvZ2luJykpIHJldHVybiBmYWxzZTsKICB1dGlsLmRlYnVnKCd5YXdmIHN0YXJ0ZWQgaW4gcGFnZTogJW8gKCVzIHRvcCknLCBsb2NhdGlvbiwgc2VsZiA9PT0gdG9wID8gJ2lzJyA6ICdpcyBub3QnKTsKICByZXR1cm4gdHJ1ZTsKfTsKCi8vIOW9k+WJjeaYr+WQpuaYr+mmlumhtQp1dGlsLnBhZ2UuaG9tZSA9IGZ1bmN0aW9uICgpIHsKICB2YXIgaXNob21lID0gbG9jYXRpb24ucGF0aG5hbWUuc2xpY2UoLTUpID09PSAnL2hvbWUnOwogIHZhciBnaWQgPSB1dGlsLnN0ci5wYXJzZXF1ZXJ5KGxvY2F0aW9uLnNlYXJjaC5zbGljZSgxKSkuZ2lkOwogIHJldHVybiBpc2hvbWUgJiYgKCFnaWQgfHwgZ2lkIDw9IDApOwp9OwoKLy8g5b2T5YmN5piv5p+l55yL5YiG57uE55qE6aG16Z2i5ZCXCnV0aWwucGFnZS5ncm91cCA9IGZ1bmN0aW9uICgpIHsKICB2YXIgaXNncm91cCA9IGxvY2F0aW9uLnBhdGhuYW1lLnNsaWNlKC05KSA9PT0gJy9teWdyb3Vwcyc7CiAgdmFyIGlzaG9tZSA9IGxvY2F0aW9uLnBhdGhuYW1lLnNsaWNlKC01KSA9PT0gJy9ob21lJzsKICB2YXIgZ2lkID0gdXRpbC5zdHIucGFyc2VxdWVyeShsb2NhdGlvbi5zZWFyY2guc2xpY2UoMSkpLmdpZDsKICByZXR1cm4gaXNncm91cCB8fCAoaXNob21lICYmIGdpZCA+IDApOwp9OwoKLy8g5b2T5YmN5piv5pCc57Si6aG16Z2i5ZCXCnV0aWwucGFnZS5zZWFyY2ggPSAoZnVuY3Rpb24gKCkgewogIHJldHVybiBsb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ3Mud2VpYm8uY29tJzsKfSgpKTsKLy8g5Lul5Y+K5Zyo5pCc57Si5Lmf5ZCv55So5ZCXCnV0aWwucGFnZS5zZWFyY2hlbmFibGUgPSAoZnVuY3Rpb24gKCkgewogIHJldHVybiAhIUdNX2dldFZhbHVlKCdzZWFyY2hfZW5hYmxlJywgZmFsc2UpOwp9KCkpOwoKLy8g5b2T5YmN5piv5Y+R546w6aG16Z2i5ZCXCnV0aWwucGFnZS5kaXNjb3ZlcnkgPSAoZnVuY3Rpb24gKCkgewogIHJldHVybiBsb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ2Qud2VpYm8uY29tJzsKfSgpKTsKCi8vIOajgOafpeW9k+WJjeaYr+WQpuaYr+eUqOaIt+S4quS6uuS4u+mhtQp1dGlsLnBhZ2UudXNlciA9IGZ1bmN0aW9uICgpIHsKICBpZiAoIWRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmNvbnRhaW5zKCdGUkFNRV9wYWdlJykpIHJldHVybiBmYWxzZTsKICBpZiAoIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5QQ0RfaGVhZGVyIC51c2VybmFtZScpKSByZXR1cm4gZmFsc2U7CiAgcmV0dXJuIHRydWU7Cn07CgovLyDmo4Dmn6XmmK/kuI3mmK/miJHnmoTkuKrkurrkuLvpobUKdXRpbC5wYWdlLm15aG9tZSA9IGZ1bmN0aW9uICgpIHsKICBpZiAoIXV0aWwucGFnZS51c2VyKCkpIHJldHVybiBmYWxzZTsKICByZXR1cm4gISF1dGlsLmluZm8udWlkICYmIHV0aWwuaW5mby5vaWQoKSA9PT0gdXRpbC5pbmZvLnVpZDsKfTsKCi8vIOajgOafpeaYr+S4jeaYr+i2heivnemhtemdogp1dGlsLnBhZ2UudG9waWMgPSBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIGxvY2F0aW9uLmhyZWYuaW5kZXhPZignaHR0cHM6Ly93ZWliby5jb20vcC8xMDA4MDgnKSA9PT0gMDsKfTsKCi8vIOWIneWni+WMlgp1dGlsLmluaXQgPSAoZnVuY3Rpb24gKCkgewogIHZhciBjYWxsYmFja3MgPSBbXSwgaW5kZXggPSAwOwogIC8vIOWujOaIkOWKoOi9veaXtuiwg+eUqAogIHZhciBkY2wgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdmFsaWQgPSB1dGlsLnBhZ2UudmFsaWQoKTsKICAgIGNhbGxiYWNrcy5zb3J0KGZ1bmN0aW9uICh4LCB5KSB7CiAgICAgIHJldHVybiB5WzBdIC0geFswXSB8fCB5WzFdIC0geFsxXTsKICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKGkpIHsKICAgICAgaWYgKHZhbGlkIHx8IGlbM10pIHV0aWwuZnVuYy5jYXRjaGVkKGlbMl0pKHZhbGlkKTsKICAgIH0pOwogIH07CiAgaWYgKGRvY3VtZW50LmJvZHkpIHNldFRpbWVvdXQoZGNsLCAwKTsKICBlbHNlIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBkY2wpOwogIC8vIOa3u+WKoOWbnuiwgwogIHZhciBhZGQgPSBmdW5jdGlvbiAoZnVuYywgcHJpb3JpdHksIGFsd2F5cykgewogICAgY2FsbGJhY2tzLnB1c2goW3ByaW9yaXR5LCArK2luZGV4LCBmdW5jLCBhbHdheXNdKTsKICAgIHJldHVybiBmdW5jOwogIH07CiAgcmV0dXJuIGFkZDsKfSgpKTsKCi8vIOimhuebliBTVEsg55u45YWz5Ye95pWwCi8vIOeUseS6jiBTVEsg55qE5a6e546w5py65Yi25ZKM6ISa5pys5rKZ566x562J5Zug57Sg6ZmQ5Yi2Ci8vICAgMS4g6L+Z5Liq5Ye95pWw6ZyA6KaB5ZyoIFNUSyDms6jlhoznm7jlhbPlh73mlbDliY3osIPnlKgKLy8gICAyLiDlsIHoo4Xlh73mlbDkvJrpgJrov4fovazmjaLkuLrlrZfnrKbkuLLlho1ldmFs55qE5b2i5byP6KKr5pq06Zyy5Yiw6aG16Z2i6ISa5pys5LiK5LiL5paH5LitCi8vIOWboOatpO+8jOi/meS4quWHveaVsOW/hemhu+WcqOWIneWni+WMluWJjeiwg+eUqO+8jOiAjOS4lOWHveaVsOWGheS4jeiDveW8leeUqOWklumDqOeahOWPmOmHjwp1dGlsLmZ1bmMud3JhcHN0ayA9IChmdW5jdGlvbiAoKSB7CiAgdXRpbC5mdW5jLnBhZ2UoZnVuY3Rpb24gKGlzRGVidWcpIHsKICAgIGlmICgnU1RLJyBpbiB3aW5kb3cpIHsKICAgICAgaWYgKGlzRGVidWcpIGNvbnNvbGUuZXJyb3IoJ1lBV0YgZmFpbGVkIHRvIHdyYXAgU1RLLiBTVEsgYWxyZWFkeSBkZWZpbmVkLiBTb21lIGZ1bmN0aW9ucyBtYXkgbm90IHdvcmsuJyk7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB2YXIgd3JhcFJlZ2lzdGVyID0gZnVuY3Rpb24gKHJlZ2lzdGVyKSB7CiAgICAgIHJldHVybiBmdW5jdGlvbiAobmFtZSwgcmVnaXN0ZXJGdW5jdGlvbiwgc2NvcGUpIHsKICAgICAgICB2YXIgb3JpZ2luYWwgPSByZWdpc3RlckZ1bmN0aW9uOwogICAgICAgIGlmIChuYW1lID09PSAnbmFtZXNwYWNlJykgewogICAgICAgICAgcmVnaXN0ZXJGdW5jdGlvbiA9IHdyYXBOYW1lc3BhY2UocmVnaXN0ZXJGdW5jdGlvbik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHdyYXBwZXJzLmZvckVhY2goZnVuY3Rpb24gKG8pIHsKICAgICAgICAgICAgaWYgKG5hbWUgPT09IG8ubmFtZSkgcmVnaXN0ZXJGdW5jdGlvbiA9IG8ud3JhcHBlcihyZWdpc3RlckZ1bmN0aW9uKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICBpZiAoaXNEZWJ1ZyAmJiByZWdpc3RlckZ1bmN0aW9uICE9PSBvcmlnaW5hbCkgewogICAgICAgICAgY29uc29sZS5sb2coJ3JlZ2lzdGVyOiAlbyA9ICVvICh0aGlzOiAlbyknLCBuYW1lLCByZWdpc3RlckZ1bmN0aW9uLCB0aGlzKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJlZ2lzdGVyLmNhbGwodGhpcywgbmFtZSwgcmVnaXN0ZXJGdW5jdGlvbiwgc2NvcGUpOwogICAgICB9OwogICAgfTsKCiAgICB2YXIgd3JhcE5hbWVzcGFjZSA9IGZ1bmN0aW9uIChuYW1lc3BhY2VGdW5jdGlvbkdldHRlcikgewogICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBuYW1lc3BhY2VGdW5jdGlvbiA9IG5hbWVzcGFjZUZ1bmN0aW9uR2V0dGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgdmFyIGZha2VOYW1lc3BhY2VLZXkgPSAneWF3Zl9wcm90b19nZXR0ZXInOwogICAgICAgIHZhciBuYW1lc3BhY2VJbnN0YW5jZSA9IG5hbWVzcGFjZUZ1bmN0aW9uKGZha2VOYW1lc3BhY2VLZXkpOwogICAgICAgIHZhciBuYW1lc3BhY2VQcm90b3R5cGUgPSBuYW1lc3BhY2VJbnN0YW5jZS5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7CiAgICAgICAgbmFtZXNwYWNlUHJvdG90eXBlLnJlZ2lzdGVyID0gd3JhcFJlZ2lzdGVyKG5hbWVzcGFjZVByb3RvdHlwZS5yZWdpc3Rlcik7CiAgICAgICAgZGVsZXRlIG5hbWVzcGFjZVByb3RvdHlwZS5uYW1lc3BhY2VbZmFrZU5hbWVzcGFjZUtleV07CiAgICAgICAgcmV0dXJuIG5hbWVzcGFjZUZ1bmN0aW9uOwogICAgICB9OwogICAgfTsKCiAgICB2YXIgc3RrID0gbnVsbCwgd3JhcHBlcnMgPSBbXTsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdTVEsnLCB7CiAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3RrOyB9LAogICAgICBzZXQ6IGZ1bmN0aW9uICh0cnVlU3RrKSB7CiAgICAgICAgdHJ1ZVN0ay5yZWdpc3RlciA9IHdyYXBSZWdpc3Rlcih0cnVlU3RrLnJlZ2lzdGVyKTsKICAgICAgICBzdGsgPSB0cnVlU3RrOwogICAgICB9LAogICAgICBlbnVtZXJhYmxlOiB0cnVlCiAgICB9KTsKCiAgICB3aW5kb3cuJFlBV0YkID0gd2luZG93LiRZQVdGJCB8fCB7fTsKICAgIHdpbmRvdy4kWUFXRiQuc3RrV3JhcHBlciA9IGZ1bmN0aW9uIChuYW1lLCByZWdGdW5jV3JhcHBlcikgewogICAgICB3cmFwcGVycy5wdXNoKHsgbmFtZTogbmFtZSwgd3JhcHBlcjogcmVnRnVuY1dyYXBwZXIgfSk7CiAgICB9OwoKICB9LCB1dGlsLnNjcmlwdC5pc2RlYnVnKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChuYW1lLCB3cmFwcGVyKSB7CiAgICB1dGlsLmZ1bmMucGFnZShmdW5jdGlvbiAobmFtZSwgd3JhcHBlcikgewogICAgICBpZiAoJFlBV0YkLnN0a1dyYXBwZXIpIHsKICAgICAgICAkWUFXRiQuc3RrV3JhcHBlcihuYW1lLCB3cmFwcGVyKTsKICAgICAgfQogICAgfSwgbmFtZSwgd3JhcHBlcik7CiAgfTsKCn0oKSk7CgoKLy8g5a+56aG16Z2i5Lit5re75Yqg5YWD57Sg5pe255qE55uR5ZCsCnZhciBvYnNlcnZlciA9IHt9OwoKLy8g5pyJ5paw57uT54K55pe25YiG5Y+R5LqL5Lu255uR5ZCsCm9ic2VydmVyLmRvbSA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGNhbGxiYWNrcyA9IFtdOwogIHZhciBhZGQgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHsKICAgIGNhbGxiYWNrcy5wdXNoKHsKICAgICAgJ29yaSc6IGNhbGxiYWNrLAogICAgICAnd3JhcCc6IHV0aWwuZnVuYy5jYXRjaGVkKHV0aWwuZnVuYy5wZXJmb3JtYW5jZShjYWxsYmFjaykpCiAgICB9KTsKICAgIHJldHVybiBjYWxsYmFjazsKICB9OwogIHZhciByZW1vdmUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHsKICAgIHZhciBmb3VuZCA9IGZhbHNlOwogICAgY2FsbGJhY2tzID0gY2FsbGJhY2tzLmZpbHRlcihmdW5jdGlvbiAoeCkgewogICAgICB2YXIgc2FtZSA9IHgub3JpID09PSBjYWxsYmFjazsKICAgICAgaWYgKHNhbWUpIGZvdW5kID0gdHJ1ZTsKICAgICAgcmV0dXJuICFzYW1lOwogICAgfSk7CiAgICByZXR1cm4gZm91bmQ7CiAgfTsKICB2YXIgYWN0aXZlZCA9IG51bGw7CiAgdmFyIGFjdCA9IGZ1bmN0aW9uICgpIHsKICAgIGNhbGxiYWNrcy5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7IGMud3JhcCgpOyB9KTsKICB9OwogIHZhciBhY3RpdmUgPSB1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAobXV0YXRpb24pIHsKICAgIGlmIChtdXRhdGlvbiAmJiBBcnJheS5mcm9tKG11dGF0aW9uKS5ldmVyeShmdW5jdGlvbiBpc0RhdGUoeCkgewogICAgICB2YXIgdGFyZ2V0ID0geC50YXJnZXQ7CiAgICAgIHJldHVybiB0YXJnZXQuaGFzQXR0cmlidXRlKCdkYXRlJykgfHwgdGFyZ2V0Lmhhc0F0dHJpYnV0ZSgneWF3Zi1kYXRlJyk7CiAgICB9KSkgcmV0dXJuOwoKICAgIGlmIChhY3RpdmVkID09PSBmYWxzZSkgYWN0aXZlZCA9IHRydWU7CiAgICBpZiAoYWN0aXZlZCAhPT0gbnVsbCkgcmV0dXJuOwogICAgYWN0KCk7IGFjdGl2ZWQgPSBmYWxzZTsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICBpZiAoYWN0aXZlZCA9PT0gdHJ1ZSkgYWN0KCk7IGFjdGl2ZWQgPSBudWxsOwogICAgfSwgMTAwKTsKICB9KTsKICB2YXIgb2JzZXJ2ZSA9IGZ1bmN0aW9uICgpIHsKICAgIGFjdGl2ZSgpOyAvLyDliJ3lp4vljJYKICAgIChuZXcgTXV0YXRpb25PYnNlcnZlcihhY3RpdmUpKQogICAgICAub2JzZXJ2ZShkb2N1bWVudC5ib2R5LCB7ICdjaGlsZExpc3QnOiB0cnVlLCAnc3VidHJlZSc6IHRydWUgfSk7CiAgfTsKICBpZiAoISgnTXV0YXRpb25PYnNlcnZlcicgaW4gd2luZG93KSkgb2JzZXJ2ZSA9IGZ1bmN0aW9uICgpIHsKICAgIC8vIGZvciBsYWdlbmN5IGJyb3dzZXJzCiAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoIkRPTU5vZGVJbnNlcnRlZCIsIGZ1bmN0aW9uIChlKSB7IGFjdGl2ZSgpOyB9LCBmYWxzZSk7CiAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoIkRPTU5vZGVSZW1vdmVkIiwgZnVuY3Rpb24gKGUpIHsgYWN0aXZlKCk7IH0sIGZhbHNlKTsKICB9OwogIHV0aWwuaW5pdChmdW5jdGlvbiAoKSB7CiAgICBvYnNlcnZlKCk7CiAgfSwgdXRpbC5wcmlvcml0eS5MQVNUICsgdXRpbC5wcmlvcml0eS5BRlRFUiAqIDIpOwogIHJldHVybiB7CiAgICAnYWRkJzogYWRkLAogICAgJ3JlbW92ZSc6IHJlbW92ZSwKICB9Owp9KCkpOwoKLy8g5a+55q+P5p2h5b6u5Y2a5bqU55So6L+H5ruk5ZKM5YW25LuW55u45YWz5Zue6LCDCm9ic2VydmVyLndlaWJvID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgYmVmb3JlcyA9IFtdLCBhZnRlcnMgPSBbXSwgZmluYWxzID0gW10sIG9ubG9hZHMgPSBbXSwgZG9uZXMgPSBbXTsKICB2YXIgd2VpYm9PYnNlcnZlciwgYnVzeSA9IGZhbHNlLCByZXJ1biA9IGZhbHNlOwogIHZhciBjaGVja0ZlZWREb25lID0gZnVuY3Rpb24gKCkgewogICAgYnVzeSA9IGZhbHNlOwogICAgd2VpYm9PYnNlcnZlcigpOwogICAgZG9uZXMuZm9yRWFjaChmdW5jdGlvbiAoeCkgeyB4KCk7IH0pOwogICAgcmV0dXJuOwogIH07CiAgdmFyIGNoZWNrRmVlZHMgPSBmdW5jdGlvbiAoZmVlZHMpIHsKICAgIGJ1c3kgPSB0cnVlOwogICAgKGZ1bmN0aW9uIGNoZWNrRmVlZCgpIHsKICAgICAgdXRpbC5kZWJ1ZygnY2hlY2tpbmcgJWQgZmVlZChzKScsIGZlZWRzLmxlbmd0aCk7CiAgICAgIGlmIChmZWVkcy5sZW5ndGggPT09IDApIHJldHVybiBjaGVja0ZlZWREb25lKCk7CiAgICAgIHZhciBmZWVkID0gZmVlZHMuc2hpZnQoKTsKICAgICAgdXRpbC5mdW5jLmNhdGNoZWQoZnVuY3Rpb24gKCkgewogICAgICAgIGJlZm9yZXMuZm9yRWFjaChmdW5jdGlvbiAoZikgeyBmKGZlZWQpOyB9KTsKICAgICAgICBpZiAoZmlsdGVyLmFjdGl2ZShmZWVkKSkKICAgICAgICAgIGFmdGVycy5mb3JFYWNoKGZ1bmN0aW9uIChmKSB7IGYoZmVlZCk7IH0pOwogICAgICAgIGZpbmFscy5mb3JFYWNoKGZ1bmN0aW9uIChmKSB7IGYoZmVlZCk7IH0pOwogICAgICB9KSgpOwogICAgICB1dGlsLmZ1bmMuY2FsbChjaGVja0ZlZWQpOwogICAgfSgpKTsKICB9OwogIHdlaWJvT2JzZXJ2ZXIgPSBmdW5jdGlvbiB3ZWlib09ic2VydmVyKCkgewogICAgaWYgKGJ1c3kpIHJldHVybjsKICAgIHZhciBmZWVkcywgc2VsZWN0b3IgPSAnW2FjdGlvbi10eXBlPSJmZWVkX2xpc3RfaXRlbSJdOm5vdChbeWF3Zi13ZWlib10pLCBbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAuV0JfZmVlZF90eXBlOm5vdChbeWF3Zi13ZWlib10pJzsKICAgIGlmIChyZXJ1bikgc2VsZWN0b3IgPSAnW2FjdGlvbi10eXBlPSJmZWVkX2xpc3RfaXRlbSJdLCBbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAuV0JfZmVlZF90eXBlJzsKICAgIGZlZWRzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKSk7CiAgICBmZWVkcy5mb3JFYWNoKGZ1bmN0aW9uIChmZWVkKSB7CiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXdlaWJvJywgJycpOwogICAgICBvbmxvYWRzLmZvckVhY2goZnVuY3Rpb24gKGYpIHsgZihmZWVkKTsgfSk7CiAgICB9KTsKICAgIGlmIChmZWVkcy5sZW5ndGgpIGNoZWNrRmVlZHMoZmVlZHMpOwogICAgcmVydW4gPSBmYWxzZTsKICB9OwogIG9ic2VydmVyLmRvbS5hZGQod2VpYm9PYnNlcnZlcik7CiAgdmFyIGFkZCA9IGZ1bmN0aW9uIChjYWxsYmFja3MpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoY2FsbGJhY2spIHsKICAgICAgY2FsbGJhY2tzLnB1c2godXRpbC5mdW5jLmNhdGNoZWQoY2FsbGJhY2spKTsKICAgICAgcmV0dXJuIGNhbGxiYWNrOwogICAgfTsKICB9OwogIC8vIOW8uuWItumHjeaWsOi/h+a7pOaJgOacieW+ruWNmgogIHZhciByZWZpbHRlciA9IGZ1bmN0aW9uICgpIHsKICAgIHJlcnVuID0gdHJ1ZTsKICAgIHV0aWwuZnVuYy5jYWxsKHdlaWJvT2JzZXJ2ZXIpOwogIH07CiAgcmV0dXJuIHsKICAgICdvbmxvYWQnOiBhZGQob25sb2FkcyksCiAgICAnYmVmb3JlJzogYWRkKGJlZm9yZXMpLAogICAgJ2FmdGVyJzogYWRkKGFmdGVycyksCiAgICAnZmluYWwnOiBhZGQoZmluYWxzKSwKICAgICdkb25lJzogYWRkKGRvbmVzKSwKICAgICdyZWZpbHRlcic6IHJlZmlsdGVyLAogIH07Cn0oKSk7CgpvYnNlcnZlci5jb21tZW50ID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgYmVmb3JlID0gW10sIGFmdGVyID0gW107CiAgb2JzZXJ2ZXIuZG9tLmFkZChmdW5jdGlvbiBjb21tZW50T2JzZXJ2ZXIoKSB7CiAgICB2YXIgY29tbWVudHMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoCiAgICAgICcubGlzdF91bFtub2RlLXR5cGU9ImZlZWRfbGlzdF9jb21tZW50TGlzdCJdIC5saXN0X2xpOm5vdChbeWF3Zi1jb21tZW50XSksICcgKwogICAgICAnLmxpc3RfdWxbbm9kZS10eXBlPSJjb21tZW50X2xpc3QiXSAubGlzdF9saTpub3QoW3lhd2YtY29tbWVudF0pICcKICAgICkpOwogICAgY29tbWVudHMuZm9yRWFjaChmdW5jdGlvbiAoY29tbWVudCkgewogICAgICBjb21tZW50LnNldEF0dHJpYnV0ZSgneWF3Zi1jb21tZW50JywgJycpOwogICAgICBiZWZvcmUuZm9yRWFjaChmdW5jdGlvbiAoZikgeyBmKGNvbW1lbnQpOyB9KTsKICAgICAgZmlsdGVyLmNtdF9hY3RpdmUoY29tbWVudCk7CiAgICAgIGFmdGVyLmZvckVhY2goZnVuY3Rpb24gKGYpIHsgZihjb21tZW50KTsgfSk7CiAgICB9KTsKICB9KTsKICByZXR1cm4gewogICAgJ2JlZm9yZSc6IGZ1bmN0aW9uIChmKSB7IGJlZm9yZS5wdXNoKHV0aWwuZnVuYy5jYXRjaGVkKGYpKTsgfSwKICAgICdhZnRlcic6IGZ1bmN0aW9uIChmKSB7IGFmdGVyLnB1c2godXRpbC5mdW5jLmNhdGNoZWQoZikpOyB9LAogIH07Cn0oKSk7CgovLyDpmLvmraLpobXpnaLpgJrov4cganNvbnAg6I635Y+W5pWw5o2uCm9ic2VydmVyLnN0b3Bqc29ucCA9IChmdW5jdGlvbiAoKSB7CiAgLy8g5paw55qE5Z+65LqOIFNUSyDnmoTop6PlhrPmlrnms5UKICB2YXIganNvbnBEaXNhbGxvd1BhdHRlcm5zID0gW107CiAgdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuZnVuYy5wYWdlKGZ1bmN0aW9uIChwYXR0ZXJucykgewogICAgICB3aW5kb3cuJFlBV0YkID0gd2luZG93LiRZQVdGJCB8fCB7fTsKICAgICAgd2luZG93LiRZQVdGJC5qc29ucERpc2FsbG93UGF0dGVybnMgPSBwYXR0ZXJuczsKICAgIH0sIGpzb25wRGlzYWxsb3dQYXR0ZXJucyk7CiAgfTsKICB1cGRhdGUoKTsKICB1dGlsLmZ1bmMud3JhcHN0aygnY29yZS5pby5qc29ucCcsIGZ1bmN0aW9uIChyZWdGdW5jKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKHN0aykgewogICAgICByZXR1cm4gKGZ1bmN0aW9uIChqc29ucCkgewogICAgICAgIHJldHVybiBmdW5jdGlvbiAoZGV0YWlscykgewogICAgICAgICAgdmFyIHBhdHRlcm5zID0gd2luZG93LiRZQVdGJC5qc29ucERpc2FsbG93UGF0dGVybnMsIHZhbGlkID0gdHJ1ZTsKICAgICAgICAgIHRyeSB7IHBhdHRlcm5zLmZvckVhY2goZnVuY3Rpb24gKHApIHsgaWYgKHAudGVzdChkZXRhaWxzLnVybCkpIHZhbGlkID0gZmFsc2U7IH0pOyB9CiAgICAgICAgICBjYXRjaCAoZSkgeyAgfQogICAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICAgIHJldHVybiBqc29ucC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgICAgICAgfQogICAgICAgIH07CiAgICAgIH0ocmVnRnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSk7CiAgICB9OwogIH0pOwogIHJldHVybiBmdW5jdGlvbiAocGF0dGVybikgewogICAganNvbnBEaXNhbGxvd1BhdHRlcm5zLnB1c2gocGF0dGVybik7CiAgICB1cGRhdGUoKTsKICB9Owp9KCkpOwoKLy8g6ZSu55uY55u45YWz5bel5YW3CnV0aWwua2V5Ym9hcmQgPSAoZnVuY3Rpb24gKCkgewogIHZhciBjdHJsID0gMSA8PCA4LCBzaGlmdCA9IDEgPDwgOSwgYWx0ID0gMSA8PCAxMCwgbWV0YSA9IDEgPDwgMTEsIGtleSA9IGN0cmwgLSAxOwogIHZhciBuYW1lbGlzdCA9ICcjMDsjMTsjMjtDYW5jZWw7IzQ7IzU7SGVscDsjNztCYWNrU3BhY2U7VEFCOyMxMDsjMTE7Q2xlYXI7RW50ZXI7RW50ZXJTcGVjaWFsOyMxNTs7OztQYXVzZTtDYXBzTG9jaztLYW5hO0Vpc3U7SnVuamE7RmluYWw7SGFuamE7IzI2O0VzYztDb252ZXJ0O05vbmNvbnZlcnQ7QWNjZXB0O01vZGVDaGFuZ2U7U3BhY2U7UGFnZVVwO1BhZ2VEb3duO0VuZDtIb21lO0xlZnQ7VXA7UmlnaHQ7RG93bjtTZWxlY3Q7UHJpbnQ7RXhlY3V0ZTtQcmludFNjcmVlbjtJbnNlcnQ7RGVsZXRlOyM0NzswOzE7MjszOzQ7NTs2Ozc7ODs5O0NvbG9uO1NlbWljb2xvbjtMZXNzVGhhbjtFcXVhbHM7R3JlYXRlclRoYW47UXVlc3Rpb25NYXJrO0F0O0E7QjtDO0Q7RTtGO0c7SDtJO0o7SztMO007TjtPO1A7UTtSO1M7VDtVO1Y7VztYO1k7WjtXaW47IzkyO0NvbnRleHRNZW51OyM5NDtTbGVlcDtOdW1QYWQwO051bVBhZDE7TnVtUGFkMjtOdW1QYWQzO051bVBhZDQ7TnVtUGFkNTtOdW1QYWQ2O051bVBhZDc7TnVtUGFkODtOdW1QYWQ5O011bHRpcGx5O0FkZDtTZXBhcmF0b3I7U3VidHJhY3Q7RGVjaW1hbDtEaXZpZGU7RjE7RjI7RjM7RjQ7RjU7RjY7Rjc7Rjg7Rjk7RjEwO0YxMTtGMTI7RjEzO0YxNDtGMTU7RjE2O0YxNztGMTg7RjE5O0YyMDtGMjE7RjIyO0YyMztGMjQ7IzEzNjsjMTM3OyMxMzg7IzEzOTsjMTQwOyMxNDE7IzE0MjsjMTQzO051bUxvY2s7U2Nyb2xsTG9jSztXSU5fT0VNX0ZKX0pJU0hPO1dJTl9PRU1fRkpfTUFTU0hPVTtXSU5fT0VNX0ZKX1RPVVJPS1U7V0lOX09FTV9GSl9MT1lBO1dJTl9PRU1fRkpfUk9ZQTsjMTUxOyMxNTI7IzE1MzsjMTU0OyMxNTU7IzE1NjsjMTU3OyMxNTg7IzE1OTtDaXJjdW1mbGV4O0V4Y2xhbWF0aW9uO0RvdWJsZVF1b3RlO0hhc2g7RG9sbGFyO1BlcmNlbnQ7QW1wZXJzYW5kO1VuZGVyc2NvcmU7T3BlblBhcmVuO0Nsb3NlUGFyZW47QXN0ZXJpc2s7UGx1cztQaXBlO0h5cGhlbk1pbnVzO09wZW5DdXJseUJyYWNrZXQ7Q2xvc2VDdXJseUJyYWNrZXQ7VGlsZGU7IzE3NzsjMTc4OyMxNzk7IzE4MDtWb2x1bWVNdXRlO1ZvbHVtZURvd247Vm9sdW1lVXA7IzE4NDsjMTg1OyMxODY7IzE4NztDb21tYTsjMTg5O1BlcmlvZDtTbGFzaDtCYWNrUXVvdGU7IzE5MzsjMTk0OyMxOTU7IzE5NjsjMTk3OyMxOTg7IzE5OTsjMjAwOyMyMDE7IzIwMjsjMjAzOyMyMDQ7IzIwNTsjMjA2OyMyMDc7IzIwODsjMjA5OyMyMTA7IzIxMTsjMjEyOyMyMTM7IzIxNDsjMjE1OyMyMTY7IzIxNzsjMjE4O09wZW5CcmFja2V0O0JhY2tTbGFzaDtDbG9zZUJyYWNrZXQ7UXVvdGU7IzIyMzs7QWx0R3I7IzIyNjtXSU5fSUNPX0hFTFA7V0lOX0lDT18wMDsjMjI5O1dJTl9JQ09fQ0xFQVI7IzIzMTsjMjMyO1dJTl9PRU1fUkVTRVQ7V0lOX09FTV9KVU1QO1dJTl9PRU1fUEExO1dJTl9PRU1fUEEyO1dJTl9PRU1fUEEzO1dJTl9PRU1fV1NDVFJMO1dJTl9PRU1fQ1VTRUw7V0lOX09FTV9BVFROO1dJTl9PRU1fRklOSVNIO1dJTl9PRU1fQ09QWTtXSU5fT0VNX0FVVE87V0lOX09FTV9FTkxXO1dJTl9PRU1fQkFDS1RBQjtBdHRuO0Nyc2VsO0V4c2VsO0VyZW9mO1BsYXk7Wm9vbTsjMjUyO1BBMTtXSU5fT0VNX0NMRUFSOyMyNTUnLnNwbGl0KCc7Jyk7CiAgdmFyIGNvZGUgPSB7fTsgbmFtZWxpc3QuZm9yRWFjaChmdW5jdGlvbiAobmFtZSwgaW5kZXgpIHsgY29kZVtuYW1lLnRvVXBwZXJDYXNlKCldID0gaW5kZXg7IH0pOwogIHZhciBhbHRlciA9IHsgQ1RSTDogY3RybCwgU0hJRlQ6IHNoaWZ0LCBBTFQ6IGFsdCwgTUVUQTogbWV0YSwgS0VZOiBrZXkgfTsKICAvLyDlr7nkuIDkuKrmjInplK7kuovku7blgZrnvJblj7cKICB2YXIgZ2V0ID0gZnVuY3Rpb24gKGUpIHsKICAgIGlmICghZSB8fCAhZS5rZXlDb2RlKSByZXR1cm4gbnVsbDsKICAgIHZhciBjb2RlID0gZS5rZXlDb2RlICYga2V5OwogICAgaWYgKGUuY3RybEtleSkgY29kZSB8PSBjdHJsOwogICAgaWYgKGUuc2hpZnRLZXkpIGNvZGUgfD0gc2hpZnQ7CiAgICBpZiAoZS5hbHRLZXkpIGNvZGUgfD0gYWx0OwogICAgaWYgKGUubWV0YUtleSkgY29kZSB8PSBtZXRhOwogICAgcmV0dXJuIGNvZGU7CiAgfTsKICAvLyDnu5nkuIDkuKrnvJblj7fvvIzovazmjaLkuLrplK7lkI0KICB2YXIgbmFtZSA9IGZ1bmN0aW9uIChuKSB7CiAgICBpZiAobiA9PT0gMCkgcmV0dXJuIHRleHQuZGlzYWJsZWRLZXk7CiAgICB2YXIgcmV0ID0gJyc7CiAgICBpZiAobiAmIGN0cmwpIHJldCArPSAnQ3RybC0nOwogICAgaWYgKG4gJiBzaGlmdCkgcmV0ICs9ICdTaGlmdC0nOwogICAgaWYgKG4gJiBhbHQpIHJldCArPSAnQWx0LSc7CiAgICBpZiAobiAmIG1ldGEpIHJldCArPSAnTWV0YS0nOwogICAgcmV0ICs9IG5hbWVsaXN0W24gJiBrZXldOwogICAgaWYgKHJldC5zbGljZSgtMSkgPT09ICctJykgcmV0ID0gcmV0LnNsaWNlKDAsIC0xKTsKICAgIHJldHVybiByZXQ7CiAgfTsKICAvLyDms6jlhozlhajlsYDnm5HlkKzmjInplK4KICB2YXIgdHJpZ2dlcnMgPSBbXTsKICB2YXIgcmVnID0gZnVuY3Rpb24gKHR5cGUsIGtleSwgY2FsbGJhY2ssIGlnbm9yZUluSW5wdXQpIHsKICAgIHRyaWdnZXJzLnB1c2goewogICAgICAndHlwZSc6IHR5cGUsCiAgICAgICdrZXknOiBrZXksCiAgICAgICdjYWxsYmFjayc6IHV0aWwuZnVuYy5jYXRjaGVkKGNhbGxiYWNrKSwKICAgICAgJ2lnbm9yZUluSW5wdXQnOiAhIWlnbm9yZUluSW5wdXQKICAgIH0pOwogIH07CiAgLy8g55uR5ZCs5oyJ6ZSuCiAgdmFyIGJhc2VFdmVudCA9IGZ1bmN0aW9uIChlKSB7CiAgICB2YXIgY29kZSA9IGdldChlKTsKICAgIHZhciBpbklucHV0ID0gL15zZWxlY3R8dGV4dGFyZWF8aW5wdXQkLy50ZXN0KGUudGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpOwogICAgdmFyIGFjdGl2ZWQgPSB0cmlnZ2Vycy5maWx0ZXIoZnVuY3Rpb24gKHRyaWdnZXIpIHsKICAgICAgaWYgKGluSW5wdXQgJiYgdHJpZ2dlci5pZ25vcmVJbklucHV0KSByZXR1cm4gZmFsc2U7CiAgICAgIHJldHVybiB0cmlnZ2VyLnR5cGUgPT09IGUudHlwZSAmJiB0cmlnZ2VyLmtleSA9PT0gY29kZTsKICAgIH0pOwogICAgaWYgKCFhY3RpdmVkKSByZXR1cm47CiAgICBhY3RpdmVkLmZvckVhY2goZnVuY3Rpb24gKHRyaWdnZXIpIHsgdHJpZ2dlci5jYWxsYmFjayhlKTsgfSk7CiAgfTsKICBbJ2tleWRvd24nLCAna2V5cHJlc3MnLCAna2V5dXAnXS5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7CiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBiYXNlRXZlbnQpOwogIH0pOwogIHJldHVybiB7CiAgICAnZ2V0JzogZ2V0LAogICAgJ25hbWUnOiBuYW1lLAogICAgJ3JlZyc6IHJlZywKICAgICdjb2RlJzogY29kZSwKICAgICdhbHRlcic6IGFsdGVyLAogIH07Cn0oKSk7CgovLyDor63oqIDnm7jlhbPlt6XlhbcKdXRpbC5pMThuID0ge307Ci8vIOivreiogOebuOWFs+agt+W8jwp1dGlsLmkxOG4uc3R5bGlzaCA9IGZ1bmN0aW9uIChsYW5nKSB7CiAgdmFyIGlzRW4gPSBsYW5nID09PSAnZW4nOwogIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5maWxsKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgLmxheW91dEZpbHRlckdyb3VwTGF5ZXIgLnlhd2YtY29uZmlnQm9vbGVhbiB7IHdpZHRoOiB7e2xheW91dE9wdGlvbldpZHRofX07IH0KICAgIC5sYXlvdXRGaWx0ZXJHcm91cExheWVyIC55YXdmLWNvbmZpZ0Jvb2xlYW4ueWF3Zi1sYXlvdXRDb25maWctbGluZSB7IHdpZHRoOiAxMDAlOyB9CiAgKi8gbm9vcCgpOyB9KSwgeyAnbGF5b3V0T3B0aW9uV2lkdGgnOiBpc0VuID8gJzI0MHB4JyA6ICcxNjBweCcgfSkpOwp9OwoKLy8g5qC55o2u55So5oi355WM6Z2i5LiK55qE6K+t6KiA5YGa5LiN5ZCM6LCD5pW0CnV0aWwuX2xhbmd1YWdlcyA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGRlZmF1bHRMYW5nID0gJ3poLWNuJzsKICB2YXIgYWxsTGFuZyA9IFsnemgtY24nLCAnemgtaGsnLCAnemgtdHcnLCAnZW4nXTsKICB2YXIgbGFuZyA9IG51bGw7CiAgdmFyIHBlbmRpbmcgPSBbXTsKICB2YXIgY2hvc2UgPSBmdW5jdGlvbiAobGFuZ09iaikgewogICAgbGFuZ09iai5sb2NhbCA9IGxhbmdPYmpbbGFuZ10gfHwgbGFuZ09ialtkZWZhdWx0TGFuZ107CiAgfTsKICByZXR1cm4gZnVuY3Rpb24gKGwpIHsKICAgIGlmICghbCB8fCBhbGxMYW5nLmluZGV4T2YobCkgPT09IC0xKSBsID0gZGVmYXVsdExhbmc7CiAgICBsYW5nID0gbDsKICAgIHBlbmRpbmcubWFwKGNob3NlKTsKICAgIHBlbmRpbmcgPSBbXTsKICAgIGNob3NlLmxhbmcgPSBsOwogICAgdXRpbC5pMThuLnN0eWxpc2gobGFuZyk7CiAgICByZXR1cm4gY2hvc2U7CiAgfTsKfSgpKTsKCi8vIOiuvue9ruebuOWFs+W3peWFtwp1dGlsLmNvbmZpZyA9IG51bGw7CnV0aWwuX3N0b3JhZ2UgPSBmdW5jdGlvbiAoKSB7CiAgdmFyIGNvbmZpZyA9IHt9OwogIHZhciBrZXlzID0gW10sIG9ucHV0cyA9IHt9OwogIHZhciBzdG9yYWdlS2V5ID0gJ3VzZXInICsgdXRpbC5pbmZvLnVpZCArICdjb25maWcnOwogIHZhciB0b25wdXRzID0gZnVuY3Rpb24gKGtleSwgdmFsdWUsIG9sZFZhbHVlKSB7CiAgICAob25wdXRzW2tleV0gfHwgW10pLm1hcChmdW5jdGlvbiAoZikgeyBmKHZhbHVlLCBvbGRWYWx1ZSk7IH0pOwogIH07CiAgLy8g6K+75Y+W5Yiw5YaF5a2YCiAgdmFyIHJlYWRwID0gZmFsc2U7CiAgdmFyIHJlYWQgPSBmdW5jdGlvbiAoKSB7CiAgICBpZiAocmVhZHApIHJldHVybjsKICAgIHV0aWwuZnVuYy5jYWxsKGZ1bmN0aW9uICgpIHsgcmVhZHAgPSBmYWxzZTsgfSk7CiAgICByZWFkcCA9IHRydWU7CiAgICB1dGlsLmRlYnVnKCdyZWFkIEdNIHZhbHVlJyk7CiAgICB0cnkgeyBjb25maWcgPSBKU09OLnBhcnNlKEdNX2dldFZhbHVlKHN0b3JhZ2VLZXksICd7fScpKTsgfQogICAgY2F0Y2ggKGUpIHsgY29uZmlnID0ge307IH0KICB9OwogIC8vIOS7juWGheWtmOWGmeWHugogIHZhciB3cml0ZSA9IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuZGVidWcoJ3dyaXRlIEdNIHZhbHVlJyk7CiAgICBHTV9zZXRWYWx1ZShzdG9yYWdlS2V5LCBKU09OLnN0cmluZ2lmeShjb25maWcpKTsKICB9OwogIC8vIOWGmeWFpeWIsOWGheWtmAogIHZhciBwdXQgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkgewogICAgaWYgKHZhbHVlICE9IG51bGwgJiYga2V5cy5pbmRleE9mKGtleSkgPT09IC0xKSB1dGlsLmRlYnVnKCdwdXQga2V5ICVzIG5vdCBpbiBrZXlzLicsIGtleSk7CiAgICByZWFkKCk7CiAgICB2YXIgb3JpID0gY29uZmlnW2tleV07CiAgICB2YXIgb2xkID0gSlNPTi5zdHJpbmdpZnkoY29uZmlnKTsKICAgIGlmICh2YWx1ZSA9PSBudWxsKSBkZWxldGUgY29uZmlnW2tleV07CiAgICBlbHNlIGNvbmZpZ1trZXldID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh2YWx1ZSkpOwogICAgdmFyIGN1ciA9IEpTT04uc3RyaW5naWZ5KGNvbmZpZyk7CiAgICBpZiAoY3VyID09PSBvbGQpIHJldHVybiB2YWx1ZTsKICAgIHRvbnB1dHMoa2V5LCB2YWx1ZSwgb3JpKTsKICAgIHdyaXRlKCk7CiAgICByZXR1cm4gdmFsdWU7CiAgfTsKICAvLyDku47lhoXlrZjor7vlj5YKICB2YXIgZ2V0ID0gZnVuY3Rpb24gKGtleSwgdmFsdWUsIHR5cGUpIHsKICAgIGlmIChrZXlzLmluZGV4T2Yoa2V5KSA9PT0gLTEpIHV0aWwuZGVidWcoJ2dldCBrZXkgJXMgbm90IGluIGtleXMuJywga2V5KTsKICAgIHJlYWQoKTsKICAgIGlmICghKGtleSBpbiBjb25maWcpKSByZXR1cm4gdmFsdWU7CiAgICB2YXIgdmFsID0gY29uZmlnW2tleV07CiAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybiB2YWx1ZTsKICAgIGlmICh0eXBlICYmICh2YWwgPT09IG51bGwgfHwgdmFsLmNvbnN0cnVjdG9yICE9PSB0eXBlKSkgcmV0dXJuIHZhbHVlOwogICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodmFsKSk7CiAgfTsKICAvLyDlvZPlhoXlrZjphY3nva7ooqvkv67mlLnml7bosIPnlKgKICB2YXIgb25wdXQgPSBmdW5jdGlvbiAoa2V5LCBmKSB7CiAgICBpZiAoIW9ucHV0c1trZXldKSBvbnB1dHNba2V5XSA9IFtdOwogICAgaWYgKG9ucHV0c1trZXldLmluZGV4T2YoZikgPT09IC0xKSBvbnB1dHNba2V5XS5wdXNoKGYpOwogIH07CiAgLy8g5LuO5a2X5Liy5a+85YWlCiAgdmFyIGltcG9ydF8gPSBmdW5jdGlvbiAocywgY21wKSB7CiAgICBpZiAoY21wID09IG51bGwpIGNtcCA9IGZ1bmN0aW9uIChuLCBvKSB7IHJldHVybiBuOyB9OwogICAgdmFyIHZlcnNpb24gPSB2b2lkIDAsIGJhY2t1cDsKICAgIC8vIOWkh+S7veW9k+WJjeiuvue9rgogICAgdHJ5IHsKICAgICAgYmFja3VwID0gSlNPTi5zdHJpbmdpZnkoY29uZmlnKTsKICAgICAgdHJ5IHsKICAgICAgICBzID0gSlNPTi5wYXJzZShzKTsKICAgICAgICB2YXIgYyA9IHMuY29uZjsKICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGNvbmZpZykuY29uY2F0KE9iamVjdC5rZXlzKGMpKTsKICAgICAgICBrZXlzID0ga2V5cy5maWx0ZXIoZnVuY3Rpb24gKHgsIGkpIHsgcmV0dXJuIGtleXMuaW5kZXhPZih4KSA9PT0gaTsgfSk7CiAgICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAgIGlmIChrZXkuaW5kZXhPZignLl8nKSAhPT0gLTEpIHJldHVybjsKICAgICAgICAgIHB1dChrZXksIGNtcChjW2tleV0sIGdldChrZXkpKSk7CiAgICAgICAgfSk7CiAgICAgICAgd3JpdGUoKTsKICAgICAgICB2ZXJzaW9uID0gTnVtYmVyKHMudmVyLm1hdGNoKC9cZCskLylbMF0pIHx8IDA7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBjb25maWcgPSBKU09OLnBhcnNlKGJhY2t1cCk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGUpIHsgfQogICAgcmV0dXJuIHZlcnNpb247CiAgfTsKICAvLyDlr7zlh7rmiJDkuLrlrZfkuLIKICB2YXIgZXhwb3J0XyA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBpbmZvID0gR01faW5mbyB8fCB7fSwgc2NyaXB0ID0gaW5mby5zY3JpcHQgfHwge307CiAgICB2YXIgY29uZiA9IHt9OwogICAgLy8g5LiN5a+85Ye66ZSu5YC85YyF5ZCrIC5fIOeahOmhue+8jOWboOS4uuS7luS7rOaYr+WGhemDqOmhuQogICAgT2JqZWN0LmtleXMoY29uZmlnKQogICAgICAuZmlsdGVyKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LmluZGV4T2YoJy5fJykgPT09IC0xOyB9KQogICAgICAuZm9yRWFjaChmdW5jdGlvbiAoeCkgeyBjb25mW3hdID0gY29uZmlnW3hdOyB9KTsKICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICd1YSc6IG5hdmlnYXRvci51c2VyQWdlbnQsCiAgICAgICd5YXdmJzogc2NyaXB0Lm5hbWUsCiAgICAgICd2ZXInOiBzY3JpcHQudmVyc2lvbiwKICAgICAgJ2dtJzogKGluZm8uc2NyaXB0SGFuZGxlciB8fCAnJykgKyBpbmZvLnZlcnNpb24sCiAgICAgICdjb25mJzogY29uZiwKICAgIH0sIG51bGwsIDIpOwogIH07CiAgLy8g5riF56m66K6+572uCiAgdmFyIGNsZWFyID0gZnVuY3Rpb24gKCkgewogICAgY29uZmlnID0ge307CiAgICB0b25wdXRzKCk7CiAgICB3cml0ZSgpOwogIH07CiAgLy8g5rOo5YaM6ZSuCiAgdmFyIHJlZyA9IGZ1bmN0aW9uIChrZXkpIHsga2V5cy5wdXNoKGtleSk7IH07CiAgLy8g5Yid5aeL5YyWCiAgcmV0dXJuIHsKICAgICdwdXQnOiBwdXQsICdnZXQnOiBnZXQsCiAgICAnb25wdXQnOiBvbnB1dCwKICAgICdyZWFkJzogcmVhZCwgJ3dyaXRlJzogd3JpdGUsCiAgICAnaW1wb3J0JzogaW1wb3J0XywgJ2V4cG9ydCc6IGV4cG9ydF8sCiAgICAnY2xlYXInOiBjbGVhciwKICAgICdyZWcnOiByZWcsCiAgfTsKfTsKCnV0aWwuaW5pdChmdW5jdGlvbiAoKSB7CiAgLy8g5L+d5a2Y55So5oi35L+h5oGvCiAgdXRpbC5pbmZvLnVpZCA9IHVuc2FmZVdpbmRvdy4kQ09ORklHLnVpZDsKICB1dGlsLmluZm8ubmljayA9IHVuc2FmZVdpbmRvdy4kQ09ORklHLm5pY2s7CiAgdXRpbC5pbmZvLmxhbmcgPSB1bnNhZmVXaW5kb3cuJENPTkZJRy5sYW5nOwogIHV0aWwuaW5mby5za2luID0gdW5zYWZlV2luZG93LiRDT05GSUcuc2tpbjsKICAvLyDliJ3lp4vljJbor63oqIDpgInpobkKICB1dGlsLmkxOG4uY2hvc2UgPSB1dGlsLl9sYW5ndWFnZXModXRpbC5pbmZvLmxhbmcpOwogIE9iamVjdC5rZXlzKHRleHQpLm1hcChmdW5jdGlvbiAoa2V5KSB7IHV0aWwuaTE4bi5jaG9zZSh0ZXh0W2tleV0pOyB0ZXh0W2tleV0gPSB0ZXh0W2tleV0ubG9jYWw7IH0pOwogIE9iamVjdC5rZXlzKGh0bWwpLm1hcChmdW5jdGlvbiAoa2V5KSB7IGh0bWxba2V5XSA9IHV0aWwuc3RyLmZpbGwoaHRtbFtrZXldKTsgfSk7CiAgLy8g5Yid5aeL5YyW6K6+572u6ZuGCiAgdXRpbC5jb25maWcgPSB1dGlsLl9zdG9yYWdlKCk7Cn0sIHV0aWwucHJpb3JpdHkuRklSU1QpOwoKLy8g55So5oi35L+h5oGvCnV0aWwuaW5mbyA9IHt9Owp1dGlsLmluZm8udWlkID0gbnVsbDsKdXRpbC5pbmZvLm5pY2sgPSBudWxsOwp1dGlsLmluZm8ub2lkID0gZnVuY3Rpb24gKCkgewogIHJldHVybiB1bnNhZmVXaW5kb3cuJENPTkZJRy5vaWQgfHwgbnVsbDsKfTsKdXRpbC5pbmZvLm9uaWNrID0gZnVuY3Rpb24gKCkgewogIHJldHVybiB1bnNhZmVXaW5kb3cuJENPTkZJRy5vbmljayB8fCBudWxsOwp9OwoKLy8g5omT5Y2w6LCD6K+V5L+h5oGvCnV0aWwuZGVidWcgPSB1dGlsLnNjcmlwdC5pc2RlYnVnICYmCiAgY29uc29sZSAmJiBjb25zb2xlLmxvZyAmJiBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpIHx8CiAgdXRpbC5mdW5jLm5vb3A7CnV0aWwuZXJyb3IgPSB1dGlsLnNjcmlwdC5pc2RlYnVnICYmCiAgY29uc29sZSAmJiBjb25zb2xlLmVycm9yICYmIGNvbnNvbGUuZXJyb3IuYmluZChjb25zb2xlKSB8fAogIHV0aWwuZnVuYy5ub29wOwoKLy8g5qGM6Z2i5o+Q56S65bel5YW3CnV0aWwubm90aWZ5ID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgYXZhbGlhYmxlID0ge307CiAgdmFyIHNob3duID0gW107CiAgdmFyIHVzZSA9IHsKICAgICdoYXNQZXJtaXNzaW9uJzogZnVuY3Rpb24gKCkgeyByZXR1cm4gbnVsbDsgfSwKICAgICdyZXF1ZXN0UGVybWlzc2lvbic6IGZ1bmN0aW9uIChjYWxsYmFjaykgeyByZXR1cm4gbnVsbDsgfSwKICAgICdoaWRlTm90aWZpY2F0aW9uJzogZnVuY3Rpb24gKG5vdGlmeSkgeyByZXR1cm4gbnVsbDsgfSwKICAgICdzaG93Tm90aWZpY2F0aW9uJzogZnVuY3Rpb24gKGlkLCB0aXRsZSwgYm9keSwgaWNvbiwgZGVsYXksIG9uY2xpY2spIHsgcmV0dXJuIG51bGw7IH0KICB9OwoKICAvLyDmo4Dmn6XkuIDkuKrlvq7ljZrmmK/kuI3mmK/lt7Lnu4/ooqvmmL7npLrov4fkuobvvIzlpoLmnpzmmL7npLrov4fkuobkuI3ph43lpI3mmL7npLoKICB2YXIgc2hvd25GZWVkID0gZnVuY3Rpb24gKGlkKSB7CiAgICB2YXIgc2hvd24gPSBbXTsKICAgIHRyeSB7CiAgICAgIHNob3duID0gSlNPTi5wYXJzZShHTV9nZXRWYWx1ZSgnbm90aWZpY2F0aW9uJywgJ1tdJykpOwogICAgICBzaG93biA9IEFycmF5LmZyb20oc2hvd24pOwogICAgICBpZCA9IFN0cmluZyhpZCk7CiAgICB9IGNhdGNoIChlKSB7IH0KICAgIHV0aWwuZGVidWcoJyVvICVzIHNob3duIGZlZWQgbGlzdDogJW8nLCBpZCwgc2hvd24uaW5kZXhPZihpZCkgPT09IC0xID8gJ25vdCBpbicgOiAnaW4nLCBzaG93bik7CiAgICBpZiAoc2hvd24uaW5kZXhPZihpZCkgIT09IC0xKSByZXR1cm4gdHJ1ZTsKICAgIHNob3duLnB1c2goaWQpOyBzaG93biA9IHNob3duLnNsaWNlKC0yMCk7CiAgICBHTV9zZXRWYWx1ZSgnbm90aWZpY2F0aW9uJywgSlNPTi5zdHJpbmdpZnkoc2hvd24pKTsKICAgIHJldHVybiBmYWxzZTsKICB9OwoKICAvLyB3ZWJraXROb3RpZmljYXRpb25zCiAgLy8gVGFiIE5vdGlmaWVyIOaJqeWxleWunueOsOatpOaOpeWPo++8jOS9huaYvuekuueahOahjOmdouaPkOekuuacgOWkmuWPquiDveaYvuekuuWJjeS4pOihjAogIGlmICh0eXBlb2Ygd2Via2l0Tm90aWZpY2F0aW9ucyAhPT0gJ3VuZGVmaW5lZCcpIGF2YWxpYWJsZS53ZWJraXQgPSB7CiAgICAnaGFzUGVybWlzc2lvbic6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFt0cnVlLCBudWxsLCBmYWxzZV1bd2Via2l0Tm90aWZpY2F0aW9ucy5jaGVja1Blcm1pc3Npb24oKV07CiAgICB9LAogICAgJ3JlcXVlc3RQZXJtaXNzaW9uJzogZnVuY3Rpb24gKGNhbGxiYWNrKSB7CiAgICAgIHJldHVybiB3ZWJraXROb3RpZmljYXRpb25zLnJlcXVlc3RQZXJtaXNzaW9uKGNhbGxiYWNrKTsKICAgIH0sCiAgICAnaGlkZU5vdGlmaWNhdGlvbic6IGZ1bmN0aW9uIChub3RpZnkpIHsKICAgICAgbm90aWZ5LmNhbmNlbCgpOwogICAgICBhZnRlckhpZGVOb3RpZmljYXRpb24obm90aWZ5KTsKICAgIH0sCiAgICAnc2hvd05vdGlmaWNhdGlvbic6IGZ1bmN0aW9uIChpZCwgdGl0bGUsIGJvZHksIGljb24sIGRlbGF5LCBvbmNsaWNrKSB7CiAgICAgIGlmIChzaG93bkZlZWQoaWQpKSByZXR1cm4gbnVsbDsKICAgICAgdXRpbC5kZWJ1Zygnc2hvdyAod2Via2l0KSBub3RpZmljYXRpb246ICVzIC0gJXMnLCB0aXRsZSwgYm9keSk7CiAgICAgIHZhciBub3RpZnkgPSB3ZWJraXROb3RpZmljYXRpb25zLmNyZWF0ZU5vdGlmaWNhdGlvbihpY29uLCB0aXRsZSwgYm9keSk7CiAgICAgIGlmIChkZWxheSAmJiBkZWxheSA+IDApIG5vdGlmeS5hZGRFdmVudExpc3RlbmVyKCdkaXNwbGF5JywgZnVuY3Rpb24gKCkgewogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBoaWRlTm90aWZpY2F0aW9uKG5vdGlmeSk7IH0sIGRlbGF5KTsKICAgICAgfSk7CiAgICAgIGlmIChvbmNsaWNrKSBub3RpZnkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbmNsaWNrKTsKICAgICAgbm90aWZ5LnNob3coKTsKICAgICAgcmV0dXJuIG5vdGlmeTsKICAgIH0sCiAgfTsKCiAgLy8gTm90aWZpY2F0aW9uCiAgLy8gRmlyZWZveCAyMisKICAvLyDmmL7npLo056eS5Lya6Ieq5Yqo5YWz6ZetIGh0dHBzOi8vYnVnemlsLmxhLzg3NTExNAogIGlmICh0eXBlb2YgTm90aWZpY2F0aW9uICE9PSAndW5kZWZpbmVkJykgYXZhbGlhYmxlLnN0YW5kYXJkID0gewogICAgJ2hhc1Blcm1pc3Npb24nOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgJ2dyYW50ZWQnOiB0cnVlLAogICAgICAgICdkZW5pZWQnOiBmYWxzZSwKICAgICAgICAnZGVmYXVsdCc6IG51bGwsCiAgICAgIH1bTm90aWZpY2F0aW9uLnBlcm1pc3Npb25dOwogICAgfSwKICAgICdyZXF1ZXN0UGVybWlzc2lvbic6IGZ1bmN0aW9uIChjYWxsYmFjaykgewogICAgICByZXR1cm4gTm90aWZpY2F0aW9uLnJlcXVlc3RQZXJtaXNzaW9uKGNhbGxiYWNrKTsKICAgIH0sCiAgICAnaGlkZU5vdGlmaWNhdGlvbic6IGZ1bmN0aW9uIChub3RpZnkpIHsKICAgICAgbm90aWZ5LmNsb3NlKCk7CiAgICAgIGFmdGVySGlkZU5vdGlmaWNhdGlvbihub3RpZnkpOwogICAgfSwKICAgICdzaG93Tm90aWZpY2F0aW9uJzogZnVuY3Rpb24gKGlkLCB0aXRsZSwgYm9keSwgaWNvbiwgZGVsYXksIG9uY2xpY2spIHsKICAgICAgaWYgKHNob3duRmVlZChpZCkpIHJldHVybiBudWxsOwogICAgICB1dGlsLmRlYnVnKCdzaG93IG5vdGlmaWNhdGlvbjogJXMgLSAlcycsIHRpdGxlLCBib2R5KTsKICAgICAgdmFyIG5vdGlmeSA9IG5ldyBOb3RpZmljYXRpb24odGl0bGUsIHsgJ2JvZHknOiBib2R5LCAnaWNvbic6IGljb24sICdyZXF1aXJlSW50ZXJhY3Rpb24nOiAhZGVsYXkgfSk7CiAgICAgIGlmIChkZWxheSAmJiBkZWxheSA+IDApIG5vdGlmeS5hZGRFdmVudExpc3RlbmVyKCdzaG93JywgZnVuY3Rpb24gKCkgewogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBoaWRlTm90aWZpY2F0aW9uKCk7IH0sIGRlbGF5KTsKICAgICAgfSk7CiAgICAgIGlmIChvbmNsaWNrKSBub3RpZnkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbmNsaWNrKTsKICAgICAgcmV0dXJuIG5vdGlmeTsKICAgIH0sCiAgfTsKCiAgLy8g5pyJ5ZOq5Lqb5o6l5Y+j5Y+v55SoCiAgdmFyIGF2YWxpYWJsZU5vdGlmaWNhdGlvbiA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBPYmplY3Qua2V5cyhhdmFsaWFibGUpOwogIH07CiAgLy8g6YCJ5oup55So5ZOq5Liq5o6l5Y+jCiAgdmFyIGNob3NlTm90aWZpY2F0aW9uID0gZnVuY3Rpb24gKHByZWZlcikgewogICAgcmV0dXJuICh1c2UgPSBwcmVmZXIgJiYgYXZhbGlhYmxlW3ByZWZlcl0gfHwgYXZhbGlhYmxlLnN0YW5kYXJkKTsKICB9OwogIGNob3NlTm90aWZpY2F0aW9uKCk7CiAgLy8g5qOA5p+l5p2D6ZmQCiAgdmFyIGhhc1Blcm1pc3Npb24gPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gdXNlLmhhc1Blcm1pc3Npb24uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9OwogIC8vIOivt+axguadg+mZkAogIHZhciByZXF1ZXN0UGVybWlzc2lvbiA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB1c2UucmVxdWVzdFBlcm1pc3Npb24uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9OwogIC8vIOaYvuekuua2iOaBrwogIHZhciBzaG93Tm90aWZpY2F0aW9uID0gZnVuY3Rpb24gKHRpdGxlLCBib2R5LCBpY29uLCBkZWxheSwgb25jbGljaykgewogICAgdmFyIG5vdGlmeSA9IHVzZS5zaG93Tm90aWZpY2F0aW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBzaG93bi5wdXNoKG5vdGlmeSk7CiAgICByZXR1cm4gbm90aWZ5OwogIH07CiAgLy8g6ZqQ6JeP5bey57uP5pi+56S655qE5raI5oGvCiAgdmFyIGhpZGVOb3RpZmljYXRpb24gPSBmdW5jdGlvbiAobm90aWZ5KSB7CiAgICB1c2UuaGlkZU5vdGlmaWNhdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgcmV0dXJuIG5vdGlmeTsKICB9OwogIHZhciBhZnRlckhpZGVOb3RpZmljYXRpb24gPSBmdW5jdGlvbiAobm90aWZ5KSB7CiAgICBzaG93biA9IHNob3duLmZpbHRlcihmdW5jdGlvbiAoeCkgeyByZXR1cm4geCAhPT0gbm90aWZ5OyB9KTsKICB9OwoKICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd1bmxvYWQnLCBmdW5jdGlvbiAoKSB7CiAgICBzaG93bi5mb3JFYWNoKGhpZGVOb3RpZmljYXRpb24pOwogICAgc2hvd24gPSBbXTsKICB9KTsKCiAgcmV0dXJuIHsKICAgICdhdmFsaWFibGVOb3RpZmljYXRpb24nOiBhdmFsaWFibGVOb3RpZmljYXRpb24sCiAgICAnY2hvc2VOb3RpZmljYXRpb24nOiBjaG9zZU5vdGlmaWNhdGlvbiwKICAgICdoYXNQZXJtaXNzaW9uJzogaGFzUGVybWlzc2lvbiwKICAgICdyZXF1ZXN0UGVybWlzc2lvbic6IHJlcXVlc3RQZXJtaXNzaW9uLAogICAgJ3Nob3dOb3RpZmljYXRpb24nOiBzaG93Tm90aWZpY2F0aW9uLAogICAgJ2hpZGVOb3RpZmljYXRpb24nOiBoaWRlTm90aWZpY2F0aW9uCiAgfTsKCn0oKSk7CgovLyDnrqHnkIbmoLflvI8KdXRpbC5jc3MgPSAoZnVuY3Rpb24gKCkgewogIHZhciBzdHlsZVRleHQgPSAnJywgYWRkZWQgPSBmYWxzZTsKICB2YXIgZnVuID0gZnVuY3Rpb24gKGNzcykgeyByZXR1cm4gZnVuLmFkZC5iaW5kKGZ1biwgY3NzKTsgfTsKICBmdW4uYWRkID0gZnVuY3Rpb24gKGNzcykgeyBpZiAoIWFkZGVkKSBzdHlsZVRleHQgKz0gY3NzICsgJ1xuJzsgZWxzZSBHTV9hZGRTdHlsZShjc3MpOyB9OwogIHV0aWwuaW5pdChmdW5jdGlvbiAoKSB7IEdNX2FkZFN0eWxlKHN0eWxlVGV4dCk7IGFkZGVkID0gdHJ1ZTsgfSwgdXRpbC5wcmlvcml0eS5MQVNUKTsKICByZXR1cm4gZnVuOwp9KCkpOwoKLy8g55WM6Z2i55u45YWzCnV0aWwudWkgPSB7fTsKCi8vIOaYvuekuuiuvue9ruaMiemSrgovLyDljIXmi6zlj7PkuIrop5Lov4fmu6Tlmajlm77moIflkozorr7nva7oj5zljZXkuK3nmoToj5zljZXpobkKdXRpbC51aS5pY29uID0gdXRpbC5pbml0KGZ1bmN0aW9uICgpIHsKICBpZiAodXRpbC5wYWdlLnNlYXJjaCkgcmV0dXJuOyAvLyDmkJzntKLpobXpnaLkuI3mj5Dkvpvorr7nva7nqpflj6MKICB2YXIgb25DbGljayA9IHV0aWwuZnVuYy5jYXRjaGVkKGZ1bmN0aW9uIChlKSB7IGZpbHRlci5kaWFsb2coKTsgZS5wcmV2ZW50RGVmYXVsdCgpOyB9KTsKICB2YXIgaWNvbiA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLldCX2dsb2JhbF9uYXYgLmduX3NldF9saXN0Jyk7CiAgICBpZiAoIXApIHJldHVybiBzZXRUaW1lb3V0KGljb24sIDEwMCk7CiAgICB2YXIgZCA9IHV0aWwuZG9tLmNyZWF0ZShodG1sLmljb24pOyBwLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGQsIHApOwogICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmduX2ZpbHRlcicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb25DbGljayk7CiAgfTsKICB2YXIgbWVudWl0ZW0gPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5nbl90b3BtZW51bGlzdCB1bCBsaS5saW5lJyk7CiAgICBpZiAoIWEgfHwgIWEubGVuZ3RoKSByZXR1cm4gc2V0VGltZW91dChtZW51aXRlbSwgMTAwKTsKICAgIHZhciBsID0gYVthLmxlbmd0aCAtIDFdOwogICAgdmFyIG0gPSB1dGlsLmRvbS5jcmVhdGUoaHRtbC5tZW51aXRlbSk7CiAgICB3aGlsZSAobS5maXJzdENoaWxkKSBsLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG0uZmlyc3RDaGlsZCwgbCk7CiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcueWF3Zi1jb25maWctbWVudWl0ZW0nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uQ2xpY2spOwogIH07CiAgaWNvbigpOyBtZW51aXRlbSgpOwp9LCB1dGlsLnByaW9yaXR5LkxBU1QpOwoKLy8g5a+56K+d5qGGCnV0aWwudWkuZm9ybSA9IGZ1bmN0aW9uIChkb20sIGRpc3BsYXksIGRldGFpbHMpIHsKICB2YXIgb2sgPSBkb20ucXVlcnlTZWxlY3RvcignW25vZGUtdHlwZT0ib2siXScpOwogIHZhciBjYW5jZWwgPSBkb20ucXVlcnlTZWxlY3RvcignW25vZGUtdHlwZT0iY2FuY2VsIl0nKTsKICB2YXIgY2xvc2UgPSBkb20ucXVlcnlTZWxlY3RvcignW25vZGUtdHlwZT0iY2xvc2UiXScpOwogIHZhciB0aXRsZSA9IGRvbS5xdWVyeVNlbGVjdG9yKCcudGl0bGUsIC5XX2xheWVyX3RpdGxlJyk7CiAgdmFyIG1vdXNlID0gbnVsbCwgcG9zOwogIC8vIOWumuS9jeWvueivneahhueahOS9jee9rgogIHZhciBzZXRQb3MgPSBmdW5jdGlvbiAocG9zKSB7CiAgICB2YXIgbGVmdCA9IHBvc1swXSwgdG9wID0gcG9zWzFdOwogICAgbGVmdCA9IE1hdGgubWluKE1hdGgubWF4KDAsIGxlZnQpLCBkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoIC0gZG9tLmNsaWVudFdpZHRoIC0gMik7CiAgICB0b3AgPSBNYXRoLm1pbihNYXRoLm1heCh3aW5kb3cucGFnZVlPZmZzZXQsIHRvcCksIHdpbmRvdy5wYWdlWU9mZnNldCArIHdpbmRvdy5pbm5lckhlaWdodCAtIGRvbS5jbGllbnRIZWlnaHQgLSAyKTsKICAgIGlmIChsZWZ0ICsgJ3B4JyAhPT0gZG9tLnN0eWxlLmxlZnQpIGRvbS5zdHlsZS5sZWZ0ID0gbGVmdCArICdweCc7CiAgICBpZiAodG9wICsgJ3B4JyAhPT0gZG9tLnN0eWxlLnRvcCkgZG9tLnN0eWxlLnRvcCA9IHRvcCArICdweCc7CiAgICByZXR1cm4gW2xlZnQsIHRvcF07CiAgfTsKICAvLyDnvZHpobXmu5rliqjml7bnu7TmjIHlnKjpobXpnaLlhoUKICB2YXIgaG9sZCA9IGZ1bmN0aW9uICgpIHsKICAgIHBvcyA9IHNldFBvcyhwb3MpOwogIH07CiAgLy8g5byA5aeL5ouW5ou9CiAgdmFyIGRyYWdNb3ZlU3RhcnQgPSBmdW5jdGlvbiAoZSkgewogICAgbW91c2UgPSBbZS5jbGllbnRYLCBlLmNsaWVudFldOwogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZHJhZ01vdmUpOwogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGRyYWdNb3ZlRG9uZSk7CiAgICBkb20uY2xhc3NMaXN0LmFkZCgneWF3Zi1kcmFnJyk7CiAgICBpZiAoZG9tLnNldENhcHR1cmUpIHsgZG9tLnNldENhcHR1cmUoKTsgfQogIH07CiAgLy8g5ouW5ou956e75YqoCiAgdmFyIGRyYWdNb3ZlID0gZnVuY3Rpb24gKGUpIHsKICAgIHZhciBtb3VzZV9uZXcgPSBbZS5jbGllbnRYLCBlLmNsaWVudFldOwogICAgcG9zWzBdICs9IG1vdXNlX25ld1swXSAtIG1vdXNlWzBdOwogICAgcG9zWzFdICs9IG1vdXNlX25ld1sxXSAtIG1vdXNlWzFdOwogICAgc2V0UG9zKHBvcyk7CiAgICBtb3VzZSA9IG1vdXNlX25ldzsKICB9OwogIC8vIOaLluaLvee7k+adnwogIHZhciBkcmFnTW92ZURvbmUgPSBmdW5jdGlvbiAoKSB7CiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkcmFnTW92ZSk7CiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZHJhZ01vdmVEb25lKTsKICAgIGRvbS5jbGFzc0xpc3QucmVtb3ZlKCd5YXdmLWRyYWcnKTsKICAgIGlmIChkb20ucmVsZWFzZUNhcHR1cmUpIHsgZG9tLnJlbGVhc2VDYXB0dXJlKCk7IH0KICAgIHBvcyA9IHNldFBvcyhwb3MpOwogICAgbW91c2UgPSBudWxsOwogIH07CiAgLy8g5qCH6aKY5qCP5Y+v5Lul5ouW5ou9CiAgaWYgKHRpdGxlKSB7CiAgICB0aXRsZS5zdHlsZS5jdXJzb3IgPSAnbW92ZSc7CiAgICB0aXRsZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBkcmFnTW92ZVN0YXJ0KTsKICB9CiAgLy8g56Gu5a6a5Y+W5raI562J5oyJ6ZKuCiAgaWYgKGRldGFpbHMub25PaykgaWYgKG9rKSBvay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRldGFpbHMub25Payk7CiAgaWYgKGRldGFpbHMub25DYW5jZWwpIHsKICAgIGlmIChjYW5jZWwpIGNhbmNlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRldGFpbHMub25DYW5jZWwpOwogICAgaWYgKGNsb3NlKSBjbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRldGFpbHMub25DYW5jZWwpOwogIH0KICAvLyDog4zmma/pga7nvakKICB2YXIgY292ZXIgPSB1dGlsLmRvbS5jcmVhdGUoaHRtbC5jb3Zlcik7CiAgLy8g5ZON5bqU5oyJ6ZSuCiAgdmFyIGtleXMgPSBmdW5jdGlvbiAoZSkgewogICAgaWYgKGUua2V5Q29kZSA9PT0gdXRpbC5rZXlib2FyZC5jb2RlLkVOVEVSICYmIG9rKSBvay5jbGljaygpOyAvLyBFbnRlcgogICAgZWxzZSBpZiAoZS5rZXlDb2RlID09PSB1dGlsLmtleWJvYXJkLmNvZGUuRVNDICYmIGNsb3NlKSBjbG9zZS5jbGljaygpOyAvLyBFc2MKICAgIGVsc2UgcmV0dXJuOwogICAgZS5zdG9wUHJvcGFnYXRpb24oKTsgZS5wcmV2ZW50RGVmYXVsdCgpOwogIH07CiAgLy8g5YWz6Zet5a+56K+d5qGGCiAgdmFyIGhpZGUgPSBmdW5jdGlvbiAoKSB7CiAgICBpZiAodHlwZW9mIGZvcm0ub25iZWZvcmVoaWRlID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIGlmICh1dGlsLmZ1bmMuY2F0Y2hlZChmb3JtLm9uYmVmb3JlaGlkZSkoKSA9PT0gZmFsc2UpIHJldHVybjsKICAgIH0KICAgIGRvbS5jbGFzc05hbWUgKz0gJyBVSV9hbmltYXRlZCBVSV9zcGVlZF9mYXN0IFVJX2FuaV9ib3VuY2VPdXQnOwogICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGtleXMpOwogICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgaG9sZCk7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaG9sZCk7CiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGNvdmVyKTsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGRvbSk7IH0sIDIwMCk7CiAgfTsKICAvLyDmmL7npLrlr7nor53moYYKICB2YXIgc2hvdyA9IGZ1bmN0aW9uICh0b3AsIGxlZnQpIHsKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY292ZXIpOwogICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkb20pOwogICAgaWYgKHRvcCA9PSBudWxsKSB0b3AgPSAod2luZG93LmlubmVySGVpZ2h0IC0gZG9tLmNsaWVudEhlaWdodCkgLyAyOwogICAgaWYgKGxlZnQgPT0gbnVsbCkgbGVmdCA9ICh3aW5kb3cuaW5uZXJXaWR0aCAtIGRvbS5jbGllbnRXaWR0aCkgLyAyOwogICAgcG9zID0gc2V0UG9zKFtsZWZ0LCB0b3AgKyB3aW5kb3cucGFnZVlPZmZzZXRdKTsKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBrZXlzKTsKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhvbGQpOwogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhvbGQpOwogICAgZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5ibHVyKCk7CiAgICBkb20uY2xhc3NOYW1lICs9ICcgVUlfYW5pbWF0ZWQgVUlfc3BlZWRfZmFzdCBVSV9hbmlfYm91bmNlSW4nOwogICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgIGRvbS5jbGFzc05hbWUgPSBkb20uY2xhc3NOYW1lLnJlcGxhY2UoLyg/OlxzfF4pKFVJX2FuaW1hdGVkfFVJX3NwZWVkX2Zhc3R8VUlfYW5pX2JvdW5jZUluKSg/PVxzfCQpL2csICcnKS50cmltKCk7CiAgICB9LCAyMDApOwogIH07CiAgaWYgKGRpc3BsYXkpIHNob3coKTsKICBpZiAob2spIG9rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGlkZSk7CiAgaWYgKGNhbmNlbCkgY2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGlkZSk7CiAgaWYgKGNsb3NlKSBjbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhpZGUpOwogIHZhciBmb3JtID0geyAnaGlkZSc6IGhpZGUsICdzaG93Jzogc2hvdywgJ2RvbSc6IGRvbSwgJ29uYmVmb3JlaGlkZSc6IG51bGwgfTsKICByZXR1cm4gZm9ybTsKfTsKCi8vIOaYvuekuuS4gOS4quWvueivneahhgp1dGlsLnVpLmRpYWxvZyA9IGZ1bmN0aW9uIChpZCwgdGl0bGUsIGZpbGxGdW4pIHsKICB2YXIgZG9tID0gdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC5kaWFsb2csIHsgJ2lkJzogaWQsICd0aXRsZSc6IHV0aWwuc3RyLmZpbGwodGl0bGUpIH0pKTsKICBmaWxsRnVuKGRvbS5xdWVyeVNlbGVjdG9yKCdbbm9kZS10eXBlPSJpbm5lciJdJykpOwogIHZhciBmb3JtID0gdXRpbC51aS5mb3JtKGRvbSwgZmFsc2UsIHt9KTsKICByZXR1cm4gZm9ybTsKfTsKCi8vIOaYvuekuuS4gOS4quaPkOekuuahhgp1dGlsLnVpLmFsZXJ0ID0gZnVuY3Rpb24gKGlkLCBkZXRhaWxzKSB7CiAgdmFyIGRvbSA9IHV0aWwuZG9tLmNyZWF0ZSh1dGlsLnN0ci5maWxsKGh0bWwuYWxlcnQsIHsgJ2lkJzogaWQsICd0aXRsZSc6IGRldGFpbHMudGl0bGUsICd0ZXh0JzogZGV0YWlscy50ZXh0LCAnaWNvbic6IGRldGFpbHMuaWNvbiB8fCAnYXNrJyB9KSk7CiAgdmFyIGZvcm0gPSB1dGlsLnVpLmZvcm0oZG9tLCB0cnVlLCBkZXRhaWxzKTsKICByZXR1cm4gZm9ybTsKfTsKCi8vIOaYvuekuuS4gOS4quehruWumuahhgp1dGlsLnVpLmNvbmZpcm0gPSBmdW5jdGlvbiAoaWQsIGRldGFpbHMpIHsKICB2YXIgZG9tID0gdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC5jb25maXJtLCB7ICdpZCc6IGlkLCAndGl0bGUnOiBkZXRhaWxzLnRpdGxlLCAndGV4dCc6IGRldGFpbHMudGV4dCwgJ2ljb24nOiBkZXRhaWxzLmljb24gfHwgJ3F1ZXN0aW9uJyB9KSk7CiAgdmFyIGZvcm0gPSB1dGlsLnVpLmZvcm0oZG9tLCB0cnVlLCBkZXRhaWxzKTsKICByZXR1cm4gZm9ybTsKfTsKCnV0aWwudWkuYnViYmxlID0gZnVuY3Rpb24gKGRlc2NyaXB0aW9uLCByZWYpIHsKICB2YXIgYnViYmxlOwogIHZhciByZWN0ID0gcmVmLmdldENsaWVudFJlY3RzKClbMF07CiAgaWYgKGRlc2NyaXB0aW9uIGluc3RhbmNlb2YgRWxlbWVudCkgYnViYmxlID0gZGVzY3JpcHRpb247CiAgZWxzZSBidWJibGUgPSB1dGlsLmRvbS5jcmVhdGUodXRpbC5zdHIuZmlsbChodG1sLmJ1YmJsZSwgeyAndGV4dCc6IGRlc2NyaXB0aW9uIH0pKTsKICB2YXIgYm9yID0gYnViYmxlLnF1ZXJ5U2VsZWN0b3IoJy5XX2Fycm93X2JvcicpOwogIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYnViYmxlKTsKICB1dGlsLmZ1bmMuY2FsbChmdW5jdGlvbiAoKSB7CiAgICB2YXIgdG9wMCA9IHJlY3QudG9wIC0gYnViYmxlLmNsaWVudEhlaWdodCAtIDg7CiAgICB2YXIgdG9wMSA9IHRvcDAgKyB3aW5kb3cucGFnZVlPZmZzZXQ7CiAgICB2YXIgdG9wMiA9IHJlY3QuYm90dG9tICsgOCArIHdpbmRvdy5wYWdlWU9mZnNldDsKICAgIGJ1YmJsZS5zdHlsZS5sZWZ0ID0gcmVjdC5sZWZ0IC0gMzIgKyByZWN0LndpZHRoICsgd2luZG93LnBhZ2VYT2Zmc2V0ICsgJ3B4JzsKICAgIGlmICh0b3AwID4gMCkgewogICAgICBidWJibGUuc3R5bGUudG9wID0gdG9wMSArICdweCc7CiAgICAgIGJvci5jbGFzc05hbWUgPSAnV19hcnJvd19ib3IgV19hcnJvd19ib3JfYic7CiAgICB9IGVsc2UgewogICAgICBidWJibGUuc3R5bGUudG9wID0gdG9wMiArICdweCc7CiAgICAgIGJvci5jbGFzc05hbWUgPSAnV19hcnJvd19ib3IgV19hcnJvd19ib3JfdCc7CiAgICB9CiAgfSk7CiAgcmV0dXJuIGJ1YmJsZTsKfTsKCi8vIOe9kee7nOiuv+mXruebuOWFswp2YXIgbmV0d29yayA9IHt9OwoKdXRpbC54aHIgPSBmdW5jdGlvbiAoZGV0YWlscykgewogIHV0aWwuZGVidWcoJ1hIUlVSTDogJW8nLCBkZXRhaWxzLnVybCk7CiAgcmV0dXJuIEdNX3htbGh0dHBSZXF1ZXN0KGRldGFpbHMpOwp9OwoKLy8g57u05oqk5biQ5Y+35L+h5oGv77yM55So5LqO5pi+56S6Cm5ldHdvcmsuYWNjb3VudCA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGlkQ2FjaGUgPSB7fSwgbmFtZUNhY2hlID0ge30sIHdvcmtpbmcgPSB7fTsKICB2YXIgcmVxdWVzdCA9IGZ1bmN0aW9uIChxdWVyeVN0ciwgb25zdWNjLCBvbmVycm9yKSB7CiAgICAvLyDlpoLmnpzlkIzml7blt7Lnu4/mnInkuoblkIznsbvor7fmsYLliJnnrYnlvoXpgqPkuKror7fmsYLnmoTov5Tlm54KICAgIGlmICh3b3JraW5nW3F1ZXJ5U3RyXSkgcmV0dXJuIHdvcmtpbmdbcXVlcnlTdHJdLnB1c2goW29uc3VjYywgb25lcnJvcl0pOwogICAgd29ya2luZ1txdWVyeVN0cl0gPSBbW29uc3VjYywgb25lcnJvcl1dOwogICAgdmFyIGRvbmUgPSBmdW5jdGlvbiAoc3VjY2VzcywgZGF0YSkgewogICAgICB3b3JraW5nW3F1ZXJ5U3RyXS5mb3JFYWNoKGZ1bmN0aW9uICh3KSB7IHdbc3VjY2VzcyA/IDAgOiAxXShkYXRhKTsgfSk7CiAgICAgIGRlbGV0ZSB3b3JraW5nW3F1ZXJ5U3RyXTsKICAgIH07CiAgICAvLyDor7fmsYLojrflj5YKICAgIHV0aWwueGhyKHsKICAgICAgJ21ldGhvZCc6ICdHRVQnLAogICAgICAndXJsJzogdXRpbC5zdHIuZmlsbCh1cmwubmV3Y2FyZCwgeyAncXVlcnknOiBxdWVyeVN0ciwgJ2NhbGxiYWNrJzogdXRpbC5zdHIuZmNiKCkgfSksCiAgICAgICdvbmxvYWQnOiB1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAocmVzcCkgewogICAgICAgIC8vIOawuOi/nOS4jeimgeivleWbvueQhuino+S4gOS4queUqCBKU09OIOWMheijuSBIVE1MIOeahCBBUEkKICAgICAgICB2YXIgcmVzcEpzb24gPSB1dGlsLnN0ci5wYXJzZWpzb25wKHJlc3AucmVzcG9uc2VUZXh0KTsKICAgICAgICB2YXIgbmFtZWNhcmQgPSB1dGlsLmRvbS5jcmVhdGUoJ2RpdicsIHJlc3BKc29uLmRhdGEpOwogICAgICAgIHZhciBhdmF0YXIgPSBuYW1lY2FyZC5xdWVyeVNlbGVjdG9yKCcubmFtZSBkdCBpbWcnKS5nZXRBdHRyaWJ1dGUoJ3NyYycpOwogICAgICAgIHZhciBuYW1lID0gbmFtZWNhcmQucXVlcnlTZWxlY3RvcignLm5hbWUgZGQgYVt1aWRdJykuZ2V0QXR0cmlidXRlKCd0aXRsZScpOwogICAgICAgIHZhciB1aWQgPSBuYW1lY2FyZC5xdWVyeVNlbGVjdG9yKCcubmFtZSBkZCBhW3VpZF0nKS5nZXRBdHRyaWJ1dGUoJ3VpZCcpOwogICAgICAgIHZhciBmb2xsb3cgPSB1dGlsLnN0ci5wYXJzZWludChuYW1lY2FyZC5xdWVyeVNlbGVjdG9yKCdhW2hyZWYqPSIvZm9sbG93PyJdJykubmV4dFNpYmxpbmcudGV4dENvbnRlbnQpOwogICAgICAgIHZhciBmYW5zID0gdXRpbC5zdHIucGFyc2VpbnQobmFtZWNhcmQucXVlcnlTZWxlY3RvcignYVtocmVmKj0iL2ZhbnM/Il0nKS5uZXh0U2libGluZy50ZXh0Q29udGVudCk7CiAgICAgICAgdmFyIGRhdGEgPSB7ICdhdmF0YXInOiBhdmF0YXIsICdpZCc6IHVpZCwgJ25hbWUnOiBuYW1lLCAnZm9sbG93ZXInOiBmYW5zLCAnZm9sbG93ZWUnOiBmb2xsb3cgfTsKICAgICAgICB1dGlsLmRlYnVnKCdHb3QgdXNlciBkYXRhOiAlbycsIGRhdGEpOwogICAgICAgIG5hbWVDYWNoZVtuYW1lXSA9IGlkQ2FjaGVbdWlkXSA9IGRhdGE7CiAgICAgICAgZG9uZSh0cnVlLCBkYXRhKTsKICAgICAgfSwgZnVuY3Rpb24gKCkgeyBkb25lKGZhbHNlKTsgfSksCiAgICAgICdvbmVycm9yJzogZnVuY3Rpb24gKCkgeyBkb25lKGZhbHNlKTsgfSwKICAgIH0pOwogICAgcmV0dXJuIHF1ZXJ5U3RyOwogIH07CiAgdmFyIGJ5SWQgPSBmdW5jdGlvbiAoaWQsIG9uc3VjYywgb25lcnJvcikgewogICAgaWYgKGlkQ2FjaGVbaWRdKSBvbnN1Y2MoaWRDYWNoZVtpZF0pOwogICAgZWxzZSByZXF1ZXN0KCdpZD0nICsgaWQsIG9uc3VjYywgb25lcnJvcik7CiAgfTsKICB2YXIgYnlOYW1lID0gZnVuY3Rpb24gKG5hbWUsIG9uc3VjYywgb25lcnJvcikgewogICAgaWYgKG5hbWVDYWNoZVtuYW1lXSkgb25zdWNjKG5hbWVDYWNoZVtuYW1lXSk7CiAgICBlbHNlIHJlcXVlc3QoJ25hbWU9JyArIGVuY29kZVVSSUNvbXBvbmVudChuYW1lKSwgb25zdWNjLCBvbmVycm9yKTsKICB9OwogIHZhciBwdXQgPSBmdW5jdGlvbiAoZGF0YSkgewogICAgbmFtZUNhY2hlW2RhdGEubmFtZV0gPSBpZENhY2hlW2RhdGEuaWRdID0gZGF0YTsKICB9OwogIHJldHVybiB7ICdpZCc6IGJ5SWQsICduYW1lJzogYnlOYW1lLCAncHV0JzogcHV0IH07Cn0oKSk7CgpuZXR3b3JrLmJ1ZmZlcmVkID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgYnVmZmVyID0gW10sIGJ1c3kgPSBmYWxzZTsKICB2YXIgZGVsYXkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAzMDAwICsgTWF0aC5yb3VuZCgyMCAqIE1hdGgucmFuZG9tKCkpICogMTAwOyB9OwogIHZhciBhY3RpdmUgPSBmdW5jdGlvbiBhY3RpdmUoKSB7CiAgICBpZiAoIShidXN5ID0gISFidWZmZXIubGVuZ3RoKSkgcmV0dXJuOwogICAgdmFyIGNhbGxiYWNrID0gYnVmZmVyLnNoaWZ0KCk7CiAgICBjYWxsYmFjayhmdW5jdGlvbiAoKSB7IHNldFRpbWVvdXQoYWN0aXZlLCBkZWxheSgpKTsgfSk7CiAgfTsKICByZXR1cm4gZnVuY3Rpb24gKGNhbGxiYWNrKSB7CiAgICBidWZmZXIucHVzaChjYWxsYmFjayk7CiAgICBpZiAoIWJ1c3kpIGFjdGl2ZSgpOwogICAgcmV0dXJuIGNhbGxiYWNrOwogIH07Cn0oKSk7CgovLyDojrflj5bnlKjmiLfnmoTlhbPms6jliIbnu4Tmg4XlhrUKbmV0d29yay5ncm91cCA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIHBlbmRpbmcgPSBbXSwgY2FjaGUgPSBudWxsLCBidXN5ID0gZmFsc2U7CiAgdmFyIHJlcXVlc3QgPSBmdW5jdGlvbiAob25zdWNjLCBvbmVycm9yKSB7CiAgICBwZW5kaW5nLnB1c2goeyAnb25zdWNjJzogb25zdWNjLCAnb25lcnJvcic6IG9uZXJyb3IgfSk7CiAgICBpZiAoY2FjaGUpIHsgdXRpbC5mdW5jLmNhbGwocmVzcG9uc2UpOyByZXR1cm47IH0KICAgIGlmIChidXN5KSByZXR1cm47IGJ1c3kgPSB0cnVlOwogICAgcmV0dXJuIHV0aWwueGhyKHsKICAgICAgJ21ldGhvZCc6ICdHRVQnLAogICAgICAndXJsJzogdXRpbC5zdHIuZmlsbCh1cmwubGlzdF9ncm91cCksCiAgICAgICdvbmxvYWQnOiBmdW5jdGlvbiAocmVzcCkgewogICAgICAgIHZhciBncm91cHMgPSBKU09OLnBhcnNlKHJlc3AucmVzcG9uc2VUZXh0KS5kYXRhOwogICAgICAgIGNhY2hlID0gZ3JvdXBzLm1hcChmdW5jdGlvbiAoZ3JvdXApIHsKICAgICAgICAgIHJldHVybiB7IGlkOiBncm91cC5naWQsIG5hbWU6IGdyb3VwLmduYW1lIH07CiAgICAgICAgfSk7CiAgICAgICAgYnVzeSA9IGZhbHNlOwogICAgICAgIHV0aWwuZGVidWcoJ2dvdCBncm91cCBpbmZvOiAlbycsIGNhY2hlKTsKICAgICAgICByZXNwb25zZSgpOwogICAgICB9LAogICAgICAnb25lcnJvcic6IGZ1bmN0aW9uICgpIHsKICAgICAgICBidXN5ID0gZmFsc2U7CiAgICAgICAgdXRpbC5kZWJ1ZygnZ290IGdyb3VwIGluZm8gZmFpbCcpOwogICAgICAgIHJlc3BvbnNlKCk7CiAgICAgIH0sCiAgICB9KTsKICB9OwogIHZhciByZXNwb25zZSA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBjYWxsYmFja3MgPSBwZW5kaW5nLnNwbGljZSgwKTsKICAgIGNhbGxiYWNrcy5mb3JFYWNoKGZ1bmN0aW9uIChjYWxsYmFja3MpIHsKICAgICAgaWYgKGNhY2hlKSBjYWxsYmFja3Mub25zdWNjKGNhY2hlKTsKICAgICAgZWxzZSBjYWxsYmFja3Mub25lcnJvcihjYWNoZSk7CiAgICB9KTsKICB9OwogIHJldHVybiBmdW5jdGlvbiAob25zdWNjLCBvbmVycm9yKSB7CiAgICByZXF1ZXN0KG9uc3VjYywgb25lcnJvcik7CiAgfTsKfSgpKTsKCm5ldHdvcmsuaGVhZGVycyA9IGZ1bmN0aW9uICgpIHsKICByZXR1cm4gewogICAgJ0FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSwqLyo7cT0wLjgnLAogICAgJ0NhY2hlLUNvbnRyb2wnOiAnbm8tY2FjaGUnLAogICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgnLAogICAgJ0Nvb2tpZSc6IGRvY3VtZW50LmNvb2tpZSwKICAgICdSZWZlcmVyJzogbG9jYXRpb24uaHJlZiwKICAgICdYLVJlcXVlc3RlZC1XaXRoJzogJ1hNTEh0dHBSZXF1ZXN0JywKICB9Owp9OwoKbmV0d29yay53ZWlibyA9IHt9OwovLyDlkYror4nmnI3liqHlmajlsY/olL3ooqvpmpDol4/nmoTlvq7ljZoKbmV0d29yay53ZWliby5ibG9jayA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGFsbCA9IFtdOwogIHZhciBibG9jayA9IGZ1bmN0aW9uIChtaWQsIGNhbGxiYWNrKSB7CiAgICB1dGlsLmRlYnVnKCdibG9ja2luZyB3ZWlibyAlcycsIG1pZCk7CiAgICB1dGlsLnhocih7CiAgICAgICdtZXRob2QnOiAnUE9TVCcsCiAgICAgICd1cmwnOiB1dGlsLnN0ci5maWxsKHVybC5ibG9ja193YiksCiAgICAgICdoZWFkZXJzJzogbmV0d29yay5oZWFkZXJzKCksCiAgICAgICdkYXRhJzogJ2ZpbHRlcl90eXBlPTAmbWlkPScgKyBtaWQgKyAnJmp1c3RoaWRlPTAnLAogICAgICAnb25sb2FkJzogZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgICB0cnkgeyB1dGlsLmRlYnVnKCdibG9jayAlcyByZXNwb25zZTogJW8nLCBtaWQsIEpTT04ucGFyc2UocmVzcC5yZXNwb25zZVRleHQpKTsgfQogICAgICAgIGNhdGNoIChlKSB7IHV0aWwuZGVidWcoJ2Jsb2NrICVzIHJlc3BvbnNlOiAlcycsIG1pZCwgcmVzcC5yZXNwb25zZVRleHQpOyB9CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfSwKICAgICAgJ29uZXJyb3InOiBmdW5jdGlvbiAoKSB7IHV0aWwuZGVidWcoJ2Jsb2NrICVzIG5ldHdvcmsgZXJyb3InLCBtaWQpOyBjYWxsYmFjaygpOyB9LAogICAgfSk7CiAgfTsKICByZXR1cm4gZnVuY3Rpb24gKG1pZCkgewogICAgaWYgKGFsbC5pbmRleE9mKG1pZCkgIT09IC0xKSByZXR1cm4gbnVsbDsgYWxsLnB1c2gobWlkKTsKICAgIG5ldHdvcmsuYnVmZmVyZWQoZnVuY3Rpb24gKGNhbGxiYWNrKSB7IGJsb2NrKG1pZCwgY2FsbGJhY2spOyB9KTsKICB9Owp9KCkpOwoKbmV0d29yay5jb21tZW50ID0ge307Ci8vIOWIoOivhOiuugpuZXR3b3JrLmNvbW1lbnQuZGVsID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgZGVsID0gZnVuY3Rpb24gKGluZm8sIGNhbGxiYWNrKSB7CiAgICB1dGlsLmRlYnVnKCdkZWxldGluZyBjb21tZW50ICVzJywgaW5mbyk7CiAgICB1dGlsLnhocih7CiAgICAgICdtZXRob2QnOiAnUE9TVCcsCiAgICAgICd1cmwnOiB1dGlsLnN0ci5maWxsKHVybC5kZWxfY210KSwKICAgICAgJ2hlYWRlcnMnOiBuZXR3b3JrLmhlYWRlcnMoKSwKICAgICAgJ2RhdGEnOiBpbmZvICsgJyZibG9jaz0xJywKICAgICAgJ29ubG9hZCc6IGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgdHJ5IHsgdXRpbC5kZWJ1ZygnZGVsZXRlICVzIHJlc3BvbnNlOiAlbycsIGluZm8sIEpTT04ucGFyc2UocmVzcC5yZXNwb25zZVRleHQpKTsgfQogICAgICAgIGNhdGNoIChlKSB7IHV0aWwuZGVidWcoJ2RlbGV0ZSAlcyByZXNwb25zZTogJXMnLCBpbmZvLCByZXNwLnJlc3BvbnNlVGV4dCk7IH0KICAgICAgICBjYWxsYmFjaygpOwogICAgICB9LAogICAgICAnb25lcnJvcic6IGZ1bmN0aW9uICgpIHsgdXRpbC5kZWJ1ZygnYmxvY2sgJXMgbmV0d29yayBlcnJvcicsIGluZm8pOyBjYWxsYmFjaygpOyB9LAogICAgfSk7CiAgfTsKICByZXR1cm4gZnVuY3Rpb24gKGluZm8pIHsKICAgIG5ldHdvcmsuYnVmZmVyZWQoZnVuY3Rpb24gKGNhbGxiYWNrKSB7IGRlbChpbmZvLCBjYWxsYmFjayk7IH0pOwogIH07Cn0oKSk7CgpuZXR3b3JrLnZvdGUgPSBmdW5jdGlvbiAodm90ZUlkLCBjYWxsYmFjaykgewogIHV0aWwueGhyKHsKICAgICdtZXRob2QnOiAnR0VUJywKICAgICd1cmwnOiB1dGlsLnN0ci5maWxsKHVybC52b3RlLCB7ICd2b3RlSWQnOiB2b3RlSWQgfSksCiAgICAnb25sb2FkJzogZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgdmFyIGRvbSA9IChuZXcgRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyhyZXNwLnJlc3BvbnNlVGV4dCwgJ3RleHQvaHRtbCcpOwogICAgICB2YXIgc2NyaXB0ID0gZG9tLnF1ZXJ5U2VsZWN0b3IoJ2hlYWQgc2NyaXB0JykudGV4dENvbnRlbnQ7CiAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShzY3JpcHQubWF0Y2goL1x7W1xzXFNdKlx9LylbMF0pOwogICAgICBjYWxsYmFjayhkYXRhKTsKICAgIH0sCiAgfSk7Cn07CgpuZXR3b3JrLnVhID0ge307Cm5ldHdvcmsudWEuYW5kcm9pZCA9ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNC40LjI7IHpoLWNuOyBZQVdGKSBBcHBsZVdlYktpdC81MzcuMTYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBNb2JpbGUgU2FmYXJpLzUzNy4xNic7CgpuZXR3b3JrLnZpZGVvID0ge307Ci8vIOmAmui/h+enkuaLjeinhumikeeahCBvYmplY3RpZCDojrflj5YgbXA0IOaWh+S7tuWcsOWdgAovLyDojrflj5bmlrnms5XmmK/mqKHmi5/lronljZPnlKjmiLforr/pl67np5Lmi43op4bpopHnmoTnvZHpobUKbmV0d29yay52aWRlby5nZXQgPSB7fTsKbmV0d29yay52aWRlby5nZXRbJzEwMzQnXSA9IGZ1bmN0aW9uIChpZCwgY2FsbGJhY2spIHsKICB1dGlsLnhocih7CiAgICAnbWV0aG9kJzogJ0dFVCcsCiAgICAndXJsJzogdXRpbC5zdHIuZmlsbCh1cmwudmlkZW9fc2hvdywgeyAnaWQnOiBpZCB9KSwKICAgICdoZWFkZXJzJzogewogICAgICAnVXNlci1BZ2VudCc6IG5ldHdvcmsudWEuYW5kcm9pZAogICAgfSwKICAgICdvbmxvYWQnOiBmdW5jdGlvbiAocmVzcCkgewogICAgICB2YXIgZCA9IHV0aWwuZG9tLmNyZWF0ZSgnZGl2JywgcmVzcC5yZXNwb25zZVRleHQpOwogICAgICB2YXIgdmlkZW8gPSBkLnF1ZXJ5U2VsZWN0b3IoJ3ZpZGVvJyk7CiAgICAgIGNhbGxiYWNrKHZpZGVvLmdldEF0dHJpYnV0ZSgnc3JjJykpOwogICAgfSwKICB9KTsKfTsKbmV0d29yay52aWRlby5nZXRbJzIwMTc2MDcnXSA9IGZ1bmN0aW9uICh1cmwsIGNhbGxiYWNrKSB7CiAgdXRpbC54aHIoewogICAgJ21ldGhvZCc6ICdHRVQnLAogICAgJ3VybCc6IHVybCwKICAgICdoZWFkZXJzJzogewogICAgICAnVXNlci1BZ2VudCc6IG5ldHdvcmsudWEuYW5kcm9pZAogICAgfSwKICAgICdvbmxvYWQnOiBmdW5jdGlvbiAocmVzcCkgewogICAgICB2YXIgZCA9IHV0aWwuZG9tLmNyZWF0ZSgnZGl2JywgcmVzcC5yZXNwb25zZVRleHQpOwogICAgICB2YXIgdmlkZW8gPSBkLnF1ZXJ5U2VsZWN0b3IoJy52aWRfaW1nJyk7CiAgICAgIGNhbGxiYWNrKHZpZGVvLmdldEF0dHJpYnV0ZSgnZGF0YS11cmwnKSk7CiAgICB9LAogIH0pOwp9OwoKbmV0d29yay5pbWFnZSA9IHt9OwpuZXR3b3JrLmltYWdlLmdldCA9IGZ1bmN0aW9uICh1cmwsIGNhbGxiYWNrKSB7CiAgdXRpbC54aHIoewogICAgJ21ldGhvZCc6ICdHRVQnLAogICAgJ3VybCc6IHVybCwKICAgICdyZXNwb25zZVR5cGUnOiAnYXJyYXlidWZmZXInLAogICAgJ29ubG9hZCc6IGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY2FsbGJhY2socmVzcC5yZXNwb25zZSk7CiAgICAgIH0gY2F0Y2ggKF9pZ25vcmUpIHsgY2FsbGJhY2soKTsgfQogICAgfSwKICAgICdvbmVycm9yJzogZnVuY3Rpb24gKCkgeyBjYWxsYmFjaygpOyB9LAogIH0pOwp9OwoKLy8g55yL55yL5p+Q5Liq5Lq65pyA6L+R6YO95pyJ5ZOq5Lqb5b6u5Y2aCi8vIOi+k+WFpeaYryB1aWTvvIwg6L+U5Zue55qE5pivIG1pZCDmlbDnu4TvvIzmiJbnqbrmlbDnu4TvvIjlpLHotKXvvIkKbmV0d29yay5yZWNlbnQgPSAoZnVuY3Rpb24gKCkgewogIC8vIOWHj+Wwkeiuv+mXruS4quS6uuS4u+mhteeahOasoeaVsAogIC8vIOmZkOWItuS4gOWIu+mSn+WGheacgOWkmuiuv+mXruS4gOasoeafkOS6uueahOS4u+mhtQogIC8vIOmHjeWkjeeahOiuv+mXrueUqOe8k+WtmOino+WGswogIHZhciBjYWNoZSA9IChmdW5jdGlvbiAoKSB7CiAgICB2YXIgZGF0YTsKICAgIHZhciBybSA9IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHRpbWUgPSBEYXRlLm5vdygpOwogICAgICBPYmplY3Qua2V5cyhkYXRhKS5mb3JFYWNoKGZ1bmN0aW9uICh1c2VyKSB7IGlmIChkYXRhW3VzZXJdLmV4cCA8IHRpbWUpIGRlbGV0ZSBkYXRhW3VzZXJdOyB9KTsKICAgIH07CiAgICB2YXIgcmVhZCA9IGZ1bmN0aW9uICgpIHsgZGF0YSA9IEpTT04ucGFyc2UoR01fZ2V0VmFsdWUoJ3JlY2VudG1pZCcsICd7fScpKSB8fCB7fTsgcm0oKTsgfTsKICAgIHZhciB3cml0ZSA9IGZ1bmN0aW9uICgpIHsgR01fc2V0VmFsdWUoJ3JlY2VudG1pZCcsIEpTT04uc3RyaW5naWZ5KGRhdGEpKTsgfTsKICAgIHJldHVybiBmdW5jdGlvbiAodWlkLCBtaWRzKSB7CiAgICAgIHJlYWQoKTsgaWYgKG1pZHMpIGRhdGFbdWlkXSA9IHsgJ2V4cCc6IERhdGUubm93KCkgKyAxZTYsICdtaWQnOiBtaWRzIH07IHdyaXRlKCk7CiAgICAgIHJldHVybiAoZGF0YVt1aWRdIHx8IHt9KS5taWQ7CiAgICB9OwogIH0oKSk7CiAgLy8g6K6/6Zeu5Liq5Lq65Li76aG1CiAgdmFyIGdldCA9IGZ1bmN0aW9uICh1aWQsIGNhbGxiYWNrKSB7CiAgICB1dGlsLmRlYnVnKCdyZXF1ZXN0IHVzZXIgcGFnZTogJW8nLCB1aWQpOwogICAgdXRpbC54aHIoewogICAgICAnbWV0aG9kJzogJ0dFVCcsCiAgICAgICd1cmwnOiB1dGlsLnN0ci5maWxsKHVybC51c2VyLCB7ICd1aWQnOiB1aWQgfSksCiAgICAgICdvbmxvYWQnOiBmdW5jdGlvbiAocmVzcCkgewogICAgICAgIHRyeSB7CiAgICAgICAgICB2YXIgZCA9IFN0cmluZyhyZXNwLnJlc3BvbnNlVGV4dCk7CiAgICAgICAgICB2YXIgcmUgPSAvPHNjcmlwdD5GTVwudmlld1woeyJucyI6InBsXC5jb250ZW50XC5ob21lRmVlZFwuaW5kZXgiLioiaHRtbCI6KD89LipXQl9mZWVkX3R5cGUpKCIuKiIpfVwpPFwvc2NyaXB0PlxuLzsKICAgICAgICAgIHZhciBodG1sID0gSlNPTi5wYXJzZShkLm1hdGNoKHJlKVsxXSk7CiAgICAgICAgICB2YXIgZG9tID0gdXRpbC5kb20uY3JlYXRlKCdkaXYnLCBodG1sKTsKICAgICAgICAgIHZhciBmZWVkcyA9IEFycmF5LmZyb20oZG9tLnF1ZXJ5U2VsZWN0b3JBbGwoJy5XQl9mZWVkX3R5cGVbbWlkXTpub3QoW2ZlZWR0eXBlPSJhZCJdKScpKTsKICAgICAgICAgIHZhciBtaWRzID0gZmVlZHMubWFwKGZ1bmN0aW9uIChmKSB7IHJldHVybiBmLmdldEF0dHJpYnV0ZSgnbWlkJyk7IH0pOwogICAgICAgICAgdXRpbC5kZWJ1ZygndXNlciBwYWdlICVvIGZvdW5kICVvIG1lc3NhZ2VzOiAlbycsIHVpZCwgbWlkcy5sZW5ndGgsIG1pZHMpOwogICAgICAgICAgaWYgKG1pZHMubGVuZ3RoKSBjYWNoZSh1aWQsIG1pZHMpOwogICAgICAgICAgY2FsbGJhY2sobWlkcyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgdXRpbC5kZWJ1ZygndXNlciBwYWdlIHJlYWQgZXJyb3I6ICVvJywgZSk7CiAgICAgICAgICBjYWxsYmFjayhbXSk7CiAgICAgICAgfQogICAgICB9LAogICAgfSk7CiAgfTsKICAvLyDmjqfliLborr/pl67popHnjocKICAvLyDmr4/mrKHorr/pl67lkI7pl7TpmpQgMu+9njQg56eS5YaN6L+b6KGM5LiL5qyh6K6/6ZeuCiAgdmFyIGJ1c3kgPSBmYWxzZSwgcXVldWUgPSBbXTsKICB2YXIgYWN0aXZlID0gZnVuY3Rpb24gYWN0aXZlKCkgewogICAgaWYgKCFxdWV1ZS5sZW5ndGgpIHJldHVybjsKICAgIGlmIChidXN5KSByZXR1cm47CiAgICB2YXIgcmVxID0gcXVldWUuc2hpZnQoKTsKICAgIGdldChyZXFbMF0sIGZ1bmN0aW9uIChtaWRzKSB7CiAgICAgIHV0aWwuZnVuYy5jYWxsKHJlcVsxXSwgbWlkcyk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIGJ1c3kgPSBmYWxzZTsKICAgICAgICBhY3RpdmUoKTsKICAgICAgfSwgTWF0aC5yb3VuZCgyMDAwICogKDEgKyBNYXRoLnJhbmRvbSgpKSkpOwogICAgfSk7CiAgICBidXN5ID0gdHJ1ZTsKICB9OwogIHJldHVybiBmdW5jdGlvbiAodWlkLCBjYWxsYmFjaykgewogICAgdmFyIG1pZHMgPSBjYWNoZSh1aWQpOwogICAgaWYgKG1pZHMpIHsKICAgICAgdXRpbC5mdW5jLmNhbGwoY2FsbGJhY2ssIG1pZHMpOwogICAgICB1dGlsLmRlYnVnKCdyZWFkIHVzZXIgcGFnZSAlbyBmcm9tIGNhY2hlOiAlbycsIHVpZCwgbWlkcyk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHF1ZXVlLnB1c2goW3VpZCwgY2FsbGJhY2tdKTsKICAgIGFjdGl2ZSgpOwogIH07Cn0oKSk7CgpuZXR3b3JrLnN1Z2dlc3QgPSB7fTsKCi8vIOaOqOiNkOeUqOaIt+aIluivnemimOetiQpuZXR3b3JrLnN1Z2dlc3QuYmFzZSA9IGZ1bmN0aW9uIChmdW5jLCBub3JtYWxpemUsIGVtcHR5KSB7CiAgdmFyIHN1Z2dlc3RDYWNoZSA9IHt9OwogIHZhciBjdXJyZW50ID0gbnVsbCwgeGhyID0gbnVsbDsKICBpZiAoZW1wdHkgIT0gbnVsbCkgc3VnZ2VzdENhY2hlWycnXSA9IGVtcHR5OwogIHJldHVybiBmdW5jdGlvbiAocXVlcnksIGNhbGxiYWNrKSB7CiAgICBxdWVyeSA9IG5vcm1hbGl6ZShxdWVyeSk7CiAgICBpZiAoY3VycmVudCA9PT0gcXVlcnkpIHJldHVybjsKICAgIGlmIChjdXJyZW50ICYmIHhocikgeGhyLmFib3J0KCk7CiAgICBpZiAoc3VnZ2VzdENhY2hlW3F1ZXJ5XSkgewogICAgICBjdXJyZW50ID0geGhyID0gbnVsbDsKICAgICAgY2FsbGJhY2soc3VnZ2VzdENhY2hlW3F1ZXJ5XSk7CiAgICB9IGVsc2UgewogICAgICBjdXJyZW50ID0gcXVlcnk7CiAgICAgIHhociA9IGZ1bmMocXVlcnksIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgc3VnZ2VzdENhY2hlW3F1ZXJ5XSA9IGRhdGE7CiAgICAgICAgY3VycmVudCA9IHhociA9IG51bGw7CiAgICAgICAgY2FsbGJhY2soZGF0YSk7CiAgICAgIH0pOwogICAgfQogIH07Cn07CgpuZXR3b3JrLnN1Z2dlc3QudG9wc3VnZ2VzdCA9IGZ1bmN0aW9uIChxdWVyeSwgY2FsbGJhY2spIHsKICByZXR1cm4gdXRpbC54aHIoewogICAgJ21ldGhvZCc6ICdHRVQnLAogICAgJ3VybCc6IHV0aWwuc3RyLmZpbGwodXJsLnRvcHN1Z2dlc3QsIHsgJ3F1ZXJ5JzogZW5jb2RlVVJJQ29tcG9uZW50KHF1ZXJ5KSwgJ2NhbGxiYWNrJzogdXRpbC5zdHIuZmNiKCkgfSksCiAgICAnb25sb2FkJzogZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgdmFyIGRhdGEgPSB1dGlsLnN0ci5wYXJzZWpzb25wKHJlc3AucmVzcG9uc2VUZXh0KS5kYXRhOwogICAgICBkYXRhLnVzZXIuZm9yRWFjaChmdW5jdGlvbiAodXNlcikgewogICAgICAgIHZhciBkYXRhID0geyAnaWQnOiBTdHJpbmcodXNlci51X2lkKSwgJ2F2YXRhcic6IHVzZXIudV9waWMsICduYW1lJzogdXNlci51X25hbWUgfTsKICAgICAgICBuZXR3b3JrLmFjY291bnQucHV0KGRhdGEpOwogICAgICB9KTsKICAgICAgY2FsbGJhY2soZGF0YSk7CiAgICB9LAogIH0pOwp9OwoKLy8g5o6o6I2Q55So5oi3Cm5ldHdvcmsuc3VnZ2VzdC51c2VyID0gbmV0d29yay5zdWdnZXN0LmJhc2UoZnVuY3Rpb24gKHF1ZXJ5LCBjYWxsYmFjaykgewogIHZhciByZXN1bHQxID0gbnVsbCwgcmVzdWx0MiA9IG51bGw7CiAgLy8g5oqK5Lik5Liq57uT5p6c5ZCI5bm277yM6Ieq5bex5YWz5rOo55qE5biQ5Y+35LyY5YWICiAgdmFyIGRvbmUgPSBmdW5jdGlvbiAoKSB7CiAgICBpZiAoIXJlc3VsdDEgfHwgIXJlc3VsdDIpIHJldHVybjsKICAgIHZhciByZXN1bHRzID0gcmVzdWx0Mi5jb25jYXQocmVzdWx0MSk7CiAgICByZXN1bHRzID0gcmVzdWx0cy5maWx0ZXIoZnVuY3Rpb24gKHgsIGkpIHsgcmV0dXJuIHJlc3VsdHMuaW5kZXhPZih4KSA9PT0gaTsgfSk7CiAgICBjYWxsYmFjayhyZXN1bHRzKTsKICB9OwogIC8vIOaOqOiNkOaQnOe0ouahhuaPkOS+m+eahOWAmemAieeUqOaItwogIC8vIOi/meS6m+S4gOiIrOaYr+W+ruWNmuS4reWFs+azqOmHj+i+g+WkmueahOW4kOWPtwogIHZhciBuZXR3b3JrMSA9IG5ldHdvcmsuc3VnZ2VzdC50b3BzdWdnZXN0KHF1ZXJ5LCBmdW5jdGlvbiAoZGF0YSkgewogICAgcmVzdWx0MSA9IGRhdGEudXNlci5tYXAoZnVuY3Rpb24gKHVzZXIpIHsgcmV0dXJuIHVzZXIudV9uYW1lOyB9KTsKICAgIGRvbmUoKTsKICB9KTsKICAvLyDmjqjojZDmj5DliLDlt6Xlhbfmj5DkvpvnmoTlgJnpgInnlKjmiLcKICAvLyDov5nkupvmmK/oh6rlt7HlhbPms6jnmoTluJDlj7cKICB2YXIgbmV0d29yazIgPSB1dGlsLnhocih7CiAgICAnbWV0aG9kJzogJ0dFVCcsCiAgICAndXJsJzogdXRpbC5zdHIuZmlsbCh1cmwuYXR0ZW50aW9uLCB7ICdxdWVyeSc6IGVuY29kZVVSSUNvbXBvbmVudChxdWVyeSkgfSksCiAgICAnb25sb2FkJzogZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKHJlc3AucmVzcG9uc2VUZXh0KS5kYXRhOwogICAgICByZXN1bHQyID0gZGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsgcmV0dXJuIGl0ZW0uc2NyZWVuX25hbWU7IH0pOwogICAgICBkb25lKCk7CiAgICB9LAogIH0pOwogIHJldHVybiB7CiAgICAnYWJvcnQnOiBmdW5jdGlvbiAoKSB7CiAgICAgIG5ldHdvcmsxLmFib3J0KCk7CiAgICAgIG5ldHdvcmsyLmFib3J0KCk7CiAgICB9CiAgfTsKfSwgZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgucmVwbGFjZSgvXkAvLCAnJyk7IH0sIFtdKTsKCm5ldHdvcmsuc3VnZ2VzdC5ncm91cCA9IG5ldHdvcmsuc3VnZ2VzdC5iYXNlKGZ1bmN0aW9uIChxdWVyeSwgY2FsbGJhY2spIHsKICByZXR1cm4gbmV0d29yay5ncm91cChmdW5jdGlvbiAoZ3JvdXBzKSB7CiAgICB2YXIgbmFtZXMgPSBncm91cHMubWFwKGZ1bmN0aW9uIChncm91cCkgeyByZXR1cm4gZ3JvdXAubmFtZTsgfSk7CiAgICB2YXIgbWF0Y2hlcyA9IG5hbWVzLmZpbHRlcihmdW5jdGlvbiAoZ3JvdXApIHsgcmV0dXJuIGdyb3VwLmluZGV4T2YocXVlcnkudHJpbSgpKSAhPT0gLTE7IH0pOwogICAgY2FsbGJhY2sobWF0Y2hlcyk7CiAgfSwgZnVuY3Rpb24gKCkgeyBjYWxsYmFjayhbXSk7IH0pOwp9LCBmdW5jdGlvbiAoeCkgeyByZXR1cm4geDsgfSk7CgovLyDmjqjojZDor53popgKbmV0d29yay5zdWdnZXN0LnRvcGljID0gbmV0d29yay5zdWdnZXN0LmJhc2UoZnVuY3Rpb24gKHF1ZXJ5LCBjYWxsYmFjaykgewogIHJldHVybiB1dGlsLnhocih7CiAgICAnbWV0aG9kJzogJ0dFVCcsCiAgICAndXJsJzogdXRpbC5zdHIuZmlsbCh1cmwudG9waWNzdWdnZXN0LCB7ICdxdWVyeSc6IGVuY29kZVVSSUNvbXBvbmVudChxdWVyeSkgfSksCiAgICAnb25sb2FkJzogZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKHJlc3AucmVzcG9uc2VUZXh0KS5kYXRhOwogICAgICB2YXIgZm9ybWF0dGVkID0gZGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsgcmV0dXJuIGl0ZW0udG9waWM7IH0pOwogICAgICAvLyDmnInkuIDkupvlnLDngrnkvJrmt7flnKjph4zpnaLvvIzmnIDlkI7nlKgg4oCcW+WcsOeCuV3igJ0g5qCH6K+GCiAgICAgIC8vIOi/memHjOWwhuaJgOacieacieaWueaLrOWPt+eahOmDveWIoOaOiQogICAgICBmb3JtYXR0ZWQgPSBmb3JtYXR0ZWQuZmlsdGVyKGZ1bmN0aW9uICh0b3BpYykgeyByZXR1cm4gdG9waWMuaW5kZXhPZignXScpID09PSAtMTsgfSk7CiAgICAgIGNhbGxiYWNrKGZvcm1hdHRlZCk7CiAgICB9LAogIH0pOwp9LCBmdW5jdGlvbiAoeCkgeyByZXR1cm4geC5yZXBsYWNlKC8jL2csICcnKTsgfSwgW10pOwoKbmV0d29yay53ZWliby5sb25ndGV4dCA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIG1heGxlbmd0aCA9IDIwMDAsIGJyID0gMTsKICB2YXIgd29yZENvdW50ID0gZnVuY3Rpb24gKGh0bWwpIHsKICAgIHZhciBwID0gdXRpbC5kb20uY3JlYXRlKCdkaXYnLCBodG1sKSwgdGV4dCA9IHAudGV4dENvbnRlbnQsIGJyID0gcC5xdWVyeVNlbGVjdG9yQWxsKCdicicpLmxlbmd0aDsKICAgIHZhciBjb3VudCA9IE1hdGguY2VpbCh0ZXh0Lmxlbmd0aCAtICh0ZXh0Lm1hdGNoKC9bXHUwMDAwLVx1MDBmZl0vZykgfHwgW10pLmxlbmd0aCAvIDIpOyAvLyDopb/mloflrZfmr43mjInljYrlrZforqEKICAgIHJldHVybiB7ICdjb3VudCc6IGNvdW50LCAnYnInOiBiciB9OwogIH07CiAgdmFyIGNoZWNrTGVuZ3RoID0gZnVuY3Rpb24gKGNvdW50LCBsaW5lcykgewogICAgaWYgKG1heGxlbmd0aCA9PT0gMjAwMCkgcmV0dXJuIHRydWU7CiAgICBpZiAoY291bnQgKyBsaW5lcyAqIGJyIDw9IG1heGxlbmd0aCkgcmV0dXJuIHRydWU7CiAgICByZXR1cm4gZmFsc2U7CiAgfTsKICAvLyDor7vlhpnnvJPlrZgKICB2YXIgZ2V0Q2FjaGUgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgY2FjaGU7CiAgICB0cnkgeyBjYWNoZSA9IEpTT04ucGFyc2UoR01fZ2V0VmFsdWUoJ2xvbmdfd2VpYm9fY2FjaGUnLCAne30nKSk7IH0gY2F0Y2ggKGUpIHsgfQogICAgcmV0dXJuIGNhY2hlIHx8IHt9OwogIH07CiAgdmFyIHB1dENhY2hlID0gZnVuY3Rpb24gKGNhY2hlKSB7CiAgICBHTV9zZXRWYWx1ZSgnbG9uZ193ZWlib19jYWNoZScsIEpTT04uc3RyaW5naWZ5KGNhY2hlKSk7CiAgfTsKICAvLyDmm7TmlrDnvJPlrZgKICB2YXIgd3JpdGVDYWNoZSA9IGZ1bmN0aW9uIChtaWQsIGh0bWwsIGNvdW50LCBicikgewogICAgdmFyIGNhY2hlID0gZ2V0Q2FjaGUoKTsKICAgIHdoaWxlIChPYmplY3Qua2V5cyhjYWNoZSkubGVuZ3RoID4gMmU0IC8gbWF4bGVuZ3RoKSB7CiAgICAgIGRlbGV0ZSBjYWNoZVtNYXRoLm1pbi5hcHBseShNYXRoLCBPYmplY3Qua2V5cyhjYWNoZSkpXTsKICAgIH0KICAgIGNhY2hlW21pZF0gPSB7ICdodG1sJzogaHRtbCwgJ2NvdW50JzogY291bnQsICdicic6IGJyIH07CiAgICB1dGlsLmRlYnVnKCdnZXRsb25ndGV4dCBjYWNoZSB3cml0ZTogJW8gLT4gJW8nLCBtaWQsIGNhY2hlW21pZF0pOwogICAgdXRpbC5kZWJ1ZygnZ2V0bG9uZ3RleHQgY2FjaGUga2V5czogJW8nLCBPYmplY3Qua2V5cyhjYWNoZSkpOwogICAgcHV0Q2FjaGUoY2FjaGUpOwogIH07CiAgLy8g5qOA5p+l57yT5a2YCiAgdmFyIHJlYWRDYWNoZSA9IGZ1bmN0aW9uIChtaWQpIHsKICAgIHZhciBjYWNoZSA9IGdldENhY2hlKCk7CiAgICB1dGlsLmRlYnVnKCdnZXRsb25ndGV4dCBjYWNoZSBjaGVjayAobWlkOiAlbyk6ICVvJywgbWlkLCBjYWNoZVttaWRdKTsKICAgIGlmIChtaWQgaW4gY2FjaGUgJiYgY2FjaGVbbWlkXS5odG1sICYmCiAgICAgIGNoZWNrTGVuZ3RoKGNhY2hlW21pZF0uY291bnQsIGNhY2hlW21pZF0uYnIpKSByZXR1cm4gY2FjaGVbbWlkXS5odG1sOwogICAgaWYgKG1pZCBpbiBjYWNoZSAmJiBjYWNoZVttaWRdLmNvdW50ICYmCiAgICAgICFjaGVja0xlbmd0aChjYWNoZVttaWRdLmNvdW50LCBjYWNoZVttaWRdLmJyKSkgcmV0dXJuIGNhY2hlW21pZF0uY291bnQ7CiAgICByZXR1cm4gbnVsbDsKICB9OwogIC8vIOajgOafpeafkOadoeW+ruWNmueahOWujOaVtOWGheWuuQogIHZhciBnZXR0ZXIgPSBmdW5jdGlvbiAobWlkLCBjYWxsYmFjaykgewogICAgLy8g6aaW5YWI5p+l5om+57yT5a2Y77yM5oiW6ICF5b6X5YiwaHRtbO+8jOaIluiAheW+l+WIsOaWh+acrOmVv+W6pgogICAgdmFyIGh0bWwgPSByZWFkQ2FjaGUobWlkKSB8fCBudWxsOwogICAgaWYgKGh0bWwpIHsgY2FsbGJhY2soaHRtbCk7IHJldHVybjsgfQogICAgLy8g57yT5a2Y5rKh5pyJ6IGU572R5p+l5om+CiAgICB1dGlsLnhocih7CiAgICAgICdtZXRob2QnOiAnR0VUJywKICAgICAgJ3VybCc6IHV0aWwuc3RyLmZpbGwodXJsLmdldGxvbmd0ZXh0LCB7ICdtaWQnOiBtaWQgfSksCiAgICAgICdvbmxvYWQnOiBmdW5jdGlvbiAocmVzcCkgewogICAgICAgIHRyeSB7IGh0bWwgPSBKU09OLnBhcnNlKHJlc3AucmVzcG9uc2VUZXh0KS5kYXRhLmh0bWwgfHwgbnVsbDsgfSBjYXRjaCAoZSkgeyB9CiAgICAgICAgaWYgKCFodG1sKSB7IGNhbGxiYWNrKG51bGwpOyByZXR1cm47IH0KICAgICAgICB2YXIgd2MgPSB3b3JkQ291bnQoaHRtbCk7CiAgICAgICAgaWYgKCFjaGVja0xlbmd0aCh3Yy5jb3VudCwgd2MuYnIpKSBodG1sID0gbnVsbDsKICAgICAgICB3cml0ZUNhY2hlKG1pZCwgaHRtbCwgd2MuY291bnQsIHdjLmJyKTsKICAgICAgICBjYWxsYmFjayhodG1sIHx8IHdjLmNvdW50KTsKICAgICAgfSwKICAgIH0pOwogIH07CiAgLy8g6K6+572u5LiA5LiL5pyA5aSn5o6l5Y+X55qE6ZW/5bqmCiAgZ2V0dGVyLnNldE1heExlbmd0aCA9IGZ1bmN0aW9uIChtLCBiKSB7IG1heGxlbmd0aCA9IG07IGJyID0gYjsgfTsKICByZXR1cm4gZ2V0dGVyOwp9KCkpOwoKLy8g5qOA5p+l5YWz5rOo55qE5Lq655qE5YiX6KGoCm5ldHdvcmsuZm9sbG93aW5nID0gKGZ1bmN0aW9uICgpIHsKICAvLyDmo4Dmn6Xmn5DkuIDpobXlhbPms6jkurrliJfooajvvIzojrflj5blhbPms6jkurrnm7jlhbPmlofmoaPmoJHoioLngrkKICB2YXIgZ2V0Rm9sbG93aW5nQ29udGVudCA9IGZ1bmN0aW9uIChwYWdlLCBjYWxsYmFjaykgewogICAgLy8g6YG/5YWN5Lik5Liq5qCH562+6aG15ZCM5pe26I635Y+W5YWz5rOo5YiX6KGo6YCg5oiQ5Yay56qBCiAgICB2YXIgbGFzdF90cnkgPSBOdW1iZXIoR01fZ2V0VmFsdWUoJ2ZvbGxvd2luZ19saXN0X2ZldGNoaW5nX3RpbWVzdGFtcCcsIDApKTsKICAgIGlmIChsYXN0X3RyeSA8IERhdGUubm93KCkgJiYgbGFzdF90cnkgPiBEYXRlLm5vdygpIC0gMzBlMykgcmV0dXJuOwogICAgR01fc2V0VmFsdWUoJ2ZvbGxvd2luZ19saXN0X2ZldGNoaW5nX3RpbWVzdGFtcCcsIERhdGUubm93KCkpOwogICAgcmV0dXJuIHV0aWwueGhyKHsKICAgICAgJ21ldGhvZCc6ICdHRVQnLAogICAgICAndXJsJzogcGFnZSwKICAgICAgJ29ubG9hZCc6IGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgR01fZGVsZXRlVmFsdWUoJ2ZvbGxvd2luZ19saXN0X2ZldGNoaW5nX3RpbWVzdGFtcCcpOwogICAgICAgIHZhciBkb20gPSBudWxsOwogICAgICAgIHRyeSB7CiAgICAgICAgICB2YXIgZCA9IFN0cmluZyhyZXNwLnJlc3BvbnNlVGV4dCk7CiAgICAgICAgICB2YXIgcmUgPSAvPHNjcmlwdD5GTVwudmlld1woeyJucyI6InBsXC5yZWxhdGlvblwubXlGb2xsb3dcLmluZGV4Ii4qImh0bWwiOig/PS4qbWVtYmVyX2JveCkoIi4qIil9XCk8XC9zY3JpcHQ+XG4vOwogICAgICAgICAgdmFyIGh0bWwgPSBKU09OLnBhcnNlKGQubWF0Y2gocmUpWzFdKTsKICAgICAgICAgIGRvbSA9IHV0aWwuZG9tLmNyZWF0ZSgnZGl2JywgaHRtbCk7CiAgICAgICAgfSBjYXRjaCAoZSkgeyB9CiAgICAgICAgY2FsbGJhY2soZG9tKTsKICAgICAgfSwKICAgICAgJ29uZXJyb3InOiBmdW5jdGlvbiAoKSB7IGNhbGxiYWNrKG51bGwpOyB9LAogICAgfSk7CiAgfTsKICAvLyDku47lhbPms6jkurrnmoTlpLTlg4/mlofmoaPmoJHoioLngrnkuK3ojrflj5bnm7jlhbPkv6Hmga8KICB2YXIgZ2V0VXNlckluZm8gPSBmdW5jdGlvbiAoaW1nKSB7CiAgICB2YXIgZGVzY3JpcHRpb24sIGF2YXRhcjsKICAgIGRlc2NyaXB0aW9uID0gaW1nLmdldEF0dHJpYnV0ZSgndGl0bGUnKTsKICAgIGF2YXRhciA9IGltZy5nZXRBdHRyaWJ1dGUoJ3NyYycpOwogICAgcmV0dXJuICh1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAoKSB7CiAgICAgIC8vIOWFs+azqOS6huS4gOS4queUqOaItwogICAgICB2YXIgaWQgPSB1dGlsLnN0ci5wYXJzZXF1ZXJ5KGltZy5nZXRBdHRyaWJ1dGUoJ3VzZXJjYXJkJykgfHwgJycpLmlkOyBpZiAoIWlkKSByZXR1cm47CiAgICAgIHZhciBocmVmID0gdXRpbC5zdHIuZmlsbCh1cmwudXNlciwgeyAndWlkJzogaWQgfSk7CiAgICAgIHZhciBuYW1lID0gaW1nLmdldEF0dHJpYnV0ZSgnYWx0Jyk7CiAgICAgIGlmIChuYW1lICE9PSBkZXNjcmlwdGlvbikgZGVzY3JpcHRpb24gPSBuYW1lICsgJyAoJyArIGRlc2NyaXB0aW9uICsgJyknOwogICAgICByZXR1cm4gewogICAgICAgICdpZCc6IGlkLCAvLyDlkJHliY3lhbzlrrnnmoRpZO+8jOWQjumdoueahOeJiOacrOimgeS9v+eUqGhyZWbku6Pmm79pZOS9nOS4uuWUr+S4gOagh+ivhgogICAgICAgICd0eXBlJzogJ3VzZXInLAogICAgICAgICd1c2VyJzogaWQsCiAgICAgICAgJ2hyZWYnOiBocmVmLAogICAgICAgICdhdmF0YXInOiBhdmF0YXIsCiAgICAgICAgJ25hbWUnOiAnQCcgKyBkZXNjcmlwdGlvbiwKICAgICAgICAnZGVzY3JpcHRpb24nOiAnQCcgKyBkZXNjcmlwdGlvbiwKICAgICAgfTsKICAgIH0pKCkpIHx8ICh1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAoKSB7CiAgICAgIC8vIOWFs+azqOS6huS4gOaUr+iCoeelqAogICAgICB2YXIgaWQgPSAoaW1nLnBhcmVudE5vZGUuaHJlZi5tYXRjaCgvd2VpYm8uY29tXC9wXC8yMzA2NzcoW2EtekEtWlxkXSspLykgfHwgW10pWzFdOyBpZiAoIWlkKSByZXR1cm47CiAgICAgIHZhciBocmVmID0gdXRpbC5zdHIuZmlsbCh1cmwuc3RvY2ssIHsgJ3N0b2NraWQnOiBpZCB9KTsKICAgICAgcmV0dXJuIHsKICAgICAgICAnaWQnOiAnIycgKyBpbWcucGFyZW50Tm9kZS5ocmVmLCAvLyDlkJHliY3lhbzlrrkKICAgICAgICAndHlwZSc6ICdzdG9jaycsCiAgICAgICAgJ3N0b2NrJzogaWQsCiAgICAgICAgJ2hyZWYnOiBocmVmLAogICAgICAgICdhdmF0YXInOiBhdmF0YXIsCiAgICAgICAgJ25hbWUnOiAnJCcgKyBkZXNjcmlwdGlvbiArICckJywKICAgICAgICAnZGVzY3JpcHRpb24nOiAnJCcgKyBkZXNjcmlwdGlvbiArICckJywKICAgICAgfTsKICAgIH0pKCkpIHx8ICh1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAoKSB7CiAgICAgIC8vIOWFs+azqOS6huS4gOS4quivnemimAogICAgICB2YXIgcmVmID0gaW1nLnBhcmVudE5vZGUuaHJlZi5tYXRjaCgvaHVhdGkud2VpYm8uY29tLyk7IGlmICghcmVmKSByZXR1cm47CiAgICAgIHZhciB0ZXh0ID0gaW1nLnRpdGxlOwogICAgICAvLyDljp/mnKznmoTpk77mjqXljIXlkKvnmoTmmK/nvJblj7fvvIzov5nph4zmjaLmiJDor53popjmlofmnKzvvIzlm6DkuLror53popjmlofmnKzmr5TnvJblj7fmm7Tlm7rlrprvvJrnvJblj7flj6/ku6XooqvliKDpmaTvvIzmlofmnKzml6Dms5Xkv67mlLkKICAgICAgdmFyIGhyZWYgPSB1dGlsLnN0ci5maWxsKHVybC50b3BpYywgeyAndG9waWMnOiB0ZXh0IH0pOwogICAgICByZXR1cm4gewogICAgICAgICdpZCc6ICcjJyArIGltZy5wYXJlbnROb2RlLmhyZWYsIC8vIOWQkeWJjeWFvOWuuQogICAgICAgICd0eXBlJzogJ3RvcGljJywKICAgICAgICAndG9waWMnOiB0ZXh0LAogICAgICAgICdocmVmJzogaHJlZiwKICAgICAgICAnYXZhdGFyJzogYXZhdGFyLAogICAgICAgICduYW1lJzogJyMnICsgZGVzY3JpcHRpb24gKyAnIycsCiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogJyMnICsgZGVzY3JpcHRpb24gKyAnIycsCiAgICAgIH07CiAgICB9KSgpKSB8fCAodXRpbC5mdW5jLmNhdGNoZWQoZnVuY3Rpb24gKCkgewogICAgICB2YXIgbGluayA9IHV0aWwuZG9tLmNsb3Nlc3QoaW1nLCAnW2hyZWZdJyk7CiAgICAgIHZhciBocmVmID0gbGluayAmJiBsaW5rLmdldEF0dHJpYnV0ZSgnaHJlZicpIHx8IGF2YXRhcjsKICAgICAgLy8g5pyq55+l5YWz5rOo5YaF5a65CiAgICAgIHJldHVybiB7CiAgICAgICAgJ2lkJzogJyMnICsgaHJlZiwgLy8g5ZCR5YmN5YW85a65CiAgICAgICAgJ3R5cGUnOiAndW5rbm93bicsCiAgICAgICAgJ2hyZWYnOiBocmVmLAogICAgICAgICdhdmF0YXInOiBhdmF0YXIsCiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogJz8nICsgZGVzY3JpcHRpb24sCiAgICAgICAgJ25hbWUnOiAnPycgKyBkZXNjcmlwdGlvbiwKICAgICAgfTsKICAgIH0pKCkpOwogIH07CiAgLy8g5LuO5paH5qGj5qCR5Lit6I635Y+W5YWz5rOo5Lq655qE5aS05YOP5bm25Lul5q2k6I635Y+W5YWz5rOo5Lq65L+h5oGvCiAgdmFyIGdldFVzZXJzSW5mbyA9IGZ1bmN0aW9uIChkb20pIHsKICAgIHJldHVybiBBcnJheS5mcm9tKGRvbS5xdWVyeVNlbGVjdG9yQWxsKCcubWVtYmVyX2JveCAubWVtYmVyX3dyYXAgLm1vZF9waWMgLnBpY19ib3ggYSA+IGltZycpKQogICAgICAubWFwKGdldFVzZXJJbmZvKTsKICB9OwogIC8vIOS7juaWh+aho+agkeS4reajgOafpeS4gOWFseacieWkmuWwkemhteWFs+azqOS6ugogIHZhciBnZXRQYWdlQ291bnQgPSBmdW5jdGlvbiAoZG9tKSB7CiAgICB0cnkgewogICAgICB2YXIgcGFnZWxpbmsgPSBkb20ucXVlcnlTZWxlY3RvckFsbCgnLldfcGFnZXMgLnBhZ2UnKTsKICAgICAgdmFyIGxhc3QgPSBwYWdlbGlua1twYWdlbGluay5sZW5ndGggLSAyXTsKICAgICAgcmV0dXJuIE51bWJlcihsYXN0LnRleHRDb250ZW50KTsKICAgIH0gY2F0Y2ggKGUpIHsgcmV0dXJuIDE7IH0KICB9OwogIC8vIOagvOW8j+WMluWFs+azqOS/oeaBrwogIHZhciBmb3JtYXRGb2xsb3dpbmcgPSBmdW5jdGlvbiAoZm9sbG93aW5nKSB7CiAgICB2YXIgdXNlcnMgPSB7fTsKICAgIHJldHVybiBmb2xsb3dpbmcuZmlsdGVyKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIGlmICh1c2VyLmlkIGluIHVzZXJzKSByZXR1cm4gZmFsc2U7CiAgICAgIHVzZXJzW3VzZXIuaWRdID0gdXNlcjsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9KTsKICB9OwogIC8vIOS9v+eUqCBHTV92YWx1ZXMg57u05oqk54q25oCBCiAgdmFyIGdldFN0YXR1cyA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBzdGF0dXMgPSB7fSwgdmFsaWQgPSB0cnVlOwogICAgdHJ5IHsgc3RhdHVzID0gSlNPTi5wYXJzZShHTV9nZXRWYWx1ZSgnZm9sbG93aW5nX2xpc3RfZmV0Y2hpbmcnLCAne30nKSk7IH0gY2F0Y2ggKGUpIHt9CiAgICBpZiAoIXN0YXR1cykgdmFsaWQgPSBmYWxzZTsKICAgIGVsc2UgaWYgKHN0YXR1cy51aWQgIT09IHV0aWwuaW5mby51aWQpIHZhbGlkID0gZmFsc2U7CiAgICBlbHNlIGlmICghTnVtYmVyKHN0YXR1cy50aW1lc3RhbXApIHx8IHN0YXR1cy50aW1lc3RhbXAgPiBEYXRlLm5vdygpIHx8IHN0YXR1cy50aW1lc3RhbXAgPCBEYXRlLm5vdygpIC0gNjAwZTMpIHZhbGlkID0gZmFsc2U7CiAgICBpZiAoIXZhbGlkKSBzdGF0dXMgPSB7ICd1aWQnOiB1dGlsLmluZm8udWlkLCAnbic6IDAsIH07CiAgICByZXR1cm4gc3RhdHVzOwogIH07CiAgdmFyIHB1dFN0YXR1cyA9IGZ1bmN0aW9uIChzdGF0dXMsIHVwZGF0ZVRpbWVzdGFtcCkgewogICAgaWYgKHVwZGF0ZVRpbWVzdGFtcCAhPT0gZmFsc2UpIHN0YXR1cy50aW1lc3RhbXAgPSBEYXRlLm5vdygpOwogICAgR01fc2V0VmFsdWUoJ2ZvbGxvd2luZ19saXN0X2ZldGNoaW5nJywgSlNPTi5zdHJpbmdpZnkoc3RhdHVzKSk7CiAgfTsKICB2YXIgZ290UmVzdWx0ID0gZnVuY3Rpb24gKHN0YXR1cywgY2FsbGJhY2spIHsKICAgIHB1dFN0YXR1cyhzdGF0dXMsIGZhbHNlKTsKICAgIHV0aWwuZnVuYy5jYWxsKGNhbGxiYWNrLCBzdGF0dXMuZm9sbG93aW5nKTsKICB9OwogIC8vIOiOt+WPluaIkeiHquW3seeahOWFs+azqOS/oeaBrwogIHJldHVybiBmdW5jdGlvbiAoY2FsbGJhY2spIHsKICAgIHZhciB1aWQgPSB1dGlsLmluZm8udWlkOwogICAgLy8g6I635Y+W5LiL5LiA6aG15pWw5o2uCiAgICAvLyDov5nkuKrlh73mlbDooqvorr7orqHmiJDpgJrov4cgR01fdmFsdWVzIOe7tOaKpOeKtuaAge+8jOWboOS4uui/meagt+WPr+S7peacieaViOmBv+WFjeWboOS4uuiOt+WPlui/h+eoi+S4reWFs+mXree9kemhtemAoOaIkOeahOmXrumimAogICAgKGZ1bmN0aW9uIGdldE5leHRQYWdlKCkgewogICAgICB2YXIgc3RhdHVzID0gZ2V0U3RhdHVzKCksIHBhZ2U7CiAgICAgIGlmIChzdGF0dXMucGFnZUNvdW50ICYmIHN0YXR1cy5uID09PSBzdGF0dXMucGFnZUNvdW50KSByZXR1cm4gZ290UmVzdWx0KHN0YXR1cywgY2FsbGJhY2spOwogICAgICBpZiAoKytzdGF0dXMubiA9PT0gMSkgcGFnZSA9IHV0aWwuc3RyLmZpbGwodXJsLm15Zm9sbG93LCB7ICd1aWQnOiB1aWQgfSk7IC8vIOesrOS4gOmhteS9v+eUqOm7mOiupOeahOWcsOWdgOiOt+WPlgogICAgICBlbHNlIHBhZ2UgPSBzdGF0dXMudGVtcGxhdGUucmVwbGFjZSgvX3BhZ2U9XGQrLywgJ19wYWdlPScgKyBzdGF0dXMubik7IC8vIOWFtuS7lumhteS9v+eUqOS7juesrOS4gOmhteW+l+WIsOeahOWcsOWdgAogICAgICB2YXIgeGhyID0gZ2V0Rm9sbG93aW5nQ29udGVudChwYWdlLCBmdW5jdGlvbiAoZG9tKSB7CiAgICAgICAgLy8g5aaC5p6c5bey57uP6I635Y+W5Yiw5LqG5pyA5ZCO5LiA6aG177yM6YKj5LmI57uT5p2f5bm25b6X5Yiw57uT5p6cCiAgICAgICAgLy8g5aaC5p6c5piv56ys5LiA6aG177yM6KaB6I635Y+W5LiA5Lqb6aKd5aSW55qE5L+h5oGv77yM5YyF5ous5LiA5YWx5aSa5bCR6aG15Lul5Y+K5o6l5LiL5p2l5q+P6aG155qE5Zyw5Z2ACiAgICAgICAgaWYgKHN0YXR1cy5uID09PSAxKSB7CiAgICAgICAgICBzdGF0dXMucGFnZUNvdW50ID0gZ2V0UGFnZUNvdW50KGRvbSk7CiAgICAgICAgICBpZiAoc3RhdHVzLnBhZ2VDb3VudCA+IDEpIHN0YXR1cy50ZW1wbGF0ZSA9IGRvbS5xdWVyeVNlbGVjdG9yKCcuV19wYWdlcyBhLnBhZ2VbaHJlZl0nKS5ocmVmOwogICAgICAgIH0KICAgICAgICB1dGlsLmRlYnVnKCdmZXRjaGluZyBmb2xsb3dpbmcgbGlzdC4uLiAlbyAvICVvIGRvbmUnLCBzdGF0dXMubiwgc3RhdHVzLnBhZ2VDb3VudCk7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHN0YXR1cy5mb2xsb3dpbmcgPSAoc3RhdHVzLmZvbGxvd2luZyB8fCBbXSkuY29uY2F0KGdldFVzZXJzSW5mbyhkb20pKTsKICAgICAgICAgIHB1dFN0YXR1cyhzdGF0dXMpOwogICAgICAgICAgc2V0VGltZW91dChnZXROZXh0UGFnZSwgM2UzKTsKICAgICAgICB9IGNhdGNoIChlKSB7IHNldFRpbWVvdXQoZ2V0TmV4dFBhZ2UsIDMwMGUzKTsgfQogICAgICB9KTsKICAgICAgdmFyIGJ1c3kgPSAheGhyOwogICAgICBpZiAoYnVzeSkgc2V0VGltZW91dChnZXROZXh0UGFnZSwgMTBlMyk7CiAgICB9KCkpOwogIH07Cn0oKSk7CgpuZXR3b3JrLmZlZWQgPSAoZnVuY3Rpb24gKCkgewogIHZhciBub21vcmUgPSBmdW5jdGlvbiBlbXB0eShjYWxsYmFjaykgeyBjYWxsYmFjayhbXSwgZW1wdHkpOyB9OwogIHZhciBnZXRGZWVkcyA9IGZ1bmN0aW9uIChkYXRhLCBjYWxsYmFjaykgewogICAgdXRpbC5kZWJ1ZygnaG9tZSBmZWVkIGdlbmVyYXRlOiBmZXRjaCBmZWVkcyBmb3IgJW8nLCBkYXRhKTsKICAgIGlmIChkYXRhLmxvYWRpbmcpIHJldHVybiB2b2lkIGNhbGxiYWNrKFtdLCBub21vcmUpOwogICAgZGF0YS5sb2FkaW5nID0gdHJ1ZTsKICAgIHZhciBwYXJhbSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZGF0YS5wYXJhbSkpLCBsYXN0UGFnZSA9IG51bGw7CiAgICBpZiAoZGF0YS5naWQpIHBhcmFtLmdpZCA9IGRhdGEuZ2lkOwogICAgZWxzZSBpZiAoZGF0YS53aGlzcGVyKSBwYXJhbS53aGlzcGVyID0gJzEnOwogICAgaWYgKGRhdGEucGFnZXMubGVuZ3RoKSB7CiAgICAgIGxhc3RQYWdlID0gZGF0YS5wYWdlc1tkYXRhLnBhZ2VzLmxlbmd0aCAtIDFdOwogICAgICBpZiAobGFzdFBhZ2UubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuIHZvaWQgY2FsbGJhY2soW10sIG5vbW9yZSk7CiAgICAgIH0KICAgICAgcGFyYW0ubWluX2lkID0gbGFzdFBhZ2VbMF0ubWlkOwogICAgICBwYXJhbS5lbmRfaWQgPSBsYXN0UGFnZVtsYXN0UGFnZS5sZW5ndGggLSAxXS5taWQ7CiAgICB9CiAgICB1dGlsLnhocih7CiAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgIHVybDogdXRpbC5zdHIuZmlsbCh1cmwuZ3JvdXBfZmVlZHMsIHsgcGFyYW06IHV0aWwuc3RyLnRvcXVlcnkocGFyYW0pIH0pLAogICAgICBvbmxvYWQ6IGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgZGF0YS5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgdmFyIHJlc3VsdCA9IFtdLCBuZXh0ID0gbm9tb3JlOwogICAgICAgIHRyeSB7CiAgICAgICAgICB2YXIgcmVzcG9uc2UgPSBKU09OLnBhcnNlKHJlc3AucmVzcG9uc2VUZXh0KTsKICAgICAgICAgIHZhciBsaXN0ID0gdXRpbC5kb20uY3JlYXRlKCdkaXYnLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgIHZhciBpdGVtcyA9IEFycmF5LmZyb20obGlzdC5xdWVyeVNlbGVjdG9yQWxsKCcuV0JfZmVlZF90eXBlW21pZF0nKSk7CiAgICAgICAgICB2YXIgZmVlZHMgPSBpdGVtcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgdmFyIGRhdGVpdGVtID0gaXRlbS5xdWVyeVNlbGVjdG9yKCdbbm9kZS10eXBlPSJmZWVkX2xpc3RfaXRlbV9kYXRlIl1bZGF0ZV0nKTsgaWYgKCFkYXRlaXRlbSkgcmV0dXJuIG51bGw7CiAgICAgICAgICAgIHZhciBkYXRlID0gTnVtYmVyKGRhdGVpdGVtLmdldEF0dHJpYnV0ZSgnZGF0ZScpKTsgaWYgKCFkYXRlKSByZXR1cm4gbnVsbDsKICAgICAgICAgICAgdmFyIG1pZCA9IGl0ZW0uZ2V0QXR0cmlidXRlKCdtaWQnKTsgaWYgKCFtaWQpIHJldHVybiBudWxsOwogICAgICAgICAgICByZXR1cm4geyBkYXRlOiBkYXRlLCBtaWQ6IG1pZCwgZG9tOiBpdGVtLmNsb25lTm9kZSh0cnVlKSB9OwogICAgICAgICAgfSkuZmlsdGVyKHV0aWwuZnVuYy5pZGVudGl0eSk7CiAgICAgICAgICB1dGlsLmRlYnVnKCdob21lIGZlZWQgZ2VuZXJhdGU6IGZldGNoIGZlZWRzIGZvciAlbywgZ290ICVvJywgcGFyYW0sIGZlZWRzKTsKICAgICAgICAgIGRhdGEucGFnZXMucHVzaChmZWVkcyk7CiAgICAgICAgICByZXN1bHQgPSBmZWVkcy5zbGljZSgwKTsKICAgICAgICAgIG5leHQgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHsgZ2V0RmVlZHMoZGF0YSwgY2FsbGJhY2spOyB9OwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIHV0aWwuZGVidWcoJ2hvbWUgZmVlZCBnZW5lcmF0ZTogZXhjZXB0aW9uIHdoaWxlIGZldGNoaW5nIGZlZWRzIGZvciAlbyAtICVvJywgcGFyYW0sIGUpOwogICAgICAgIH0KICAgICAgICBjYWxsYmFjayhyZXN1bHQsIG5leHQpOwogICAgICB9LAogICAgICBvbmVycm9yOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgZGF0YS5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgdXRpbC5kZWJ1ZygnaG9tZSBmZWVkIGdlbmVyYXRlOiBlcnJvciB3aGlsZSBmZXRjaGluZyBmZWVkcyBmb3IgJW8nLCBwYXJhbSk7CiAgICAgICAgY2FsbGJhY2soW10sIG5vbW9yZSk7CiAgICAgIH0KICAgIH0pOwogIH07CiAgdmFyIGdyb3VwID0gZnVuY3Rpb24gKGdpZCwgcGFyYW0sIGNhbGxiYWNrKSB7CiAgICB2YXIgZGF0YSA9IHsgZ2lkOiBnaWQsIHBhcmFtOiBwYXJhbSwgcGFnZXM6IFtdLCBmZWVkczoge30sIGxvYWRpbmc6IGZhbHNlIH07CiAgICBnZXRGZWVkcyhkYXRhLCBjYWxsYmFjayk7CiAgfTsKICB2YXIgd2hpc3BlciA9IGZ1bmN0aW9uIChwYXJhbSwgY2FsbGJhY2spIHsKICAgIHZhciBkYXRhID0geyB3aGlzcGVyOiB0cnVlLCBwYXJhbTogcGFyYW0sIHBhZ2VzOiBbXSwgZmVlZHM6IHt9LCBsb2FkaW5nOiBmYWxzZSB9OwogICAgZ2V0RmVlZHMoZGF0YSwgY2FsbGJhY2spOwogIH07CiAgcmV0dXJuIHsKICAgICd3aGlzcGVyJzogd2hpc3BlciwKICAgICdncm91cCc6IGdyb3VwLAogIH0KfSgpKTsKCi8vIOi/h+a7pOWZqAp2YXIgZmlsdGVyID0ge307CgovLyDov4fmu6TlmajnmoTov4fmu6Top4TliJkKZmlsdGVyLmZpbHRlcnMgPSBmdW5jdGlvbiAoKSB7CiAgdmFyIGxpc3QgPSBbXTsKICB2YXIgYWRkID0gZnVuY3Rpb24gKHByaW9yaXR5LCBydWxlKSB7CiAgICBsaXN0LnB1c2goeyAncHJpb3JpdHknOiBwcmlvcml0eSwgJ3J1bGUnOiBydWxlIH0pOwogICAgbGlzdC5zb3J0KGZ1bmN0aW9uICh4LCB5KSB7IHJldHVybiB5LnByaW9yaXR5IC0geC5wcmlvcml0eTsgfSk7CiAgfTsKICB2YXIgcGFyc2UgPSBmdW5jdGlvbiAob2JqLCBjb25mcykgewogICAgdmFyIHJlc3VsdCA9IG51bGw7CiAgICBsaXN0LnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgdHJ5IHsgcmVzdWx0ID0gaXRlbS5ydWxlKG9iaiwgY29uZnMpIHx8IHJlc3VsdDsgfQogICAgICBjYXRjaCAoZSkgeyB1dGlsLmVycm9yKCdFeGNlcHRpb24gd2hpbGUgcGFyc2luZyBydWxlICVvOiAlb1xuJW8nLCBpdGVtLnJ1bGUsIGUsIGUuc3RhY2spOyB9CiAgICAgIGlmIChyZXN1bHQpIHV0aWwuZGVidWcoJyVvWyVvXSglbykgLT4gJXMnLCBpdGVtLnJ1bGUsIGl0ZW0ucnVsZSAmJiBpdGVtLnJ1bGUubmFtZSwgb2JqLCByZXN1bHQpOwogICAgICByZXR1cm4gcmVzdWx0ICE9PSBudWxsOwogICAgfSk7CiAgICByZXR1cm4gcmVzdWx0OwogIH07CiAgcmV0dXJuIHsKICAgICdhZGQnOiBhZGQsCiAgICAncGFyc2UnOiBwYXJzZSwKICB9Owp9OwoKZmlsdGVyLnJ1bGVzID0gZmlsdGVyLmZpbHRlcnMoKTsKZmlsdGVyLmNvbW1lbnQgPSBmaWx0ZXIuZmlsdGVycygpOwoKLy8g5Y2V5p2h5b6u5Y2a6aG16Z2i5rC46L+c5LiN5bqU5b2T6ZqQ6JeP5b6u5Y2aCmZpbHRlci5ydWxlcy5hZGQoMWU2LCBmdW5jdGlvbiBzaW5nbGVXZWlib1BhZ2VVbnNldFJ1bGUoZmVlZCkgewogIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbaWRePSJQbF9PZmZpY2lhbF9XZWlib0RldGFpbF9fIl0nKSA/ICd1bnNldCcgOiBudWxsOwp9KTsKCi8vIOWktOadoeaWh+eroOaYr+S4gOadoeW+ruWNmu+8jOexu+S8vOS6juWNleadoeW+ruWNmu+8jOS4jeW6lOW9k+makOiXjwpmaWx0ZXIucnVsZXMuYWRkKDFlNiwgZnVuY3Rpb24gc2luZ2xlV2VpYm9QYWdlVW5zZXRSdWxlKGZlZWQpIHsKICByZXR1cm4gdXRpbC5kb20ubWF0Y2hlcyhmZWVkLCAnLldCX2FydGljYWwgKicpID8gJ3Vuc2V0JyA6IG51bGw7Cn0pOwoKLy8g6L+H5ruk5Zmo55qE5a+56K+d5qGGCmZpbHRlci5kaWFsb2cgPSAoZnVuY3Rpb24gKCkgewogIHZhciBkaWFsb2cgPSBudWxsOwogIHZhciBsYXN0VGFiID0gMCwgZGVmYXVsdFRhYiA9IDE7CiAgLy8g5Yid5aeL5YyW6YCJ6aG55Y2h5aSE55CGCiAgdmFyIGRpYWxvZ1RhYnMgPSBmdW5jdGlvbiAobGlzdCwgaW5uZXIsIHBhZ2UpIHsKICAgIHZhciBsaXRlbXMgPSBBcnJheS5mcm9tKGlubmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy55YXdmLWNvbmZpZy1oZWFkZXIgLm1pbml0Yl9pdGVtJykpOwogICAgdmFyIGxsaW5rcyA9IGxpdGVtcy5tYXAoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgucXVlcnlTZWxlY3RvcignLm1pbml0Yl9saycpOyB9KTsKICAgIHZhciBsYXllcnMgPSBBcnJheS5mcm9tKGlubmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy55YXdmLWNvbmZpZy1ib2R5IC55YXdmLWNvbmZpZy1sYXllcicpKTsKICAgIHZhciBib2R5ID0gaW5uZXIucXVlcnlTZWxlY3RvcignLnlhd2YtY29uZmlnLWJvZHknKTsKICAgIHZhciBjdXJyZW50SW5kZXggPSBudWxsOwogICAgLy8g5pi+56S656ys5Yeg5Liq6YCJ6aG55Y2hCiAgICB2YXIgY2hvc2VMTGlzdCA9IGZ1bmN0aW9uIChpKSB7CiAgICAgIGlmIChjdXJyZW50SW5kZXggIT09IG51bGwpIChmdW5jdGlvbiAoaSkgewogICAgICAgIGlmIChsaXN0W2ldLmhpZGUpIGxpc3RbaV0uaGlkZSgpOwogICAgICAgIGxheWVyc1tpXS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgIGxheWVyc1tpXS5pbm5lckhUTUwgPSAnJzsKICAgICAgICBsaXRlbXNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnY3VycmVudCcpOwogICAgICAgIGlmIChsbGlua3NbaV0pIGxsaW5rc1tpXS5jbGFzc0xpc3QucmVtb3ZlKCdTX2JnMicpOwogICAgICB9KGN1cnJlbnRJbmRleCkpOwogICAgICAoZnVuY3Rpb24gKCkgewogICAgICAgIGxheWVyc1tpXS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgICAgICBsaXN0W2ldLnNob3cobGF5ZXJzW2ldKTsKICAgICAgICBsaXRlbXNbaV0uY2xhc3NMaXN0LmFkZCgnY3VycmVudCcpOwogICAgICAgIGlmIChsbGlua3NbaV0pIGxsaW5rc1tpXS5jbGFzc0xpc3QuYWRkKCdTX2JnMicpOwogICAgICB9KCkpOwogICAgICBjdXJyZW50SW5kZXggPSBsYXN0VGFiID0gaTsKICAgICAgdXRpbC5mdW5jLmNhbGwoZnVuY3Rpb24gKCkgeyBib2R5LnNjcm9sbFRvcCA9IDA7IH0pOwogICAgfTsKICAgIC8vIOS4uuavj+S4qumAiemhueWNoeWFs+iBlOaYvuekuueahOWbnuiwg+WHveaVsAogICAgbGlzdC5tYXAoZnVuY3Rpb24gKGl0ZW0sIGkpIHsKICAgICAgaXRlbS5hY3RpdmUgPSBmdW5jdGlvbiAoKSB7IGNob3NlTExpc3QoaSk7IH07CiAgICAgIHZhciBhID0gbGxpbmtzW2ldOyBpZiAoIWEpIHJldHVybjsKICAgICAgYS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBpdGVtLmFjdGl2ZSk7CiAgICAgIGEuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGl0ZW0uYWN0aXZlKTsKICAgIH0pOwogICAgLy8g5Yid5aeL6YCJ5oup5LiA5Liq6YCJ6aG55Y2hCiAgICBjaG9zZUxMaXN0KHBhZ2UpOwogIH07CiAgcmV0dXJuIGZ1bmN0aW9uIHNob3dEaWFsb2cocGFnZSwgY291bnQpIHsKICAgIHZhciBzaG93RGlhbG9nSW5uZXIgPSBmdW5jdGlvbiAoaW5uZXIpIHsKICAgICAgdmFyIGxpc3QgPSBmaWx0ZXIuY29sbGVjdGlvbi5ncm91cC5saXN0OwogICAgICBpbm5lci5pbm5lckhUTUwgPSBbaHRtbC5jb25maWdIZWFkZXJUb3AsCiAgICAgICAgaHRtbC5jb25maWdIZWFkZXJCb3R0b20sCiAgICAgICAgaHRtbC5jb25maWdMYXllclRvcCwKICAgICAgICBsaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIHV0aWwuc3RyLmZpbGwoaHRtbC5jb25maWdMYXllckl0ZW0sIHsKICAgICAgICAgICAgJ25hbWUnOiBpdGVtLm5hbWUgKyAnRmlsdGVyR3JvdXBMYXllcicsCiAgICAgICAgICB9KTsKICAgICAgICB9KS5qb2luKCcnKSwKICAgICAgICBodG1sLmNvbmZpZ0xheWVyQm90dG9tLAogICAgICAgIGh0bWwuY29uZmlnRm9vdGVyLAogICAgICBdLmpvaW4oJycpOwogICAgICB2YXIgdWwgPSBpbm5lci5xdWVyeVNlbGVjdG9yKCcueWF3Zi1jb25maWctaGVhZGVyIHVsJyk7CiAgICAgIGxpc3QubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgIGlmIChpdGVtLmxpc3QpIHJldHVybiBpdGVtLmxpc3QoaXRlbSwgaW5kZXgpOwogICAgICAgIHJldHVybiB1dGlsLmRvbS5jcmVhdGUoJ3VsJywgdXRpbC5zdHIuZmlsbChodG1sLmNvbmZpZ0hlYWRlckl0ZW0sIHsKICAgICAgICAgICduYW1lJzogKGl0ZW0ucGdyb3VwID8gdGV4dC5pbmRlbnQgOiAnJykgKyB0ZXh0W2l0ZW0ubmFtZSArICdGaWx0ZXJHcm91cFRpdGxlJ10sCiAgICAgICAgICAnYWNsYXNzJzogaW5kZXggPT09IDAgPyAnU19iZzUnIDogJ1NfYmcxJywKICAgICAgICAgICdsaWNsYXNzJzogaW5kZXggPT09IDAgPyAnY3VycmVudCcgOiAnICcsCiAgICAgICAgfSkpLmZpcnN0Q2hpbGQ7CiAgICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKGxpKSB7IHVsLmFwcGVuZENoaWxkKGxpKTsgfSk7CiAgICAgIHV0aWwuZnVuYy5jYWxsKGZ1bmN0aW9uICgpIHsgZGlhbG9nLnNob3coMCk7IH0pOwogICAgICB2YXIgcGdudW0gPSBsaXN0LmluZGV4T2YocGFnZSk7CiAgICAgIGlmIChwZ251bSA9PT0gLTEpIHBnbnVtID0gbGFzdFRhYiB8fCBkZWZhdWx0VGFiOwogICAgICBkaWFsb2dUYWJzKGxpc3QsIGlubmVyLCBwZ251bSk7CiAgICB9OwogICAgaWYgKCEoZGlhbG9nID0gdXRpbC51aS5kaWFsb2coJ3lhd2YtY29uZmlnJywgJ3t7Y29uZmlnRGlhbG9nVGl0bGV9fScsIHNob3dEaWFsb2dJbm5lcikpKSB7CiAgICAgIGlmICghY291bnQgfHwgY291bnQgPCAxMDApIHNldFRpbWVvdXQoc2hvd0RpYWxvZywgMTAwLCBwYWdlLCAoY291bnQgfHwgMCkgKyAxKTsKICAgIH0KICB9Owp9KCkpOwoKLy8g5b+r6YCf5Yib5bu66L+H5ruk5ZmoCmZpbHRlci5mYXN0ID0ge307CgovLyDlv6vpgJ/liJvlu7rov4fmu6TlmajnmoTlr7nor53moYYKZmlsdGVyLmZhc3QuZGlhbG9nID0gZnVuY3Rpb24gKGNhbmRpZGF0ZSwgc2VsZWN0ZWQpIHsKICB2YXIgZGlhbG9nSW5uZXIgPSBmdW5jdGlvbiAoaW5uZXIpIHsKICAgIGlubmVyLmlubmVySFRNTCA9IGh0bWwuZmFzdEZpbHRlckhlYWRlciArIGh0bWwuZmFzdEZpbHRlckZvb3RlcjsKICAgIHZhciBpdGVtcyA9IGlubmVyLnF1ZXJ5U2VsZWN0b3IoJyN5YXdmLWZhc3QtZmlsdGVyLWxpc3QnKTsKICAgIHZhciBzZWxlY3RzID0gW10sIGdyb3VwX3Nob3duID0gW107CiAgICB2YXIgY2hlY2tib3hzID0gY2FuZGlkYXRlLm1hcChmdW5jdGlvbiAoYykgewogICAgICB2YXIgaXRlbSA9IHV0aWwuZG9tLmNyZWF0ZSgndWwnLCBodG1sLmZhc3RGaWx0ZXJJdGVtKS5maXJzdENoaWxkOwogICAgICB2YXIgaW5uZXIgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy55YXdmLWZhc3RGaWx0ZXJJdGVtSW5uZXInKTsKICAgICAgdmFyIGNoZWNrZWQgPSBjLmZpbHRlci5kZXNjcmlwdGlvbihpbm5lciwgYy52YWx1ZSkgIT09IGZhbHNlOwogICAgICB2YXIgY2hlY2tib3ggPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W3R5cGU9ImNoZWNrYm94Il0sIGlucHV0W3R5cGU9InJhZGlvIl0nKTsKICAgICAgdmFyIGdyb3VwID0gY2hlY2tib3guZ2V0QXR0cmlidXRlKCd5YXdmLWNoZWNrYm94LWdyb3VwJyk7CiAgICAgIGlmIChncm91cF9zaG93bi5pbmRleE9mKGdyb3VwKSA9PT0gLTEpIHsKICAgICAgICBncm91cF9zaG93bi5wdXNoKGdyb3VwKTsKICAgICAgICBpZiAoc2VsZWN0ZWQgPT09IHRydWUpIGNoZWNrZWQgPSB0cnVlOwogICAgICB9CiAgICAgIGlmIChzZWxlY3RlZCA9PT0gZmFsc2UpIGNoZWNrZWQgPSBmYWxzZTsKICAgICAgaWYgKCFjLnNlbGVjdGVkKSBjaGVja2VkID0gZmFsc2U7CiAgICAgIHZhciBzZWxlY3QgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJ3NlbGVjdCcpOwogICAgICBjaGVja2JveC5jaGVja2VkID0gY2hlY2tlZDsgc2VsZWN0LnZhbHVlID0gJ2JsYWNrbGlzdCc7CiAgICAgIHNlbGVjdHMucHVzaChzZWxlY3QpOwogICAgICB2YXIgdXBkYXRlU2VsZWN0ID0gdXRpbC5mdW5jLmNhdGNoZWQoZnVuY3Rpb24gKCkgewogICAgICAgIHNlbGVjdHMuZm9yRWFjaChmdW5jdGlvbiAocykgewogICAgICAgICAgaWYgKHMgPT09IHNlbGVjdCkgcmV0dXJuOwogICAgICAgICAgdmFyIHZhbHVlcyA9IEFycmF5LmZyb20ocy5xdWVyeVNlbGVjdG9yQWxsKCdvcHRpb24nKSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoeCkgeyByZXR1cm4geC52YWx1ZTsgfSk7CiAgICAgICAgICB2YXIgZmFsbGJhY2sgPSBbJ3doaXRlbGlzdCcsICdmb2xkbGlzdCcsICdibGFja2xpc3QnXTsKICAgICAgICAgIHZhciBpID0gZmFsbGJhY2suaW5kZXhPZihzZWxlY3QudmFsdWUpOwogICAgICAgICAgd2hpbGUgKHZhbHVlcy5pbmRleE9mKGZhbGxiYWNrW2ldKSA9PT0gLTEpIGkrKzsKICAgICAgICAgIHMudmFsdWUgPSBmYWxsYmFja1tpXTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB1cGRhdGVTZWxlY3QpOwogICAgICBzZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB1cGRhdGVTZWxlY3QpOwogICAgICAvLyDlpITnkIbmnInlj6/og73msqHmnInmipjlj6DliJfooajnmoTmg4XlhrUKICAgICAgaWYgKGMuZmlsdGVyLmxpc3R0eXBlKSB7CiAgICAgICAgdmFyIG9wdGlvbnMgPSBBcnJheS5mcm9tKGl0ZW0ucXVlcnlTZWxlY3RvckFsbCgnb3B0aW9uJykpOwogICAgICAgIG9wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAob3B0aW9uKSB7CiAgICAgICAgICBpZiAoYy5maWx0ZXIubGlzdHR5cGUuaW5kZXhPZihvcHRpb24udmFsdWUpID09PSAtMSkKICAgICAgICAgICAgb3B0aW9uLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQob3B0aW9uKTsKICAgICAgICB9KTsKICAgICAgfQogICAgICBpdGVtcy5hcHBlbmRDaGlsZChpdGVtKTsKICAgICAgcmV0dXJuIGNoZWNrYm94OwogICAgfSk7CiAgICAvLyDmib7liLDmiYDmnInpgInmi6nkuobnmoTov4fmu6TlmagKICAgIHZhciBjaG9zZW4gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBhY3RpdmUgPSBbXTsKICAgICAgY2hlY2tib3hzLmZvckVhY2goZnVuY3Rpb24gKGNoZWNrYm94LCBpKSB7CiAgICAgICAgaWYgKCFjaGVja2JveC5jaGVja2VkKSByZXR1cm47CiAgICAgICAgYWN0aXZlLnB1c2goewogICAgICAgICAgJ2ZpbHRlcic6IGNhbmRpZGF0ZVtpXS5maWx0ZXIsCiAgICAgICAgICAndmFsdWUnOiBjYW5kaWRhdGVbaV0udmFsdWUsCiAgICAgICAgICAnYWN0aW9uJzogc2VsZWN0c1tpXS52YWx1ZQogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIGFjdGl2ZTsKICAgIH07CiAgICAvLyDnoa7lrprmjInpkq4KICAgIHZhciBvayA9IGlubmVyLnF1ZXJ5U2VsZWN0b3IoJ1thY3Rpb24tdHlwZT0ib2siXScpOwogICAgdmFyIHVwZGF0ZU9rQnV0dG9uID0gZnVuY3Rpb24gKCkgewogICAgICBpZiAoY2hvc2VuKCkubGVuZ3RoKSBvay5jbGFzc0xpc3QucmVtb3ZlKCdXX2J0bl9hX2Rpc2FibGUnKTsKICAgICAgZWxzZSBvay5jbGFzc0xpc3QuYWRkKCdXX2J0bl9hX2Rpc2FibGUnKTsKICAgIH07CiAgICBvay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGFjdGl2ZSA9IGNob3NlbigpOwogICAgICBpZiAoIWFjdGl2ZS5sZW5ndGgpIHJldHVybiBudWxsOwogICAgICBhY3RpdmUuZm9yRWFjaChmdW5jdGlvbiAoYWN0KSB7CiAgICAgICAgYWN0LmZpbHRlci5hZGRjb25mKGFjdC5maWx0ZXIucmF3dmFsdWUoYWN0LnZhbHVlKSwgYWN0LmFjdGlvbik7CiAgICAgIH0pOwogICAgICBkaWFsb2cuaGlkZSgpOwogICAgfSk7CiAgICBjaGVja2JveHMuZm9yRWFjaChmdW5jdGlvbiAoY2hlY2tib3gpIHsKICAgICAgY2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdXBkYXRlT2tCdXR0b24pOwogICAgfSk7CiAgICB1cGRhdGVPa0J1dHRvbigpOwogICAgLy8g5Y+W5raI5oyJ6ZKuCiAgICB2YXIgY2FuY2VsID0gaW5uZXIucXVlcnlTZWxlY3RvcignW2FjdGlvbi10eXBlPSJjYW5jZWwiXScpOwogICAgY2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkgeyBkaWFsb2cuaGlkZSgpOyB9KTsKICB9OwogIHZhciBkaWFsb2cgPSB1dGlsLnVpLmRpYWxvZygneWF3Zi1kcm9wLXNlbGVjdCcsICd7e2Zhc3RDcmVhdGVDaG9zZVRpdGxlfX0nLCBkaWFsb2dJbm5lcik7CiAgdXRpbC5mdW5jLmNhbGwoZnVuY3Rpb24gKCkgeyBkaWFsb2cuc2hvdygpOyB9KTsKICByZXR1cm4gZGlhbG9nOwp9OwoKLy8g5qOA5p+l5ouW5ou95LiA5Liq5YWD57Sg5piv5LiN5piv6K+l6Kem5Y+R5b+r6YCf5Yib5bu66L+H5ruk5Zmo55qE5pi+56S6CmZpbHRlci5mYXN0LnZhbGlkID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgdmFsaWRhdG9ycyA9IFtdOwogIC8vIOajgOafpeafkOS4quWFg+e0oOaYr+WQpuiiq+iHs+WwkeS4gOS4quWHveaVsOivhuWIqwogIHZhciB0ZXN0ID0gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgIGZvciAodmFyIGkgPSAwLCBsID0gdmFsaWRhdG9ycy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgdmFyIHJlc3VsdCA9IHV0aWwuZnVuYy5jYXRjaGVkKHZhbGlkYXRvcnNbaV0pKGVsZW1lbnQpOwogICAgICBpZiAocmVzdWx0KSByZXR1cm4gcmVzdWx0OwogICAgfQogICAgcmV0dXJuIGZhbHNlOwogIH07CiAgLy8g5re75Yqg5LiA5Liq6K+G5Yir5Zyo5p+Q56eN54m55a6a5YWD57Sg55qE5Ye95pWwCiAgdmFyIGFkZCA9IGZ1bmN0aW9uIGFkZCh2YWxpZGF0b3IpIHsKICAgIGlmICghdmFsaWRhdG9yIHx8IHZhbGlkYXRvcnMuaW5kZXhPZih2YWxpZGF0b3IpICE9PSAtMSkgcmV0dXJuOwogICAgdmFsaWRhdG9ycy5wdXNoKHZhbGlkYXRvcik7CiAgfTsKICByZXR1cm4gewogICAgJ2FkZCc6IGFkZCwKICAgICd0ZXN0JzogdGVzdCwKICB9Owp9KCkpOwoKLy8g5LuO5ouW5ou95b6X5Yiw55qE5Lic6KW/6YeM6Z2i5om+5Ye65p2l5oiR5Lus5YWz5b+D55qE5Lic6KW/CmZpbHRlci5mYXN0LnJlY29nbml6ZSA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGxpc3RlbmVycyA9IFtdOwogIHZhciBnb3QgPSBmdW5jdGlvbiAoZWxlbWVudCwgZWxlbWVudDIpIHsKICAgIHV0aWwuZGVidWcoJ2dvdCAlbycsIGVsZW1lbnQpOwogICAgaWYgKCFlbGVtZW50KSBpZiAoZWxlbWVudDIpIHJldHVybiBnb3QoZWxlbWVudDIpOyBlbHNlIHJldHVybjsKICAgIC8vIOmXruaJgOaciei/h+a7pOWZqOaYr+S4jeaYr+mcgOimgQogICAgdmFyIGNhbmRpZGF0ZSA9IFtdOwogICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGRldGFpbHMsIGkpIHsgY2FuZGlkYXRlW2ldID0gbnVsbDsgfSk7CiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAoZGV0YWlscywgaSkgewogICAgICB2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbiBjYWxsYmFjayh2YWwpIHsKICAgICAgICBpZiAoIXZhbCkgcmV0dXJuIGNhbGxiYWNrKFtdKTsKICAgICAgICBlbHNlIGlmICghQXJyYXkuaXNBcnJheSh2YWwpKSByZXR1cm4gY2FsbGJhY2soW3ZhbF0pOwogICAgICAgIGVsc2UgY2FuZGlkYXRlW2ldID0gdmFsLm1hcChmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgICB2YXIgc2VsZWN0ZWQgPSBkZXRhaWxzLnNlbGVjdGVkICYmIGRldGFpbHMuc2VsZWN0ZWQoZWxlbWVudDIgfHwgZWxlbWVudCkgfHwgZmFsc2U7CiAgICAgICAgICByZXR1cm4geyAnZmlsdGVyJzogZGV0YWlscywgJ3ZhbHVlJzogdmFsLCAnc2VsZWN0ZWQnOiBzZWxlY3RlZCB9OwogICAgICAgIH0pOwogICAgICAgIC8vIOWmguaenOi/mOacieayoeWhq+WGmeeahO+8jOmCo+S5iOetieW+heaJgOacieeahOWHveaVsOWhq+WGmeWlvQogICAgICAgIGlmIChjYW5kaWRhdGUubGVuZ3RoICE9PSBjYW5kaWRhdGUuZmlsdGVyKEJvb2xlYW4pLmxlbmd0aCkgcmV0dXJuOwogICAgICAgIC8vIOaJvuWIsOaJgOacieWkh+mAieeahOaDheWGtee7meeUqOaIt+WBmumAieaLqQogICAgICAgIHZhciBjaG9zZW4gPSBjYW5kaWRhdGUucmVkdWNlKGZ1bmN0aW9uICh4LCB5KSB7IHJldHVybiB4LmNvbmNhdCh5KTsgfSk7CiAgICAgICAgaWYgKGNob3Nlbi5sZW5ndGgpIGZpbHRlci5mYXN0LmRpYWxvZyhjaG9zZW4pOwogICAgICAgIGVsc2UgaWYgKGVsZW1lbnQyKSBnb3QoZWxlbWVudDIpOwogICAgICB9OwogICAgICB1dGlsLmZ1bmMuY2F0Y2hlZChkZXRhaWxzLnJlY29nbml6ZXIpKGVsZW1lbnQsIGNhbGxiYWNrKTsKICAgIH0pOwogIH07CiAgdmFyIGFkZCA9IGZ1bmN0aW9uIChkZXRhaWxzKSB7CiAgICBsaXN0ZW5lcnMucHVzaChkZXRhaWxzKTsKICB9OwogIHJldHVybiB7CiAgICAnZ290JzogZ290LAogICAgJ2FkZCc6IGFkZCwKICB9Owp9KCkpOwoKLy8g5L2/55So5Y+z6ZSu6I+c5Y2V5bGP6JS9CmZpbHRlci5mYXN0LnJpZ2h0ID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgY291bnRlciA9IDAsIGZpbHRlcnMgPSBbXTsKICB2YXIgYWRkbWVudSA9IGZ1bmN0aW9uIChmZWVkLCBpc0NoaWxkKSB7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCdtZW51JykpIHJldHVybjsKICAgIHZhciBtZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudScpOwogICAgbWVudS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnY29udGV4dCcpOwogICAgdmFyIHN1Ym1lbnUgPSBtZW51LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ21lbnUnKSk7CiAgICBzdWJtZW51LnNldEF0dHJpYnV0ZSgnbGFiZWwnLCB0ZXh0LmNvbnRleHRNZW51Q3JlYXRlTGFiZWwpOwogICAgZmlsdGVycy5mb3JFYWNoKGZ1bmN0aW9uIChkZXRhaWxzKSB7CiAgICAgIHZhciBpdGVtcyA9IGRldGFpbHMuY29udGV4dG1lbnUoZmVlZCk7CiAgICAgIGlmICghaXRlbXMpIHJldHVybjsKICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGl0ZW1zKSkgaXRlbXMgPSBbaXRlbXNdOwogICAgICBpZiAoIWl0ZW1zLmxlbmd0aCkgcmV0dXJuOwogICAgICB2YXIgY29udGFpbmVyID0gc3VibWVudTsKICAgICAgaWYgKGRldGFpbHMubWVudWdyb3VwZWQpIHsKICAgICAgICBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdtZW51Jyk7CiAgICAgICAgY29udGFpbmVyLnNldEF0dHJpYnV0ZSgnbGFiZWwnLCB1dGlsLnN0ci5maWxsKGRldGFpbHMubWVudWdyb3VwZWQpKTsKICAgICAgfQogICAgICB2YXIgaXRlbXRleHQgPSB7fTsKICAgICAgaXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHZhciB0ZXh0ID0gZGV0YWlscy5tZW51ZGVzYyhpdGVtKTsKICAgICAgICBpZiAoIXRleHQgfHwgaXRlbXRleHRbdGV4dF0pIHJldHVybjsgaXRlbXRleHRbdGV4dF0gPSB0cnVlOwogICAgICAgIHZhciBtZW51aXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ21lbnVpdGVtJyk7CiAgICAgICAgbWVudWl0ZW0uc2V0QXR0cmlidXRlKCdsYWJlbCcsIHRleHQpOwogICAgICAgIG1lbnVpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgZGV0YWlscy5yZWNvZ25pemVyKGl0ZW0sIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICBmaWx0ZXIuZmFzdC5kaWFsb2coW3sgJ2ZpbHRlcic6IGRldGFpbHMsICd2YWx1ZSc6IHZhbHVlLCAnc2VsZWN0ZWQnOiB0cnVlIH1dLCB0cnVlKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChtZW51aXRlbSk7CiAgICAgIH0pOwogICAgICBpZiAoZGV0YWlscy5tZW51Z3JvdXBlZCAmJiBjb250YWluZXIuZmlyc3RDaGlsZCkgc3VibWVudS5hcHBlbmRDaGlsZChjb250YWluZXIpOwogICAgfSk7CiAgICBpZiAobWVudS5maXJzdENoaWxkICYmIHN1Ym1lbnUuZmlyc3RDaGlsZCkgewogICAgICBmZWVkLmFwcGVuZENoaWxkKG1lbnUpOwogICAgICBmZWVkLnNldEF0dHJpYnV0ZSgnY29udGV4dG1lbnUnLCAobWVudS5pZCA9ICd5YXdmLXdlaWJvLW1lbnUtJyArICgrK2NvdW50ZXIpKSk7CiAgICB9CiAgfTsKICB2YXIgYWN0aXZlID0gZnVuY3Rpb24gKCkgewogICAgb2JzZXJ2ZXIud2VpYm8uYWZ0ZXIoZnVuY3Rpb24gKGZlZWQpIHsKICAgICAgdmFyIHNvbiA9IEFycmF5LmZyb20oZmVlZC5xdWVyeVNlbGVjdG9yQWxsKCcuV0Jfc29uRmVlZCAuV0JfZmVlZF9kZXRhaWwnKSk7CiAgICAgIFtmZWVkXS5jb25jYXQoc29uKS5mb3JFYWNoKGZ1bmN0aW9uIChmZWVkLCBpbmRleCkgeyBhZGRtZW51KGZlZWQsICEhaW5kZXgpOyB9KTsKICAgIH0pOwogIH07CiAgdmFyIGFkZCA9IGZ1bmN0aW9uIChkZXRhaWxzKSB7IGlmIChkZXRhaWxzLmNvbnRleHRtZW51KSBmaWx0ZXJzLnB1c2goZGV0YWlscyk7IH07CiAgcmV0dXJuIHsKICAgICdhZGQnOiBhZGQsCiAgICAnYWN0aXZlJzogYWN0aXZlLAogIH07Cn0oKSk7CgpmaWx0ZXIuZmFzdC5pdGVtID0gZnVuY3Rpb24gKGRldGFpbHMpIHsKICBmaWx0ZXIuZmFzdC52YWxpZC5hZGQoZGV0YWlscy52YWxpZGF0b3IpOwogIGZpbHRlci5mYXN0LnJlY29nbml6ZS5hZGQoZGV0YWlscyk7CiAgZmlsdGVyLmZhc3QucmlnaHQuYWRkKGRldGFpbHMpOwp9OwoKLy8g5bCG5paH5pys44CB6ZO+5o6l562J5ouW5ou95Yiw5qGG5YaF77yM5b+r6YCf5Yib5bu66L+H5ruk5ZmoCmZpbHRlci5mYXN0LmFjdGl2ZSA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGRyb3BBcmVhID0gbnVsbDsKICAvLyDojrflvpfmi5bmi73ph4rmlL7nmoTlhYPntKDkuYvlkI7vvIzmoLnmja7kuI3lkIzov4fmu6TlmajnmoTorr7nva7lpITnkIblhYPntKAKICB2YXIgZ290ID0gZnVuY3Rpb24gKGVsZW1lbnQsIHRhcmdldCkgewogICAgZmlsdGVyLmZhc3QucmVjb2duaXplLmdvdChlbGVtZW50LCB0YXJnZXQpOwogIH07CiAgLy8g6ZqQ6JeP5b6u5Y2a5ouW5ou95Yiw5Y+R5biD5qGG5LiK5Lyg5Zu+54mH5Yqf6IO955qE5Y2g5L2N56ymCiAgdmFyIGhpZGVJbWdVcGxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgaW1nX3VwbG9hZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZW5kX3dlaWJvIC5pbWdfdXBsb2FkJyk7CiAgICBpZiAoaW1nX3VwbG9hZCkgaW1nX3VwbG9hZC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogIH07CiAgdmFyIGFyZWEgPSAoZnVuY3Rpb24gKCkgewogICAgdmFyIGNvbnQsIHRhcmdldCA9IG51bGwsIGFjdGl2ZSA9IGZhbHNlOwogICAgdmFyIHN0YXJ0ID0gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgaWYgKCFmaWx0ZXIuZmFzdC52YWxpZC50ZXN0KGVsZW1lbnQpKSByZXR1cm4gZmFsc2U7CiAgICAgIHRhcmdldCA9IGVsZW1lbnQ7CiAgICAgIHJldHVybiAoYWN0aXZlID0gdHJ1ZSk7CiAgICB9OwogICAgdmFyIGRvbmUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIGlmICghYWN0aXZlKSByZXR1cm4gdHJ1ZTsKICAgICAgcmV0dXJuIChhY3RpdmUgPSBmYWxzZSk7CiAgICB9OwogICAgdmFyIHNob3cgPSBmdW5jdGlvbiAoKSB7CiAgICAgIGRyb3BBcmVhLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOwogICAgfTsKICAgIHZhciBoaWRlID0gZnVuY3Rpb24gKCkgewogICAgICBpZiAodGFyZ2V0ICYmIHRhcmdldC5ob3ZlcikgdGFyZ2V0LmhvdmVyKCk7CiAgICAgIHRhcmdldCA9IG51bGw7CiAgICAgIGRyb3BBcmVhLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgIGhpZGVJbWdVcGxvYWQoKTsKICAgIH07CiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHsKICAgICAgZHJvcEFyZWEgPSB1dGlsLmRvbS5jcmVhdGUoaHRtbC5kcm9wQXJlYSk7CiAgICAgIGNvbnQgPSBkcm9wQXJlYS5xdWVyeVNlbGVjdG9yKCcjeWF3Zi1kcm9wLWFyZWEtY29udGVudCcpOwogICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRyb3BBcmVhKTsKICAgIH07CiAgICB2YXIgY29udGVudCA9IGZ1bmN0aW9uICgpIHsKICAgICAgdXRpbC5kZWJ1ZygnY29udGVudDogJW8nLCBjb250LmlubmVySFRNTCk7CiAgICAgIGNvbnQubm9ybWFsaXplKCk7CiAgICAgIGlmIChjb250LmZpcnN0Q2hpbGQgPT09IGNvbnQubGFzdENoaWxkKSByZXR1cm4gY29udC5maXJzdENoaWxkOwogICAgICBlbHNlIHJldHVybiBjb250OwogICAgfTsKICAgIHZhciBjbGVhciA9IGZ1bmN0aW9uICgpIHsgY29udC5pbm5lckhUTUwgPSAnJzsgfTsKICAgIHZhciBlbnRlciA9IGZ1bmN0aW9uICgpIHsgZHJvcEFyZWEuY2xhc3NMaXN0LmFkZCgndmFsaWQnKTsgfTsKICAgIHZhciBsZWF2ZSA9IGZ1bmN0aW9uICgpIHsgZHJvcEFyZWEuY2xhc3NMaXN0LnJlbW92ZSgndmFsaWQnKTsgfTsKICAgIHJldHVybiB7CiAgICAgICdzaG93Jzogc2hvdywgJ2hpZGUnOiBoaWRlLAogICAgICAnc3RhcnQnOiBzdGFydCwgJ2RvbmUnOiBkb25lLAogICAgICAnY29udGVudCc6IGNvbnRlbnQsICdjbGVhcic6IGNsZWFyLAogICAgICAnaW5pdCc6IGluaXQsCiAgICAgICdlbnRlcic6IGVudGVyLCAnbGVhdmUnOiBsZWF2ZSwKICAgIH07CiAgfSgpKTsKICAvLyDliJ3lp4vljJbmi5bmi73nm7jlhbPkuovku7bnm5HlkKwKICB2YXIgZXZlbnRzID0gZnVuY3Rpb24gKCkgewogICAgdmFyIHZhbGlkID0gZmFsc2U7CiAgICAvLyDlvIDlp4vmi70KICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIGZ1bmN0aW9uIChlKSB7CiAgICAgIHZhbGlkID0gZmFsc2U7IGFyZWEubGVhdmUoKTsKICAgICAgaWYgKGFyZWEuc3RhcnQoZS50YXJnZXQpKSBhcmVhLnNob3coKTsKICAgIH0sIGZhbHNlKTsKICAgIC8vIOaLveWujOS6hgogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2VuZCcsIGZ1bmN0aW9uIChlKSB7CiAgICAgIGlmICghYXJlYS5kb25lKCkgJiYgdmFsaWQpIGdvdChhcmVhLmNvbnRlbnQoKSwgZS50YXJnZXQpOwogICAgICBhcmVhLmNsZWFyKCk7IGFyZWEuaGlkZSgpOwogICAgfSwgZmFsc2UpOwogICAgZHJvcEFyZWEuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2VudGVyJywgZnVuY3Rpb24gKGUpIHsgdmFsaWQgPSB0cnVlOyBhcmVhLmVudGVyKCk7IH0pOwogICAgZHJvcEFyZWEuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2xlYXZlJywgZnVuY3Rpb24gKGUpIHsgdmFsaWQgPSBmYWxzZTsgYXJlYS5sZWF2ZSgpOyB9KTsKICB9OwogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICBhcmVhLmluaXQoKTsKICAgIGV2ZW50cygpOwogIH07Cn0oKSk7CgovLyDms6jlhozlkozmianlsZXmlbDnu4TnsbvlnovnmoTlhoXlrrkKZmlsdGVyLmV4dGVudCA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGV4dHAgPSB7fTsKICB2YXIgcmVnID0gZnVuY3Rpb24gKGtleSwgZnVuYykgewogICAgaWYgKHR5cGVvZiBleHRwW2tleV0gPT09ICdmdW5jdGlvbicpIHJldHVybjsKICAgIGVsc2UgewogICAgICB2YXIgd29yZHMgPSBleHRwW2tleV0gfHwgW107CiAgICAgIGV4dHBba2V5XSA9IGZ1bmM7CiAgICAgIGZ1bmMod29yZHMpOwogICAgfQogIH07CiAgdmFyIGFjdCA9IGZ1bmN0aW9uIChrZXksIHdvcmRzKSB7CiAgICBpZiAodHlwZW9mIGV4dHBba2V5XSA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGV4dHBba2V5XSh3b3Jkcyk7CiAgICBlbHNlIGV4dHBba2V5XSA9IChleHRwW2tleV0gfHwgW10pLmNvbmNhdCh3b3Jkcyk7CiAgfTsKICByZXR1cm4gewogICAgJ3JlZyc6IHJlZywKICAgICdhY3QnOiBhY3QsCiAgfTsKfSgpKTsKCi8vIOi/h+a7pOWQjuWvueaWh+aho+agkeeahOS4gOS6m+S/ruaUuQpmaWx0ZXIuZml4ID0ge307CgovLyDmt7vliqDngrnlh7vlkI7lsZXlvIDmipjlj6Dmtojmga/nmoTkuovku7YKZmlsdGVyLmZpeC5mb2xkID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgZml4T25lID0gdXRpbC5mdW5jLmNhdGNoZWQoZnVuY3Rpb24gKGZlZWQpIHsKICAgIGZlZWQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiBzaG93RmVlZCgpIHsKICAgICAgZmVlZC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHNob3dGZWVkKTsKICAgICAgaWYgKChmZWVkLmdldEF0dHJpYnV0ZSgneWF3Zi1kaXNwbGF5JykgfHwgJycpLmxhc3RJbmRleE9mKCctZm9sZCcpID09PSAtMSkgcmV0dXJuOwogICAgICB2YXIgZGlzcGxheSA9IChmZWVkLmdldEF0dHJpYnV0ZSgneWF3Zi1kaXNwbGF5JykgfHwgJycpLnJlcGxhY2UoLy1mb2xkJC9nLCAnLXVuZm9sZCcpOwogICAgICBmZWVkLnNldEF0dHJpYnV0ZSgneWF3Zi1kaXNwbGF5JywgZGlzcGxheSk7CiAgICB9KTsKICAgIC8vIOa3u+WKoOS9nOiAheS/oeaBrwogICAgdHJ5IHsKICAgICAgdmFyIGF1dGhvciA9IHdlaWJvLmZlZWQuYXV0aG9yLm5hbWUoZmVlZCk7CiAgICAgIGlmIChhdXRob3IpIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLWF1dGhvcicsIGF1dGhvcik7CiAgICB9IGNhdGNoIChlKSB7IH0KICB9KTsKICB2YXIgZml4ID0gZnVuY3Rpb24gKGZlZWQpIHsKICAgIHZhciBmZWVkcyA9IFtmZWVkXS5jb25jYXQoQXJyYXkuZnJvbShmZWVkLnF1ZXJ5U2VsZWN0b3JBbGwoJy5XQl9mZWVkX3R5cGUnKSkpOwogICAgZmVlZHMuZm9yRWFjaChmdW5jdGlvbiAoZmVlZCkgewogICAgICBpZiAoKGZlZWQuZ2V0QXR0cmlidXRlKCd5YXdmLWRpc3BsYXknKSB8fCAnJykubGFzdEluZGV4T2YoJy1mb2xkJykgPT09IC0xKSByZXR1cm47CiAgICAgIGZpeE9uZShmZWVkKTsKICAgIH0pOwogIH07CiAgcmV0dXJuIGZpeDsKfSgpKTsKCi8vIOmakOiXj+eahOW+ruWNmuebtOaOpeS7juWIl+ihqOS4reWOu+aOie+8jOWHj+WwkeW8gOmUgOaYr+asoeimgeeahO+8jOS4u+imgeaYr+WFvOWuuSBKSyDnrYnlv6vmjbfplK4KZmlsdGVyLmZpeC5oaWRkZW4gPSBmdW5jdGlvbiAoZmVlZCkgewogIGlmICgoZmVlZC5nZXRBdHRyaWJ1dGUoJ3lhd2YtZGlzcGxheScpIHx8ICcnKS5sYXN0SW5kZXhPZignLWhpZGRlbicpID09PSAtMSkgcmV0dXJuOwogIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge2ZpbHRlci5maXguaGlkZGVuLmRvbmUoZmVlZCk7IH0sIDEwMCk7Cn07CmZpbHRlci5maXguaGlkZGVuLmRvbmUgPSBmdW5jdGlvbiAoZmVlZCkgewogIGlmICghZmVlZC5wYXJlbnROb2RlKSByZXR1cm47CiAgZmVlZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGZlZWQpOwp9OwoKLy8g6ZqQ6JeP55qE6K+E6K665Lmf55u05o6l5Yig5o6J5aW95LqGCmZpbHRlci5maXguY210aGlkZGVuID0gZnVuY3Rpb24gKGNvbW1lbnQpIHsKICBpZiAoKGNvbW1lbnQuZ2V0QXR0cmlidXRlKCd5YXdmLWNtdC1kaXNwbGF5JykgfHwgJycpLmxhc3RJbmRleE9mKCctaGlkZGVuJykgPT09IC0xKSByZXR1cm47CiAgcmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBmaWx0ZXIuZml4LmNtdGhpZGRlbi5kb25lKGNvbW1lbnQpOyB9LCAxMDApOwp9OwpmaWx0ZXIuZml4LmNtdGhpZGRlbi5kb25lID0gZnVuY3Rpb24gKGNvbW1lbnQpIHsKICBjb21tZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoY29tbWVudCk7Cn07CgovLyDnnJ/mraPlvq7ljZrov4fmu6TnmoTmoLjlv4PmqKHlnZcKZmlsdGVyLmFjdGl2ZSA9IGZ1bmN0aW9uIChmZWVkKSB7CiAgdmFyIHNvbiA9IEFycmF5LmZyb20oZmVlZC5xdWVyeVNlbGVjdG9yQWxsKCcuV0Jfc29uRmVlZCAuV0JfZmVlZF9kZXRhaWwnKSk7CiAgdmFyIHNzb24gPSBbXTsKICB2YXIgZml4RmVlZCA9IGZ1bmN0aW9uICgpIHsKICAgIGZpbHRlci5maXguZm9sZChmZWVkKTsKICAgIGZpbHRlci5maXguaGlkZGVuKGZlZWQpOwogIH07CiAgdmFyIGlzSGlkZGVuID0gKGZ1bmN0aW9uICgpIHsKICAgIHZhciBhY3Rpb24gPSBmaWx0ZXIucnVsZXMucGFyc2UoZmVlZCwgZmFsc2UpIHx8ICd1bnNldCc7CiAgICBmZWVkLnNldEF0dHJpYnV0ZSgneWF3Zi1kaXNwbGF5JywgJ2Rpc3BsYXktJyArIGFjdGlvbik7CiAgICBmaXhGZWVkKGZlZWQpOwogICAgcmV0dXJuIGFjdGlvbi5tYXRjaCgvXiguKi0pP2hpZGRlbiQvKTsKICB9KCkpOwogIGlmIChpc0hpZGRlbikgcmV0dXJuIGZhbHNlOwogIHNvbi5mb3JFYWNoKGZ1bmN0aW9uIChmZWVkLCBpbmRleCkgewogICAgdmFyIGlzU29uID0gISFpbmRleDsKICAgIHZhciBhY3Rpb24gPSBmaWx0ZXIucnVsZXMucGFyc2UoZmVlZCwgaXNTb24pIHx8ICd1bnNldCc7CiAgICBmZWVkLnNldEF0dHJpYnV0ZSgneWF3Zi1kaXNwbGF5JywgJ2Rpc3BsYXktJyArIGFjdGlvbik7CiAgICBpZiAoaXNTb24gJiYgIWFjdGlvbi5tYXRjaCgvXiguKi0pP2hpZGRlbiQvKSkgc3Nvbi5wdXNoKGZlZWQpOwogICAgZml4RmVlZChmZWVkKTsKICB9KTsKICB2YXIgaGQgPSBmZWVkLnF1ZXJ5U2VsZWN0b3IoJy5XQl9mZWVkX3RvZ2V0aGVyIC53ZnRfaGQnKTsKICBpZiAoaGQpIHsKICAgIHV0aWwuZGVidWcoJ3NvbiBjb3VudDogJW8sIG5vdCBoaWRkZW46ICVvIC0gJW8nLCBzb24ubGVuZ3RoLCBzc29uLmxlbmd0aCwgc3Nvbik7CiAgICBpZiAoc3Nvbi5sZW5ndGggPT09IDApIHsKICAgICAgaGQucGFyZW50Tm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGhkLnBhcmVudE5vZGUpOwogICAgfSBlbHNlIGhkLnF1ZXJ5U2VsZWN0b3IoJ1tub2RlLXR5cGU9ImZvbGxvd051bSJdJykudGV4dENvbnRlbnQgPSBzc29uLmxlbmd0aDsKICB9CiAgcmV0dXJuIHRydWU7Cn07CgovLyDov4fmu6Tor4TorrrnmoTmoLjlv4PmqKHlnZcKZmlsdGVyLmNtdF9hY3RpdmUgPSBmdW5jdGlvbiAoY29tbWVudCkgewogIHZhciBhY3Rpb24gPSBmaWx0ZXIuY29tbWVudC5wYXJzZShjb21tZW50KSB8fCAndW5zZXQnOwogIGNvbW1lbnQuc2V0QXR0cmlidXRlKCd5YXdmLWNtdC1kaXNwbGF5JywgJ2Rpc3BsYXktJyArIGFjdGlvbik7CiAgaWYgKGFjdGlvbiA9PT0gJ2hpZGRlbicpIGZpbHRlci5maXguY210aGlkZGVuKGNvbW1lbnQpOwp9OwoKLy8g5oyJ57G75Z6L6L+H5ruk5Zmo5Ye95pWwCmZpbHRlci50eXBlZCA9IHt9OwoKLy8g5qC55o2u6YCJ5oup57G75Z6L5LiN5ZCM55Sf5oiQ5LiA5Lqb5a2Y5Y+W6K6+572u55qE5Ye95pWwCmZpbHRlci50eXBlZC5jb25maWcgPSAoZnVuY3Rpb24gKCkgewogIC8vIOWtl+espuS4sgogIHZhciBiYXNlQ29uZmlnID0gZnVuY3Rpb24gKHR5cGUsIHN0YW5kbGl6ZSkgewogICAgaWYgKCFzdGFuZGxpemUpIHN0YW5kbGl6ZSA9IHV0aWwuZnVuYy5pZGVudGl0eTsKICAgIHJldHVybiBmdW5jdGlvbiAoaXRlbSkgewogICAgICB2YXIgc2tleSA9IGl0ZW0ua2V5OwogICAgICBpZiAoc2tleSkgewogICAgICAgIGlmIChpdGVtLmludGVybmFsKSBza2V5ID0gc2tleS5yZXBsYWNlKC9cLihbXlwuXSopJC8sICcuXyQxJyk7CiAgICAgICAgaWYgKCFpdGVtLmdldGNvbmYpIGl0ZW0uZ2V0Y29uZiA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBkZWYgPSAnZGVmYXVsdCcgaW4gaXRlbSA/IGl0ZW1bJ2RlZmF1bHQnXSA6ICh0eXBlID8gdHlwZSgpIDogdW5kZWZpbmVkKTsKICAgICAgICAgIHJldHVybiBzdGFuZGxpemUoaXRlbS5jb25mID0gdXRpbC5jb25maWcuZ2V0KHNrZXksIGRlZiwgdHlwZSkpOwogICAgICAgIH07CiAgICAgICAgaWYgKCFpdGVtLnB1dGNvbmYpIGl0ZW0ucHV0Y29uZiA9IGZ1bmN0aW9uIChjb25mKSB7CiAgICAgICAgICByZXR1cm4gdXRpbC5jb25maWcucHV0KHNrZXksIHN0YW5kbGl6ZShpdGVtLmNvbmYgPSBjb25mKSk7CiAgICAgICAgfTsKICAgICAgICB1dGlsLmNvbmZpZy5yZWcoc2tleSk7CiAgICAgIH0KICAgICAgaWYgKGl0ZW0uZ2V0Y29uZiAmJiBpdGVtLnB1dGNvbmYpIHJldHVybiBpdGVtLnB1dGNvbmYoaXRlbS5nZXRjb25mKCkpOwogICAgfTsKICB9OwogIC8vIOmbhuWQiOexu+Wei+eahGFkZC9kZWzmk43kvZwKICB2YXIgaXRlbXNDb25maWcgPSBmdW5jdGlvbiAoaXRlbSkgewogICAgdmFyIHZhbHVlID0gYmFzZUNvbmZpZyhBcnJheSwgZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgubWFwKFN0cmluZyk7IH0pKGl0ZW0pOwogICAgLy8g6Zmk5LqG5Z+65pys55qEZ2V0L3B1dOWklu+8jOaPkOS+m+mrmOe6p+eahGFkZC9kZWwKICAgIGlmICghaXRlbS5kZWxjb25mKSBpdGVtLmRlbGNvbmYgPSBmdW5jdGlvbiAoc3RyKSB7CiAgICAgIHZhciB2YWwgPSBpdGVtLmdldGNvbmYoKTsKICAgICAgdmFsID0gdmFsLmZpbHRlcihmdW5jdGlvbiAoeCkgeyByZXR1cm4geCAhPT0gc3RyOyB9KTsKICAgICAgcmV0dXJuIGl0ZW0ucHV0Y29uZih2YWwpOwogICAgfTsKICAgIGlmICghaXRlbS5hZGRjb25mKSBpdGVtLmFkZGNvbmYgPSBmdW5jdGlvbiAoc3RyKSB7CiAgICAgIGl0ZW0uZGVsY29uZihzdHIpOwogICAgICB2YXIgdmFsID0gaXRlbS5nZXRjb25mKCk7IHZhbC5wdXNoKHN0cik7CiAgICAgIHJldHVybiBpdGVtLnB1dGNvbmYodmFsKTsKICAgIH07CiAgICAvLyDmraTlpJbov5jmnInkvpvmianlsZXnlKjnmoRleHRlbnQKICAgIGlmIChpdGVtLmV4dGVudCAmJiBBcnJheS5pc0FycmF5KGl0ZW0uZXh0ZW50KSkgewogICAgICBpZiAoIWl0ZW0uZXh0ZW50Y29uZikgewogICAgICAgIGl0ZW0uZXh0ZW50Y29uZiA9IGZ1bmN0aW9uICh3b3JkcykgewogICAgICAgICAgaWYgKGl0ZW0uYWRkKSB3b3JkcyA9IHdvcmRzLm1hcChpdGVtLmFkZC5iaW5kKGl0ZW0pKTsKICAgICAgICAgIGl0ZW0uZXh0ZW50ID0gaXRlbS5leHRlbnQuY29uY2F0KHdvcmRzKTsKICAgICAgICB9OwogICAgICB9CiAgICAgIGZpbHRlci5leHRlbnQucmVnKGl0ZW0ua2V5LCBpdGVtLmV4dGVudGNvbmYpOwogICAgfQogICAgcmV0dXJuIHZhbHVlOwogIH07CgogIHJldHVybiB7CiAgICAnc3RyaW5nJzogYmFzZUNvbmZpZyhTdHJpbmcpLAogICAgJ3N0cmluZ3MnOiBpdGVtc0NvbmZpZywKICAgICdib29sZWFuJzogYmFzZUNvbmZpZyhCb29sZWFuKSwKICAgICd1c2Vycyc6IGl0ZW1zQ29uZmlnLAogICAgJ2dyb3Vwcyc6IGl0ZW1zQ29uZmlnLAogICAgJ251bWJlcic6IGJhc2VDb25maWcoTnVtYmVyKSwKICAgICdyYW5nZSc6IGJhc2VDb25maWcoTnVtYmVyKSwKICAgICdzZWxlY3QnOiBiYXNlQ29uZmlnKFN0cmluZyksCiAgICAnY29sb3InOiBiYXNlQ29uZmlnKFN0cmluZyksCiAgICAna2V5JzogYmFzZUNvbmZpZyhOdW1iZXIpLAogICAgJ25vdWknOiBiYXNlQ29uZmlnKCksCiAgICAnc3Vic2NyaWJlJzogYmFzZUNvbmZpZyhCb29sZWFuKSwKICB9Owp9KCkpOwoKLy8g57uZ6L6T5YWl5qGG5re75Yqg6Ieq5Yqo6KGl5YWo5Yqf6IO9CnV0aWwuY29tcGxldGUgPSAoZnVuY3Rpb24gKCkgewogIHZhciBlbmFibGVkID0gZmFsc2U7CiAgdmFyIGVuYWJsZSA9IGZ1bmN0aW9uICgpIHsgZW5hYmxlZCA9IHRydWU7IH07CiAgdmFyIHR5cGVzID0gewogICAgJ3VzZXInOiBuZXR3b3JrLnN1Z2dlc3QudXNlciwKICAgICdncm91cCc6IG5ldHdvcmsuc3VnZ2VzdC5ncm91cCwKICAgICd0b3BpYyc6IG5ldHdvcmsuc3VnZ2VzdC50b3BpYywKICB9OwogIHZhciB0aW1lb3V0ID0gbnVsbCwgc2hvd24gPSAnJzsKICAvLyDmm7TmlrDmjqjojZDor40KICB2YXIgdXBkYXRlU3VnZ2VzdCA9IGZ1bmN0aW9uICh0eXBlLCBjb250YWluZXIsIGlucHV0KSB7CiAgICB2YXIgdWwgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcigndWwnKTsKICAgIHJldHVybiBmdW5jdGlvbiAodGV4dCkgewogICAgICBzaG93biA9IHRleHQ7CiAgICAgIHVsLmlubmVySFRNTCA9ICcnOwogICAgICB0eXBlc1t0eXBlXSh0ZXh0LCBmdW5jdGlvbiAoaXRlbXMpIHsKICAgICAgICBpdGVtcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICB2YXIgaCA9IHV0aWwuc3RyLmZpbGwoaHRtbC5zdWdnZXN0aW9uSXRlbSwgeyAndGV4dCc6IHV0aWwuc3RyLmVzY2FwZS54bWwoaXRlbSkgfSk7CiAgICAgICAgICB2YXIgbGkgPSB1dGlsLmRvbS5jcmVhdGUoJ3VsJywgaCkuZmlyc3RDaGlsZDsKICAgICAgICAgIHVsLmFwcGVuZENoaWxkKGxpKTsKICAgICAgICAgIGxpLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBmdW5jdGlvbiAoKSB7IGZvY3VzKGNvbnRhaW5lciwgbGkpOyB9KTsKICAgICAgICAgIGxpLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGZ1bmN0aW9uIChlKSB7IGRvbmUoaW5wdXQsIGxpKTsgZS5wcmV2ZW50RGVmYXVsdCgpOyB9KTsKICAgICAgICB9KTsKICAgICAgICBjb250YWluZXIuc2V0QXR0cmlidXRlKCd5YXdmLWNvbXBsZXRlLWl0ZW1zJywgaXRlbXMubGVuZ3RoKTsKICAgICAgfSk7CiAgICB9OwogIH07CiAgLy8g5qOA5p+l5paH5pys5b2V5YWl77yM562J55So5oi36L6T5YWl6Ze06ZqZ55qE5pe25YCZ5YaN6IGU572R5o6o6I2Q5YCZ6YCJ6K+NCiAgdmFyIGNoZWNrVGV4dCA9IGZ1bmN0aW9uIChpbnB1dCwgc3VnZ2VzdCkgewogICAgdmFyIGN1cnJlbnRDaGVjayA9IG51bGw7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICBpZiAoaW5wdXQudmFsdWUgPT09IGN1cnJlbnRDaGVjaykgcmV0dXJuOyBjdXJyZW50Q2hlY2sgPSBpbnB1dC52YWx1ZTsKICAgICAgaWYgKHRpbWVvdXQgIT09IG51bGwpIGNsZWFyVGltZW91dCh0aW1lb3V0KTsKICAgICAgaWYgKHNob3duICE9PSBpbnB1dC52YWx1ZSkgc3VnZ2VzdCgnJyk7CiAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICB0aW1lb3V0ID0gbnVsbDsKICAgICAgICBzdWdnZXN0KGlucHV0LnZhbHVlKTsKICAgICAgfSwgNTApOwogICAgfTsKICB9OwogIC8vIOe7meavj+S4qui+k+WFpeahhua3u+WKoOWvueW6lOeahOWAmemAieahhgogIHZhciBhZGRTZWxlY3RMaXN0ID0gZnVuY3Rpb24gKGlucHV0KSB7CiAgICB2YXIgY29udGFpbmVyID0gdXRpbC5kb20uY3JlYXRlKCdkaXYnLCB1dGlsLnN0ci5maWxsKGh0bWwuc3VnZ2VzdGlvbkNvbnRhaW5lcikpLmZpcnN0Q2hpbGQ7CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7CiAgICB1dGlsLmZ1bmMuY2FsbChmdW5jdGlvbiAoKSB7IHVwZGF0ZVBvc2l0aW9uKGlucHV0LCBjb250YWluZXIpOyB9KTsKICAgIHJldHVybiBjb250YWluZXI7CiAgfTsKICAvLyDoh6rliqjmm7TmlrDlgJnpgInmoYbnmoTkvY3nva4KICB2YXIgdXBkYXRlUG9zaXRpb24gPSBmdW5jdGlvbiAoaW5wdXQsIGNvbnRhaW5lcikgewogICAgdmFyIGJhayA9IFtdOwogICAgKGZ1bmN0aW9uIHBvc2l0aW9uKCkgewogICAgICBpZiAoIXV0aWwuZG9tLm1hdGNoZXMoaW5wdXQsICdib2R5IConKSkgewogICAgICAgIGNvbnRhaW5lci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGNvbnRhaW5lcik7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciByZWN0ID0gaW5wdXQuZ2V0Q2xpZW50UmVjdHMoKVswXTsgaWYgKCFyZWN0KSByZXR1cm47CiAgICAgIHZhciB0b3AgPSAocmVjdC5ib3R0b20gKyB3aW5kb3cucGFnZVlPZmZzZXQpLnRvRml4ZWQoMCk7CiAgICAgIHZhciBsZWZ0ID0gKHJlY3QubGVmdCArIHdpbmRvdy5wYWdlWE9mZnNldCkudG9GaXhlZCgwKTsKICAgICAgaWYgKCFiYWsgfHwgbGVmdCAhPT0gYmFrWzBdIHx8IHRvcCAhPT0gYmFrWzFdKSB7CiAgICAgICAgYmFrID0gW2xlZnQsIHRvcF07CiAgICAgICAgY29udGFpbmVyLnN0eWxlLnRvcCA9IHRvcCArICdweCc7CiAgICAgICAgY29udGFpbmVyLnN0eWxlLmxlZnQgPSBsZWZ0ICsgJ3B4JzsKICAgICAgfQogICAgICBzZXRUaW1lb3V0KHBvc2l0aW9uLCA1MDApOwogICAgfSgpKTsKICB9OwogIC8vIOabtOaWsOW9k+WJjemAieS4reeahOWAmemAiemhueaYr+WTquS4qgogIHZhciBjdXJyZW50ID0gZnVuY3Rpb24gKGNvbnRhaW5lciwgb2Zmc2V0KSB7CiAgICB2YXIgbGkgPSBBcnJheS5mcm9tKGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCdsaScpKSwgY291bnQgPSBsaS5sZW5ndGg7CiAgICBpZiAoY291bnQgPT09IDApIHJldHVybiBudWxsOwogICAgdmFyIGN1ciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuY3VyJyk7CiAgICB2YXIgaW5kZXggPSBsaS5pbmRleE9mKGN1cik7CiAgICBpZiAoaW5kZXggPT09IC0xICYmIG9mZnNldCA9PT0gMCkgcmV0dXJuIG51bGw7CiAgICBlbHNlIGlmIChpbmRleCA9PT0gLTEgJiYgb2Zmc2V0ID09PSAtMSkgaW5kZXggPSBjb3VudCAtIDE7CiAgICBlbHNlIGlmIChpbmRleCA9PT0gLTEgJiYgb2Zmc2V0ID09PSAxKSBpbmRleCA9IDA7CiAgICBlbHNlIGluZGV4ID0gKGluZGV4ICsgb2Zmc2V0ICsgY291bnQpICUgY291bnQ7CiAgICBpZiAoY3VyKSBjdXIuY2xhc3NMaXN0LnJlbW92ZSgnY3VyJyk7CiAgICBsaVtpbmRleF0uY2xhc3NMaXN0LmFkZCgnY3VyJyk7CiAgICByZXR1cm4gbGlbaW5kZXhdOwogIH07CiAgdmFyIGZvY3VzID0gZnVuY3Rpb24gKGNvbnRhaW5lciwgbGkpIHsKICAgIGlmIChsaS5jbGFzc0xpc3QuY29udGFpbnMoJ2N1cicpKSByZXR1cm47CiAgICB2YXIgY3VyID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5jdXInKTsKICAgIGlmIChjdXIpIGN1ci5jbGFzc0xpc3QucmVtb3ZlKCdjdXInKTsKICAgIGxpLmNsYXNzTGlzdC5hZGQoJ2N1cicpOwogIH07CiAgLy8g6YCJ5Lit5YCZ6YCJ6aG55pe25o+Q5Lqk6K+l6YCJ6aG5CiAgdmFyIGRvbmUgPSBmdW5jdGlvbiAoaW5wdXQsIGxpKSB7CiAgICBpZiAobGkgPT09IG51bGwpIHJldHVybjsKICAgIGlucHV0LnZhbHVlID0gbGkuZ2V0QXR0cmlidXRlKCd5YXdmLXN1Z2dlc3Rpb24nKTsKICAgIGlucHV0LmZvcm0ucXVlcnlTZWxlY3RvcignLnlhd2YtY29uZmlnQWRkJykuY2xpY2soKTsKICB9OwogIC8vIOe7meafkOS4qui+k+WFpeahhuazqOWGjOWAmemAieiPnOWNlQogIHZhciByZWcgPSBmdW5jdGlvbiAoaW5wdXQsIHR5cGUpIHsKICAgIGlmICghZW5hYmxlZCkgcmV0dXJuOwogICAgdmFyIGNvbnRhaW5lciA9IGFkZFNlbGVjdExpc3QoaW5wdXQpOwogICAgdmFyIHN1Z2dlc3QgPSB1cGRhdGVTdWdnZXN0KHR5cGUsIGNvbnRhaW5lciwgaW5wdXQpOwogICAgdmFyIGNoZWNrZXIgPSBjaGVja1RleHQoaW5wdXQsIHN1Z2dlc3QpOwogICAgdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uIChldmVudCkgewogICAgICBpZiAoZXZlbnQgJiYgZXZlbnQudHlwZSA9PT0gJ2tleXByZXNzJykgewogICAgICAgIHZhciBrZXkgPSB1dGlsLmtleWJvYXJkLmdldChldmVudCk7CiAgICAgICAgc3dpdGNoIChrZXkpIHsKICAgICAgICAgIGNhc2UgdXRpbC5rZXlib2FyZC5jb2RlLkVOVEVSOgogICAgICAgICAgICBkb25lKGlucHV0LCBjdXJyZW50KGNvbnRhaW5lciwgMCkpOwogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgdXRpbC5rZXlib2FyZC5jb2RlLlVQOiBjdXJyZW50KGNvbnRhaW5lciwgLTEpOyBicmVhazsKICAgICAgICAgIGNhc2UgdXRpbC5rZXlib2FyZC5jb2RlLkRPV046IGN1cnJlbnQoY29udGFpbmVyLCAxKTsgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICAgIGNoZWNrZXIoaW5wdXQsIHN1Z2dlc3QpOwogICAgfTsKICAgIHZhciBibHVyID0gZnVuY3Rpb24gKCkgewogICAgICBjb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgIH07CiAgICB2YXIgZm9jdXMgPSBmdW5jdGlvbiAoZSkgewogICAgICBjb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICcnOyB1cGRhdGUoZSk7CiAgICB9OwogICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdXBkYXRlKTsKICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdXBkYXRlKTsKICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXByZXNzJywgdXBkYXRlKTsKICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgdXBkYXRlKTsKICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgZm9jdXMpOwogICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGJsdXIpOwoKICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnYXV0b2NvbXBsZXRlJywgJ29mZicpOwogICAgcmV0dXJuIHVwZGF0ZTsKICB9OwogIHJldHVybiB7CiAgICAnZW5hYmxlJzogZW5hYmxlLAogICAgJ3JlZyc6IHJlZywKICB9Owp9KCkpOwoKLy8g5qC55o2u5LiN5ZCM57G75Z6L55Sf5oiQ5bim5pyJ5LqL5Lu255qE5paH5qGj57uT54K5CmZpbHRlci50eXBlZC5kb20gPSAoZnVuY3Rpb24gKCkgewogIC8vIOWQhOenjeS4jeWQjOexu+Wei+eahOaYvuekuumDveWfuuS6juatpOautemAu+i+kQogIHZhciBiYXNlID0gZnVuY3Rpb24gKGNvbmZpZ3MpIHsKICAgIC8vIOWwhuaWh+acrOWGheWuueihpeWFqAogICAgdmFyIHRleHRCaW5kZXIgPSBmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gZnVuY3Rpb24gKHRleHQsIHZhbHVlcykgewogICAgICAgIHJldHVybiB1dGlsLnN0ci5maWxsKHRleHQsCiAgICAgICAgICB2YWx1ZXMgfHwge30sCiAgICAgICAgICBpdGVtLAogICAgICAgICAgaXRlbS5pMThuICYmIGl0ZW0uaTE4bi5sb2NhbCB8fCB7fSwKICAgICAgICAgIGl0ZW0udGV4dHMgfHwge30sCiAgICAgICAgICB7ICdrZXknOiAnJyB9KTsKICAgICAgfTsKICAgIH07CiAgICAvLyDnlJ/miJAgRE9NCiAgICB2YXIgZ2VuRG9tID0gZnVuY3Rpb24gKGxpbmUsIHJlZikgewogICAgICAvLyDlnKjpnIDopoHlvJXnlKjlhbbku5bmjqfku7bnmoTlnLDmlrnnlZnnqboKICAgICAgbGluZSA9IGxpbmUucmVwbGFjZSgve3s8KFthLXpBLVowLTlfLV0qKT59fS9nLCBmdW5jdGlvbiAobSwgcCkgewogICAgICAgIHJldHVybiByZWYocCkgPyB1dGlsLnN0ci5maWxsKGh0bWwuY29uZmlnUHJlZmlsbCwgeyAnaWQnOiBwIH0pIDogbTsKICAgICAgfSk7CiAgICAgIC8vIOW8leeUqOWFtuS7luiuvue9rumhuQogICAgICBsaW5lID0gbGluZS5yZXBsYWNlKC9cW1xbKFteXF1dKilcXVxdL2csIGZ1bmN0aW9uIChfLCBpKSB7CiAgICAgICAgcmV0dXJuIHV0aWwuc3RyLmZpbGwoaHRtbC5yZWZDb25maWdJdGVtLCB7ICdyZWYnOiBpIH0pOwogICAgICB9KTsKICAgICAgLy8g5p6E6YCg5Z+65pys55qE5paH5qGjCiAgICAgIHZhciBkb20gPSB1dGlsLmRvbS5jcmVhdGUoJ2RpdicsIGxpbmUpLmZpcnN0Q2hpbGQ7CiAgICAgIC8vIOWwhuW8leeUqOeahOiuvue9ruaOp+S7tuWhq+WbngogICAgICB2YXIgcGYgPSBBcnJheS5mcm9tKGRvbS5xdWVyeVNlbGVjdG9yQWxsKCdzcGFuLnlhd2YtY29uZmlnUHJlZmlsbCcpKTsKICAgICAgcGYuZm9yRWFjaChmdW5jdGlvbiAocGZpKSB7CiAgICAgICAgcGZpLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHJlZihwZmkuaWQpLnNob3codHJ1ZSksIHBmaSk7CiAgICAgIH0pOwogICAgICAvLyDlsIblvJXnlKjnmoTlhbbku5borr7nva7pobnloavlm54KICAgICAgdmFyIHJmID0gQXJyYXkuZnJvbShkb20ucXVlcnlTZWxlY3RvckFsbCgnW3lhd2YtcmVmXScpKTsKICAgICAgcmYuZm9yRWFjaChmdW5jdGlvbiAocmVmKSB7CiAgICAgICAgdmFyIGRvbSA9IHV0aWwub2JqLmRvdHRlZChmaWx0ZXIuaXRlbXMsIHJlZi5nZXRBdHRyaWJ1dGUoJ3lhd2YtcmVmJykpLnNob3coKTsKICAgICAgICBkb20uY2xhc3NMaXN0LnJlbW92ZSgneWF3Zi1jb25maWdJdGVtJyk7IGRvbS5jbGFzc0xpc3QuYWRkKCd5YXdmLXJlZkNvbmZpZ0l0ZW0nKTsKICAgICAgICByZWYucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoZG9tLCByZWYpOwogICAgICB9KTsKICAgICAgcmV0dXJuIGRvbTsKICAgIH07CiAgICAvLyDlpoLmnpwgaW5uZXJPbmx5IOWImeWPqueUn+aIkOi+k+WFpeahhgogICAgcmV0dXJuIGZ1bmN0aW9uIChpbm5lck9ubHkpIHsKICAgICAgdmFyIGl0ZW0gPSB0aGlzOwogICAgICB2YXIgdGV4dGJpbmQgPSB0ZXh0QmluZGVyKGl0ZW0pOwogICAgICB2YXIgb3V0ZXIsIGlubmVyLCBwbGFjZWhvbGRlciA9ICd7e319JzsKICAgICAgaWYgKGlubmVyT25seSkgb3V0ZXIgPSBwbGFjZWhvbGRlcjsKICAgICAgZWxzZSB7CiAgICAgICAgdmFyIHRleHQgPSB0ZXh0YmluZChpdGVtLnRleHQgfHwgJycpLnJlcGxhY2UoL1x8XHwvZywgaHRtbFsnfHwnXSkucmVwbGFjZSgvXHwvZywgaHRtbFsnfCddKTsKICAgICAgICBpZiAodGV4dC5pbmRleE9mKHBsYWNlaG9sZGVyKSA9PT0gLTEpIHRleHQgPSBwbGFjZWhvbGRlciArIHRleHQ7CiAgICAgICAgb3V0ZXIgPSB0ZXh0YmluZChjb25maWdzLm91dGVyIHx8IGh0bWwuY29uZmlnRGVmYXVsdCwgeyAndGV4dCc6IHRleHQgfSk7CiAgICAgIH0KICAgICAgaW5uZXIgPSB0ZXh0YmluZChjb25maWdzLmlubmVyIHx8ICcnKTsKICAgICAgLy8g5b6X5Yiw5YyF5ous6L6T5YWl5qGG55qE55qEIEhUTUwKICAgICAgdmFyIGxpbmUgPSBvdXRlci5yZXBsYWNlKHBsYWNlaG9sZGVyLCBmdW5jdGlvbiAoKSB7IHJldHVybiBpbm5lcjsgfSk7CiAgICAgIHZhciBkb20gPSBnZW5Eb20obGluZSwgZnVuY3Rpb24gKGlkKSB7IHJldHVybiBpdGVtLnJlZltpZF07IH0pOwogICAgICBpZiAoY29uZmlncy5iaW5kZXIpIGNvbmZpZ3MuYmluZGVyKGRvbSwgaXRlbSk7CiAgICAgIHJldHVybiBkb207CiAgICB9OwogIH07CgogIC8vIOWvueWkp+mDqOWIhuaDheWGtemAgueUqOeahOeugOWNleWMheijhQogIHZhciBzaW1wbGUgPSBmdW5jdGlvbiAobmFtZSwgYmluZGVyKSB7CiAgICByZXR1cm4gYmFzZSh7CiAgICAgICdvdXRlcic6IGh0bWxbJ2NvbmZpZycgKyBuYW1lXSwKICAgICAgJ2lubmVyJzogaHRtbFsnY29uZmlnJyArIG5hbWUgKyAnSW5wdXQnXSwKICAgICAgJ2JpbmRlcic6IGJpbmRlciwKICAgIH0pOwogIH07CgogIC8vIOWJr+agh+mimAogIHZhciBzdWJ0aXRsZSA9IHNpbXBsZSgnU3VidGl0bGUnKTsKICAvLyDmlofmnKwKICB2YXIgdGV4dCA9IHNpbXBsZSgnVGV4dCcpOwogIC8vIOS4jee8qei/m+eahOaWh+acrAogIHZhciByZW1hcmsgPSBzaW1wbGUoJ1JlbWFyaycpOwogIC8vIOS4gOS4quepuueahCBsYWJlbAogIHZhciBsYWJlbCA9IHNpbXBsZSgnTGFiZWwnKTsKCiAgLy8g5LiA5Liq5o+Q56S65Zu+5qCHCiAgdmFyIHNpY29uID0gZnVuY3Rpb24gKCkgewogICAgdmFyIGl0ZW0gPSB0aGlzOwogICAgdmFyIGRvbSA9IHV0aWwuZG9tLmNyZWF0ZSh1dGlsLnN0ci5maWxsKGh0bWwuc2ljb24sIGl0ZW0pKTsKICAgIHZhciBidWJibGUgPSBudWxsLCByZW1vdmVyID0gbnVsbDsKICAgIHZhciBlbnRlciA9IGZ1bmN0aW9uICgpIHsgaWYgKHJlbW92ZXIpIGNsZWFyVGltZW91dChyZW1vdmVyKTsgfTsKICAgIHZhciBsZWF2ZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKCFidWJibGUpIHJldHVybjsKICAgICAgcmVtb3ZlciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIGJ1YmJsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGJ1YmJsZSk7CiAgICAgICAgYnViYmxlID0gbnVsbDsKICAgICAgfSwgMjAwKTsKICAgIH07CiAgICAvLyDnlJ/miJDmsJTms6EKICAgIHZhciBjcmVhdGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBidWJibGUgPSBudWxsOwogICAgICB2YXIgc2ltID0gZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICB2YXIgYnViYmxlID0gYmFzZSh7ICdvdXRlcic6IGh0bWwuYnViYmxlIH0pLmNhbGwoaXRlbSk7CiAgICAgICAgcmV0dXJuIHV0aWwudWkuYnViYmxlKGJ1YmJsZSwgZG9tKTsKICAgICAgfTsKICAgICAgYnViYmxlID0gc2ltKGl0ZW0pOwogICAgICBpZiAoaXRlbS5idWJibGVkKSBpdGVtLmJ1YmJsZWQoYnViYmxlKTsKICAgICAgcmV0dXJuIGJ1YmJsZTsKICAgIH07CiAgICBkb20uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIGZ1bmN0aW9uICgpIHsKICAgICAgZW50ZXIoKTsgaWYgKGJ1YmJsZSkgcmV0dXJuOyBidWJibGUgPSBjcmVhdGUoKTsKICAgICAgYnViYmxlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBlbnRlcik7CiAgICAgIGJ1YmJsZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgbGVhdmUpOwogICAgfSk7CiAgICBkb20uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsIGxlYXZlKTsKICAgIHJldHVybiBkb207CiAgfTsKCiAgLy8g55yf5YGH5YC855qE6K6+572u6aG5CiAgdmFyIGJvb2wgPSBzaW1wbGUoJ0Jvb2xlYW4nLCBmdW5jdGlvbiAoZG9tLCBpdGVtKSB7CiAgICB1dGlsLmRvbS5iaW5kLmNoZWNrYm94KGRvbS5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpLCBpdGVtKTsKICB9KTsKCiAgLy8g6YCJ5oup5qGG6K6+572u6aG5CiAgdmFyIHNlbGVjdCA9IHNpbXBsZSgnU2VsZWN0JywgZnVuY3Rpb24gKGRvbSwgaXRlbSkgewogICAgdmFyIHNlbGVjdCA9IGRvbS5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKTsKICAgIHZhciBkZWZhdWx0VmFsdWUgPSBpdGVtWydkZWZhdWx0J10gfHwgaXRlbS5zZWxlY3Qua2V5OwogICAgdmFyIGtleXMgPSBpdGVtLnNlbGVjdC5tYXAoZnVuY3Rpb24gKG9wdGlvbikgewogICAgICBzZWxlY3QuYXBwZW5kQ2hpbGQodXRpbC5kb20uY3JlYXRlKCdzZWxlY3QnLCB1dGlsLnN0ci5maWxsKGh0bWwub3B0aW9uLCBvcHRpb24pKS5maXJzdENoaWxkKTsKICAgICAgcmV0dXJuIG9wdGlvbi52YWx1ZTsKICAgIH0pOwogICAgdXRpbC5kb20uYmluZC5zZWxlY3Qoc2VsZWN0LCBpdGVtLCBmdW5jdGlvbiAodmFsKSB7CiAgICAgIHJldHVybiBrZXlzLmluZGV4T2YodmFsKSA9PT0gLTEgPyBkZWZhdWx0VmFsdWUgOiB2YWw7CiAgICB9KTsKICB9KTsKCiAgLy8g5a2X56ym5Liy55qE6K6+572u6aG5CiAgdmFyIHN0cmluZyA9IHNpbXBsZSgnU3RyaW5nJywgZnVuY3Rpb24gKGRvbSwgaXRlbSkgewogICAgdmFyIHRleHRhcmVhID0gZG9tLnF1ZXJ5U2VsZWN0b3IoJ3RleHRhcmVhJyk7CiAgICB2YXIgb25jaGFuZ2UgPSB1dGlsLmRvbS5iaW5kLnRleHQodGV4dGFyZWEsIGl0ZW0pOwogICAgdGV4dGFyZWEuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbiAoKSB7CiAgICAgIHV0aWwuZnVuYy5jYWxsKG9uY2hhbmdlKTsKICAgIH0pOwogIH0pOwoKICAvLyDpopzoibLnmoTorr7nva7pobkKICB2YXIgY29sb3IgPSBzaW1wbGUoJ0NvbG9yJywgZnVuY3Rpb24gKGRvbSwgaXRlbSkgewogICAgdXRpbC5kb20uYmluZC50ZXh0KGRvbS5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpLCBpdGVtKTsKICB9KTsKCiAgLy8g5pWw5a2X55qE6K6+572u6aG5CiAgdmFyIG51bWJlciA9IHNpbXBsZSgnTnVtYmVyJywgZnVuY3Rpb24gKGRvbSwgaXRlbSkgewogICAgdmFyIG51bWJlciA9IGRvbS5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpOwogICAgdmFyIG1heCA9IEluZmluaXR5LCBtaW4gPSAtSW5maW5pdHk7CiAgICBpZiAoJ21heCcgaW4gaXRlbSkgbWF4ID0gaXRlbS5tYXg7CiAgICBpZiAoJ21pbicgaW4gaXRlbSkgbWluID0gaXRlbS5taW47CiAgICBpZiAobWluID4gbWF4KSBtaW4gPSBtYXg7CiAgICBudW1iZXIubWluID0gbWluOyBudW1iZXIubWF4ID0gbWF4OwogICAgdXRpbC5kb20uYmluZC50ZXh0KG51bWJlciwgaXRlbSwgZnVuY3Rpb24gKHZhbCkgewogICAgICBpZiAoaXNOYU4oTnVtYmVyKHZhbCkpKSByZXR1cm4gKHZhbCA9IDApOwogICAgICByZXR1cm4gTWF0aC5taW4obWF4LCBNYXRoLm1heChtaW4sIE51bWJlcih2YWwpKSk7CiAgICB9KTsKICB9KTsKCiAgLy8g5a2X56ym5Liy5pWw57uE6K6+572u6aG55qih5p2/CiAgdmFyIGl0ZW1zID0gZnVuY3Rpb24gKG91dGVyLCBnZW5saSkgewogICAgcmV0dXJuIGJhc2UoewogICAgICAnb3V0ZXInOiBvdXRlciwKICAgICAgJ2JpbmRlcic6IGZ1bmN0aW9uIChkb20sIGl0ZW0pIHsKICAgICAgICB2YXIgZm9ybSA9IGRvbS5xdWVyeVNlbGVjdG9yKCdmb3JtJyk7CiAgICAgICAgdmFyIGlucHV0ID0gZG9tLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W3R5cGU9InRleHQiXScpOwogICAgICAgIHZhciB1bCA9IGRvbS5xdWVyeVNlbGVjdG9yKCd1bC55YXdmLWNvbmZpZ0l0ZW1zJyk7CiAgICAgICAgdmFyIHNob3duID0ge307CiAgICAgICAgLy8g5bCG5p+Q5Liq5bey57uP5pyJ55qE5a2X56ym5Liy5pi+56S65Yiw5pyr5bC+CiAgICAgICAgdmFyIG1vdmVUb0VuZCA9IGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICB2YXIgcCA9IHgucGFyZW50Tm9kZTsgcC5hcHBlbmRDaGlsZChwLnJlbW92ZUNoaWxkKHgpKTsKICAgICAgICB9OwogICAgICAgIC8vIOaYvuekuuS4gOS4quaWsOeahOWtl+espuS4sgogICAgICAgIHZhciBzaG93U3RyaW5ncyA9IGZ1bmN0aW9uICh1c2VyaW5wdXQsIHN0ciwgb25zdWNjLCBvbmRvbmUpIHsKICAgICAgICAgIGdlbmxpKGl0ZW0sIHVzZXJpbnB1dCwgc3RyLCBmdW5jdGlvbiAoc3RyLCBsaSkgewogICAgICAgICAgICBpZiAob25kb25lKSBvbmRvbmUoKTsKICAgICAgICAgICAgaWYgKHN0ciA9PSBudWxsIHx8ICFsaSkgcmV0dXJuOwogICAgICAgICAgICBpZiAoc2hvd25bc3RyXSkgcmV0dXJuIG1vdmVUb0VuZChzaG93bltzdHJdKTsKICAgICAgICAgICAgdmFyIGRlbCA9IGxpLnF1ZXJ5U2VsZWN0b3IoJ2EuaWNvbl9jbG9zZSwgYS5maWNvbl9jbG9zZScpOwogICAgICAgICAgICBkZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgZGVsZXRlIHNob3duW3N0cl07CiAgICAgICAgICAgICAgaWYgKGl0ZW0uZGVsKSBpdGVtLmRlbChzdHIpOwogICAgICAgICAgICAgIGxpLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobGkpOwogICAgICAgICAgICAgIGl0ZW0uZGVsY29uZihzdHIpOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgdWwuYXBwZW5kQ2hpbGQoc2hvd25bc3RyXSA9IGxpKTsKICAgICAgICAgICAgaWYgKG9uc3VjYykgb25zdWNjKHN0cik7CiAgICAgICAgICB9KTsKICAgICAgICB9OwogICAgICAgIGl0ZW0uZ2V0Y29uZigpLmZvckVhY2goZnVuY3Rpb24gKHN0cikgeyBzaG93U3RyaW5ncyhmYWxzZSwgc3RyKTsgfSk7CiAgICAgICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgdmFyIHN0ciA9IGlucHV0LnZhbHVlOwogICAgICAgICAgaW5wdXQuZGlzYWJsZWQgPSB0cnVlOwogICAgICAgICAgc2hvd1N0cmluZ3ModHJ1ZSwgc3RyLCBmdW5jdGlvbiAoc3RyKSB7CiAgICAgICAgICAgIGlmIChpdGVtLmFkZCkgaXRlbS5hZGQoc3RyKTsKICAgICAgICAgICAgaXRlbS5hZGRjb25mKHN0cik7CiAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlucHV0LnZhbHVlID0gJyc7CiAgICAgICAgICAgIGlucHV0LmRpc2FibGVkID0gZmFsc2U7CiAgICAgICAgICAgIGlmIChyZWxvYWRDb21wbGV0ZSkgcmVsb2FkQ29tcGxldGUoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIGlmIChpdGVtLmNvbXBsZXRlKSB7CiAgICAgICAgICB2YXIgcmVsb2FkQ29tcGxldGUgPSB1dGlsLmNvbXBsZXRlLnJlZyhpbnB1dCwgaXRlbS5jb21wbGV0ZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9OwoKICAvLyDlrZfnrKbkuLLorr7nva7pobkKICB2YXIgc3RyaW5ncyA9IGl0ZW1zKGh0bWwuY29uZmlnU3RyaW5ncywgZnVuY3Rpb24gKGl0ZW0sIHVzZXJpbnB1dCwgc3RyLCBjYWxsYmFjaykgewogICAgaWYgKHVzZXJpbnB1dCAmJiBpdGVtLmFkZCAmJiAhKHN0ciA9IGl0ZW0uYWRkKHN0cikpKSBjYWxsYmFjaygpOwogICAgZWxzZSBjYWxsYmFjayhzdHIsIHV0aWwuZG9tLmNyZWF0ZSgndWwnLCB1dGlsLnN0ci5maWxsKGh0bWwuY29uZmlnU3RyaW5nc0l0ZW0sIHsgJ2l0ZW0nOiBpdGVtLmRpc3BsYXkgPyBpdGVtLmRpc3BsYXkoc3RyKSA6IHN0ciB9KSkuZmlyc3RDaGlsZCk7CiAgfSk7CgogIC8vIOaPkOekuueUqOaIt+S4jeWtmOWcqOeahOWvueivneahhgogIHZhciBzaG93VXNlck5vdEV4aXN0RXJyb3IgPSBmdW5jdGlvbiAoc3RyKSB7CiAgICB1dGlsLnVpLmFsZXJ0KCd5YXdmLXVzZXItbm90LWV4aXN0JywgewogICAgICAndGl0bGUnOiB1dGlsLnN0ci5maWxsKCd7e2FjY291bnROb3RFeGlzdEVycm9yVGl0bGV9fScpLAogICAgICAndGV4dCc6IHV0aWwuc3RyLmZpbGwoJ3t7e2FjY291bnROb3RFeGlzdEVycm9yfX19JywgeyAnbmFtZSc6IHV0aWwuc3RyLmVzY2FwZS54bWwoc3RyKSB9KSwKICAgICAgJ2ljb24nOiAnZXJyb3InCiAgICB9KTsKICB9OwogIC8vIOeUqOaIt+WIl+ihqOeahOiuvue9rumhuQogIHZhciB1c2VycyA9IGl0ZW1zKGh0bWwuY29uZmlnVXNlcnMsIGZ1bmN0aW9uIChpdGVtLCB1c2VyaW5wdXQsIHN0ciwgY2FsbGJhY2spIHsKICAgIGlmICh1c2VyaW5wdXQpIHsKICAgICAgaWYgKCEoc3RyID0gc3RyLnRyaW0oKS5yZXBsYWNlKC9eQC8sICcnKSkpIHJldHVybiBjYWxsYmFjaygpOwogICAgICBuZXR3b3JrLmFjY291bnQubmFtZShzdHIsIGZ1bmN0aW9uIChpbmZvKSB7CiAgICAgICAgaWYgKCFpbmZvKSB7IHNob3dVc2VyTm90RXhpc3RFcnJvcihzdHIpOyBjYWxsYmFjaygpOyB9CiAgICAgICAgZWxzZSBpZiAoaXRlbS5hZGQgJiYgIWl0ZW0uYWRkKGluZm8pKSBjYWxsYmFjaygpOwogICAgICAgIGVsc2UgY2FsbGJhY2soaW5mby5pZCwgdXRpbC5kb20uY3JlYXRlKCd1bCcsIHV0aWwuc3RyLmZpbGwoaHRtbC5jb25maWdVc2Vyc0l0ZW0sIGluZm8pKS5maXJzdENoaWxkKTsKICAgICAgfSwgZnVuY3Rpb24gKCkgeyBzaG93VXNlck5vdEV4aXN0RXJyb3Ioc3RyKTsgY2FsbGJhY2soKTsgfSk7CiAgICB9IGVsc2UgewogICAgICB2YXIgZW1wdHlJbmZvID0geyAnaWQnOiBzdHIsICduYW1lJzogJyAnLCAnYXZhdGFyJzogJyAnIH07CiAgICAgIHZhciBsaSA9IHV0aWwuZG9tLmNyZWF0ZSgndWwnLCB1dGlsLnN0ci5maWxsKGh0bWwuY29uZmlnVXNlcnNJdGVtLCBlbXB0eUluZm8pKS5maXJzdENoaWxkOwogICAgICBjYWxsYmFjayhzdHIsIGxpKTsKICAgICAgbmV0d29yay5hY2NvdW50LmlkKHN0ciwgZnVuY3Rpb24gKGluZm8pIHsKICAgICAgICB2YXIgdSA9IGxpLnF1ZXJ5U2VsZWN0b3IoJ1t1aWRdJyk7CiAgICAgICAgdS5zZXRBdHRyaWJ1dGUoJ3VpZCcsIGluZm8uaWQpOyB1LnNldEF0dHJpYnV0ZSgndGl0bGUnLCBpbmZvLm5hbWUpOyB1LnRleHRDb250ZW50ID0gaW5mby5uYW1lOwogICAgICAgIHZhciBwID0gbGkucXVlcnlTZWxlY3RvcignLnBpYyBpbWcnKTsKICAgICAgICBwLnNyYyA9IGluZm8uYXZhdGFyOwogICAgICB9KTsKICAgIH0KICB9KTsKCiAgLy8g5o+Q56S65YiG57uE5LiN5a2Y5Zyo55qE5a+56K+d5qGGCiAgdmFyIHNob3dHcm91cE5vdEV4aXN0RXJyb3IgPSBmdW5jdGlvbiAoc3RyKSB7CiAgICBpZiAoIXN0ci50cmltKCkpIHJldHVybjsKICAgIHV0aWwudWkuYWxlcnQoJ3lhd2YtZ3JvdXAtbm90LWV4aXN0JywgewogICAgICAndGl0bGUnOiB1dGlsLnN0ci5maWxsKCd7e2dyb3VwTm90RXhpc3RFcnJvclRpdGxlfX0nKSwKICAgICAgJ3RleHQnOiB1dGlsLnN0ci5maWxsKCd7e3tncm91cE5vdEV4aXN0RXJyb3J9fX0nLCB7ICduYW1lJzogdXRpbC5zdHIuZXNjYXBlLnhtbChzdHIpIH0pLAogICAgICAnaWNvbic6ICdlcnJvcicKICAgIH0pOwogIH07CiAgLy8g5re75Yqg5aSa5Liq55So5oi357uECiAgdmFyIGdyb3VwcyA9IGl0ZW1zKGh0bWwuY29uZmlnU3RyaW5ncywgZnVuY3Rpb24gKGl0ZW0sIHVzZXJpbnB1dCwgc3RyLCBjYWxsYmFjaykgewogICAgaWYgKHVzZXJpbnB1dCkgewogICAgICBuZXR3b3JrLmdyb3VwKGZ1bmN0aW9uIChncm91cHMpIHsKICAgICAgICB2YXIgZ3JvdXAgPSBncm91cHMuZmlsdGVyKGZ1bmN0aW9uIChncm91cCkgeyByZXR1cm4gZ3JvdXAubmFtZS50cmltKCkgPT09IHN0ci50cmltKCk7IH0pWzBdOwogICAgICAgIGlmICghZ3JvdXApIHsgc2hvd0dyb3VwTm90RXhpc3RFcnJvcihzdHIpOyBjYWxsYmFjaygpOyB9CiAgICAgICAgZWxzZSBpZiAoaXRlbS5hZGQgJiYgIWl0ZW0uYWRkKGluZm8pKSBjYWxsYmFjaygpOwogICAgICAgIGVsc2UgY2FsbGJhY2soZ3JvdXAuaWQsIHV0aWwuZG9tLmNyZWF0ZSgndWwnLCB1dGlsLnN0ci5maWxsKGh0bWwuY29uZmlnU3RyaW5nc0l0ZW0sIHsgJ2l0ZW0nOiBpdGVtLmRpc3BsYXkgPyBpdGVtLmRpc3BsYXkoc3RyKSA6IHN0ciB9KSkuZmlyc3RDaGlsZCk7CiAgICAgIH0sIGZ1bmN0aW9uICgpIHsgc2hvd1VzZXJOb3RFeGlzdEVycm9yKHN0cik7IGNhbGxiYWNrKCk7IH0pOwogICAgfSBlbHNlIHsKICAgICAgdmFyIGVtcHR5SW5mbyA9IHsgJ2lkJzogc3RyLCAnbmFtZSc6ICcgJyB9OwogICAgICB2YXIgbGkgPSB1dGlsLmRvbS5jcmVhdGUoJ3VsJywgdXRpbC5zdHIuZmlsbChodG1sLmNvbmZpZ1N0cmluZ3NJdGVtLCB7ICdpdGVtJzogJycgfSkpLmZpcnN0Q2hpbGQ7CiAgICAgIGNhbGxiYWNrKHN0ciwgbGkpOwogICAgICBuZXR3b3JrLmdyb3VwKGZ1bmN0aW9uIChncm91cHMpIHsKICAgICAgICB2YXIgZ3JvdXAgPSBncm91cHMuZmlsdGVyKGZ1bmN0aW9uIChncm91cCkgeyByZXR1cm4gZ3JvdXAuaWQgPT09IHN0cjsgfSlbMF07CiAgICAgICAgbGkudGl0bGUgPSBncm91cC5uYW1lOwogICAgICAgIGxpLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGdyb3VwLm5hbWUpKTsKICAgICAgfSk7CiAgICB9CiAgfSk7CgogIC8vIOS4gOS4quacieaVsOWtl+WSjOWeguebtOiMg+WbtOadoeeahOi+k+WFpeahhgogIHZhciByYW5nZSA9IHNpbXBsZSgnUmFuZ2UnLCBmdW5jdGlvbiAoZG9tLCBpdGVtKSB7CiAgICB2YXIgbiA9IGRvbS5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPSJudW1iZXIiXScpOwogICAgdmFyIHIgPSBkb20ucXVlcnlTZWxlY3RvcignaW5wdXRbdHlwZT0icmFuZ2UiXScpOwogICAgdmFyIHN0ZXAgPSBpdGVtLnN0ZXAgfHwgMTsKICAgIG4ubWF4ID0gaXRlbS5tYXg7IHIubWF4ID0gaXRlbS5tYXg7CiAgICBuLm1pbiA9IGl0ZW0ubWluOyByLm1pbiA9IGl0ZW0ubWluOwogICAgbi5zdGVwID0gc3RlcDsgci5zdGVwID0gc3RlcDsKICAgIG4uc3R5bGUud2lkdGggPSAxMCAqIFN0cmluZyhpdGVtLm1heCkubGVuZ3RoICsgMTUgKyAncHgnOwogICAgdmFyIG9uY2hhbmdlID0gdXRpbC5kb20uYmluZC50ZXh0KG4sIGl0ZW0sIGZ1bmN0aW9uICh2YWwpIHsKICAgICAgaWYgKGlzTmFOKHBhcnNlSW50KHZhbCwgMTApKSkgcmV0dXJuIGl0ZW1bJ2RlZmF1bHQnXSB8fCBpdGVtLm1pbjsKICAgICAgdmFyIHJldCA9IE1hdGgubWluKE1hdGgubWF4KHBhcnNlSW50KHZhbCwgMTApLCBpdGVtLm1pbiksIGl0ZW0ubWF4KTsKICAgICAgcmV0dXJuIE1hdGgucm91bmQoKHJldCAtIGl0ZW0ubWluKSAvIHN0ZXApICogc3RlcCArIGl0ZW0ubWluOwogICAgfSk7CiAgICByLnZhbHVlID0gbi52YWx1ZTsKICAgIHZhciB1cGRhdGVOID0gZnVuY3Rpb24gKCkgeyBpZiAoci52YWx1ZSAhPT0gbi52YWx1ZSkgbi52YWx1ZSA9IHIudmFsdWU7IG9uY2hhbmdlKCk7IH07CiAgICB2YXIgdXBkYXRlUiA9IGZ1bmN0aW9uICgpIHsgaWYgKHIudmFsdWUgIT09IG4udmFsdWUpIHIudmFsdWUgPSBuLnZhbHVlOyBvbmNoYW5nZSgpOyB9OwogICAgci5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB1cGRhdGVOKTsgci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB1cGRhdGVOKTsKICAgIG4uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdXBkYXRlUik7IG4uYWRkRXZlbnRMaXN0ZW5lcigna2V5cHJlc3MnLCB1cGRhdGVSKTsKICB9KTsKCiAgLy8g5LiA5Liq6L6T5YWl5oyJ6ZSu55qE6L6T5YWl5qGGCiAgdmFyIGtleSA9IHNpbXBsZSgnS2V5JywgZnVuY3Rpb24gKGRvbSwgaXRlbSkgewogICAgdmFyIGtiID0gdXRpbC5rZXlib2FyZDsKICAgIHZhciBpID0gZG9tLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0JyksIHMgPSBkb20ucXVlcnlTZWxlY3RvcignYnV0dG9uJyk7CiAgICB2YXIgY29weU5hbWUgPSBmdW5jdGlvbiAoKSB7IHMudGV4dENvbnRlbnQgPSBrYi5uYW1lKE51bWJlcihpLnZhbHVlKSk7IH07CiAgICB2YXIgaWdub3JlcyA9IFtrYi5jb2RlLlRBQiwga2IuY29kZS5UQUIgfCBrYi5hbHRlci5TSElGVF07CiAgICB2YXIgZXZlbnRDbGVhciA9IGZ1bmN0aW9uIChlKSB7CiAgICAgIHZhciB2YWwgPSBrYi5nZXQoZSk7CiAgICAgIGlmIChpZ25vcmVzLmluZGV4T2YodmFsKSAhPT0gLTEpIHJldHVybjsKICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgfTsKICAgIHZhciBvbmNoYW5nZSA9IHV0aWwuZG9tLmJpbmQudGV4dChpLCBpdGVtLCBmdW5jdGlvbiAodmFsKSB7CiAgICAgIHV0aWwuZnVuYy5jYWxsKGNvcHlOYW1lKTsgcmV0dXJuIE51bWJlcih2YWwpOwogICAgfSk7CiAgICBkb20uYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uIChlKSB7CiAgICAgIHZhciB2YWwgPSBrYi5nZXQoZSk7CiAgICAgIGlmIChpZ25vcmVzLmluZGV4T2YodmFsKSAhPT0gLTEpIHJldHVybjsKICAgICAgaWYgKHZhbCA9PT0ga2IuY29kZS5FU0MpIHZhbCA9IDA7CiAgICAgIGkudmFsdWUgPSB2YWw7CiAgICAgIGNvcHlOYW1lKCk7CiAgICAgIG9uY2hhbmdlKCk7CiAgICAgIGV2ZW50Q2xlYXIoZSk7CiAgICB9LCBmYWxzZSk7CiAgICBkb20uYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBldmVudENsZWFyLCBmYWxzZSk7CiAgICBkb20uYWRkRXZlbnRMaXN0ZW5lcigna2V5cHJlc3MnLCBldmVudENsZWFyLCBmYWxzZSk7CiAgICBpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNvcHlOYW1lKTsKICAgIHMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7IHMuZm9jdXMoKTsgfSk7IC8vIOWFvOWuuSBTYWZhcmkKICAgIHV0aWwuZnVuYy5jYWxsKGNvcHlOYW1lKTsKICB9KTsKCiAgdmFyIG5vdWkgPSBmdW5jdGlvbiAoKSB7IH07CgogIC8vIOiuoumYhQogIHZhciBzdWJzY3JpYmUgPSBzaW1wbGUoJ1N1YnNjcmliZScsIGZ1bmN0aW9uIChkb20sIGl0ZW0pIHsKICAgIHZhciBhdHRyID0gWyd5YXdmLWNvbmZpZ1N1YnNjcmliZURpc2FibGVkJywgJ3lhd2YtY29uZmlnU3Vic2NyaWJlRW5hYmxlZCddOwogICAgdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgZG9tLmNsYXNzTGlzdC5yZW1vdmUoYXR0clswXSk7IGRvbS5jbGFzc0xpc3QucmVtb3ZlKGF0dHJbMV0pOwogICAgICBpZiAoaXRlbS5jb25mKSBkb20uY2xhc3NMaXN0LmFkZChhdHRyWzFdKTsgZWxzZSBkb20uY2xhc3NMaXN0LmFkZChhdHRyWzBdKTsKICAgIH07CiAgICB1cGRhdGUoKTsKICAgIHZhciBidXR0b24gPSBmdW5jdGlvbiAocykgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyBpdGVtLnB1dGNvbmYocyk7IHVwZGF0ZSgpOyB9OyB9OwogICAgZG9tLnF1ZXJ5U2VsZWN0b3IoJy55YXdmLXN1YnNjcmliZURpc2FibGUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGJ1dHRvbihmYWxzZSkpOwogICAgZG9tLnF1ZXJ5U2VsZWN0b3IoJy55YXdmLXN1YnNjcmliZUVuYWJsZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYnV0dG9uKHRydWUpKTsKICB9KTsKCiAgcmV0dXJuIHsKICAgICdzdWJ0aXRsZSc6IHN1YnRpdGxlLAogICAgJ3RleHQnOiB0ZXh0LAogICAgJ3JlbWFyayc6IHJlbWFyaywKICAgICdsYWJlbCc6IGxhYmVsLAogICAgJ3NpY29uJzogc2ljb24sCiAgICAnc3RyaW5nJzogc3RyaW5nLAogICAgJ2NvbG9yJzogY29sb3IsCiAgICAnbnVtYmVyJzogbnVtYmVyLAogICAgJ3NlbGVjdCc6IHNlbGVjdCwKICAgICdzdHJpbmdzJzogc3RyaW5ncywKICAgICdib29sZWFuJzogYm9vbCwKICAgICd1c2Vycyc6IHVzZXJzLAogICAgJ2dyb3Vwcyc6IGdyb3VwcywKICAgICdyYW5nZSc6IHJhbmdlLAogICAgJ2tleSc6IGtleSwKICAgICdub3VpJzogbm91aSwKICAgICdzdWJzY3JpYmUnOiBzdWJzY3JpYmUsCiAgfTsKfSgpKTsKCmZpbHRlci5jb2xsZWN0aW9uID0ge307Ci8vIOi/h+a7pOWZqOeuoeeQhuWZqApmaWx0ZXIuY29sbGVjdGlvbi5ncm91cCA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIGxpc3QgPSBbXSwgcHJlaW5pdCA9IHRydWU7CiAgLy8g5re75Yqg5Yiw6KGo5qC85LitCiAgdmFyIGFkZCA9IGZ1bmN0aW9uIChkZXRhaWxzKSB7CiAgICBsaXN0LnB1c2goZGV0YWlscyk7CiAgICBpZiAoIXByZWluaXQpIGRldGFpbHMuaW5pdCgpOwogICAgcmV0dXJuIGRldGFpbHM7CiAgfTsKICAvLyDnvZHpobXliqDovb3lrozmr5Xml7bliJ3lp4vljJYKICB1dGlsLmluaXQoZnVuY3Rpb24gKCkgewogICAgbGlzdC5mb3JFYWNoKGZ1bmN0aW9uICh4KSB7IHguaW5pdCgpOyB9KTsKICAgIHByZWluaXQgPSBmYWxzZTsKICB9LCB1dGlsLnByaW9yaXR5LkRFRkFVTFQgKyB1dGlsLnByaW9yaXR5LkJFRk9SRSk7CiAgcmV0dXJuIHsKICAgICdhZGQnOiBhZGQsCiAgICAnbGlzdCc6IGxpc3QsCiAgfTsKfSgpKTsKCi8vIOi/h+a7pOWZqOmbhuWQiApmaWx0ZXIuY29sbGVjdGlvbi5pdGVtID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgaXRlbXMgPSBbXSwgZ3JvdXBlZCA9IHt9LCBsb2FkZWQgPSBmYWxzZTsKICAvLyDms6jlhozkuIDkuKrov4fmu6TlmajvvIzpgJrov4cgZmlsdGVyLml0ZW0g6LCD55SoCiAgdmFyIGFkZCA9IGZ1bmN0aW9uIChpdGVtKSB7CiAgICBpdGVtcy5wdXNoKGl0ZW0pOwogICAgdmFyIGdyb3VwID0gZ3JvdXBlZFtpdGVtLmdyb3VwXSA9IGdyb3VwZWRbaXRlbS5ncm91cF0gfHwKICAgICAgeyAndGl0bGUnOiBudWxsLCAnaXRlbXMnOiBbXSB9OwogICAgaWYgKGl0ZW0udHlwZSA9PT0gJ3N1YnRpdGxlJykgZ3JvdXAudGl0bGUgPSBncm91cC50aXRsZSB8fCBpdGVtOwogICAgZWxzZSBncm91cC5pdGVtcy5wdXNoKGl0ZW0pOwogICAgaWYgKGxvYWRlZCAmJiBpdGVtLl9pbml0KSB1dGlsLmZ1bmMuY2F0Y2hlZChpdGVtLl9pbml0KSgpOwogICAgcmV0dXJuIGl0ZW07CiAgfTsKICAvLyDliJ3lp4vljJbmiYDmnInov4fmu6TlmagKICB1dGlsLmluaXQoZnVuY3Rpb24gKCkgewogICAgaXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICBpZiAoaXRlbS5faW5pdCkgdXRpbC5mdW5jLmNhdGNoZWQoaXRlbS5faW5pdCkoKTsKICAgIH0pOwogICAgbG9hZGVkID0gdHJ1ZTsKICB9LCB1dGlsLnByaW9yaXR5LkRFRkFVTFQpOwogIC8vIOagueaNruWIhue7hOmHjeaWsOaOkuWIl+iuvue9rueVjOmdoueahOiLpeW5suiuvue9rumhuQogIHZhciBvcmRlciA9IGZ1bmN0aW9uIChpdGVtcykgewogICAgdmFyIHNvcnRlZCA9IFtdLCBpdGVtLCBpLCBqOwogICAgaXRlbXMgPSBpdGVtcy5tYXAoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIFtmYWxzZSwgeF07IH0pOwogICAgaXRlbXMgPSBpdGVtcy5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHhbMV0udHlwZSA9PT0gJ3N1YnRpdGxlJzsgfSkKICAgICAgLmNvbmNhdChpdGVtcy5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHhbMV0udHlwZSAhPT0gJ3N1YnRpdGxlJzsgfSkpOwogICAgZm9yIChpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7CiAgICAgIGlmIChpdGVtc1tpXVswXSkgY29udGludWU7CiAgICAgIHNvcnRlZC5wdXNoKGl0ZW0gPSBpdGVtc1tpXVsxXSk7CiAgICAgIGlmICghaXRlbS5ncm91cCB8fCBpdGVtLnR5cGUgIT09ICdzdWJ0aXRsZScpIGNvbnRpbnVlOwogICAgICBmb3IgKGogPSBpICsgMTsgaiA8IGl0ZW1zLmxlbmd0aDsgaisrKSBpZiAoaXRlbS5ncm91cCA9PT0gaXRlbXNbal1bMV0uZ3JvdXApIHsKICAgICAgICBpdGVtc1tqXVswXSA9IHRydWU7CiAgICAgICAgaWYgKGl0ZW1zW2pdWzFdLnR5cGUgIT09ICdzdWJ0aXRsZScpIHNvcnRlZC5wdXNoKGl0ZW1zW2pdWzFdKTsKICAgICAgfQogICAgfQogICAgcmV0dXJuIHNvcnRlZDsKICB9OwogIC8vIOagueaNruadoeS7tumAieWHuuS4gOS6m+i/h+a7pOWZqAogIHZhciBsaXN0ID0gZnVuY3Rpb24gKG1hdGNoZXIpIHsKICAgIGlmICghbWF0Y2hlcikgcmV0dXJuIGl0ZW1zLnNsaWNlKDAsIGl0ZW1zLmxlbmd0aCk7CiAgICB2YXIgZm91bmQgPSBbXTsKICAgIGl0ZW1zLmZpbHRlcihtYXRjaGVyKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIGZvdW5kLnB1c2goaXRlbSk7CiAgICAgIGlmIChpdGVtLmdyb3VwKSB7CiAgICAgICAgaWYgKGl0ZW0udHlwZSA9PT0gJ3N1YnRpdGxlJykgZm91bmQucHVzaChncm91cGVkW2l0ZW0uZ3JvdXBdLml0ZW1zKTsKICAgICAgICBlbHNlIGZvdW5kLnB1c2goZ3JvdXBlZFtpdGVtLmdyb3VwXS50aXRsZSk7CiAgICAgIH0KICAgIH0pOwogICAgZm91bmQgPSBmb3VuZC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgIHJldHVybiBmb3VuZC5pbmRleE9mKGl0ZW0pID09PSBpbmRleDsKICAgIH0pOwogICAgZm91bmQgPSBvcmRlcihmb3VuZCk7CiAgICAvLyDnu5/orqHmnInlpJrlsJHkuKrov4fmu6TlmagKICAgIHZhciBjb3VudCA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGZvdW5kLmZpbHRlcihmdW5jdGlvbiAoeCkgewogICAgICAgIHJldHVybiB4LnR5cGUgIT09ICdzdWJ0aXRsZScgJiYgeC50eXBlICE9PSAndGV4dCcgJiYgeC50eXBlICE9PSAncmVtYXJrJzsKICAgICAgfSkubGVuZ3RoOwogICAgfTsKICAgIC8vIOWwhui/meS6m+i/h+a7pOWZqOaYvuekuuWIsOaMh+WumueahOS9jee9rgogICAgdmFyIHNob3cgPSBmdW5jdGlvbiAoYm9keSkgewogICAgICAvLyDkvp3mrKHliJflh7rmiYDmnInmlrDnmoTorr7nva7pobkKICAgICAgZm91bmQuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHZhciBkb20gPSBpdGVtLl9zaG93KGJvZHkpOwogICAgICAgIC8vIOWcqOWIl+WHuuaXtuagh+aYjuaJgOWxnuWIhuexuwogICAgICAgIGlmIChpdGVtLnR5cGUgPT09ICdzdWJ0aXRsZScgJiYgaXRlbS5ncm91cGVkICYmIGl0ZW0uZ3JvdXBlZC5sZW5ndGgpIHsKICAgICAgICAgIHZhciB0ZXh0ID0gdXRpbC5zdHIuZmlsbCgne3snICsgaXRlbS5ncm91cGVkWzBdLm5hbWUgKyAnRmlsdGVyR3JvdXBUaXRsZX19IC0gJyk7CiAgICAgICAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHV0aWwuc3RyLmZpbGwodGV4dCkpOwogICAgICAgICAgZG9tLmluc2VydEJlZm9yZShub2RlLCBkb20uZmlyc3RDaGlsZCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH07CiAgICByZXR1cm4gewogICAgICAnaXRlbXMnOiBmb3VuZCwKICAgICAgJ2NvdW50JzogY291bnQsCiAgICAgICdzaG93Jzogc2hvdywKICAgIH07CiAgfTsKICByZXR1cm4gewogICAgJ2xpc3QnOiBsaXN0LAogICAgJ29yZGVyJzogb3JkZXIsCiAgICAnYWRkJzogYWRkLAogIH07Cn0oKSk7CgovLyDov4fmu6Tlmajnu4QKZmlsdGVyLmdyb3VwID0gZnVuY3Rpb24gKGdyb3VwTmFtZSkgewogIHZhciBpdGVtcyA9IFtdLCBkZWZhdWx0R3JvdXAgPSAnZGVmYXVsdCc7CiAgLy8g5ZCR6L+H5ruk5Zmo57uE6YeM6Z2i5re75Yqg5LiA5Liq6L+H5ruk5ZmoCiAgdmFyIGFkZCA9IGZ1bmN0aW9uIChpdGVtKSB7CiAgICBpZiAoIWl0ZW0uZ3JvdXApIHsKICAgICAgaWYgKGl0ZW0udHlwZSA9PT0gJ3N1YnRpdGxlJykgZGVmYXVsdEdyb3VwID0gaXRlbS50ZXh0OwogICAgICBpdGVtLmdyb3VwID0gZGVmYXVsdEdyb3VwOwogICAgfSBlbHNlIGRlZmF1bHRHcm91cCA9IGl0ZW0uZ3JvdXA7CiAgICBpdGVtcy5wdXNoKGl0ZW0pOyByZXR1cm4gaXRlbTsKICB9OwogIC8vIOe9kemhteiiq+WIneWni+WMluaXtuWIneWni+WMluaJgOaciei/h+a7pOWZqAogIHZhciBpbml0ID0gZnVuY3Rpb24gKCkgeyB9OwogIC8vIOmcgOimgeaYvuekuumAiemhueaXtueUn+aIkOeVjOmdogogIHZhciBzaG93ID0gZnVuY3Rpb24gKGlubmVyKSB7CiAgICBpdGVtcyA9IGZpbHRlci5jb2xsZWN0aW9uLml0ZW0ub3JkZXIoaXRlbXMpOwogICAgaXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgeyBpdGVtLl9zaG93KGlubmVyKTsgfSk7CiAgfTsKICAvLyDorr7lrprmmK/lkKbmmK/kuoznuqfliIbnu4QKICB2YXIgYWRkdG8gPSBmdW5jdGlvbiAocGdyb3VwKSB7CiAgICBncm91cC5wZ3JvdXAgPSBwZ3JvdXA7CiAgICByZXR1cm4gZ3JvdXA7CiAgfTsKICAvLyDms6jlhozliLDov4fmu6TlmajliIbnu4QKICB2YXIgZ3JvdXAgPSB7CiAgICAnbmFtZSc6IGdyb3VwTmFtZSwKICAgICdzaG93Jzogc2hvdywKICAgICdpbml0JzogaW5pdCwKICAgICdhZGQnOiBhZGQsCiAgICAnYWRkdG8nOiBhZGR0bywKICAgICdwZ3JvdXAnOiBudWxsLAogIH07CiAgcmV0dXJuIGZpbHRlci5jb2xsZWN0aW9uLmdyb3VwLmFkZChncm91cCk7Cn07CmZpbHRlci5ncm91cHMgPSB7fTsKCi8vIOi/h+a7pOWZqOe7hApmaWx0ZXIuaXRlbSA9IGZ1bmN0aW9uIChpdGVtKSB7CiAgLy8g5YWI5Yqg5YWl5omA5pyJ6KKr5byV55So55qE5a+56LGhCiAgaWYgKGl0ZW0ucmVmKSBPYmplY3Qua2V5cyhpdGVtLnJlZikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICB2YXIgcmVmaXRlbSA9IGl0ZW0ucmVmW2tleV07CiAgICByZWZpdGVtLmtleSA9IGl0ZW0ua2V5ICsgJy4nICsga2V5OwogICAgcmVmaXRlbS5pc3JlZiA9IGl0ZW07CiAgICBmaWx0ZXIuaXRlbShyZWZpdGVtKTsKICB9KTsKICAvLyDliJ3lp4vljJblh73mlbAKICBpdGVtLl9pbml0ID0gZnVuY3Rpb24gKCkgewogICAgLy8g5Yid5aeL5YyW6L+H5ruk5Zmo55qE6K6+572uCiAgICBpZiAoaXRlbS50eXBlICYmIGZpbHRlci50eXBlZC5jb25maWdbaXRlbS50eXBlXSkKICAgICAgaXRlbS5jb25mID0gZmlsdGVyLnR5cGVkLmNvbmZpZ1tpdGVtLnR5cGVdKGl0ZW0pOwogICAgLy8g5Yid5aeL5YyW6L+H5ruk5Zmo5YaF55qE5paH5pysCiAgICBpZiAoaXRlbS5pMThuKSB1dGlsLmkxOG4uY2hvc2UoaXRlbS5pMThuKTsKICAgIC8vIOWIneWni+WMlui/h+a7pOWZqOeahOaYvuekugogICAgaWYgKCFpdGVtLnNob3cgJiYgaXRlbS50eXBlICYmIGZpbHRlci50eXBlZC5kb21baXRlbS50eXBlXSkKICAgICAgaXRlbS5zaG93ID0gZmlsdGVyLnR5cGVkLmRvbVtpdGVtLnR5cGVdLmJpbmQoaXRlbSk7CiAgICAvLyDov4fmu6Tlmajoh6rlt7HnmoTliJ3lp4vljJYKICAgIGlmIChpdGVtLmluaXQpIGl0ZW0uaW5pdCgpOwogICAgLy8g55yf5YGH6K6+572u6aG56Iul6K6+572u5r+A5rS75pe26LCD55SoCiAgICBpZiAoaXRlbS50eXBlID09PSAnYm9vbGVhbicgJiYgaXRlbS5jb25mICYmIGl0ZW0uYWluaXQpIGl0ZW0uYWluaXQoKTsKICAgIC8vIOWwhuinhOWImeWKoOWFpeWIsOWIl+ihqOS4rQogICAgaWYgKGl0ZW0ucnVsZSkgZmlsdGVyLnJ1bGVzLmFkZChpdGVtLnByaW9yaXR5IHx8IDAsIGl0ZW0ucnVsZS5iaW5kKGl0ZW0pKTsKICAgIGlmIChpdGVtLmNvbW1lbnQpIGZpbHRlci5jb21tZW50LmFkZChpdGVtLnByaW9yaXR5IHx8IDAsIGl0ZW0uY29tbWVudC5iaW5kKGl0ZW0pKTsKICB9OwogIGl0ZW0uX3Nob3cgPSB1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAoaW5uZXIpIHsKICAgIHZhciBkb20gPSBpdGVtLnNob3cgJiYgaXRlbS5zaG93KGRvbSkgfHwgbnVsbDsKICAgIGlmIChkb20gJiYgaXRlbS5zaG93bikgaXRlbS5zaG93bihkb20pOwogICAgaWYgKGRvbSkgaW5uZXIuYXBwZW5kQ2hpbGQoZG9tKTsKICAgIHJldHVybiBkb207CiAgfSk7CiAgaXRlbS5hZGR0byA9IGZ1bmN0aW9uIChncm91cCkgewogICAgaXRlbS5ncm91cGVkID0gKGl0ZW0uZ3JvdXBlZCB8fCBbXSkuY29uY2F0KFtncm91cF0pOwogICAgZ3JvdXAuYWRkKGl0ZW0pOyByZXR1cm4gaXRlbTsKICB9OwogIHJldHVybiBmaWx0ZXIuY29sbGVjdGlvbi5pdGVtLmFkZChpdGVtKTsKfTsKZmlsdGVyLml0ZW1zID0ge307CgovLyDpooTnva7ov4fmu6TlmajnsbvlnosKZmlsdGVyLnByZWRlZiA9IHt9OwoKLy8g55m95ZCN5Y2V44CB6buR5ZCN5Y2V5ZKM5oqY5Y+g5ZCN5Y2V5LiA5byP5LiJ5Lu9CmZpbHRlci5wcmVkZWYud2JmYyA9IGZ1bmN0aW9uIChkZXRhaWxzLCB0eXBlZEZpbHRlckdyb3VwKSB7CiAgdmFyIGl0ZW1zID0gWwogICAgeyAndHlwZSc6ICd3aGl0ZWxpc3QnLCAncHJpb3JpdHknOiAxZTUsICdhY3Rpb24nOiAnc2hvdycgfSwKICAgIHsgJ3R5cGUnOiAnYmxhY2tsaXN0JywgJ3ByaW9yaXR5JzogMCwgJ2FjdGlvbic6ICdoaWRkZW4nIH0sCiAgICB7ICd0eXBlJzogJ2ZvbGRsaXN0JywgJ3ByaW9yaXR5JzogLTFlNSwgJ2FjdGlvbic6ICdmb2xkJyB9LAogIF0sIHJ1bGVzOwogIGlmICh0eXBlZEZpbHRlckdyb3VwKSB7CiAgICBydWxlcyA9IGZpbHRlci5pdGVtc1t0eXBlZEZpbHRlckdyb3VwLm5hbWVdW2RldGFpbHMubmFtZV0gPSB7fTsKICB9IGVsc2UgewogICAgdHlwZWRGaWx0ZXJHcm91cCA9IGZpbHRlci5wcmVkZWYuZ3JvdXAoZGV0YWlscy5uYW1lKS5hZGR0byhmaWx0ZXIuZ3JvdXBzLmJhc2UpOwogICAgcnVsZXMgPSBmaWx0ZXIuaXRlbXNbZGV0YWlscy5uYW1lXSA9IHt9OwogIH0KICBydWxlcy50aXRsZSA9IGZpbHRlci5pdGVtKHsKICAgICdncm91cCc6IGRldGFpbHMubmFtZSwKICAgICd0eXBlJzogJ3N1YnRpdGxlJywKICAgICd0ZXh0JzogJ3t7JyArIGRldGFpbHMubmFtZSArICdGaWx0ZXJEZXRhaWxzfX17ezxpPn19JywKICAgICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7JyArIGRldGFpbHMubmFtZSArICdGaWx0ZXJEZXRhaWxzRGVzY319JyB9IH0KICB9KS5hZGR0byh0eXBlZEZpbHRlckdyb3VwKTsKICBpZiAoZGV0YWlscy5saXN0dHlwZSkgewogICAgaXRlbXMgPSBpdGVtcy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGRldGFpbHMubGlzdHR5cGUuaW5kZXhPZihpdGVtLnR5cGUpICE9PSAtMTsKICAgIH0pOwogIH0KICBpZiAoZGV0YWlscy50aXRsZSAmJiBkZXRhaWxzLnRpdGxlLmFmdGVyKSBkZXRhaWxzLnRpdGxlLmFmdGVyKCk7CiAgaXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgaWYgKGRldGFpbHNbaXRlbS50eXBlXSAmJiBkZXRhaWxzW2l0ZW0udHlwZV0uYmVmb3JlKSBkZXRhaWxzW2l0ZW0udHlwZV0uYmVmb3JlKCk7CiAgICAvLyDov4fmu6TlmagKICAgIHZhciBydWxlID0gewogICAgICAnZ3JvdXAnOiBkZXRhaWxzLm5hbWUsCiAgICAgICd2ZXJzaW9uJzogZGV0YWlscy52ZXJzaW9uLAogICAgICAndHlwZSc6IGRldGFpbHMudHlwZSB8fCAnc3RyaW5ncycsCiAgICAgICdrZXknOiAnd2VpYm8uZmlsdGVycy4nICsgZGV0YWlscy5uYW1lICsgJy4nICsgaXRlbS50eXBlLAogICAgICAncHJpb3JpdHknOiBpdGVtLnByaW9yaXR5LAogICAgICAndGV4dCc6ICd7e3snICsgaXRlbS50eXBlICsgJ0ZpbHRlckRlc2N9fX08YnIgLz57eycgKyBkZXRhaWxzLm5hbWUgKyAnRmlsdGVyRGVzY319JywKICAgICAgJ3R5cGVkJzogJ3t7JyArIGRldGFpbHMubmFtZSArICdGaWx0ZXJEZXRhaWxzfX0nLAogICAgICAnZXh0ZW50JzogW10sCiAgICAgICdzaG93bic6IGZ1bmN0aW9uIChkb20pIHsKICAgICAgICBkb20ucXVlcnlTZWxlY3RvcignLnlhd2YtY29uZmlnRGVzYycpLmNsYXNzTGlzdC5hZGQoJ3lhd2YtJyArIGl0ZW0udHlwZSArICdGaWx0ZXJUaXRsZScpOwogICAgICB9LAogICAgfTsKICAgIGlmIChkZXRhaWxzLmFkZCkgcnVsZS5hZGQgPSBkZXRhaWxzLmFkZC5iaW5kKHJ1bGUpOwogICAgaWYgKGRldGFpbHMuZGlzcGxheSkgcnVsZS5kaXNwbGF5ID0gZGV0YWlscy5kaXNwbGF5LmJpbmQocnVsZSk7CiAgICBpZiAoZGV0YWlscy5ydWxlKSBydWxlLnJ1bGUgPSBkZXRhaWxzLnJ1bGUuYmluZChydWxlLCBpdGVtLmFjdGlvbik7CiAgICBpZiAoZGV0YWlscy5jb21tZW50KSBydWxlLmNvbW1lbnQgPSBkZXRhaWxzLmNvbW1lbnQuYmluZChydWxlLCBpdGVtLmFjdGlvbik7CiAgICBpZiAoZGV0YWlscy5jb21wbGV0ZSkgcnVsZS5jb21wbGV0ZSA9IGRldGFpbHMuY29tcGxldGU7CiAgICBpZiAoZGV0YWlsc1tpdGVtLnR5cGVdICYmIGRldGFpbHNbaXRlbS50eXBlXS5vdmVycmlkZSkgewogICAgICBPYmplY3Qua2V5cyhkZXRhaWxzW2l0ZW0udHlwZV0ub3ZlcnJpZGUpLmZvckVhY2goZnVuY3Rpb24gKGF0dHIpIHsKICAgICAgICBydWxlW2F0dHJdID0gZGV0YWlsc1tpdGVtLnR5cGVdLm92ZXJyaWRlW2F0dHJdKHJ1bGVbYXR0cl0pOwogICAgICB9KTsKICAgIH0KICAgIHJ1bGVzW2l0ZW0udHlwZV0gPSBmaWx0ZXIuaXRlbShydWxlKS5hZGR0byh0eXBlZEZpbHRlckdyb3VwKTsKICAgIGlmIChkZXRhaWxzW2l0ZW0udHlwZV0gJiYgZGV0YWlsc1tpdGVtLnR5cGVdLmFmdGVyKSBkZXRhaWxzW2l0ZW0udHlwZV0uYWZ0ZXIoKTsKICB9KTsKICAvLyDlv6vpgJ/liJvlu7rov4fmu6TlmajnmoTmi5bliqgKICBpZiAoZGV0YWlscy5mYXN0KSB7CiAgICB2YXIgZmFzdCA9IHsKICAgICAgJ3ZhbGlkYXRvcic6IGRldGFpbHMuZmFzdC52YWxpZGF0b3IsCiAgICAgICdyZWNvZ25pemVyJzogZGV0YWlscy5mYXN0LnJlY29nbml6ZXIsCiAgICAgICdzZWxlY3RlZCc6IGRldGFpbHMuZmFzdC5zZWxlY3RlZCwKICAgICAgJ2Rlc2NyaXB0aW9uJzogZGV0YWlscy5mYXN0LmRlc2NyaXB0aW9uLAogICAgICAncmF3dmFsdWUnOiBmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgdmFyIHZhbHVlID0gZGV0YWlscy5mYXN0LmFkZCh2YWwpOwogICAgICAgIGlmIChkZXRhaWxzLmFkZCkgdmFsdWUgPSBkZXRhaWxzLmFkZCh2YWx1ZSk7CiAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICB9LAogICAgICAnYWRkY29uZic6IGZ1bmN0aW9uICh2YWx1ZSwgYWN0aW9uKSB7IHJ1bGVzW2FjdGlvbl0uYWRkY29uZih2YWx1ZSk7IH0sCiAgICAgICdjb250ZXh0bWVudSc6IGRldGFpbHMuZmFzdC5jb250ZXh0bWVudSwKICAgICAgJ21lbnVkZXNjJzogZGV0YWlscy5mYXN0Lm1lbnVkZXNjLAogICAgICAnbWVudWdyb3VwZWQnOiBkZXRhaWxzLmZhc3QubWVudWdyb3VwZWQsCiAgICB9OwogICAgaWYgKGRldGFpbHMubGlzdHR5cGUpIGZhc3QubGlzdHR5cGUgPSBkZXRhaWxzLmxpc3R0eXBlOwogICAgZmlsdGVyLmZhc3QuaXRlbShmYXN0KTsKICB9CiAgcmV0dXJuIHR5cGVkRmlsdGVyR3JvdXA7Cn07CgovLyDmlrDlu7rkuIDkuKrorr7nva7moIfnrb7pobUKZmlsdGVyLnByZWRlZi5ncm91cCA9IGZ1bmN0aW9uIChuYW1lKSB7CiAgZmlsdGVyLmdyb3Vwc1tuYW1lXSA9IGZpbHRlci5ncm91cChuYW1lKTsKICBmaWx0ZXIuZ3JvdXBzW25hbWVdLml0ZW1zID0gZmlsdGVyLml0ZW1zW25hbWVdID0ge307CiAgcmV0dXJuIGZpbHRlci5ncm91cHNbbmFtZV07Cn07CgovLyDmlrDlu7rkuIDkuKrlsI/moIfpopgKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSA9IGZ1bmN0aW9uIChncm91cCwgc3ViZ3JvdXAsIHRleHQpIHsKICBmaWx0ZXIuaXRlbXNbZ3JvdXBdW3N1Ymdyb3VwXSA9IHt9OwogIGZpbHRlci5pdGVtc1tncm91cF1bc3ViZ3JvdXBdLnRpdGxlID0gZmlsdGVyLml0ZW0oewogICAgJ2dyb3VwJzogc3ViZ3JvdXAsCiAgICAndHlwZSc6ICdzdWJ0aXRsZScsCiAgICAndGV4dCc6IHRleHQsCiAgfSkuYWRkdG8oZmlsdGVyLmdyb3Vwc1tncm91cF0pOwp9OwoKLy8g5b+r6YCf5Yib5bu66L+H5ruk5Zmo55qE5o+P6L+wCmZpbHRlci5mYXN0LmRlc2NyaXB0aW9uID0ge307Ci8vIOeUn+aIkOS4gOS4quaciei+k+WFpeahhueahOaPj+i/sApmaWx0ZXIuZmFzdC5kZXNjcmlwdGlvbi5pbnB1dCA9IGZ1bmN0aW9uIChpbm5lciwgdmFsLCBuYW1lLCBhdHRyKSB7CiAgLy8g5Yib5bu65LiA5Liq5bim57yW6L6R5qGG55qE6YCJ6aG5CiAgaW5uZXIuaW5uZXJIVE1MID0gdXRpbC5zdHIuZmlsbCgne3t7JyArIG5hbWUgKyAnRmlsdGVyRmFzdH19fScpOwogIHZhciBsYWJlbGMgPSB1dGlsLmRvbS5jcmVhdGUoaHRtbC5mYXN0RmlsdGVyU3RyaW5nKTsKICB2YXIgZmlsbEFyZyA9IHt9OyBmaWxsQXJnW2F0dHJdID0gaHRtbC5mYXN0RmlsdGVyU3RyaW5nSW5wdXQ7CiAgbGFiZWxjLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKS5pbm5lckhUTUwgPSB1dGlsLnN0ci5maWxsKCd7e3snICsgbmFtZSArICdGaWx0ZXJGYXN0SW5wdXR9fX0nLCBmaWxsQXJnKTsKICAvLyDlpITnkIbnvJbovpHmoYbnmoTnm7jlhbPkuovku7YKICB2YXIgaW5wdXQgPSBsYWJlbGMucXVlcnlTZWxlY3RvcignaW5wdXQnKTsgaW5wdXQudmFsdWUgPSB2YWxbYXR0cl07CiAgdmFyIHJlZiA9IGlubmVyLnBhcmVudE5vZGU7IHJlZi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShsYWJlbGMsIHJlZi5uZXh0U2libGluZyk7CiAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZnVuY3Rpb24gKCkgewogICAgdmFsW2F0dHJdID0gaW5wdXQudmFsdWU7IGlmICghdmFsW2F0dHJdKSByZXR1cm47CiAgfSk7Cn07Ci8vIOeUn+aIkOS4gOS4quayoeaciei+k+WFpeahhueahOaPj+i/sApmaWx0ZXIuZmFzdC5kZXNjcmlwdGlvbi5ub2lucHV0ID0gZnVuY3Rpb24gKGlubmVyLCB2YWwsIG5hbWUsIGF0dHIpIHsKICB2YXIgZmlsbG9iaiA9IHt9OwogIGZpbGxvYmpbYXR0cl0gPSB1dGlsLnN0ci5lc2NhcGUueG1sKHZhbFthdHRyXSk7CiAgaW5uZXIuaW5uZXJIVE1MID0gdXRpbC5zdHIuZmlsbCgne3t7JyArIG5hbWUgKyAnRmlsdGVyRmFzdH19fScsIGZpbGxvYmopOwp9OwovLyDnlJ/miJDkuIDkuKrliIbnu4TnmoTmj4/ov7AKZmlsdGVyLmZhc3QuZGVzY3JpcHRpb24uZ3JvdXAgPSBmdW5jdGlvbiAoaW5uZXIsIGdyb3VwLCBuYW1lKSB7CiAgLy8g6K6+572u6YCJ5oup5qGG55qE57yW5Y+35ZKM5YiG57uE5L+h5oGvCiAgdmFyIGNvbnRhaW5lciA9IGlubmVyLnBhcmVudE5vZGUucGFyZW50Tm9kZTsKICB2YXIgY2hlY2tib3ggPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignaW5wdXRbdHlwZT1jaGVja2JveF0nKTsKICBjaGVja2JveC5uYW1lID0gJ3lhd2YtZmFzdC0nICsgZ3JvdXAgKyAnLScgKyBuYW1lOwogIGNoZWNrYm94LnNldEF0dHJpYnV0ZSgneWF3Zi1jaGVja2JveC1ncm91cCcsIGdyb3VwKTsKICAvLyDlkIznu4TnmoTpgInpobnlj6rlupTor6XmiZPlvIDoh7PlpJrkuIDkuKoKICBjaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAoKSB7CiAgICBpZiAoIWNoZWNrYm94LmNoZWNrZWQpIHJldHVybjsKICAgIHZhciBhbGwgPSBBcnJheS5mcm9tKGNvbnRhaW5lci5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3lhd2YtY2hlY2tib3gtZ3JvdXA9IicgKyBncm91cCArICciXScpKTsKICAgIHZhciBldnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnSFRNTEV2ZW50cycpOyBldnQuaW5pdEV2ZW50KCJjaGFuZ2UiLCBmYWxzZSwgdHJ1ZSk7CiAgICBhbGwuZm9yRWFjaChmdW5jdGlvbiAoaSkgeyBpZiAoaSA9PT0gY2hlY2tib3ggfHwgIWkuY2hlY2tlZCkgcmV0dXJuOyBpLmNoZWNrZWQgPSBmYWxzZTsgaS5kaXNwYXRjaEV2ZW50KGV2dCk7IH0pOwogIH0pKTsKfTsKLy8g5b+r6YCf5Yib5bu65LiA5Liq5YWz6ZSu6K+N5oiW5q2j5YiZ5byP55qE6L+H5ruk5Zmo5pe25YyF5ZCr57yW6L6R5qGGCmZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbiA9IGZ1bmN0aW9uIChkZXRhaWxzKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChpbm5lciwgdmFsKSB7CiAgICB2YXIgZGVzYyA9IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uOwogICAgaWYgKGRldGFpbHMuaW5wdXQpIGRlc2MuaW5wdXQoaW5uZXIsIHZhbCwgZGV0YWlscy5uYW1lLCBkZXRhaWxzLmF0dHIpOwogICAgZWxzZSBkZXNjLm5vaW5wdXQoaW5uZXIsIHZhbCwgZGV0YWlscy5uYW1lLCBkZXRhaWxzLmF0dHIpOwogICAgZGVzYy5ncm91cChpbm5lciwgZGV0YWlscy5ncm91cCwgZGV0YWlscy5uYW1lKTsKICAgIHJldHVybiBkZXRhaWxzLmNob3NlbiB8fCBmYWxzZTsKICB9Owp9OwoKLy8g5b+r6YCf5Yib5bu65YWz6ZSu6K+N6L+H5ruk5Zmo55u45YWz5Ye95pWwCmZpbHRlci5mYXN0LmNvbnRlbnQgPSB7fTsKZmlsdGVyLmZhc3QuY29udGVudC52YWxpZGF0b3IgPSBmdW5jdGlvbiBjb250ZW50VmFsaWRhdG9yKGVsZW1lbnQpIHsKICBpZiAoZWxlbWVudC5ub2RlVHlwZSAhPT0gTm9kZS5URVhUX05PREUpIHsKICAgIGlmIChlbGVtZW50LmZpcnN0Q2hpbGQgJiYgZWxlbWVudC5maXJzdENoaWxkID09PSBlbGVtZW50Lmxhc3RDaGlsZCkKICAgICAgcmV0dXJuIGNvbnRlbnRWYWxpZGF0b3IoZWxlbWVudC5maXJzdENoaWxkKTsKICAgIGVsc2UgcmV0dXJuIGZhbHNlOwogIH0KICByZXR1cm4gdXRpbC5kb20ubWF0Y2hlcyhlbGVtZW50LnBhcmVudE5vZGUsICcuV0JfdGV4dCwgLldCX3RleHQgKicpOwp9OwpmaWx0ZXIuZmFzdC5jb250ZW50LnJlY29nbml6ZXIgPSB7fTsKZmlsdGVyLmZhc3QuY29udGVudC5yZWNvZ25pemVyLmtleXdvcmQgPSBmdW5jdGlvbiBrZXl3b3JkKGVsZW1lbnQsIGNhbGxiYWNrKSB7CiAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKQogICAgY2FsbGJhY2soeyAndGV4dCc6IGVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpIH0pOwogIGVsc2UgaWYgKGVsZW1lbnQudGFnTmFtZSAmJiBbJ2EnLCAnaW1nJ10uaW5kZXhPZihlbGVtZW50LnRhZ05hbWUudG9Mb2NhbGVMb3dlckNhc2UoKSkgIT09IC0xKQogICAgY2FsbGJhY2soKTsKICBlbHNlIGlmIChlbGVtZW50LmZpcnN0Q2hpbGQgPT09IGVsZW1lbnQubGFzdENoaWxkKQogICAga2V5d29yZChlbGVtZW50LmZpcnN0Q2hpbGQsIGNhbGxiYWNrKTsKICBlbHNlIGNhbGxiYWNrKCk7Cn07CmZpbHRlci5mYXN0LmNvbnRlbnQucmVjb2duaXplci5yZWdleHAgPSBmdW5jdGlvbiAoZWxlbWVudCwgY2FsbGJhY2spIHsKICBmaWx0ZXIuZmFzdC5jb250ZW50LnJlY29nbml6ZXIua2V5d29yZChlbGVtZW50LCBmdW5jdGlvbiAodmFsKSB7CiAgICBpZiAodmFsICYmIHZhbC50ZXh0KSBjYWxsYmFjayh7ICd0ZXh0JzogdXRpbC5zdHIuZXNjYXBlLnJlZ2V4cCh2YWwudGV4dCkgfSk7CiAgICBlbHNlIGNhbGxiYWNrKCk7CiAgfSk7Cn07CmZpbHRlci5mYXN0LmNvbnRlbnQuYWRkID0gZnVuY3Rpb24gKHZhbCkgeyByZXR1cm4gdmFsLnRleHQ7IH07CgovLyDlv6vpgJ/liJvlu7rluJDlj7fov4fmu6Tlmajnm7jlhbPlh73mlbAKZmlsdGVyLmZhc3QuYWNjb3VudCA9IHt9OwpmaWx0ZXIuZmFzdC5hY2NvdW50LnZhbGlkYXRvciA9IGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgdmFyIGMgPSB1dGlsLmRvbS5jcmVhdGUoJ2JvZHknLCBlbGVtZW50Lm91dGVySFRNTCk7CiAgLy8g5Y+v5Lul5aSE55CG5a+555So5oi355qE6ZO+5o6lCiAgaWYgKGMucXVlcnlTZWxlY3RvcignW3VzZXJjYXJkKj0ibmFtZT0iXSwgW3VzZXJjYXJkKj0iaWQ9Il0nKSkgcmV0dXJuIHRydWU7CiAgLy8g55So5oi35Y2h54mH6YeM6Z2i55qE5aS05YOP5ZKM6ZO+5o6lCiAgaWYgKGMucXVlcnlTZWxlY3RvcignW3VpZF1bdGl0bGVdJykpIHJldHVybiB0cnVlOwogIC8vIOWPr+S7peWkhOeQhueUqOaIt+mhtemdoueahOWktOWDj+WSjOmTvuaOpQogIGlmIChjLnF1ZXJ5U2VsZWN0b3IoJy5waG90b1thbHRdJykpIHJldHVybiB0cnVlOwogIHJldHVybiBmYWxzZTsKfTsKZmlsdGVyLmZhc3QuYWNjb3VudC5yZWNvZ25pemVyID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNhbGxiYWNrKSB7CiAgLy8g5om+5LiN5Yiw5a+55bqU5Lq65pe25pi+56S655u45YWz6ZSZ6K+v5L+h5oGvCiAgdmFyIG9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7CiAgICBpZiAoIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuZXR3b3JrLWFjY291bnQtZmFpbCcpKSB1dGlsLnVpLmFsZXJ0KCduZXR3b3JrLWFjY291bnQtZmFpbCcsIHsKICAgICAgJ3RpdGxlJzogdXRpbC5zdHIuZmlsbCgne3thY2NvdW50Tm90RXhpc3RFcnJvclRpdGxlfX0nKSwKICAgICAgJ3RleHQnOiB1dGlsLnN0ci5maWxsKCd7e3thY2NvdW50Tm90RXhpc3RFcnJvcn19fScsIHsgJ25hbWUnOiB1dGlsLnN0ci5lc2NhcGUueG1sKGluZm8ubmFtZSkgfSksCiAgICAgICdpY29uJzogJ2Vycm9yJwogICAgfSk7CiAgICBjYWxsYmFjaygpOwogIH07CiAgLy8g5qOA5p+l57uT54K5CiAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7IGNhbGxiYWNrKCk7IHJldHVybjsgfQogIHZhciBjID0gdXRpbC5kb20uY3JlYXRlKCdib2R5JywgZWxlbWVudC5vdXRlckhUTUwpOwogIHZhciBpbmZvID0geyAnbmFtZSc6IG51bGwsICdpZCc6IG51bGwgfTsKICAvLyDlpoLmnpzmmK/nlKjmiLfpk77mjqXnmoTor50KICB2YXIgdXNlcmNhcmQgPSBjLnF1ZXJ5U2VsZWN0b3IoJ1t1c2VyY2FyZCo9Im5hbWU9Il0sIFt1c2VyY2FyZCo9ImlkPSJdJyk7CiAgaWYgKHVzZXJjYXJkKSAoZnVuY3Rpb24gKCkgewogICAgdmFyIHVjaW5mbyA9IHV0aWwuc3RyLnBhcnNlcXVlcnkodXNlcmNhcmQuZ2V0QXR0cmlidXRlKCd1c2VyY2FyZCcpKTsKICAgIGlmICh1Y2luZm8ubmFtZSkgaW5mby5uYW1lID0gdWNpbmZvLm5hbWU7CiAgICBpZiAodWNpbmZvLmlkKSBpbmZvLmlkID0gdWNpbmZvLmlkOwogIH0oKSk7CiAgLy8g5aaC5p6c5piv5Liq5Lq65Li76aG155qE5aS05YOP55qE6K+dCiAgdmFyIHBob3RvID0gYy5xdWVyeVNlbGVjdG9yKCcucGhvdG9bYWx0XScpOwogIGlmIChwaG90bykgKGZ1bmN0aW9uICgpIHsKICAgIGluZm8ubmFtZSA9IHBob3RvLmdldEF0dHJpYnV0ZSgnYWx0Jyk7CiAgfSgpKTsKICAvLyDnlKjmiLfljaHniYcKICB2YXIgdWlkID0gYy5xdWVyeVNlbGVjdG9yKCdbdWlkXVt0aXRsZV0nKTsKICBpZiAodWlkKSB7CiAgICBpbmZvLmlkID0gdWlkLmdldEF0dHJpYnV0ZSgndWlkJyk7CiAgICBpbmZvLm5hbWUgPSB1aWQuZ2V0QXR0cmlidXRlKCd0aXRsZScpOwogIH0KICAvLyDnnIvmiJHku6zmmK/lkKbmnIkgaWQg5oiW6ICFIG5hbWXvvIzlpoLmnpzmnInnmoTor53vvIzpgqPkuYjlsLHor7TmmI7mmK/kuKrnlKjmiLcKICBpZiAoaW5mby5pZCAmJiBpbmZvLm5hbWUpIGNhbGxiYWNrKGluZm8pOwogIGVsc2UgaWYgKGluZm8uaWQpIG5ldHdvcmsuYWNjb3VudC5pZChpbmZvLmlkLCBjYWxsYmFjaywgY2FsbGJhY2spOwogIGVsc2UgaWYgKGluZm8ubmFtZSkgbmV0d29yay5hY2NvdW50Lm5hbWUoaW5mby5uYW1lLCBjYWxsYmFjaywgb25lcnJvcik7CiAgZWxzZSBjYWxsYmFjaygpOwp9OwpmaWx0ZXIuZmFzdC5hY2NvdW50LmFkZG5hbWUgPSBmdW5jdGlvbiAodmFsKSB7IHJldHVybiB2YWwubmFtZTsgfTsKZmlsdGVyLmZhc3QuYWNjb3VudC5hZGRpZCA9IGZ1bmN0aW9uICh2YWwpIHsgcmV0dXJuIHZhbC5pZDsgfTsKCi8vIOW/q+mAn+WIm+W7uuivnemimOi/h+a7pOWZqOebuOWFs+WHveaVsApmaWx0ZXIuZmFzdC50b3BpYyA9IHt9OwpmaWx0ZXIuZmFzdC50b3BpYy52YWxpZGF0b3IgPSBmdW5jdGlvbiAoZWxlbWVudCkgewogIHJldHVybiBmaWx0ZXIuZmFzdC50b3BpYy5yZWNvZ25pemVyLnRvcGljKGVsZW1lbnQsIEJvb2xlYW4pOwp9OwpmaWx0ZXIuZmFzdC50b3BpYy5yZWNvZ25pemVyID0ge307CmZpbHRlci5mYXN0LnRvcGljLnJlY29nbml6ZXIudG9waWMgPSBmdW5jdGlvbiAoZWxlbWVudCwgY2FsbGJhY2spIHsKICBpZiAoZWxlbWVudC5ub2RlVHlwZSA9PT0gTm9kZS5URVhUX05PREUpIHJldHVybiBjYWxsYmFjaygpOwogIHZhciBjID0gdXRpbC5kb20uY3JlYXRlKCdib2R5JywgZWxlbWVudC5vdXRlckhUTUwpOwogIHZhciBzdXBlcnRvcGljID0gYy5xdWVyeVNlbGVjdG9yKCdhID4gLmZpY29uX3N1cGVydG9waWMnKTsKICBpZiAoc3VwZXJ0b3BpYykgcmV0dXJuIGNhbGxiYWNrKHsgJ3RvcGljJzogc3VwZXJ0b3BpYy5wYXJlbnROb2RlLnRpdGxlLnRyaW0oKS5yZXBsYWNlKC8jL2csICcnKSB9KTsKICB2YXIgdG9waWMgPSBjLnF1ZXJ5U2VsZWN0b3IoJ2EuYV90b3BpYywgYVtzdWRhLXVhdHJhY2sqPSIxMDIyLXRvcGljIl0nKTsKICBpZiAodG9waWMpIHJldHVybiBjYWxsYmFjayh7ICd0b3BpYyc6IHRvcGljLnRleHRDb250ZW50LnRyaW0oKS5yZXBsYWNlKC8jL2csICcnKSB9KTsKICB2YXIgdG9waWNfcnMgPSBjLnF1ZXJ5U2VsZWN0b3IoJ2Fbc3VkYS11YXRyYWNrKj0iaG90dG9waWNfciJdJyk7CiAgaWYgKHRvcGljX3JzKSByZXR1cm4gY2FsbGJhY2soeyAndG9waWMnOiAodG9waWNfcnMudGl0bGUgfHwgdG9waWNfcnMudGV4dENvbnRlbnQpLnRyaW0oKS5yZXBsYWNlKC8jL2csICcnKSB9KTsKICB2YXIgdG9waWNMaW5rID0gYy5xdWVyeVNlbGVjdG9yKCdhW2hyZWZePSJodHRwOi8vaHVhdGkud2VpYm8uY29tL2svIl0sIGFbaHJlZl49Imh0dHBzOi8vaHVhdGkud2VpYm8uY29tL2svIl0nKTsKICBpZiAodG9waWNMaW5rKSByZXR1cm4gY2FsbGJhY2soeyAndG9waWMnOiBkZWNvZGVVUklDb21wb25lbnQodG9waWNMaW5rLnBhdGhuYW1lLnNwbGl0KCcvJykucG9wKCkpIH0pOwogIHZhciBzdXBlclRvcGljU291cmNlID0gYy5xdWVyeVNlbGVjdG9yKCdbYWN0aW9uLXR5cGU9ImFwcF9zb3VyY2UiXVtocmVmKj0id2VpYm8uY29tL3AvIl0nKTsKICBpZiAoc3VwZXJUb3BpY1NvdXJjZSAmJiAv6LaF6K+dJC8udGVzdChzdXBlclRvcGljU291cmNlLnRleHRDb250ZW50LnRyaW0oKSkpIHsKICAgIHJldHVybiBjYWxsYmFjayh7ICd0b3BpYyc6IHN1cGVyVG9waWNTb3VyY2UudGV4dENvbnRlbnQudHJpbSgpLnJlcGxhY2UoL+i2heivnSQvLCAnJykgfSk7CiAgfQogIHJldHVybiBjYWxsYmFjaygpOwp9OwpmaWx0ZXIuZmFzdC50b3BpYy5yZWNvZ25pemVyLnJ0b3BpYyA9IGZ1bmN0aW9uIChlbGVtZW50LCBjYWxsYmFjaykgewogIHJldHVybiBmaWx0ZXIuZmFzdC50b3BpYy5yZWNvZ25pemVyLnRvcGljKGVsZW1lbnQsIGZ1bmN0aW9uICh2YWwpIHsKICAgIGlmICh2YWwgJiYgdmFsLnRvcGljKSBjYWxsYmFjayh7ICd0b3BpYyc6IHV0aWwuc3RyLmVzY2FwZS5yZWdleHAodmFsLnRvcGljKSB9KTsKICAgIGVsc2UgY2FsbGJhY2soKTsKICB9KTsKfTsKZmlsdGVyLmZhc3QudG9waWMuYWRkID0gZnVuY3Rpb24gKHZhbCkgeyByZXR1cm4gdmFsLnRvcGljOyB9OwoKLy8g5b+r6YCf5Yib5bu66K+d6aKY6L+H5ruk5Zmo55u45YWz5Ye95pWwCmZpbHRlci5mYXN0LnNvdXJjZSA9IHt9OwpmaWx0ZXIuZmFzdC5zb3VyY2UudmFsaWRhdG9yID0gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICByZXR1cm4gZmlsdGVyLmZhc3Quc291cmNlLnJlY29nbml6ZXIoZWxlbWVudCwgQm9vbGVhbik7Cn07CmZpbHRlci5mYXN0LnNvdXJjZS5yZWNvZ25pemVyID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNhbGxiYWNrKSB7CiAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSByZXR1cm4gY2FsbGJhY2soKTsKICB2YXIgYyA9IHV0aWwuZG9tLmNyZWF0ZSgnYm9keScsIGVsZW1lbnQub3V0ZXJIVE1MKTsKICB2YXIgc291cmNlID0gYy5xdWVyeVNlbGVjdG9yKFsKICAgICdbYWN0aW9uLXR5cGU9ImFwcF9zb3VyY2UiXScsCiAgICAnW3N1ZGEtZGF0YT0ia2V5PXRibG9nX2hvbWVfbmV3JnZhbHVlPWZlZWRfY29tZV9mcm9tIl0nLAogICAgJ1tzdWRhLXVhdHJhY2sqPSJrZXk9cHJvZmlsZV9mZWVkIl1bc3VkYS11YXRyYWNrKj0idmFsdWU9cHViZnJvbV9ob3N0Il0nLAogICAgJ2FbaHJlZiQ9ImZyb209ZmVlZF9jYXJkIl0nLAogICAgJ2FbaHJlZiQ9InNvdXJjZT13ZWlib3NvdXJjZSJdJywKICAgICdhW2hyZWYqPSJ3ZWliby5jb20vcC8xMDAxMjdwIl0nLAogIF0uam9pbignLCcpKTsKICBzb3VyY2UgPSBzb3VyY2UgJiYgKHNvdXJjZS5nZXRBdHRyaWJ1dGUoJ3RpdGxlJykgfHwgc291cmNlLnRleHRDb250ZW50IHx8IHRleHQuc291cmNlVW5rb3duKTsKICBpZiAoc291cmNlICYmIHNvdXJjZSAhPT0gdGV4dC5kZWZhdWx0U291cmNlKSByZXR1cm4gY2FsbGJhY2soeyAnc291cmNlJzogc291cmNlIH0pOwogIGVsc2UgcmV0dXJuIGNhbGxiYWNrKCk7Cn07CmZpbHRlci5mYXN0LnNvdXJjZS5hZGQgPSBmdW5jdGlvbiAodmFsKSB7IHJldHVybiB2YWwuc291cmNlOyB9OwoKLy8g5b+r6YCf5Yib5bu66LaF6ZO+5o6l5Zyw5Z2A6L+H5ruk5Zmo55qE55u45YWz5Ye95pWwCmZpbHRlci5mYXN0Lmh5cGVybGluayA9IHt9OwpmaWx0ZXIuZmFzdC5oeXBlcmxpbmsudmFsaWRhdG9yID0gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICByZXR1cm4gZmlsdGVyLmZhc3QuaHlwZXJsaW5rLnJlY29nbml6ZXIoZWxlbWVudCwgQm9vbGVhbik7Cn07CmZpbHRlci5mYXN0Lmh5cGVybGluay5yZWNvZ25pemVyID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNhbGxiYWNrKSB7CiAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSByZXR1cm4gY2FsbGJhY2soKTsKICB2YXIgYyA9IHV0aWwuZG9tLmNyZWF0ZSgnYm9keScsIGVsZW1lbnQub3V0ZXJIVE1MKTsKICBkbyB7CiAgICB2YXIgbGluayA9IGMucXVlcnlTZWxlY3RvcignYVtocmVmKj0iLy90LmNuLyJdW3lhd2YtbGluay10eXBlPSJPIl0nKTsKICAgIGlmICghbGluaykgYnJlYWs7CiAgICByZXR1cm4gY2FsbGJhY2soeyAndXJsJzogbGluay5ocmVmIH0pOwogIH0gd2hpbGUgKGZhbHNlKTsKICBkbyB7CiAgICB2YXIgbGlua2MgPSBjLnF1ZXJ5U2VsZWN0b3IoJ2FbaHJlZio9Ii8vZmVlZC5taXguc2luYS5jb20uY24vbGlua19jYXJkL3JlZGlyZWN0PyJdW3lhd2YtbGluay10eXBlPSJPIl0nKTsgaWYgKCFsaW5rYykgYnJlYWs7CiAgICB2YXIgdXJsID0gdXRpbC5zdHIucGFyc2VxdWVyeShsaW5rYy5zZWFyY2guc2xpY2UoMSkpLnVybDsgaWYgKCF1cmwpIGJyZWFrOwogICAgcmV0dXJuIGNhbGxiYWNrKHsgJ3VybCc6IHVybCB9KTsKICB9IHdoaWxlIChmYWxzZSk7CiAgcmV0dXJuIGNhbGxiYWNrKCk7Cn07CmZpbHRlci5mYXN0Lmh5cGVybGluay5hZGQgPSBmdW5jdGlvbiAodmFsKSB7IHJldHVybiB2YWwudXJsOyB9OwoKLy8g5b+r6YCf5Yib5bu66LaF6ZO+5o6l5qCH6aKY55qE6L+H5ruk5ZmoCmZpbHRlci5mYXN0Lmxpbmt0aXRsZSA9IHt9OwpmaWx0ZXIuZmFzdC5saW5rdGl0bGUudmFsaWRhdG9yID0gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICByZXR1cm4gZmlsdGVyLmZhc3QubGlua3RpdGxlLnJlY29nbml6ZXIoZWxlbWVudCwgQm9vbGVhbik7Cn07CmZpbHRlci5mYXN0Lmxpbmt0aXRsZS5yZWNvZ25pemVyID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNhbGxiYWNrKSB7CiAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSByZXR1cm4gY2FsbGJhY2soKTsKICB2YXIgYyA9IHV0aWwuZG9tLmNyZWF0ZSgnYm9keScsIGVsZW1lbnQub3V0ZXJIVE1MKTsKICB2YXIgbGluayA9IGMucXVlcnlTZWxlY3RvcignYVthY3Rpb24tdHlwZT0iZmVlZF9saXN0X3VybCJdW3RpdGxlXSwgYVthY3Rpb24tdHlwZT0iZmxfdXJsX2FkZHBhcmFtcyJdW3RpdGxlXScpOwogIGlmICghbGluaykgcmV0dXJuIGNhbGxiYWNrKCk7CiAgdmFyIHRpdGxlID0gbGluay50aXRsZTsKICBpZiAodGl0bGUubWF0Y2goL15odHRwcz86LykgfHwgdGl0bGUgPT09ICfnvZHpobXpk77mjqUnKSByZXR1cm4gY2FsbGJhY2soKTsKICByZXR1cm4gY2FsbGJhY2soeyAndGl0bGUnOiB0aXRsZSB9KTsKfTsKZmlsdGVyLmZhc3QubGlua3RpdGxlLmFkZCA9IGZ1bmN0aW9uICh2YWwpIHsgcmV0dXJuIHZhbC50aXRsZTsgfTsKCi8vIOWIpOaWreS4gOS4quWFg+e0oOaYr+WQpuW6lOW9k+iiq+mAieS4rQpmaWx0ZXIuZmFzdC5zZWxlY3RlZCA9IHt9OwooZnVuY3Rpb24gKCkgewogIHZhciBzZWxlY3RvcnMgPSB7CiAgICAnZmVlZCc6ICdbbWlkXSAuV0JfZGV0YWlsLCBbbWlkXSAuV0JfZGV0YWlsIConLAogICAgJ2NvbW1lbnQnOiAnW2NvbW1lbnRfaWRdIConLAogICAgJ2F1dGhvcic6ICdbbWlkXSAuV0JfZmFjZSAuZmFjZSAqLCBbbWlkXSA+IC5XQl9mYWNlICosIFttaWRdIC5XQl9kZXRhaWwgPiAuV0JfaW5mbyAuV19mYiwgW21pZF0gPiAubGlzdF9jb24gPiAuV0JfdGV4dCA+IGFbdXNlcmNhcmRePSJpZD0iXScsCiAgICAnbWVudGlvbic6ICdbbWlkXSAuV0JfdGV4dCBhW3VzZXJjYXJkXj0ibmFtZT0iXScsCiAgICAnb3JpZ2luYWwnOiAnW21pZF0gLldCX2ZlZWRfZXhwYW5kIC5XQl9pbmZvIC5XX2ZiJywKICB9OwogIHZhciBkZWZpbmUgPSBmdW5jdGlvbiAodHlwZSwgbm90aW4pIHsKICAgIGZpbHRlci5mYXN0LnNlbGVjdGVkW3R5cGVdID0gZnVuY3Rpb24gKHRhcmdldCkgewogICAgICBpZiAodGFyZ2V0Lm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERSkgdGFyZ2V0ID0gdGFyZ2V0LnBhcmVudE5vZGU7CiAgICAgIHJldHVybiAhbm90aW4uc29tZShmdW5jdGlvbiAob3RoZXIpIHsKICAgICAgICByZXR1cm4gdXRpbC5kb20ubWF0Y2hlcyh0YXJnZXQsIHNlbGVjdG9yc1tvdGhlcl0pOwogICAgICB9KTsKICAgIH07CiAgfTsKICBkZWZpbmUoJ2ZlZWQnLCBbJ2NvbW1lbnQnXSk7CiAgZGVmaW5lKCdjb21tZW50JywgWydmZWVkJywgJ2F1dGhvciddKTsKICBkZWZpbmUoJ2F1dGhvcicsIFsnY29tbWVudCcsICdtZW50aW9uJywgJ29yaWdpbmFsJ10pOwogIGRlZmluZSgnbWVudGlvbicsIFsnY29tbWVudCcsICdhdXRob3InLCAnb3JpZ2luYWwnXSk7CiAgZGVmaW5lKCdvcmlnaW5hbCcsIFsnY29tbWVudCcsICdhdXRob3InLCAnbWVudGlvbiddKTsKICBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5uZXZlciA9IHV0aWwuZnVuYy5jb25zdGFudChmYWxzZSk7CiAgZmlsdGVyLmZhc3Quc2VsZWN0ZWQuYWx3YXlzID0gdXRpbC5mdW5jLmNvbnN0YW50KHRydWUpOwp9KCkpOwoKLy8g6I635b6X5LiA5p2h5b6u5Y2a55qE5ZCE5pa56Z2i5L+h5oGvCnZhciB3ZWlibyA9IHsgJ2ZlZWQnOiB7fSwgJ2NvbW1lbnQnOiB7fSwgJ2NvbW1vbic6IHt9IH07CgovLyDpgInlj5blvq7ljZrlhoXlrrnjgIHlvq7ljZrovazlj5HnmoTlhoXlrrkKd2VpYm8uZmVlZC5jb250ZW50ID0gZnVuY3Rpb24gKGZlZWQsIGYpIHsKICB2YXIgY29udGVudCA9IGZlZWQucXVlcnlTZWxlY3RvcignW25vZGUtdHlwZT0iZmVlZF9saXN0X2NvbnRlbnQiXScpOwogIHZhciByZWFzb24gPSBmZWVkLnF1ZXJ5U2VsZWN0b3IoJ1tub2RlLXR5cGU9ImZlZWRfbGlzdF9yZWFzb24iXScpOwogIHZhciBpdGVtcyA9IFtdOwogIGlmIChjb250ZW50KSBpdGVtcyA9IGl0ZW1zLmNvbmNhdChBcnJheS5mcm9tKGYoY29udGVudCkpKTsKICBpZiAocmVhc29uKSBpdGVtcyA9IGl0ZW1zLmNvbmNhdChBcnJheS5mcm9tKGYocmVhc29uKSkpOwogIHJldHVybiBpdGVtczsKfTsKCi8vIOmAieWPluivhOiuuuWGheWuuQp3ZWliby5jb21tZW50LmNvbnRlbnQgPSBmdW5jdGlvbiAoY29tbWVudCwgZikgewogIHJldHVybiBBcnJheS5mcm9tKGYoY29tbWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfdGV4dCcpKSk7Cn07CgovLyDku47kuIDmnaHlvq7ljZrkuK3ojrflj5bku5bnmoTmlofmnKwKd2VpYm8uY29tbW9uLnRleHQgPSBmdW5jdGlvbiAoY29udGVudCwgcHJlY2x0KSB7CiAgdmFyIGFjdGl2ZSA9IFtmdW5jdGlvbiAobm9kZSkgewogICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSByZXR1cm4gbm9kZS50ZXh0Q29udGVudC50cmltKCk7CiAgfSwgZnVuY3Rpb24gKG5vZGUpIHsKICAgIGlmICh1dGlsLmRvbS5tYXRjaGVzKG5vZGUsICdiciwgLnlhd2YtbGluZWJyZWFrJykpIHJldHVybiAnXG4nOwogIH1dOwogIC8vIOiOt+WPlueJueWumuWFg+e0oOeahOaWh+acrAogIHZhciB0eXBlcyA9IHt9OwogIHR5cGVzLm1lbnRpb24gPSBmdW5jdGlvbiAobm9kZSkgewogICAgaWYgKHV0aWwuZG9tLm1hdGNoZXMobm9kZSwgJ2FbdXNlcmNhcmRdJykpIHJldHVybiBub2RlLnRleHRDb250ZW50LnRyaW0oKTsKICB9OwogIHR5cGVzLnRvcGljID0gZnVuY3Rpb24gKG5vZGUpIHsKICAgIGlmICh1dGlsLmRvbS5tYXRjaGVzKG5vZGUsICdhW3N1ZGEtdWF0cmFjayo9IjEwMjItdG9waWMiXScpICYmIG5vZGUudGl0bGUpIHJldHVybiBub2RlLnRpdGxlOwogICAgaWYgKHV0aWwuZG9tLm1hdGNoZXMobm9kZSwgJ2EuYV90b3BpYywgYVtzdWRhLXVhdHJhY2sqPSIxMDIyLXRvcGljIl0nKSkgcmV0dXJuIG5vZGUudGV4dENvbnRlbnQudHJpbSgpOwogIH07CiAgdHlwZXMuc3RvY2sgPSBmdW5jdGlvbiAobm9kZSkgewogICAgaWYgKHV0aWwuZG9tLm1hdGNoZXMobm9kZSwgJ2Fbc3VkYS11YXRyYWNrKj0iMTAyMi1zdG9jayJdJykpIHJldHVybiBub2RlLnRleHRDb250ZW50LnRyaW0oKTsKICB9OwogIHR5cGVzLmxpbmt0ID0gZnVuY3Rpb24gKG5vZGUpIHsKICAgIGlmICh1dGlsLmRvbS5tYXRjaGVzKG5vZGUsICdhW2FjdGlvbi10eXBlPSJmZWVkX2xpc3RfdXJsIl1bdGl0bGVdJykpIHJldHVybiBub2RlLmdldEF0dHJpYnV0ZSgndGl0bGUnKS50cmltKCk7CiAgfTsKICB0eXBlcy5saW5rdSA9IGZ1bmN0aW9uIChub2RlKSB7CiAgICBpZiAodXRpbC5kb20ubWF0Y2hlcyhub2RlLCAnYVthY3Rpb24tdHlwZT0iZmVlZF9saXN0X3VybCJdW3RhcmdldD0iX2JsYW5rIl0nKSkgcmV0dXJuIG5vZGUuZ2V0QXR0cmlidXRlKCdocmVmJykudHJpbSgpOwogIH07CiAgdHlwZXMuZW1vdGlvbiA9IGZ1bmN0aW9uIChub2RlKSB7CiAgICBpZiAodXRpbC5kb20ubWF0Y2hlcyhub2RlLCAnaW1nW3R5cGU9ImZhY2UiXVthbHRdJykpIHJldHVybiBub2RlLmdldEF0dHJpYnV0ZSgnYWx0JykudHJpbSgpOwogIH07CiAgdHlwZXMuZW1vamkgPSBmdW5jdGlvbiAobm9kZSkgewogICAgaWYgKCF1dGlsLmRvbS5tYXRjaGVzKG5vZGUsICdbc3JjKj0iLy9pbWcudC5zaW5hanMuY24vdDQvYXBwc3R5bGUvZXhwcmVzc2lvbi9lbWltYWdlL2UiXScpKSByZXR1cm4gdm9pZCAwOwogICAgLy8g6L+Z5Lqb6KGo5oOF6YO95ZyoIDB4ZTAwMCsg55qE5Yy66Ze077yM5a+55bqU55qEIHV0Zjgg57yW56CB6YO95piv5LiJ5L2N77yM5omA5Lul5LiA5a6a5pivIGUg5byA5aS0CiAgICB2YXIgY29kZSA9IG5vZGUuZ2V0QXR0cmlidXRlKCdzcmMnKS5tYXRjaCgvKGUuLi4uLilcLnBuZy8pWzFdOwogICAgdmFyIHVuaWNvZGUgPSB1dGlsLnN0ci5lbW9qaShjb2RlKTsKICAgIHJldHVybiB1bmljb2RlOwogIH07CiAgdmFyIG1hdGNoID0gZnVuY3Rpb24gKGZlZWQpIHsKICAgIHJldHVybiBjb250ZW50KGZlZWQsIGZ1bmN0aW9uIChtKSB7CiAgICAgIHJldHVybiBBcnJheS5mcm9tKG0uY2hpbGROb2RlcykubWFwKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgdmFyIHJlc3VsdCA9IFtdOwogICAgICAgIGFjdGl2ZS5mb3JFYWNoKGZ1bmN0aW9uIChmKSB7CiAgICAgICAgICB2YXIgdmFsID0gZihub2RlKTsKICAgICAgICAgIGlmICh2YWwpIHJlc3VsdC5wdXNoKHZhbCk7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIHJlc3VsdC5qb2luKCcgJyk7CiAgICAgIH0pOwogICAgfSkuam9pbignJyk7CiAgfTsKICBtYXRjaC5hY3RpdmUgPSBmdW5jdGlvbiAodHlwZSkgewogICAgYWN0aXZlLnB1c2godXRpbC5mdW5jLmNhdGNoZWQodHlwZXNbdHlwZV0pKTsKICAgIHJldHVybiB0eXBlOwogIH07CiAgKHByZWNsdCB8fCBbXSkuZm9yRWFjaChtYXRjaC5hY3RpdmUpOwogIHJldHVybiBtYXRjaDsKfTsKCndlaWJvLmZlZWQudGV4dCA9IHdlaWJvLmNvbW1vbi50ZXh0KHdlaWJvLmZlZWQuY29udGVudCwgWydlbW9qaSddKTsKd2VpYm8uY29tbWVudC50ZXh0ID0gd2VpYm8uY29tbW9uLnRleHQod2VpYm8uY29tbWVudC5jb250ZW50LCBbJ3RvcGljJywgJ2xpbmt0JywgJ3N0b2NrJywgJ2Vtb2ppJ10pOwoKLy8g5om+5Yiw5LiA5p2h5b6u5Y2a55qE6KGo5oOF56ym5Y+3CndlaWJvLmNvbW1vbi5lbW9qaSA9IGZ1bmN0aW9uIChmZWVkKSB7CiAgdmFyIGUgPSBBcnJheS5mcm9tKGZlZWQucXVlcnlTZWxlY3RvckFsbCgnaW1nW3R5cGU9ImZhY2UiXVthbHRdJykpOwogIHJldHVybiBlLm1hcChmdW5jdGlvbiAoZSkgeyByZXR1cm4gZS5nZXRBdHRyaWJ1dGUoJ2FsdCcpOyB9KTsKfTsKCndlaWJvLmZlZWQuZW1vamkgPSBmdW5jdGlvbiAoZmVlZCkgewogIHJldHVybiB3ZWliby5mZWVkLmNvbnRlbnQoZmVlZCwgd2VpYm8uY29tbW9uLmVtb2ppKTsKfTsKCndlaWJvLmNvbW1lbnQuZW1vamkgPSBmdW5jdGlvbiAoY29tbWVudCkgewogIHJldHVybiB3ZWliby5jb21tZW50LmNvbnRlbnQoY29tbWVudCwgd2VpYm8uY29tbW9uLmVtb2ppKTsKfTsKCi8vIOS7juS4gOadoeW+ruWNmuS4reaJvuWIsOWktOWDjwp3ZWliby5mZWVkLmF2YXRhciA9IGZ1bmN0aW9uIChmZWVkKSB7CiAgcmV0dXJuIGZlZWQucXVlcnlTZWxlY3RvcignLldCX2ZhY2UgaW1nJykuc3JjOwp9OwoKLy8g5LuO5LiA5p2h5b6u5Y2a5Lit5om+5Yiw5LuW55qE5L2c6ICFCndlaWJvLmZlZWQuYXV0aG9yID0ge307CndlaWJvLmZlZWQuYXV0aG9yLmRvbSA9IGZ1bmN0aW9uIChmZWVkKSB7CiAgcmV0dXJuIGZlZWQucXVlcnlTZWxlY3RvcignLldCX2RldGFpbD4uV0JfaW5mbz4uV0JfbmFtZVt1c2VyY2FyZF0sIC5XQl9kZXRhaWw+LldCX2luZm8+LldfZmJbdXNlcmNhcmRdJykgfHwKICAgIGZlZWQucXVlcnlTZWxlY3RvcignLldCX3RleHQ+YS5XX2ZiW3VzZXJjYXJkXTpmaXJzdC1jaGlsZCcpOwp9Owp3ZWliby5mZWVkLmF1dGhvci5pZCA9IGZ1bmN0aW9uIChmZWVkKSB7CiAgdmFyIGF1dGhvciA9IHdlaWJvLmZlZWQuYXV0aG9yLmRvbShmZWVkKTsKICBpZiAoIWF1dGhvcikgcmV0dXJuIG51bGw7CiAgcmV0dXJuIHV0aWwuc3RyLnBhcnNlcXVlcnkoYXV0aG9yLmdldEF0dHJpYnV0ZSgndXNlcmNhcmQnKSkuaWQ7Cn07CndlaWJvLmZlZWQuYXV0aG9yLm5hbWUgPSBmdW5jdGlvbiAoZmVlZCkgewogIHZhciBhdXRob3IgPSB3ZWliby5mZWVkLmF1dGhvci5kb20oZmVlZCk7CiAgaWYgKCFhdXRob3IpIHJldHVybiBudWxsOwogIHJldHVybiBhdXRob3IudGV4dENvbnRlbnQudHJpbSgpOwp9OwoKLy8g5LuO5LiA5p2h5b6u5Y2a5Lit5om+5Yiw5LuW55qE5Y6f5L2c6ICFCndlaWJvLmZlZWQub3JpZ2luYWwgPSB7fTsKd2VpYm8uZmVlZC5vcmlnaW5hbC5kb20gPSBmdW5jdGlvbiAoZmVlZCkgewogIHJldHVybiBmZWVkLnF1ZXJ5U2VsZWN0b3IoJy5XQl9tZWRpYV9leHBhbmQgLldCX2luZm8gLldCX25hbWUsIC5XQl9leHBhbmQgLldCX2luZm8gLldfZmInKTsKfTsKd2VpYm8uZmVlZC5vcmlnaW5hbC5pZCA9IGZ1bmN0aW9uIChmZWVkKSB7CiAgdmFyIG9yaWdpbmFsQXV0aG9yID0gd2VpYm8uZmVlZC5vcmlnaW5hbC5kb20oZmVlZCk7CiAgaWYgKCFvcmlnaW5hbEF1dGhvcikgcmV0dXJuIG51bGw7CiAgcmV0dXJuIHV0aWwuc3RyLnBhcnNlcXVlcnkob3JpZ2luYWxBdXRob3IuZ2V0QXR0cmlidXRlKCd1c2VyY2FyZCcpKS5pZDsKfTsKd2VpYm8uZmVlZC5vcmlnaW5hbC5uYW1lID0gZnVuY3Rpb24gKGZlZWQpIHsKICB2YXIgb3JpZ2luYWxBdXRob3IgPSB3ZWliby5mZWVkLm9yaWdpbmFsLmRvbShmZWVkKTsKICBpZiAoIW9yaWdpbmFsQXV0aG9yKSByZXR1cm4gbnVsbDsKICByZXR1cm4gb3JpZ2luYWxBdXRob3IudGV4dENvbnRlbnQudHJpbSgpLnJlcGxhY2UoL15ALywgJycpOwp9Owp3ZWliby5mZWVkLm9yaWdpbmFsLnRleHQgPSBmdW5jdGlvbiAoZmVlZCkgewogIHJldHVybiBmZWVkLnF1ZXJ5U2VsZWN0b3IoJy5XQl9leHBhbmQgLldCX3RleHQnKS50ZXh0Q29udGVudDsKfTsKCi8vIOaJvuWIsOWcqOS4gOadoeW+ruWNmumHjOmdouiiq+aPkOWIsOeahOS6uueahOaYteensAp3ZWliby5mZWVkLm1lbnRpb25zID0ge307CndlaWJvLmZlZWQubWVudGlvbnMuZG9tID0gZnVuY3Rpb24gKGZlZWQpIHsKICByZXR1cm4gd2VpYm8uZmVlZC5jb250ZW50KGZlZWQsIGZ1bmN0aW9uIChtKSB7CiAgICByZXR1cm4gQXJyYXkuZnJvbShtLnF1ZXJ5U2VsZWN0b3JBbGwoJ2FbdXNlcmNhcmRePSJuYW1lPSJdW2hyZWYqPSJsb2M9YXQiXScpKTsKICB9KTsKfTsKd2VpYm8uZmVlZC5tZW50aW9ucy5uYW1lID0gZnVuY3Rpb24gKGZlZWQpIHsKICByZXR1cm4gd2VpYm8uZmVlZC5tZW50aW9ucy5kb20oZmVlZCkubWFwKGZ1bmN0aW9uIChsaW5rKSB7CiAgICByZXR1cm4gdXRpbC5zdHIucGFyc2VxdWVyeShsaW5rLmdldEF0dHJpYnV0ZSgndXNlcmNhcmQnKSkubmFtZTsKICB9KTsKfTsKCi8vIOivhOiuuuS4remDvea2ieWPiuS6huWTquS6m+eUqOaIt++8jOWMheaLrOivhOiuuuS9nOiAheOAgeWbnuWkjeeahOS6uuWSjOaPkOWIsOeahOS6ugp3ZWliby5jb21tZW50LmF1dGhvciA9IHt9Owp3ZWliby5jb21tZW50LmF1dGhvci5kb20gPSBmdW5jdGlvbiAoY29tbWVudCkgewogIHJldHVybiBjb21tZW50LnF1ZXJ5U2VsZWN0b3IoJy5XQl9mYWNlIGltZ1thbHRdJykgfHwgY29tbWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfdGV4dCBhW3VzZXJjYXJkXScpOwp9Owp3ZWliby5jb21tZW50LmF1dGhvci5pZCA9IGZ1bmN0aW9uIChjb21tZW50KSB7CiAgdmFyIGF1dGhvciA9IHdlaWJvLmNvbW1lbnQuYXV0aG9yLmRvbShjb21tZW50KTsKICBpZiAoIWF1dGhvcikgcmV0dXJuIG51bGw7CiAgcmV0dXJuIHV0aWwuc3RyLnBhcnNlcXVlcnkoYXV0aG9yLmdldEF0dHJpYnV0ZSgndXNlcmNhcmQnKSkuaWQ7Cn07CndlaWJvLmNvbW1lbnQuYXV0aG9yLm5hbWUgPSBmdW5jdGlvbiAoY29tbWVudCkgewogIHZhciBhdXRob3IgPSB3ZWliby5jb21tZW50LmF1dGhvci5kb20oY29tbWVudCk7CiAgaWYgKCFhdXRob3IpIHJldHVybiBudWxsOwogIHJldHVybiBhdXRob3IuZ2V0QXR0cmlidXRlKCdhbHQnKTsKfTsKd2VpYm8uY29tbWVudC5tZW50aW9ucyA9IHt9Owp3ZWliby5jb21tZW50Lm1lbnRpb25zLmRvbSA9IGZ1bmN0aW9uIChjb21tZW50KSB7CiAgcmV0dXJuIEFycmF5LmZyb20oY29tbWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfdGV4dCcpLnF1ZXJ5U2VsZWN0b3JBbGwoJ2FbdXNlcmNhcmRePSJuYW1lPSJdJykpOwp9Owp3ZWliby5jb21tZW50Lm1lbnRpb25zLm5hbWUgPSBmdW5jdGlvbiAoY29tbWVudCkgewogIHZhciBtZW50aW9ucyA9IHdlaWJvLmNvbW1lbnQubWVudGlvbnMuZG9tKGNvbW1lbnQpOwogIHJldHVybiBtZW50aW9ucy5tYXAoZnVuY3Rpb24gKGEpIHsgcmV0dXJuIHV0aWwuc3RyLnBhcnNlcXVlcnkoYS5nZXRBdHRyaWJ1dGUoJ3VzZXJjYXJkJykpLm5hbWU7IH0pOwp9Owp3ZWliby5jb21tZW50LnVzZXJzID0ge307CndlaWJvLmNvbW1lbnQudXNlcnMubmFtZSA9IGZ1bmN0aW9uIChjb21tZW50KSB7CiAgcmV0dXJuIFt3ZWliby5jb21tZW50LmF1dGhvci5uYW1lKGNvbW1lbnQpXS5jb25jYXQod2VpYm8uY29tbWVudC5tZW50aW9ucy5uYW1lKGNvbW1lbnQpKS5maWx0ZXIoQm9vbGVhbik7Cn07CgovLyDmib7liLDlnKjkuIDmnaHlvq7ljZrph4zpnaLmj5DliLDnmoTmiYDmnInor53popgKd2VpYm8uZmVlZC50b3BpY3MgPSB7fTsKd2VpYm8uY29tbW9uLnRvcGljcyA9IGZ1bmN0aW9uIChmZWVkKSB7CiAgQXJyYXkuZnJvbShmZWVkLnF1ZXJ5U2VsZWN0b3JBbGwoJ2E6bm90KFt5YXdmLXRvcGljXSkgPiAuZmljb25fc3VwZXJ0b3BpYycpKS5mb3JFYWNoKGZ1bmN0aW9uIChpY29uKSB7CiAgICB2YXIgbGluayA9IGljb24ucGFyZW50Tm9kZTsKICAgIGxpbmsuc2V0QXR0cmlidXRlKCd5YXdmLXRvcGljJywgbGluay50aXRsZSk7CiAgICByZXR1cm4gbGluazsKICB9KTsKICB2YXIgdG9waWNzID0gQXJyYXkuZnJvbShmZWVkLnF1ZXJ5U2VsZWN0b3JBbGwoJy5hX3RvcGljOm5vdChbeWF3Zi10b3BpY10pJykpOwogIHRvcGljcy5mb3JFYWNoKGZ1bmN0aW9uICh0b3BpYykgewogICAgdmFyIHRpdGxlID0gdG9waWMudGV4dENvbnRlbnQucmVwbGFjZSgvIy9nLCAnJykudHJpbSgpOwogICAgdG9waWMuc2V0QXR0cmlidXRlKCd5YXdmLXRvcGljJywgdGl0bGUpOwogIH0pOwogIHJldHVybiBBcnJheS5mcm9tKGZlZWQucXVlcnlTZWxlY3RvckFsbCgnYVt5YXdmLXRvcGljXScpKTsKfTsKd2VpYm8uZmVlZC50b3BpY3MuZG9tID0gZnVuY3Rpb24gKGZlZWQpIHsKICB2YXIgdG9waWNzID0gd2VpYm8uZmVlZC5jb250ZW50KGZlZWQsIHdlaWJvLmNvbW1vbi50b3BpY3MpOwogIHZhciB0b3BpY0NhcmQgPSBBcnJheS5mcm9tKGZlZWQucXVlcnlTZWxlY3RvckFsbChbCiAgICAnLldCX2ZlZWRfc3BlY1thY3Rpb24tZGF0YSo9InVybD1odHRwOi8vaHVhdGkud2VpYm8uY29tL2svIl0nLAogICAgJy5XQl9mZWVkX3NwZWNbYWN0aW9uLWRhdGEqPSJ1cmw9aHR0cHM6Ly9odWF0aS53ZWliby5jb20vay8iXScKICBdLmpvaW4oJywnKSkpOwogIHRvcGljQ2FyZC5mb3JFYWNoKGZ1bmN0aW9uICh0b3BpYykgewogICAgdmFyIHVybCA9IHV0aWwuc3RyLnBhcnNlcXVlcnkodG9waWMuZ2V0QXR0cmlidXRlKCdhY3Rpb24tZGF0YScpKS51cmw7CiAgICB2YXIgYSA9IHV0aWwuZG9tLmNyZWF0ZSgnYScsICcnKTsgYS5ocmVmID0gdXJsOwogICAgdmFyIHRleHQgPSBkZWNvZGVVUklDb21wb25lbnQoYS5wYXRobmFtZS5zcGxpdCgnLycpWzJdKTsKICAgIHRvcGljLnNldEF0dHJpYnV0ZSgneWF3Zi10b3BpYycsIHRleHQpOwogICAgdG9waWNzLnB1c2godG9waWMpOwogIH0pOwogIHZhciBzdXBlclRvcGljU291cmNlID0gZmVlZC5xdWVyeVNlbGVjdG9yKCdbYWN0aW9uLXR5cGU9ImFwcF9zb3VyY2UiXVtocmVmKj0id2VpYm8uY29tL3AvIl0nKTsKICBpZiAoc3VwZXJUb3BpY1NvdXJjZSAmJiAv6LaF6K+dJC8udGVzdChzdXBlclRvcGljU291cmNlLnRleHRDb250ZW50LnRyaW0oKSkpIHsKICAgIHZhciBzdXBlclRvcGljU291cmNlVGl0bGUgPSBzdXBlclRvcGljU291cmNlLnRleHRDb250ZW50LnRyaW0oKS5yZXBsYWNlKC/otoXor50kLywgJycpOwogICAgc3VwZXJUb3BpY1NvdXJjZS5zZXRBdHRyaWJ1dGUoJ3lhd2YtdG9waWMnLCBzdXBlclRvcGljU291cmNlVGl0bGUpOwogICAgdG9waWNzLnB1c2goc3VwZXJUb3BpY1NvdXJjZSk7CiAgfQogIHJldHVybiB0b3BpY3M7Cn07CndlaWJvLmZlZWQudG9waWNzLnRleHQgPSBmdW5jdGlvbiAoZmVlZCkgewogIHJldHVybiB3ZWliby5mZWVkLnRvcGljcy5kb20oZmVlZCkubWFwKGZ1bmN0aW9uICh0b3BpYykgewogICAgaWYgKHRvcGljLmhhc0F0dHJpYnV0ZSgneWF3Zi10b3BpYycpKSB7CiAgICAgIHJldHVybiB0b3BpYy5nZXRBdHRyaWJ1dGUoJ3lhd2YtdG9waWMnKTsKICAgIH0KICAgIHJldHVybiB0b3BpYy50ZXh0Q29udGVudC5yZXBsYWNlKC8jL2csICcnKS50cmltKCk7CiAgfSk7Cn07Cgp3ZWliby5jb21tZW50LnRvcGljcyA9IHt9Owp3ZWliby5jb21tZW50LnRvcGljcy5kb20gPSBmdW5jdGlvbiAoZmVlZCkgewogIHJldHVybiB3ZWliby5mZWVkLnRvcGljcy5kb20oZmVlZCk7Cn07CndlaWJvLmNvbW1lbnQudG9waWNzLnRleHQgPSBmdW5jdGlvbiAoZmVlZCkgewogIHJldHVybiB3ZWliby5mZWVkLnRvcGljcy50ZXh0KGZlZWQpOwp9OwoKLy8g6I635Y+W5LiA5p2h5b6u5Y2a55qE5omA5pyJ5p2l5rqQ77yI5YyF5ous6L2s5Y+R77yJCndlaWJvLmZlZWQuc291cmNlcyA9IHt9Owp3ZWliby5mZWVkLnNvdXJjZXMuZG9tID0gZnVuY3Rpb24gKGZlZWQpIHsKICByZXR1cm4gQXJyYXkuZnJvbShmZWVkLnF1ZXJ5U2VsZWN0b3JBbGwoJy5XQl9mcm9tIConKSkKICAgIC5maWx0ZXIoZmlsdGVyLmZhc3Quc291cmNlLnZhbGlkYXRvcik7Cn07CndlaWJvLmZlZWQuc291cmNlcy50ZXh0ID0gZnVuY3Rpb24gKGZlZWQpIHsKICByZXR1cm4gd2VpYm8uZmVlZC5zb3VyY2VzLmRvbShmZWVkKS5tYXAoZnVuY3Rpb24gKHN0KSB7CiAgICByZXR1cm4gc3QuZ2V0QXR0cmlidXRlKCd0aXRsZScpIHx8IHN0LnRleHRDb250ZW50IHx8IHRleHQuc291cmNlVW5rb3duOwogIH0pLmZpbHRlcihCb29sZWFuKTsKfTsKCi8vIOS7juS4gOadoeW+ruWNmuS4reaJvuWIsOaJgOaciei2hemTvuaOpeWcsOWdgAp3ZWliby5mZWVkLmh5cGVybGlua3MgPSB7fTsKd2VpYm8uZmVlZC5oeXBlcmxpbmtzLmRvbSA9IGZ1bmN0aW9uIChmZWVkKSB7CiAgcmV0dXJuIHdlaWJvLmZlZWQuY29udGVudChmZWVkLCBmdW5jdGlvbiAobSkgewogICAgcmV0dXJuIEFycmF5LmZyb20obS5xdWVyeVNlbGVjdG9yQWxsKFsKICAgICAgJ2FbeWF3Zi1saW5rLXR5cGU9Ik8iXVtocmVmKj0iLy90LmNuLyJdJywKICAgICAgJ2FbaHJlZio9Ii8vZmVlZC5taXguc2luYS5jb20uY24vbGlua19jYXJkL3JlZGlyZWN0PyJdJwogICAgXS5qb2luKCcsJykpKTsKICB9KS5maWx0ZXIoZmlsdGVyLmZhc3QuaHlwZXJsaW5rLnZhbGlkYXRvcik7Cn07CndlaWJvLmZlZWQuaHlwZXJsaW5rcy50ZXh0ID0gZnVuY3Rpb24gKGZlZWQpIHsKICByZXR1cm4gd2VpYm8uZmVlZC5oeXBlcmxpbmtzLmRvbShmZWVkKS5tYXAoZnVuY3Rpb24gKGEpIHsgcmV0dXJuIGEuaHJlZjsgfSk7Cn07CgovLyDku47kuIDmnaHlvq7ljZrkuK3mib7lh7rmiYDmnInotoXpk77mjqXmoIfpopgKd2VpYm8uZmVlZC5saW5rdGl0bGUgPSB7fTsKd2VpYm8uZmVlZC5saW5rdGl0bGUuZG9tID0gZnVuY3Rpb24gKGZlZWQpIHsKICByZXR1cm4gd2VpYm8uZmVlZC5jb250ZW50KGZlZWQsIGZ1bmN0aW9uIChtKSB7CiAgICByZXR1cm4gQXJyYXkuZnJvbShtLnF1ZXJ5U2VsZWN0b3JBbGwoJ2FbeWF3Zi1saW5rLXR5cGU9Ik8iXScpKTsKICB9KS5maWx0ZXIoZmlsdGVyLmZhc3QubGlua3RpdGxlLnZhbGlkYXRvcik7Cn07CndlaWJvLmZlZWQubGlua3RpdGxlLnRleHQgPSBmdW5jdGlvbiAoZmVlZCkgewogIHJldHVybiB3ZWliby5mZWVkLmxpbmt0aXRsZS5kb20oZmVlZCkKICAgIC5tYXAoZnVuY3Rpb24gKGEpIHsgcmV0dXJuIGEuZ2V0QXR0cmlidXRlKCd0aXRsZScpOyB9KTsKfTsKCi8vIOaQnOe0oumAiemhueWNoQpmaWx0ZXIuY29sbGVjdGlvbi5ncm91cC5hZGQoZnVuY3Rpb24gKCkgewogIHZhciBpbnB1dCwgdGV4dCwgYWN0aXZlZCwgbGF5ZXI7CiAgLy8g5Yid5aeL5YyWCiAgdmFyIGluaXQgPSBmdW5jdGlvbiAoKSB7CiAgfTsKICAvLyDmm7TmlrDkuobovpPlhaXlhoXlrrkKICB2YXIgdXBkYXRlID0gZnVuY3Rpb24gKCkgewogICAgaWYgKCFhY3RpdmVkKSBpdGVtLmFjdGl2ZSgpOwogICAgZWxzZSBzaG93KCk7CiAgfTsKICAvLyDmmL7npLrorr7nva7lr7nor53moYYKICB2YXIgbGlzdCA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBkb20gPSB1dGlsLmRvbS5jcmVhdGUoaHRtbC5jb25maWdIZWFkZXJTZWFyY2gpOwogICAgaW5wdXQgPSBkb20ucXVlcnlTZWxlY3RvcignaW5wdXQnKTsKICAgIHZhciBjaGFuZ2VkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgdmFyIGN1cnJlbnQgPSBpbnB1dC52YWx1ZTsKICAgICAgaWYgKGN1cnJlbnQgPT09IHRleHQpIHJldHVybjsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKGlucHV0LnZhbHVlICE9PSBjdXJyZW50KSByZXR1cm47CiAgICAgICAgdGV4dCA9IGN1cnJlbnQ7CiAgICAgICAgdXBkYXRlKCk7CiAgICAgIH0sIDUwKTsKICAgIH07CiAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VkKTsKICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgY2hhbmdlZCk7CiAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgY2hhbmdlZCk7CiAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBjaGFuZ2VkKTsKICAgIGFjdGl2ZWQgPSBmYWxzZTsgdGV4dCA9ICcnOyBsYXllciA9IG51bGw7CiAgICByZXR1cm4gZG9tOwogIH07CiAgLy8g5LiN562J5Y+35LusCiAgdmFyIG9wZXJhdG9yID0gZnVuY3Rpb24gKG9wLCB4LCB5KSB7CiAgICBpZiAob3AgPT09ICc9JykgcmV0dXJuIHggPT09IHk7CiAgICBpZiAob3AgPT09ICc+JykgcmV0dXJuIHggPiB5OwogICAgaWYgKG9wID09PSAnPCcpIHJldHVybiB4IDwgeTsKICAgIGlmIChvcCA9PT0gJz49JykgcmV0dXJuIHggPj0geTsKICAgIGlmIChvcCA9PT0gJzw9JykgcmV0dXJuIHggPD0geTsKICAgIHJldHVybiBmYWxzZTsKICB9OwogIC8vIOWwhuaQnOe0ouivjeWIhuaekOaIkOaQnOe0ouadoeS7tgogIHZhciBwYXJzZSA9IGZ1bmN0aW9uICh0ZXh0KSB7CiAgICB2YXIgdG9rZW4gPSB0ZXh0LnRvTG93ZXJDYXNlKCkudHJpbSgpLnJlcGxhY2UoLzpccysvZywgJzonKS5zcGxpdCgvXHMrLyk7CiAgICB2YXIgdGV4dHMgPSBbXSwgdmVyc2lvbiA9IHV0aWwuZnVuYy5jb25zdGFudCh0cnVlKTsKICAgIHZhciBnZXRWZXJzaW9uID0gZnVuY3Rpb24gKHZlcikgewogICAgICBpZiAoIXV0aWwuaW5mby52ZXJzaW9uKSByZXR1cm47CiAgICAgIHZhciBtYXRjaCA9IHZlci5tYXRjaCgvLio6KFs+PF0/PT8pKC0/XGQrKS8pLCBvcCA9IG1hdGNoWzFdIHx8ICc9JzsKICAgICAgdmFyIG51bSA9IHBhcnNlSW50KG1hdGNoWzJdLCAxMCk7CiAgICAgIGlmIChudW0gPCAwKSBudW0gPSB1dGlsLmluZm8udmVyc2lvbiArIG51bSArIDE7CiAgICAgIHZlcnNpb24gPSBmdW5jdGlvbiAodikgeyByZXR1cm4gb3BlcmF0b3Iob3AsIHYsIG51bSk7IH07CiAgICB9OwogICAgdG9rZW4uZm9yRWFjaChmdW5jdGlvbiAodCkgewogICAgICBpZiAodC5tYXRjaCgvdmVyKHNpb24pPzpbPjxdPz0/LT9cZCsvKSkgZ2V0VmVyc2lvbih0KTsKICAgICAgZWxzZSB0ZXh0cy5wdXNoKHQpOwogICAgfSk7CiAgICByZXR1cm4gewogICAgICAndmVyc2lvbic6IHZlcnNpb24sCiAgICAgICd0ZXh0cyc6IHRleHRzLAogICAgfTsKICB9OwogIC8vIOaYvuekuuivpemAiemhueWNoQogIHZhciBzaG93ID0gdXRpbC5mdW5jLmNhdGNoZWQoZnVuY3Rpb24gKGNsYXllcikgewogICAgYWN0aXZlZCA9IHRydWU7CiAgICBsYXllciA9IGNsYXllciB8fCBsYXllcjsgbGF5ZXIuaW5uZXJIVE1MID0gJyc7CiAgICB2YXIgYWxsVGV4dCA9IGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBbaXRlbS50eXBlICE9PSAnc2ljb24nICYmIGl0ZW0udGV4dCB8fCAnJ10KICAgICAgICAuY29uY2F0KGl0ZW0ucmVmID8gT2JqZWN0LmtleXMoaXRlbS5yZWYpLm1hcChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICByZXR1cm4gYWxsVGV4dChpdGVtLnJlZltrZXldKTsKICAgICAgICB9KSA6IFtdKS5qb2luKCcgJyk7CiAgICB9OwogICAgdmFyIHNlYXJjaCA9IHBhcnNlKHRleHQpOwogICAgdmFyIG5vdENvbnRhaW4gPSBmdW5jdGlvbiAoeCwgeSkgeyByZXR1cm4geC5pbmRleE9mKHkpID09PSAtMTsgfTsKICAgIHZhciBjb25mcyA9IGZpbHRlci5jb2xsZWN0aW9uLml0ZW0ubGlzdChmdW5jdGlvbiAoaXRlbSkgewogICAgICBpZiAodHlwZW9mIGl0ZW0udmVyc2lvbiAhPT0gJ251bWJlcicgfHwgIXRleHQpIHJldHVybiBmYWxzZTsKICAgICAgaWYgKCFzZWFyY2gudmVyc2lvbihpdGVtLnZlcnNpb24pKSByZXR1cm4gZmFsc2U7CiAgICAgIHZhciBkaXYgPSB1dGlsLmRvbS5jcmVhdGUoJzxkaXY+PC9kaXY+Jyk7CiAgICAgIGRpdi5pbm5lckhUTUwgPSB1dGlsLnN0ci5maWxsKGFsbFRleHQoaXRlbSksIGl0ZW0pOwogICAgICB2YXIgaW5mbyA9IGRpdi50ZXh0Q29udGVudC50b0xvd2VyQ2FzZSgpOwogICAgICBpZiAoc2VhcmNoLnRleHRzLnNvbWUobm90Q29udGFpbi5iaW5kKG51bGwsIGluZm8pKSkgcmV0dXJuIGZhbHNlOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0pOwogICAgaWYgKGNvbmZzLmNvdW50KCkpIGNvbmZzLnNob3cobGF5ZXIpOwogICAgZWxzZSBsYXllci5pbm5lckhUTUwgPSB1dGlsLnN0ci5maWxsKGh0bWwuc2VhcmNoTm90Rm91bmQpOwogIH0pOwogIC8vIOmakOiXj+ivpemAiemhueWNoQogIHZhciBoaWRlID0gZnVuY3Rpb24gKCkgewogICAgYWN0aXZlZCA9IGZhbHNlOwogICAgaW5wdXQudmFsdWUgPSB0ZXh0ID0gJyc7CiAgfTsKICB2YXIgaXRlbSA9IHsKICAgICduYW1lJzogJ3NlYXJjaCcsCiAgICAnaW5pdCc6IGluaXQsCiAgICAnc2hvdyc6IHNob3csCiAgICAnaGlkZSc6IGhpZGUsCiAgICAnbGlzdCc6IGxpc3QsCiAgfTsKICByZXR1cm4gaXRlbTsKfSgpKTsKCi8vIOWfuuehgOiuvue9rgovLyDnlLHkuo7ljoblj7Lljp/lm6DvvIzln7rnoYDorr7nva7kuIvplK7lgLzlvZLlsZ4gb3RoZXIKZmlsdGVyLnByZWRlZi5ncm91cCgnYmFzZScpOwoKLy8g5aaC5L2V5Yqg6L295b6u5Y2aCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ2Jhc2UnLCAnbG9hZHdlaWJvJywgJ3t7bG9hZFdlaWJvVGl0bGV9fScpOwoKLy8g5L2/55So5YiG57uE5Luj5pu/6aaW6aG1CmZpbHRlci5pdGVtcy5iYXNlLmxvYWR3ZWliby5sb2FkX3dlaWJvX2J5X25ld2VzdCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnbG9hZHdlaWJvJywKICAndmVyc2lvbic6IDUwMCwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wubG9hZF93ZWlib19ieV9uZXdlc3QnLAogICd0ZXh0JzogJ3t7bG9hZFdlaWJvQnlOZXdlc3R9fScsCiAgJ2RlYWN0aXZlJzogZnVuY3Rpb24gKCkgeyB0aGlzLnB1dGNvbmYoZmFsc2UpOyB9LAogICdpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIHRoYXQgPSB0aGlzOwogICAgdXRpbC5jb25maWcub25wdXQodGhhdC5rZXksIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICBpZiAoIXZhbHVlKSByZXR1cm47CiAgICAgIGZpbHRlci5pdGVtcy5iYXNlLmxvYWR3ZWliby5sb2FkX3dlaWJvX2J5X2dyb3VwLmRlYWN0aXZlKCk7CiAgICAgIGZpbHRlci5pdGVtcy5iYXNlLmxvYWR3ZWliby5sb2FkX3dlaWJvX2J5X211bHRpX2dyb3VwLmRlYWN0aXZlKCk7CiAgICB9KTsKICAgIGlmICh0aGF0LmNvbmYpIHsKICAgICAgZmlsdGVyLml0ZW1zLmJhc2UubG9hZHdlaWJvLmxvYWRfd2VpYm9fYnlfZ3JvdXAuZ29ncm91cCgnbmV3Jyk7CiAgICB9CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5iYXNlKTsKCgovLyDkvb/nlKjliIbnu4Tku6Pmm7/pppbpobUKZmlsdGVyLml0ZW1zLmJhc2UubG9hZHdlaWJvLmxvYWRfd2VpYm9fYnlfZ3JvdXAgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2xvYWR3ZWlibycsCiAgJ3ZlcnNpb24nOiA0NjMsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLmxvYWRfd2VpYm9fYnlfZ3JvdXAnLAogICd0ZXh0JzogJ3t7bG9hZFdlaWJvQnlHcm91cH19JywKICAncmVmJzogewogICAgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tsb2FkV2VpYm9CeUdyb3VwRGVzY319JyB9LAogICAgJ2dyb3VwJzogeyAndHlwZSc6ICdub3VpJywgJ2RlZmF1bHQnOiB7fSB9LAogIH0sCiAgJ2RlYWN0aXZlJzogZnVuY3Rpb24gKCkgewogICAgdGhpcy5wdXRjb25mKGZhbHNlKTsKICAgIHRoaXMucmVmLmdyb3VwLnB1dGNvbmYoe30pOwogIH0sCiAgJ3Nob3duJzogZnVuY3Rpb24gKGRvbSkgewogICAgdmFyIHRoYXQgPSB0aGlzOwogICAgdmFyIGNob3NlID0gZnVuY3Rpb24gKGdyb3VwKSB7IHRoYXQucmVmLmdyb3VwLnB1dGNvbmYoZ3JvdXApOyB9OwogICAgdmFyIGNsZWFyID0gZnVuY3Rpb24gKCkgeyB0aGF0LnJlZi5ncm91cC5wdXRjb25mKHt9KTsgfTsKICAgIHZhciBhc2tHcm91cCA9IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGRpYWxvZyA9IHV0aWwudWkuZGlhbG9nKCd5YXdmLXNlbGVjdC1ncm91cCcsIHRleHQuc2VsZWN0R3JvdXBUaXRsZSwgZnVuY3Rpb24gKGlubmVyKSB7CiAgICAgICAgdmFyIGhlYWRlciA9IHV0aWwuZG9tLmNyZWF0ZShodG1sLnNlbGVjdEdyb3VwSGVhZGVyKTsgaW5uZXIuYXBwZW5kQ2hpbGQoaGVhZGVyKTsKICAgICAgICB2YXIgYm9keSA9IHV0aWwuZG9tLmNyZWF0ZShodG1sLnNlbGVjdEdyb3VwQm9keSk7IGlubmVyLmFwcGVuZENoaWxkKGJvZHkpOwogICAgICAgIHZhciBsb2FkaW5nID0gYm9keS5xdWVyeVNlbGVjdG9yKCcueWF3Zi1zZWxlY3QtZ3JvdXAtbG9hZGluZycpOwogICAgICAgIHZhciB1bCA9IGJvZHkucXVlcnlTZWxlY3RvcigndWwnKTsKICAgICAgICBuZXR3b3JrLmdyb3VwKGZ1bmN0aW9uIChncm91cHMpIHsKICAgICAgICAgIGxvYWRpbmcucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChsb2FkaW5nKTsKICAgICAgICAgIHZhciBjaG9zZWQgPSB0aGF0LnJlZi5ncm91cC5jb25mIHx8IHt9OwogICAgICAgICAgZ3JvdXBzLmZvckVhY2goZnVuY3Rpb24gKGdyb3VwKSB7CiAgICAgICAgICAgIHZhciBsaSA9IHV0aWwuZG9tLmNyZWF0ZSgndWwnLCB1dGlsLnN0ci5maWxsKGh0bWwuc2VsZWN0R3JvdXBJdGVtLCBncm91cCkpLmZpcnN0Q2hpbGQ7CiAgICAgICAgICAgIHZhciBpY29uID0gdXRpbC5kb20uY3JlYXRlKGdyb3VwLmlkID09PSBjaG9zZWQuaWQgPyBodG1sLnNlbGVjdEdyb3VwSXRlbUNob3NlZCA6IGh0bWwuc2VsZWN0R3JvdXBJdGVtRG90KTsKICAgICAgICAgICAgdmFyIGljb19ibG9jayA9IGxpLnF1ZXJ5U2VsZWN0b3IoJy5pY29fYmxvY2snKTsgaWNvX2Jsb2NrLmFwcGVuZENoaWxkKGljb24pOwogICAgICAgICAgICBsaS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBjaG9zZShncm91cCk7IGRpYWxvZy5oaWRlKCk7CiAgICAgICAgICAgICAgdGhhdC5wdXRjb25mKHRydWUpOyBzaG93KCk7CiAgICAgICAgICAgICAgZmlsdGVyLml0ZW1zLmJhc2UubG9hZHdlaWJvLmxvYWRfd2VpYm9fYnlfbXVsdGlfZ3JvdXAuZGVhY3RpdmUoKTsKICAgICAgICAgICAgICBmaWx0ZXIuaXRlbXMuYmFzZS5sb2Fkd2VpYm8ubG9hZF93ZWlib19ieV9uZXdlc3QuZGVhY3RpdmUoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHVsLmFwcGVuZENoaWxkKGxpKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgZGlhbG9nLnNob3coKTsKICAgIH07CiAgICAvLyDlvZPnlKjmiLfmm7TmlLnorr7nva7ml7YKICAgIHZhciBjaGVja2JveCA9IGRvbS5xdWVyeVNlbGVjdG9yKCdbbmFtZT0ieWF3Zi13ZWliby50b29sLmxvYWRfd2VpYm9fYnlfZ3JvdXAiXScpOwogICAgY2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZnVuY3Rpb24gKCkgewogICAgICB2YXIgY2hlY2tlZCA9IGNoZWNrYm94LmNoZWNrZWQ7CiAgICAgIC8vIOmmluWFiOWwhuiuvue9ruaaguaXtuiuvuS4uuWFs+mXre+8jOWmguaenOeUqOaIt+ivleWbvuaJk+W8gOiuvue9ru+8jOW8ueWHuumAieaLqeWIhue7hOeahOWvueivneahhu+8jOiuvue9ruS8muWcqOmAieaLqeWIhue7hOWQjuiHquWKqOaJk+W8gAogICAgICB0aGF0LnB1dGNvbmYoZmFsc2UpOwogICAgICBjbGVhcigpOyBzaG93KCk7CiAgICAgIGlmIChjaGVja2VkKSBhc2tHcm91cCgpOwogICAgfSk7CiAgICAvLyDmmL7npLrpgInmi6nnmoTliIbnu4Tkv6Hmga8KICAgIHZhciBidXR0b25Sb3cgPSB1dGlsLmRvbS5jcmVhdGUoaHRtbC5zZWxlY3RHcm91cEJ1dHRvbik7CiAgICBkb20uYXBwZW5kQ2hpbGQoYnV0dG9uUm93KTsKICAgIHZhciBuYW1lID0gYnV0dG9uUm93LnF1ZXJ5U2VsZWN0b3IoJy55YXdmLXNlbGVjdC1ncm91cC1zaG93Jyk7CiAgICB2YXIgYnV0dG9uID0gYnV0dG9uUm93LnF1ZXJ5U2VsZWN0b3IoJy55YXdmLXNlbGVjdC1ncm91cC1idXR0b24nKTsKICAgIHZhciBzaG93ID0gZnVuY3Rpb24gKCkgewogICAgICB2YXIgYWN0aXZlID0gdGhhdC5jb25mOwogICAgICBidXR0b25Sb3cuc3R5bGUuZGlzcGxheSA9IGFjdGl2ZSA/ICdibG9jaycgOiAnbm9uZSc7CiAgICAgIGlmICghYWN0aXZlKSByZXR1cm47CiAgICAgIHZhciBncm91cCA9IHRoYXQucmVmLmdyb3VwLmNvbmY7CiAgICAgIGlmIChncm91cCAmJiBncm91cC5uYW1lKSBuYW1lLnRleHRDb250ZW50ID0gZ3JvdXAubmFtZTsKICAgIH07CiAgICBzaG93KCk7CiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc2tHcm91cCk7CiAgfSwKICAvLyDomb3nhLblj4LmlbDmmK9naWTvvIzkuI3ov4flhbblrp7kuI3kuIDlrprmmK9naWTvvIzkuZ/lj6/og73mmK8tMe+8iOaLvOWHkemmlumhte+8ieaIluiAhW5ld++8iGlzX25ld++8iQogICdnb2dyb3VwJzogZnVuY3Rpb24gKGdpZCkgewogICAgLy8g5Y+R546w5b2T5YmN5LiN5piv5pCc57Si77yM5bCx6Lez6L2s5Yiw5pCc57Si5Y67CiAgICB2YXIgdXBkYXRlTG9jYXRpb24gPSBmdW5jdGlvbiByZWRpcmVjdEhvbWVXZWlib1VzZUdyb3VwKCkgewogICAgICAvLyDpppbpobXmiY3pnIDopoEgZ2lkIO+8jOWFtuS7luacieS6m+mhtemdouWPr+iDveaYr+WboOS4uuS7jummlumhteeCuei/h+WOu+eahOaXtuWAmeivr+W4puWPguaVsO+8jOmcgOimgeeJueauiuWkhOeQhgogICAgICB2YXIgaG9tZWZlZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndjZfcGxfY29udGVudF9ob21lZmVlZCcpOwogICAgICB2YXIgbm90aG9tZWZlZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndjZfcGxfY29udGVudF9jb21tZW50bGlzdCcpIHx8CiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2lkXj0iUGxfT2ZmaWNpYWxfTXlQcm9maWxlRmVlZF9fIl0nKTsKICAgICAgaWYgKCFob21lZmVlZCAmJiAhbm90aG9tZWZlZWQpIHJldHVybjsKICAgICAgdmFyIGEgPSB1dGlsLmRvbS5jcmVhdGUoJ2EnLCAnJyk7IGEuaHJlZiA9IGxvY2F0aW9uLmhyZWY7CiAgICAgIC8vIOajgOafpeaYr+WQpua3u+WKoOS6hiBnaWQg5YiG57uE5L+h5oGvCiAgICAgIHZhciBxdWVyeSA9IHV0aWwuc3RyLnBhcnNlcXVlcnkobG9jYXRpb24uc2VhcmNoLnNsaWNlKDEpKTsKICAgICAgdmFyIGhhc19naWQgPSAnZ2lkJyBpbiBxdWVyeSAmJiBOdW1iZXIocXVlcnkuZ2lkKTsKICAgICAgdmFyIGlzX25ldyA9ICdpc19uZXcnIGluIHF1ZXJ5ICYmIE51bWJlcihxdWVyeS5pc19uZXcpOwogICAgICB2YXIgaXNfc2VhcmNoID0gJ2lzX3NlYXJjaCcgaW4gcXVlcnkgJiYgTnVtYmVyKHF1ZXJ5LmlzX3NlYXJjaCkgfHwKICAgICAgICAndnBsdXMnIGluIHF1ZXJ5ICYmIE51bWJlcihxdWVyeS52cGx1cyk7CiAgICAgIHZhciBpc19zcGVjaWFsID0gWydpc2ZyaWVuZHMnLCAndnBsdXMnLCAnaXNmcmllbmRzJywgJ2lzZ3JvdXBzZmVlZCcsICd3aGlzcGVyJ10KICAgICAgICAuc29tZShmdW5jdGlvbiAoa2V5KSB7IHJldHVybiBrZXkgaW4gcXVlcnk7IH0pOwogICAgICB2YXIgZ2lkX25lZWRlZCA9IGhvbWVmZWVkICYmICEoK2dpZCA9PT0gLTEgJiYgaXNfc2VhcmNoKSAmJiAhaXNfc3BlY2lhbCAmJiAhaXNfbmV3OwogICAgICBpZiAoIWhhc19naWQgJiYgZ2lkX25lZWRlZCkgewogICAgICAgIGlmIChOdW1iZXIoZ2lkKSkgewogICAgICAgICAgLy8g5aaC5p6c5rKh5pyJ5re75YqgIGdpZCDpgqPkuYjoh6rliqjmt7vkuIoKICAgICAgICAgIHF1ZXJ5LmdpZCA9IGdpZDsKICAgICAgICAgIGEuc2VhcmNoID0gJz8nICsgdXRpbC5zdHIudG9xdWVyeShxdWVyeSk7CiAgICAgICAgICBvYnNlcnZlci5kb20ucmVtb3ZlKHVwZGF0ZUxvY2F0aW9uKTsKICAgICAgICAgIGxvY2F0aW9uLnJlcGxhY2UoYS5ocmVmKTsKICAgICAgICB9IGVsc2UgaWYgKGdpZCA9PT0gJ25ldycpIHsKICAgICAgICAgIGRlbGV0ZSBxdWVyeS5naWQ7CiAgICAgICAgICBxdWVyeS5pc19uZXcgPSAxOwogICAgICAgICAgYS5zZWFyY2ggPSAnPycgKyB1dGlsLnN0ci50b3F1ZXJ5KHF1ZXJ5KTsKICAgICAgICAgIG9ic2VydmVyLmRvbS5yZW1vdmUodXBkYXRlTG9jYXRpb24pOwogICAgICAgICAgbG9jYXRpb24ucmVwbGFjZShhLmhyZWYpOwogICAgICAgIH0KICAgICAgfQogICAgfTsKICAgIG9ic2VydmVyLmRvbS5hZGQodXBkYXRlTG9jYXRpb24pOwogICAgLy8g57uZ5oyH5ZCR6aaW6aG155qE6ZO+5o6l5Yqg5LiKIGdpZCDlj4LmlbDvvIzlhY3ljrvmm7TlpJrnmoTot7PovawKICAgIHZhciB1cGRhdGVIb21lTGlua3NXaXRoR2lkID0gZnVuY3Rpb24gdXBkYXRlSG9tZUxpbmtzV2l0aEdpZCgpIHsKICAgICAgdmFyIGxpbmtzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFsKICAgICAgICAnLmduX2xvZ28gYScsIC8vIOWvvOiIquagj2xvZ28KICAgICAgICAnYVtzdWRhLXVhdHJhY2sqPSJob21lcGFnZSJdJywgLy8g6aaW6aG16ZO+5o6l77yM5qC55o2u6Lef6Liq5qCH6K+G6K+G5Yir77yb6YCC55So5LqO6aG25qCP5ZKM5bem5qCPCiAgICAgICAgJyN2Nl9wbF9jb250ZW50X2hvbWVmZWVkIGFbYWN0aW9uLXR5cGU9InNlYXJjaF90eXBlIl1bYWN0aW9uLWRhdGE9InR5cGU9MCJdJywgLy8g6aaW6aG15raI5oGv5rWB6aG26YOo55qE4oCc5YWo6YOo4oCd6ZO+5o6lCiAgICAgIF0ubWFwKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4ICsgJzpub3QoW2hyZWYqPSJpc19zZWFyY2giXSknOyB9KS5qb2luKCcsJykpKTsKICAgICAgbGlua3MuZm9yRWFjaChmdW5jdGlvbiAobCkgewogICAgICAgIHZhciBzID0gdXRpbC5zdHIucGFyc2VxdWVyeShsLnNlYXJjaC5zbGljZSgxKSk7CiAgICAgICAgaWYgKE51bWJlcihnaWQpKSBzLmdpZCA9IGdpZDsKICAgICAgICBlbHNlIGlmIChnaWQgPT09ICduZXcnKSBzLmlzX25ldyA9IDE7CiAgICAgICAgbC5zZWFyY2ggPSB1dGlsLnN0ci50b3F1ZXJ5KHMpOwogICAgICB9KTsKICAgIH07CiAgICBvYnNlcnZlci5kb20uYWRkKHVwZGF0ZUhvbWVMaW5rc1dpdGhHaWQpOwogIH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIGdyb3VwID0gdGhpcy5yZWYuZ3JvdXAuY29uZjsKICAgIGlmICghZ3JvdXAgfHwgIWdyb3VwLmlkKSB7IHRoaXMucHV0Y29uZihmYWxzZSk7IHJldHVybjsgfQogICAgdGhpcy5nb2dyb3VwKGdyb3VwLmlkKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLmJhc2UpOwoKLy8g5L2/55So5YiG57uE5Luj5pu/6aaW6aG1CmZpbHRlci5pdGVtcy5iYXNlLmxvYWR3ZWliby5sb2FkX3dlaWJvX2J5X211bHRpX2dyb3VwID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdsb2Fkd2VpYm8nLAogICd2ZXJzaW9uJzogNDc5LAogICd0eXBlJzogJ2dyb3VwcycsCiAgJ2NvbXBsZXRlJzogJ2dyb3VwJywKICAna2V5JzogJ3dlaWJvLnRvb2wubG9hZF93ZWlib19ieV9tdWx0aV9ncm91cCcsCiAgJ3RleHQnOiAne3t7bG9hZFdlaWJvQnlNdWx0aUdyb3VwfX19JywKICAncmVmJzogewogICAgJ2NvdW50JzogeyAndHlwZSc6ICdyYW5nZScsICdkZWZhdWx0JzogNTAsICdtaW4nOiAyMCwgJ21heCc6IDIwMCB9LAogICAgJ2VuYWJsZWQnOiB7ICd0eXBlJzogJ2Jvb2xlYW4nLCAnZGVmYXVsdCc6IGZhbHNlLCB9LAogICAgJ2NsZWFyJzogewogICAgICAndHlwZSc6ICdzZWxlY3QnLAogICAgICAnZGVmYXVsdCc6ICdjbGVhcicsCiAgICAgICdzZWxlY3QnOiBbCiAgICAgICAgeyAndmFsdWUnOiAnY2xlYXInLCAndGV4dCc6ICd7e2xvYWRXZWlib0J5TXVsdGlHcm91cENsZWFyfX0nIH0sCiAgICAgICAgeyAndmFsdWUnOiAna2VlcCcsICd0ZXh0JzogJ3t7bG9hZFdlaWJvQnlNdWx0aUdyb3VwS2VlcH19JyB9LAogICAgICBdLAogICAgfSwKICAgICd3aGlzcGVyJzogeyAndHlwZSc6ICdib29sZWFuJywgJ2RlZmF1bHQnOiBmYWxzZSB9LAogICAgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tsb2FkV2VpYm9CeU11bHRpR3JvdXBEZXNjfX0nIH0sCiAgICAnaWknOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tsb2FkV2VpYm9CeU11bHRpR3JvdXBEZXNjMn19JyB9LAogICAgJ2lpaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICd3YXJuJywgJ3RleHQnOiAne3tsb2FkV2VpYm9CeU11bHRpR3JvdXBEZXNjM319JyB9LAogICAgJ2l2JzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7bG9hZFdlaWJvQnlNdWx0aUdyb3VwRGVzYzR9fScgfSwKICB9LAogICdkZWFjdGl2ZSc6IGZ1bmN0aW9uICgpIHsgdGhpcy5yZWYuZW5hYmxlZC5wdXRjb25mKGZhbHNlKTsgfSwKICAnaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciB0aGF0ID0gdGhpczsKICAgIC8vIOWSjOWNleWIhue7hOabv+aNouWKn+iDveS6kuaWpQogICAgdXRpbC5jb25maWcub25wdXQodGhhdC5yZWYuZW5hYmxlZC5rZXksIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICBpZiAoIXZhbHVlKSByZXR1cm47CiAgICAgIGZpbHRlci5pdGVtcy5iYXNlLmxvYWR3ZWliby5sb2FkX3dlaWJvX2J5X2dyb3VwLmRlYWN0aXZlKCk7CiAgICAgIGZpbHRlci5pdGVtcy5iYXNlLmxvYWR3ZWliby5sb2FkX3dlaWJvX2J5X2dyb3VwLmRlYWN0aXZlKCk7CiAgICB9KTsKICAgIGlmICh0aGF0LnJlZi5lbmFibGVkLmNvbmYpIHsKICAgICAgZmlsdGVyLml0ZW1zLmJhc2UubG9hZHdlaWJvLmxvYWRfd2VpYm9fYnlfZ3JvdXAuZ29ncm91cCgnLTEnKTsKICAgIH0KICAgIGlmICghdGhhdC5jb25mIHx8ICF0aGF0LmNvbmYubGVuZ3RoKSByZXR1cm47CiAgICB2YXIgZ3JvdXBzID0gdGhhdC5jb25mLnNsaWNlKDApOwogICAgdmFyIGNvdW50ID0gdGhhdC5yZWYuY291bnQuY29uZjsKICAgIHZhciBjbGVhciA9IHRoYXQucmVmLmNsZWFyLmNvbmYgPT09ICdjbGVhcic7CiAgICB2YXIgd2hpc3BlciA9IHRoYXQucmVmLndoaXNwZXIuY29uZjsKICAgIGlmICh3aGlzcGVyKSBncm91cHMucHVzaCgnd2hpc3BlcicpOwogICAgdmFyIGxvYWRpbmdUaXAgPSBudWxsOwogICAgLy8g5YWI6Lez6L2s5Yiw56m655m96aG16Z2iCiAgICAvLyDoh6rliqjmo4Dmn6XlvZPliY3mmK/kuI3mmK/nibnlrprnmoTln7rnoYDnlYzpnaLvvIzmmK/nmoTor53lvIDlp4vov5nmrrXDl8OX55qE6YC76L6RCiAgICB2YXIgY2hlY2tQYWdlID0gZnVuY3Rpb24gY2hlY2tNdWx0aUdyb3VwUGFnZSgpIHsKICAgICAgdmFyIHF1ZXJ5ID0gdXRpbC5zdHIucGFyc2VxdWVyeShsb2NhdGlvbi5zZWFyY2guc2xpY2UoMSkpOwogICAgICB2YXIgZ2lkID0gJ2dpZCcgaW4gcXVlcnkgJiYgTnVtYmVyKHF1ZXJ5LmdpZCk7CiAgICAgIGlmIChnaWQgIT09IC0xKSByZXR1cm47CiAgICAgIGlmICghQXJyYXkuaXNBcnJheShncm91cHMpKSByZXR1cm47CiAgICAgIGlmICghZ3JvdXBzLmxlbmd0aCkgcmV0dXJuOwogICAgICB2YXIgcGFyYW0gPSBPYmplY3QuYXNzaWduKHt9LCBxdWVyeSk7IGRlbGV0ZSBwYXJhbS5naWQ7CiAgICAgIHdhdGNoRmVlZExpc3QocGFyYW0pOwogICAgICB3YXRjaE1lbWJlcnMoKTsKICAgIH07CiAgICAvLyDmo4Dmn6XlpoLmnpzmmK/opoHnlJ/miJDnmoTpobXpnaLvvIzpgqPkuYjlvIDlp4vnlJ/miJDlhoXlrrkKICAgIHZhciB3YXRjaEZlZWRMaXN0ID0gZnVuY3Rpb24gKHBhcmFtKSB7CiAgICAgIHZhciBwbGFjZWhvbGRlcjsKICAgICAgZG8gewogICAgICAgIHBsYWNlaG9sZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLldCX2ZlZWQgPiAuV0JfcmVzdWx0X251bGwnKTsKICAgICAgICBpZiAocGxhY2Vob2xkZXIpIGJyZWFrOwogICAgICAgIHZhciBpc19zZWFyY2ggPSAnaXNfc2VhcmNoJyBpbiBwYXJhbTsKICAgICAgICBpZiAoaXNfc2VhcmNoKSB7CiAgICAgICAgICB2YXIgYSA9IHV0aWwuZG9tLmNyZWF0ZSgnYScsICcnKTsgYS5ocmVmID0gbG9jYXRpb24uaHJlZjsKICAgICAgICAgIHBhcmFtLmdpZCA9IDA7IGEuc2VhcmNoID0gJz8nICsgdXRpbC5zdHIudG9xdWVyeShwYXJhbSk7CiAgICAgICAgICBsb2NhdGlvbi5yZXBsYWNlKGEuaHJlZik7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgICAgfSB3aGlsZSAoZmFsc2UpOwoKICAgICAgLy8gMjAxOCDlubQgNyDmnIjlupXvvIzlvq7ljZrkuLrngrnotZ7lop7liqDooajmg4XpgInpobnvvIzlubbkuLrmraTmt7vliqDkuobkuIDkuKrmlrDmiYvlr7zlvJUKICAgICAgLy8g5paw5omL5a+85byV5Lya5byV55So6aG16Z2i5LiK55qE54K56LWe5oyJ6ZKuIFthY3Rpb24tdHlwZT0iZmxfbGlrZSJd77yM5b2T5om+5LiN5Yiw54K56LWe5oyJ6ZKu5pe25Lya5byC5bi4CiAgICAgIC8vIOW8guW4uOWvvOiHtOi9rOWPkeetieWKn+iDveayoeacieato+W4uOWIneWni+WMlgogICAgICAvLyDov5nph4zloZ7kuIDkuKrlgYfnmoTngrnotZ7mjInpkq7ov5vljrvvvIzph43mlrDotbDliJ3lp4vljJbmtYHnqIvku6XluIzmnJvop6PlhrPpl67popgKICAgICAgdmFyIHY2X3BsX2NvbnRlbnRfaG9tZWZlZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndjZfcGxfY29udGVudF9ob21lZmVlZCcpOwogICAgICB2YXIgbGlrZSA9IHY2X3BsX2NvbnRlbnRfaG9tZWZlZWQucXVlcnlTZWxlY3RvcignW2FjdGlvbi10eXBlPSJmbF9saWtlIl0nKTsKICAgICAgaWYgKCFsaWtlKSB7CiAgICAgICAgdjZfcGxfY29udGVudF9ob21lZmVlZC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgIHV0aWwuZnVuYy5wYWdlKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciB2Nl9wbF9jb250ZW50X2hvbWVmZWVkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Y2X3BsX2NvbnRlbnRfaG9tZWZlZWQnKTsKICAgICAgICAgIHZhciBsaWtlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOyBsaWtlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgICAgICBsaWtlLmlubmVySFRNTCA9ICc8dWw+PGxpPjxzcGFuIGFjdGlvbi10eXBlPSJmbF9saWtlIj48L3NwYW4+PC9saT48L3VsPic7CiAgICAgICAgICB2Nl9wbF9jb250ZW50X2hvbWVmZWVkLnF1ZXJ5U2VsZWN0b3IoJ1tub2RlLXR5cGU9ImZlZWRfbGlzdCJdJykuYXBwZW5kQ2hpbGQobGlrZSk7CiAgICAgICAgICB2YXIgaHRtbCA9IHY2X3BsX2NvbnRlbnRfaG9tZWZlZWQuaW5uZXJIVE1MOyB2Nl9wbF9jb250ZW50X2hvbWVmZWVkLmlubmVySFRNTCA9ICcnOwogICAgICAgICAgRk0udmlldyh7CiAgICAgICAgICAgIG5zOiAncGwuY29udGVudC5ob21lZmVlZC5pbmRleCcsCiAgICAgICAgICAgIGRvbWlkOiAndjZfcGxfY29udGVudF9ob21lZmVlZCcsCiAgICAgICAgICAgIGpzOiBbJ2hvbWUvanMvcGwvY29udGVudC9ob21lZmVlZC9pbmRleC5qcz92ZXJzaW9uPScgKyAkQ09ORklHLnZlcnNpb25dLAogICAgICAgICAgICBodG1sOiBodG1sLAogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHY2X3BsX2NvbnRlbnRfaG9tZWZlZWQuc3R5bGUuZGlzcGxheSA9ICcnOwoKICAgICAgdmFyIGZlZWRsaXN0ID0gcGxhY2Vob2xkZXIucGFyZW50Tm9kZTsKICAgICAgZmVlZGxpc3QucmVtb3ZlQ2hpbGQocGxhY2Vob2xkZXIpOwogICAgICBmZWVkbGlzdC5jbGFzc0xpc3QuYWRkKCdXQl9mZWVkX3YzJyk7CiAgICAgIGZlZWRsaXN0LmNsYXNzTGlzdC5hZGQoJ1dCX2ZlZWRfdjQnKTsKICAgICAgbG9hZGluZ1RpcCA9IHV0aWwuZG9tLmNyZWF0ZSh1dGlsLnN0ci5maWxsKGh0bWwubG9hZFdlaWJvQnlNdWx0aUdyb3VwTG9hZGluZykpOwogICAgICBmZWVkbGlzdC5hcHBlbmRDaGlsZChsb2FkaW5nVGlwKTsKCiAgICAgIHNob3dGZWVkcyhmZWVkbGlzdCwgZ3JvdXBzLCBwYXJhbSk7CiAgICB9OwogICAgLy8g5Y675o6J5L6n5qCP4oCc5pyq5YiG57uE4oCd6YKj5Liq6ay8CiAgICB2YXIgd2F0Y2hNZW1iZXJzID0gZnVuY3Rpb24gKCkgewogICAgICB2YXIgbWVtYmVycyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2Nl9wbF9yaWdodG1vZF9ncm91cHMnKTsKICAgICAgaWYgKG1lbWJlcnMpIG1lbWJlcnMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChtZW1iZXJzKTsKICAgIH07CiAgICBvYnNlcnZlci5kb20uYWRkKGNoZWNrUGFnZSk7CiAgICAvLyDDl8OX55qE6YC76L6RCiAgICB2YXIgc2hvd0ZlZWRzID0gZnVuY3Rpb24gKGZlZWRsaXN0LCBncm91cHMsIHBhcmFtKSB7CiAgICAgIHZhciBsb2FkaW5nID0gZ3JvdXBzLmxlbmd0aDsKICAgICAgdXRpbC5kZWJ1ZygnaG9tZSBmZWVkIGdlbmVyYXRlOiBzdGFydCcpOwogICAgICAvLyDlrozmiJDmn5DkuKrliIbnu4TnmoTliJ3mrKHliqDovb3ml7bnmoTpgLvovpEKICAgICAgdmFyIGluaXRpYWxHcm91cCA9IGZ1bmN0aW9uIChpbmRleCwgZ3JvdXApIHsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGZlZWRzLCBtb3JlKSB7CiAgICAgICAgICB2YXIgaW5mbyA9IGZlZWRCeUdyb3VwW2luZGV4XSA9IHsKICAgICAgICAgICAgZ2lkOiBncm91cCwKICAgICAgICAgICAgZmVlZHM6IGZlZWRzLm1hcChmdW5jdGlvbiAoZmVlZCkgewogICAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKGZlZWQsIHsgZXJyb3I6IGZhbHNlIH0pOwogICAgICAgICAgICB9KSwKICAgICAgICAgICAgbW9yZTogZmVlZHMubGVuZ3RoID8gbW9yZSA6IG51bGwsCiAgICAgICAgICAgIGVycm9yczogTWF0aC5jZWlsKGZlZWRzLmxlbmd0aCAvIDIpLCAvLyDlr7nliIbnu4TlhoXog73lrrnlv43nmoTmnIDlpKfkubHluo/lvq7ljZrmlbDph48KICAgICAgICAgICAgZW1wdHk6IGZlZWRzLmxlbmd0aCA9PT0gMCwKICAgICAgICAgIH07CiAgICAgICAgICBpZiAoaW5mby5lbXB0eSkgcmVuZGVyKG51bGwsICdkb25lJywgaW5mbyk7CiAgICAgICAgICBjaGVja09yZGVyKGluZm8pOwogICAgICAgICAgdXRpbC5kZWJ1ZygnaG9tZSBmZWVkIGdlbmVyYXRlOiBnb3QgZGF0YSBmb3IgJW8gJW8nLCBncm91cCwgaW5mbyk7CiAgICAgICAgICBpZiAoIS0tbG9hZGluZykgbmV4dEZlZWQoY291bnQpOwogICAgICAgIH07CiAgICAgIH07CiAgICAgIC8vIOWIneWni+WMluaVsOaNruiOt+WPlgogICAgICB2YXIgZmVlZEJ5R3JvdXAgPSBBcnJheShncm91cHMubGVuZ3RoKS5maWxsKG51bGwpOwogICAgICB1dGlsLmRlYnVnKCdob21lIGZlZWQgZ2VuZXJhdGU6IGdyb3VwczogJW8nLCBncm91cHMpOwogICAgICBncm91cHMuZm9yRWFjaChmdW5jdGlvbiAoZ3JvdXAsIGluZGV4KSB7CiAgICAgICAgdXRpbC5kZWJ1ZygnaG9tZSBmZWVkIGdlbmVyYXRlOiBnZXQgZGF0YSBmb3IgJW8nLCBncm91cCk7CiAgICAgICAgaWYgKGdyb3VwID09PSAnd2hpc3BlcicpIG5ldHdvcmsuZmVlZC53aGlzcGVyKHBhcmFtLCBpbml0aWFsR3JvdXAoaW5kZXgsIGdyb3VwKSk7CiAgICAgICAgZWxzZSBuZXR3b3JrLmZlZWQuZ3JvdXAoZ3JvdXAsIHBhcmFtLCBpbml0aWFsR3JvdXAoaW5kZXgsIGdyb3VwKSk7CiAgICAgIH0pOwogICAgICAvLyDmo4Dmn6Xmi7/liLDnmoTmlbDmja7mmK/lkKbmmK/mraPluLjpobrluo/nmoQKICAgICAgLy8g5aaC5p6c6aG65bqP5LiN5q2j56Gu77yM5bCx6K+V552A5aSa5ou/5LiA5Lqb5pWw5o2uCiAgICAgIHZhciBjaGVja09yZGVyID0gZnVuY3Rpb24gKGluZm8pIHsKICAgICAgICBpbmZvLmZlZWRzLmZvckVhY2goZnVuY3Rpb24gKGZlZWQsIGluZGV4KSB7CiAgICAgICAgICBpZiAoZmVlZC5lcnJvcikgcmV0dXJuOwogICAgICAgICAgdmFyIG5ld2VyID0gaW5mby5mZWVkcy5zbGljZShpbmRleCArIDEpLmZpbHRlcihmdW5jdGlvbiAobmV4dCkgewogICAgICAgICAgICByZXR1cm4gK2ZlZWQuZGF0ZSA8ICtuZXh0LmRhdGU7CiAgICAgICAgICB9KTsKICAgICAgICAgIGlmICghbmV3ZXIubGVuZ3RoKSByZXR1cm47CiAgICAgICAgICB1dGlsLmRlYnVnKCdob21lIGZlZWQgZ2VuZXJhdGU6IGZlZWRzIGJ5IGdyb3VwIHdyb25nIG9yZGVyICVvIFsgJW8gXScsIGluZm8sIGZlZWQpOwogICAgICAgICAgZmVlZC5lcnJvciA9IHRydWU7CiAgICAgICAgICAvLyDlpoLmnpzlj5HnjrDkuIDkuKTmrKHov57nu63lsLHosaHlvoHmgKflnLDliqDlh6DkuKrlrrnplJnvvIzlpoLmnpzlj5HnjrDlpJrkuobnm7TmjqXor7vliLDnqbrkuLrmraIKICAgICAgICAgIGluZm8uZXJyb3JzID0gTWF0aC5taW4oTWF0aC5tYXgoaW5mby5lcnJvcnMgKyA1LCBNYXRoLmNlaWwoaW5mby5lcnJvcnMgKiAxLjEpKSwgMTAwMCk7CiAgICAgICAgICB1dGlsLmRlYnVnKCdob21lIGZlZWQgZ2VuZXJhdGU6IGluY3JlYXNlIGJ1ZmZlciB0byAlbyBmb3IgJW8nLCBpbmZvLmVycm9ycywgaW5mbyk7CiAgICAgICAgfSk7CiAgICAgIH07CiAgICAgIC8vIOaKiuavj+S4quWIhue7hOeahOaVsOaNrumDveihpeWFheWIsOi2s+Wkn+WkmueahOawtOW5swogICAgICB2YXIgbW9yZUZlZWQgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHsKICAgICAgICBmZWVkQnlHcm91cC5mb3JFYWNoKGZ1bmN0aW9uIChpbmZvLCBpbmRleCkgewogICAgICAgICAgaWYgKGluZm8uZmVlZHMubGVuZ3RoID4gaW5mby5lcnJvcnMpIHJldHVybjsgLy8g5pWw5o2u6L+Y5q+U6L6D5aSa77yM5bCx5LiN6KGl5YWF5LqGCiAgICAgICAgICBpZiAoIWluZm8ubW9yZSkgcmV0dXJuOyAvLyDkuI3kvJrlho3mnInmm7TlpJrnmoTmlbDmja7kuoYKICAgICAgICAgIHV0aWwuZGVidWcoJ2hvbWUgZmVlZCBnZW5lcmF0ZTogZ2V0IG1vcmUgZGF0YSBmb3IgJW8nLCBpbmZvLmdpZCk7CiAgICAgICAgICBsb2FkaW5nKys7CiAgICAgICAgICB1dGlsLmZ1bmMuY2FsbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGluZm8ubW9yZShmdW5jdGlvbiAoZmVlZHMsIG1vcmUpIHsKICAgICAgICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShpbmZvLmZlZWRzLCBmZWVkcyk7CiAgICAgICAgICAgICAgY2hlY2tPcmRlcihpbmZvKTsKICAgICAgICAgICAgICBpbmZvLm1vcmUgPSBmZWVkcy5sZW5ndGggPyBtb3JlIDogbnVsbDsKICAgICAgICAgICAgICB1dGlsLmRlYnVnKCdob21lIGZlZWQgZ2VuZXJhdGU6IGdvdCBtb3JlIGRhdGEgZm9yICVvICVvJywgaW5mby5naWQsIGluZm8pOwogICAgICAgICAgICAgIGlmICgtLWxvYWRpbmcgPT09IDApIHsKICAgICAgICAgICAgICAgIHV0aWwuZGVidWcoJ2hvbWUgZmVlZCBnZW5lcmF0ZTogY29sbGVjdGVkIG1vcmUgZGF0YScpOwogICAgICAgICAgICAgICAgY2FsbGJhY2soKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgICAgaWYgKGxvYWRpbmcgPT09IDApIHsKICAgICAgICAgIHV0aWwuZGVidWcoJ2hvbWUgZmVlZCBnZW5lcmF0ZTogbm8gbmVlZCBnZXQgbW9yZSBkYXRhJyk7CiAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgIH0KICAgICAgfTsKICAgICAgLy8g5LuO5omA5pyJ546w5pyJ55qE5pWw5o2u6YeM6Z2i77yM5om+5LiA5p2h5pyA5paw55qE5raI5oGv5bm25pi+56S6CiAgICAgIHZhciBjaG9zZUZlZWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8g5om+5Yiw5pyA5paw55qE5b6u5Y2aCiAgICAgICAgdmFyIG1heCA9IC1JbmZpbml0eSwgY2hvc2VuID0gbnVsbDsKICAgICAgICB1dGlsLmRlYnVnKCdob21lIGZlZWQgZ2VuZXJhdGU6IGNob3NlIGZlZWQgZnJvbSAlbycsIGZlZWRCeUdyb3VwKTsKICAgICAgICBmZWVkQnlHcm91cC5mb3JFYWNoKGZ1bmN0aW9uIChpbmZvKSB7CiAgICAgICAgICBpbmZvLmZlZWRzLmZvckVhY2goZnVuY3Rpb24gKGZlZWQpIHsKICAgICAgICAgICAgaWYgKCtmZWVkLmRhdGUgPCBtYXgpIHJldHVybjsKICAgICAgICAgICAgbWF4ID0gK2ZlZWQuZGF0ZTsKICAgICAgICAgICAgY2hvc2VuID0gZmVlZDsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIC8vIOWmguaenOayoeaJvuWIsO+8jOmCo+S5iOebtOaOpeWujOaIkAogICAgICAgIGlmIChtYXggPT09IC1JbmZpbml0eSkgewogICAgICAgICAgdXRpbC5kZWJ1ZygnaG9tZSBmZWVkIGdlbmVyYXRlOiBubyBtb3JlIGZlZWQnKTsKICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgIH0KICAgICAgICAvLyDpppblhYjku47njrDlnKjnmoTlgJnpgInpobnph4zpnaLmiormib7liLDnmoTlvq7ljZrliKDmjokKICAgICAgICB1dGlsLmRlYnVnKCdob21lIGZlZWQgZ2VuZXJhdGU6IGNob3NlbiBmZWVkJywgY2hvc2VuKTsKICAgICAgICB2YXIgZW1wdHlHcm91cHMgPSBbXTsKICAgICAgICBmZWVkQnlHcm91cC5mb3JFYWNoKGZ1bmN0aW9uIChpbmZvKSB7CiAgICAgICAgICBpZiAoaW5mby5lbXB0eSkgcmV0dXJuOwogICAgICAgICAgaW5mby5mZWVkcyA9IGluZm8uZmVlZHMuZmlsdGVyKGZ1bmN0aW9uIChmZWVkKSB7CiAgICAgICAgICAgIHJldHVybiBmZWVkLm1pZCAhPT0gY2hvc2VuLm1pZDsKICAgICAgICAgIH0pOwogICAgICAgICAgaWYgKGluZm8uZmVlZHMubGVuZ3RoKSByZXR1cm47CiAgICAgICAgICBpbmZvLmVtcHR5ID0gdHJ1ZTsKICAgICAgICAgIGVtcHR5R3JvdXBzLnB1c2goaW5mbyk7CiAgICAgICAgfSk7CiAgICAgICAgcmVuZGVyKGNob3Nlbi5kb20sICdmZWVkJyk7CiAgICAgICAgZW1wdHlHcm91cHMuZm9yRWFjaChmdW5jdGlvbiAoaW5mbykgewogICAgICAgICAgcmVuZGVyKG51bGwsICdkb25lJywgaW5mbyk7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGNob3NlbjsKICAgICAgfTsKICAgICAgLy8g6YCQ5p2h6I635Y+WCiAgICAgIHZhciBuZXh0RmVlZCA9IGZ1bmN0aW9uIG5leHRGZWVkKHJlbWFpbmQpIHsKICAgICAgICB1dGlsLmRlYnVnKCdob21lIGZlZWQgZ2VuZXJhdGU6IGdldCBuZXh0IGZlZWQgLi4uICVvIHJlbWFpbmluZycsIHJlbWFpbmQpOwogICAgICAgIGlmIChyZW1haW5kID09PSAwKSB7CiAgICAgICAgICByZW5kZXIobnVsbCwgJ21vcmUnKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgbW9yZUZlZWQoZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIGZlZWQgPSBjaG9zZUZlZWQoKTsKICAgICAgICAgIC8vIOWKoOS4gOS4quWwj+W7tui/n++8jOS4jeeEtuS8muWNoeW+l+imgeatuwogICAgICAgICAgaWYgKGZlZWQpIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBuZXh0RmVlZChyZW1haW5kIC0gMSk7CiAgICAgICAgICB9LCAxMDApOyBlbHNlIHJlbmRlcihudWxsLCAnZG9uZScpOwogICAgICAgIH0pOwogICAgICB9OwogICAgICB2YXIgcmVuZGVyID0gZnVuY3Rpb24gKGVsZW1lbnQsIHR5cGUsIGRldGFpbCkgewogICAgICAgIGlmICh0eXBlID09PSAnZmVlZCcpIHsKICAgICAgICAgIC8vIOacgOWQjuaKiuaJvuWIsOeahOW+ruWNmua3u+WKoOWIsOe9kemhteS4rQogICAgICAgICAgZmVlZGxpc3QuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGxvYWRpbmdUaXApOwogICAgICAgICAgdXRpbC5kZWJ1ZygnaG9tZSBmZWVkIGdlbmVyYXRlOiBpbnN0ZXJlZCBmZWVkJywgZWxlbWVudCk7CiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnbW9yZScpIChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAvLyDlvZPovr7liLDmjIflrprmnaHmlbDml7bvvIzmmoLlgZzliqDovb3vvIzlubbmmL7npLrliqDovb3mm7TlpJrnmoTmjInpkq4KICAgICAgICAgIHZhciBtb3JlID0gdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC5sb2FkV2VpYm9CeU11bHRpR3JvdXBNb3JlKSk7CiAgICAgICAgICB2YXIgY2xpY2tlZCA9IGZhbHNlOwogICAgICAgICAgZmVlZGxpc3QuaW5zZXJ0QmVmb3JlKG1vcmUsIGxvYWRpbmdUaXApOwogICAgICAgICAgbG9hZGluZ1RpcC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgICAgbW9yZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaWYgKGNsaWNrZWQpIHJldHVybjsgY2xpY2tlZCA9IHRydWU7CiAgICAgICAgICAgIG1vcmUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChtb3JlKTsKICAgICAgICAgICAgbG9hZGluZ1RpcC5zdHlsZS5kaXNwbGF5ID0gJyc7CiAgICAgICAgICAgIGlmIChjbGVhcikgewogICAgICAgICAgICAgIGZlZWRsaXN0LmlubmVySFRNTCA9ICcnOwogICAgICAgICAgICAgIGZlZWRsaXN0LmFwcGVuZENoaWxkKGxvYWRpbmdUaXApOwogICAgICAgICAgICAgIHdpbmRvdy5zY3JvbGxUbyhudWxsLCAwKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBuZXh0RmVlZChjb3VudCk7CiAgICAgICAgICB9KTsKICAgICAgICB9KCkpOyBlbHNlIGlmICh0eXBlID09PSAnZG9uZScpIHsKICAgICAgICAgIC8vIOW9k+afkOS4quWIhue7hOaIluWFqOmDqOWKoOi9veWujOaIkOaIluaJgOacieW+ruWNmuWKoOi9veWujOaIkOaXtu+8jOe7meWHuuaPkOekuuS/oeaBrwogICAgICAgICAgdmFyIGdpZCA9IGRldGFpbCAmJiBkZXRhaWwuZ2lkOwogICAgICAgICAgdmFyIGxpbmUgPSBnaWQgPyBodG1sLmxvYWRXZWlib0J5TXVsdGlHcm91cERvbmVHcm91cCA6IGh0bWwubG9hZFdlaWJvQnlNdWx0aUdyb3VwRG9uZUFsbDsKICAgICAgICAgIHZhciBkb25lID0gdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwobGluZSwgeyBpZDogZ2lkIH0pKTsKICAgICAgICAgIGlmIChsb2FkaW5nVGlwKSBmZWVkbGlzdC5pbnNlcnRCZWZvcmUoZG9uZSwgbG9hZGluZ1RpcCk7CiAgICAgICAgICBpZiAoZ2lkID09PSAnd2hpc3BlcicpIHsKICAgICAgICAgICAgdmFyIHNwYW4gPSBkb25lLnF1ZXJ5U2VsZWN0b3IoJ3NwYW5bZ2lkXScpOwogICAgICAgICAgICBzcGFuLnRleHRDb250ZW50ID0gdXRpbC5zdHIuZmlsbCgne3tsb2FkV2VpYm9CeU11bHRpR3JvdXBXaGlzcGVyR3JvdXB9fScpOwogICAgICAgICAgICB2YXIgaWNvbiA9IHV0aWwuZG9tLmNyZWF0ZShodG1sLmxvYWRXZWlib0J5TXVsdGlHcm91cFdoaXNwZXJJY29uKTsKICAgICAgICAgICAgc3Bhbi5pbnNlcnRCZWZvcmUoaWNvbiwgc3Bhbi5maXJzdENoaWxkKTsKICAgICAgICAgIH0gZWxzZSBpZiAoZ2lkKSBuZXR3b3JrLmdyb3VwKGZ1bmN0aW9uIChncm91cHMpIHsKICAgICAgICAgICAgdmFyIGdyb3VwID0gZ3JvdXBzLmZpbHRlcihmdW5jdGlvbiAoZ3JvdXApIHsKICAgICAgICAgICAgICByZXR1cm4gZ3JvdXAuaWQgPT09IGdpZDsKICAgICAgICAgICAgfSlbMF07CiAgICAgICAgICAgIGlmICghZ3JvdXAgfHwgIWdyb3VwLm5hbWUpIHsKICAgICAgICAgICAgICBmZWVkbGlzdC5yZW1vdmVDaGlsZChkb25lKTsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIHNwYW4gPSBkb25lLnF1ZXJ5U2VsZWN0b3IoJ3NwYW5bZ2lkXScpOwogICAgICAgICAgICBzcGFuLnRleHRDb250ZW50ID0gZ3JvdXAubmFtZTsKICAgICAgICAgIH0pOyBlbHNlIHsKICAgICAgICAgICAgZmVlZGxpc3QucmVtb3ZlQ2hpbGQobG9hZGluZ1RpcCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgfTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLmJhc2UpOwoKLy8g6ISa5pys5bel5YW3CmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ2Jhc2UnLCAnc2NyaXB0dG9vbCcsICd7e3NjcmlwdFRvb2xzVGl0bGV9fScpOwoKLy8g5b+r6YCf5Yib5bu66L+H5ruk5ZmoCmZpbHRlci5pdGVtcy5iYXNlLnNjcmlwdHRvb2wudXNlX2Zhc3RfY3JlYXRvciA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc2NyaXB0dG9vbCcsCiAgJ3ZlcnNpb24nOiAzNiwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wudXNlX2Zhc3RfY3JlYXRvcicsCiAgJ2RlZmF1bHQnOiB0cnVlLAogICd0ZXh0JzogJ3t7dXNlRmFzdENyZWF0b3J9fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3t1c2VGYXN0Q3JlYXRvckRlc2N9fScgfSB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIGZpbHRlci5mYXN0LmFjdGl2ZSgpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuYmFzZSk7CgppZiAoJ2NvbnRleHRNZW51JyBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSkgZmlsdGVyLml0ZW1zLmJhc2Uuc2NyaXB0dG9vbC51c2VfY29udGV4dF9tZW51X2NyZWF0b3IgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ3NjcmlwdHRvb2wnLAogICd2ZXJzaW9uJzogOTksCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLnVzZV9jb250ZXh0X21lbnVfY3JlYXRvcicsCiAgJ2RlZmF1bHQnOiB0cnVlLAogICd0ZXh0JzogJ3t7dXNlQ29udGV4dE1lbnVDcmVhdG9yfX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7dXNlQ29udGV4dE1lbnVDcmVhdG9yRGVzY319JyB9IH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgZmlsdGVyLmZhc3QucmlnaHQuYWN0aXZlKCk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5iYXNlKTsKCi8vIOS/ruaUueinhOWImeWQjumHjeaWsOi/h+a7pOinhOWImQpmaWx0ZXIuaXRlbXMuYmFzZS5zY3JpcHR0b29sLnJlZmlsdGVyID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzY3JpcHR0b29sJywKICAndmVyc2lvbic6IDIxNiwKICAndHlwZSc6ICdib29sZWFuJywKICAnZGVmYXVsdCc6IHRydWUsCiAgJ2tleSc6ICd3ZWliby50b29sLnJlZmlsdGVyJywKICAndGV4dCc6ICd7e3JlZmlsdGVyQWZ0ZXJSdWxlRWRpdGVkfX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7cmVmaWx0ZXJBZnRlclJ1bGVFZGl0ZWREZXNjfX0nIH0gfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB1dGlsLmZ1bmMuY2FsbChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBydWxlcyA9IGZpbHRlci5jb2xsZWN0aW9uLml0ZW0ubGlzdChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiAhIShpdGVtLmtleSAmJiBpdGVtLnJ1bGUpOwogICAgICB9KS5pdGVtczsKICAgICAgcnVsZXMuZm9yRWFjaChmdW5jdGlvbiAocnVsZSkgewogICAgICAgIHV0aWwuY29uZmlnLm9ucHV0KHJ1bGUua2V5LCBvYnNlcnZlci53ZWliby5yZWZpbHRlcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5iYXNlKTsKCi8vIOW/q+mAn+makOiXj+aMiemSrgpmaWx0ZXIuaXRlbXMuYmFzZS5zY3JpcHR0b29sLmZhc3RfYmxvY2tfYnV0dG9uID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzY3JpcHR0b29sJywKICAndmVyc2lvbic6IDQ0NiwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuZmFzdF9ibG9ja19idXR0b24nLAogICd0ZXh0JzogJ3t7ZmFzdEJsb2NrQnV0dG9ufX0nLAogICdwcmlvcml0eSc6IDFlNiwKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2Zhc3RCbG9ja0J1dHRvbkRlc2N9fScgfSB9LAogICdnZXRtaWRzJzogZnVuY3Rpb24gKCkgeyByZXR1cm4gSlNPTi5wYXJzZShHTV9nZXRWYWx1ZSh0aGlzLm1pZGtleSwgJ1tdJykpOyB9LAogICdwdXRtaWRzJzogZnVuY3Rpb24gKHZhbHVlKSB7IEdNX3NldFZhbHVlKHRoaXMubWlka2V5LCBKU09OLnN0cmluZ2lmeSh2YWx1ZSkpOyB9LAogICdydWxlJzogZnVuY3Rpb24gaGlkZGVuQnlNaWQoZmVlZCkgewogICAgaWYgKCF3ZWliby5mZWVkLmF1dGhvci5pZChmZWVkKSkgcmV0dXJuIG51bGw7CiAgICB2YXIgbWlkcyA9IHRoaXMuZ2V0bWlkcygpLCBtaWQgPSBmZWVkLmdldEF0dHJpYnV0ZSgnbWlkJyk7CiAgICBpZiAobWlkcy5pbmRleE9mKG1pZCkgIT09IC0xKSByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAogICdpbml0JzogZnVuY3Rpb24gKCkgeyB0aGlzLm1pZGtleSA9ICd1c2VyJyArIHV0aWwuaW5mby51aWQgKyAnaGlkZGVuJzsgfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICBvYnNlcnZlci53ZWliby5hZnRlcihmdW5jdGlvbiAoZmVlZCkgewogICAgICB2YXIgYXV0aG9ySWQgPSB3ZWliby5mZWVkLmF1dGhvci5pZChmZWVkKTsKICAgICAgaWYgKCFhdXRob3JJZCB8fCBhdXRob3JJZCA9PT0gdXRpbC5pbmZvLnVpZCkgcmV0dXJuOyAvLyDoh6rlt7HnmoTlvq7ljZrvvIzkuI3mmL7npLrmjInpkq4KICAgICAgaWYgKHV0aWwuZG9tLm1hdGNoZXMoZmVlZCwgJyN2Nl9wbF9jb250ZW50X2F0bWV3ZWlibyAqJykpIHJldHVybjsgLy8g5LiN5Zyo5o+Q5Yiw6aG16Z2i5pi+56S677yM6YG/5YWN5LiO4oCc5bGP6JS9YXTigJ3lj5HnlJ/mrafkuYkKICAgICAgaWYgKGZlZWQuaGFzQXR0cmlidXRlKCd5YXdmLWhpZGVfYm94JykpIHJldHVybjsgLy8g5bey57uP5pyJ5LqG5oyJ6ZKu77yM5LiN5pi+56S65oyJ6ZKuCiAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbaWRePSJQbF9PZmZpY2lhbF9XZWlib0RldGFpbF9fIl0nKSkgcmV0dXJuOyAvLyDljZXmnaHlvq7ljZrpobXpnaLvvIzkuI3mmL7npLrmjInpkq4KICAgICAgaWYgKCFmZWVkLmhhc0F0dHJpYnV0ZSgnbWlkJykpIHJldHVybjsgLy8g5LiN5piv5b6u5Y2a77yM5LiN5pi+56S65oyJ6ZKuCiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLWhpZGVfYm94JywgJ3lhd2YtaGlkZV9ib3gnKTsKICAgICAgdmFyIG1pZCA9IGZlZWQuZ2V0QXR0cmlidXRlKCdtaWQnKTsKICAgICAgdmFyIHNjcmVlbl9ib3ggPSBmZWVkLnF1ZXJ5U2VsZWN0b3IoJy5XQl9zY3JlZW4gLnNjcmVlbl9ib3gnKTsgaWYgKCFzY3JlZW5fYm94KSByZXR1cm47CiAgICAgIHZhciBoaWRlX2JveCA9IHV0aWwuZG9tLmNyZWF0ZSh1dGlsLnN0ci5maWxsKGh0bWwuaGlkZUJveFNpbXBsZSwgeyAnbWlkJzogbWlkIH0pKTsKICAgICAgc2NyZWVuX2JveC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShoaWRlX2JveCwgc2NyZWVuX2JveCk7CiAgICAgIGhpZGVfYm94LnF1ZXJ5U2VsZWN0b3IoJ2EnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyDpppblhYjpmpDol4/mjonov5nkuKrlvq7ljZrvvIzlubblnKjmnKzlnLDkv53lrZjvvIjlm6DkuLrlvq7ljZrmj5DkvpvnmoTlsY/olL3lip/og73lj6/og73kuI3lj6/pnaDvvIkKICAgICAgICBmZWVkLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAndHJhbnNpdGlvbjogbWF4LWhlaWdodCBvcGFjaXR5IDAuMnM7IG1heC1oZWlnaHQ6ICcgKyBmZWVkLmNsaWVudEhlaWdodCArICdweDsgb3ZlcmZsb3c6IGhpZGRlbjsgcG9zaXRpb246IHJlbGF0aXZlOycpOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBmZWVkLnN0eWxlLm1heEhlaWdodCA9ICcyMHB4JzsgfSwgMCk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7IGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLWRpc3BsYXknLCAnZGlzcGxheS1oaWRkZW4nKTsgZmlsdGVyLmZpeC5oaWRkZW4oZmVlZCk7IH0sIDEwMCk7CiAgICAgICAgdmFyIG1pZHMgPSB0aGF0LmdldG1pZHMoKSwgaSA9IG1pZHMuaW5kZXhPZihtaWQpOwogICAgICAgIGlmIChpID09PSAtMSkgbWlkcy51bnNoaWZ0KG1pZCk7IGVsc2UgbWlkcyA9IG1pZHMuc3BsaWNlKDAsIDAsIG1pZHMuc3BsaWNlKGksIDEpWzBdKTsKICAgICAgICBpZiAobWlkcy5sZW5ndGggPiAxMDAwKSBtaWRzLmxlbmd0aCA9IDEwMDA7CiAgICAgICAgdGhhdC5wdXRtaWRzKG1pZHMpOwogICAgICAgIC8vIOaOpeS4i+adpeWGjeWQkeW+ruWNmuWxj+iUveWugwogICAgICAgIG5ldHdvcmsud2VpYm8uYmxvY2sobWlkKTsKICAgICAgfSk7CiAgICB9KTsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgLldCX3NjcmVlbiAueWF3Zi1oaWRlX2JveCB7IG1hcmdpbjogLTEwcHggMCAwIC0xN3B4OyBwb3NpdGlvbjogYWJzb2x1dGU7IH0KICAgICAgLldCX3NjcmVlbiAueWF3Zi1oaWRlX2JveCAuV19maWNvbiB7IGZvbnQtc2l6ZTogMThweDsgaGVpZ2h0OiAxNnB4OyBwYWRkaW5nOiA0cHggMCA2cHg7IHRleHQtYWxpZ246IGNlbnRlcjsgfQogICAgICAuV0Jfc2NyZWVuIC55YXdmLWhpZGVfYm94IH4gLnNjcmVlbl9ib3ggeyBtYXJnaW46IC0xMHB4IDAgMCAtMzdweDsgcG9zaXRpb246IGFic29sdXRlOyB9CiAgICAgIC5XQl9zY3JlZW4gLnlhd2YtaGlkZV9ib3ggfiAuc2NyZWVuX2JveCAuV19maWNvbiwgLldCX3NjcmVlbiAueWF3Zi1oaWRlX2JveCAuV19maWNvbiB7IHdpZHRoOiAyMHB4OyB9CiAgICAgIC5XQl9zY3JlZW4gLnlhd2YtaGlkZV9ib3ggfiAuc2NyZWVuX2JveCAubGF5ZXJfbWVudV9saXN0IHsgcmlnaHQ6IC00cHg7IH0KICAgICovIG5vb3AoKTsgfSkpOwogIH0KfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5iYXNlKTsKCi8vIOWxj+iUvemakOiXj+W+ruWNmgpmaWx0ZXIuaXRlbXMuYmFzZS5zY3JpcHR0b29sLmJsb2NrX2hpZGRlbiA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc2NyaXB0dG9vbCcsCiAgJ3ZlcnNpb24nOiA0NDYsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLmJsb2NrX2hpZGRlbicsCiAgJ3RleHQnOiAne3tibG9ja0hpZGRlbldlaWJvRGVzY319JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2Jsb2NrSGlkZGVuV2VpYm9EZXNjRGVzY319JyB9IH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIGJsb2NrV2VpYm8gPSBmdW5jdGlvbiBibG9ja1dlaWJvKGZlZWQpIHsKICAgICAgdmFyIGRpc3BsYXkgPSBmZWVkLmdldEF0dHJpYnV0ZSgneWF3Zi1kaXNwbGF5Jyk7CiAgICAgIGlmIChkaXNwbGF5ICE9PSAnZGlzcGxheS1oaWRkZW4nKSByZXR1cm47CiAgICAgIHZhciBtaWQgPSBmZWVkLmdldEF0dHJpYnV0ZSgnbWlkJyk7CiAgICAgIGlmICghbWlkKSByZXR1cm47CiAgICAgIG5ldHdvcmsud2VpYm8uYmxvY2sobWlkKTsKICAgICAgZmVlZC5zZXRBdHRyaWJ1dGUoJ3lhd2YtYmxvY2snLCAnYmxvY2snKTsKICAgIH07CiAgICBvYnNlcnZlci53ZWliby5maW5hbChibG9ja1dlaWJvKTsKICB9Cn0pLmFkZHRvKGZpbHRlci5ncm91cHMuYmFzZSk7CgovLyDnpoHnlKjlvq7ljZrlu7bov5/liqDovb0KZmlsdGVyLml0ZW1zLmJhc2Uuc2NyaXB0dG9vbC5kaXNhYmxlX2xhenlsb2FkID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzY3JpcHR0b29sJywKICAndmVyc2lvbic6IDI3OSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuZGlzYWJsZV9sYXp5bG9hZCcsCiAgJ3RleHQnOiAne3tkaXNhYmxlTGF6eUxvYWR9fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tkaXNhYmxlTGF6eUxvYWREZXNjfX0nIH0gfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB1dGlsLmZ1bmMucGFnZShmdW5jdGlvbiAoKSB7CiAgICAgIHZhciB3ZWlib0NvdW50TGltaXQgPSA1MDsKICAgICAgKGZ1bmN0aW9uIGRpc2FibGVMYXp5TG9hZCgpIHsKICAgICAgICBpZiAoc2VsZiAhPT0gdG9wKSByZXR1cm47CiAgICAgICAgaWYgKCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdjZfcGxfY29udGVudF9ob21lZmVlZCBbbm9kZS10eXBlPSJsYXp5bG9hZCJdJykpIHsgc2V0VGltZW91dChkaXNhYmxlTGF6eUxvYWQsIDEwMCk7IHJldHVybjsgfQogICAgICAgIGlmICh0eXBlb2YgU1RLID09PSB0eXBlb2Ygdm9pZCAwIHx8ICFTVEsubmFtZXNwYWNlKSBzZXRUaW1lb3V0KGRpc2FibGVMYXp5TG9hZCwgMTAwKTsKICAgICAgICBlbHNlIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuV0JfZmVlZCcpLmxlbmd0aCA+IHdlaWJvQ291bnRMaW1pdCkgcmV0dXJuOwogICAgICAgIGVsc2UgU1RLLm5hbWVzcGFjZSgndjZob21lJywgZnVuY3Rpb24gKGEpIHsKICAgICAgICAgIHZhciBmaXJlID0gbnVsbDsKICAgICAgICAgIHRyeSB7IGZpcmUgPSBhLmNvbmYuY2hhbm5lbC53aW5kb3cuZmlyZTsgfSBjYXRjaCAoZSkgeyB9CiAgICAgICAgICBpZiAoIWZpcmUpIHNldFRpbWVvdXQoZGlzYWJsZUxhenlMb2FkLCAwKTsKICAgICAgICAgIGVsc2UgewogICAgICAgICAgICB2YXIgZCA9IHsgc2Nyb2xsVG9wOiAwLCB3aW5IZWlnaHQ6IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0ICogMiB9OwogICAgICAgICAgICBhLmNvbmYuY2hhbm5lbC53aW5kb3cuZmlyZSgic2Nyb2xsIiwgZCk7CiAgICAgICAgICAgIHNldFRpbWVvdXQoZGlzYWJsZUxhenlMb2FkLCAzMDApOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KCkpOwogICAgfSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5iYXNlKTsKCi8vIOWIhue7hOa1j+iniApmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCdiYXNlJywgJ2dyb3VwaW5nJywgJ3t7b3RoZXJHcm91cFRpdGxlfX0nKTsKCi8vIOWIhue7hOa1j+iniOS4jeWBmuaMieW4kOWPt+makOiXjwpmaWx0ZXIuaXRlbXMuYmFzZS5ncm91cGluZy5ncm91cF9hY2NvdW50ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdncm91cGluZycsCiAgJ3ZlcnNpb24nOiAyNSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLmdyb3VwX2FjY291bnQnLAogICd0ZXh0JzogJ3t7YWNjb3VudEJ5R3JvdXB9fScsCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuYmFzZSk7CgovLyDliIbnu4TmtY/op4jkuI3lgZrliLflsY/mo4Dmn6UKZmlsdGVyLml0ZW1zLmJhc2UuZ3JvdXBpbmcuZ3JvdXBfc2FtZV9hY2NvdW50ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdncm91cGluZycsCiAgJ3ZlcnNpb24nOiAyNSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLmdyb3VwX3NhbWVfYWNjb3VudCcsCiAgJ3RleHQnOiAne3tzYW1lQWNjb3VudEJ5R3JvdXB9fScsCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuYmFzZSk7CgovLyDoh6rliqjovb3lhaUKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSgnYmFzZScsICdhdXRvbG9hZCcsICd7e2F1dG9Mb2FkTmV3V2VpYm9UaXRsZX19Jyk7CgovLyDoh6rliqjliqDovb3mlrDlvq7ljZrku6Xpgb/lhY3ooqvpmpDol4/lvq7ljZrmmL7npLrmlrDlvq7ljZrmj5DnpLoKZmlsdGVyLml0ZW1zLmJhc2UuYXV0b2xvYWQuYXV0b19sb2FkX25ld193ZWlibyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnYXV0b2xvYWQnLAogICd2ZXJzaW9uJzogNDQsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci5hdXRvX2xvYWRfbmV3X3dlaWJvJywKICAndGV4dCc6ICd7e2F1dG9Mb2FkTmV3V2VpYm99fXt7PGk+fX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7YXV0b0xvYWROZXdXZWlib0Rlc2N9fScgfSB9LAogIC8vIOWxleW8gOaWsOW+ruWNmuWQjua3u+WKoOWSjOaXp+W+ruWNmueahOWIhuWJsue6vwogICd0aW1ldGlwJzogKGZ1bmN0aW9uICgpIHsKICAgIHZhciB0aW1lMCA9IG5ldyBEYXRlKCksIHRpcCA9IG51bGw7CiAgICByZXR1cm4gZnVuY3Rpb24gKGZlZWQpIHsKICAgICAgdmFyIHRpbWUgPSB0aW1lMDsgdGltZTAgPSBuZXcgRGF0ZSgpOwogICAgICB2YXIgdGV4dCA9ICd7e3RpbWVSZWFkSGVyZX19JzsKICAgICAgaWYgKHRpcCAmJiB0aXAucGFyZW50Tm9kZSkgdGlwLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGlwKTsKICAgICAgdGlwID0gdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC5mZWVkVGltZVRpcCwgeyAndGltZSc6IHRleHQsICdkYXRlJzogU3RyaW5nKE51bWJlcih0aW1lKSkgfSkpOwogICAgICBmZWVkLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRpcCwgZmVlZC5uZXh0U2libGluZyk7CiAgICB9OwogIH0oKSksCiAgLy8g5pi+56S65paw55qE5b6u5Y2aCiAgJ3Nob3dOZXcnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgbmV3RmVlZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Eubm90ZXNbeWF3Zi1pZD0iZmVlZF9saXN0X25ld0JhciJdLCBkaXYuV0Jfbm90ZXNbeWF3Zi1pZD0iaG9tZV9uZXdfZmVlZF90aXAiXScpOyBpZiAoIW5ld0ZlZWQpIHJldHVybjsKICAgIHZhciBmZWVkcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLldCX2ZlZWQ+LldCX2ZlZWRfdHlwZVt5YXdmLXVucmVhZD0iaGlkZGVuIl0nKSk7CiAgICBmZWVkcy5mb3JFYWNoKGZ1bmN0aW9uIChmZWVkKSB7CiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXVucmVhZCcsICdzaG93Jyk7CiAgICAgIGZlZWQuY2xhc3NMaXN0LnJlbW92ZSgnV0JfZmVlZF9uZXcnKTsKICAgIH0pOwogICAgdGhpcy5jb3VudGVyKCk7CiAgICB0aGlzLnRpbWV0aXAoZmVlZHNbZmVlZHMubGVuZ3RoIC0gMV0pOwogIH0sCiAgLy8g5pi+56S65pyq6K+75o+Q56S6CiAgJ2NvdW50ZXInOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgY291bnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKAogICAgICAnLldCX2ZlZWQ+LldCX2ZlZWRfdHlwZVt5YXdmLXVucmVhZD0iaGlkZGVuIl06bm90KFt5YXdmLWRpc3BsYXkkPSItaGlkZGVuIl0pOm5vdChbeWF3Zi1kaXNwbGF5JD0iLXNvbiJdKScgKyAnLCcgKwogICAgICAnLldCX2ZlZWQ+LldCX2ZlZWRfdHlwZV9ib3hfdD4uV0JfZmVlZF90eXBlW3lhd2YtdW5yZWFkPSJoaWRkZW4iXTpub3QoW3lhd2YtZGlzcGxheSQ9Ii1oaWRkZW4iXSk6bm90KFt5YXdmLWRpc3BsYXkkPSItc29uIl0pJwogICAgKS5sZW5ndGg7CiAgICB2YXIgZmVlZExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfZmVlZCcpOwogICAgdmFyIG5ld0ZlZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdhLm5vdGVzW3lhd2YtaWQ9ImZlZWRfbGlzdF9uZXdCYXIiXSwgZGl2LldCX25vdGVzW3lhd2YtaWQ9ImhvbWVfbmV3X2ZlZWRfdGlwIl0nKTsKICAgIHV0aWwuZGVidWcoJ2NvdW50ZXI6ICVkIGZlZWRzIGNsaWNrIHRvIHNob3cnLCBjb3VudCk7CiAgICAvLyDlhYjnp7vpmaTml6fnmoTvvIzlho3mlL7kuIrmlrDnmoQKICAgIGlmIChuZXdGZWVkKSBuZXdGZWVkLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobmV3RmVlZCk7CiAgICBpZiAoY291bnQpIHsKICAgICAgbmV3RmVlZCA9IHV0aWwuZG9tLmNyZWF0ZShodG1sLmZlZWRMaXN0TmV3QmFyKTsKICAgICAgZmVlZExpc3QucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobmV3RmVlZCwgZmVlZExpc3QpOwogICAgICBuZXdGZWVkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5zaG93TmV3LmJpbmQodGhpcykpOwogICAgICBuZXdGZWVkLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQgPSB1dGlsLnN0ci5maWxsKHRleHQubmV3V2VpYm9Ob3RpZnksIHsgJ2NvdW50JzogY291bnQgfSk7CiAgICB9CiAgICByZXR1cm4gY291bnQ7CiAgfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAvLyDmm7TmlrDmnKror7vmj5DnpLrkuK3nmoTmlbDlrZcKICAgIC8vIOmakOiXj+aOieW+ruWNmuWOn+adpeeahOaWsOa2iOaBr+aPkOekuuahhgogICAgdXRpbC5jc3MuYWRkKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICBbeWF3Zi11bnJlYWQ9ImhpZGRlbiJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9mZWVkIFtub2RlLXR5cGU9ImZlZWRfbGlzdF90aW1lVGlwIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0KICAgICAgLldCX2ZlZWQgYS5ub3Rlc1thY3Rpb24tdHlwZT0iZmVlZF9saXN0X25ld0JhciJdW25vZGUtdHlwZT0iZmVlZF9saXN0X25ld0JhciJdIHsgZGlzcGxheTogbm9uZTsgfQogICAgICAuV0JfZmVlZCBkaXYuV19sb2FkaW5nW3JlcXVlc3R0eXBlPSJuZXdGZWVkIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0KICAgICAgLldCX2ZlZWQgLldCX25vdGVzW3JlcXVlc3R0eXBlPSJuZXdGZWVkIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0KICAgICAgLldCX2ZlZWQgW25vZGUtdHlwZT0ibGF6eWxvYWQiXTpub3QoOmxhc3QtY2hpbGQpIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CiAgICAqLyBub29wKCk7IH0pKTsKCiAgICB2YXIgbG9hZEtleSA9IHV0aWwua2V5Ym9hcmQuY29kZS5QRVJJT0Q7CgogICAgLy8g6Ieq5Yqo54K55byA5pyJ5paw5b6u5Y2a55qE5o+Q56S6CiAgICAvLyDmiJHnn6XpgZPmiJHlnKjlubLku4DkuYgKICAgIC8vIFRPRE8gdXNlIHV0aWwuZnVuYy53cmFwc3RrIGluc3RlYWQKICAgIHV0aWwuZnVuYy5wYWdlKGZ1bmN0aW9uICRZQVdGJF9hdXRvTG9hZE5ld0ZlZWQoKSB7CiAgICAgIGlmICghd2luZG93LlNUSyB8fCAhU1RLLm5hbWVzcGFjZSkgc2V0VGltZW91dCgkWUFXRiRfYXV0b0xvYWROZXdGZWVkLCAxMDApOwogICAgICBlbHNlIFNUSy5uYW1lc3BhY2UoInY2aG9tZSIsIGZ1bmN0aW9uIChhKSB7CiAgICAgICAgLyogU1RLLmxpYi5mZWVkLmludGVyICovCiAgICAgICAgdmFyIGFjdGlvbiA9IGZ1bmN0aW9uIChiLCBlKSB7CiAgICAgICAgICB2YXIgYyA9IGEuY29yZS5qc29uLm1lcmdlLAogICAgICAgICAgICBqID0gZVsyXSB8fCB7fSwKICAgICAgICAgICAgayA9IGEucXVlcnlUb0pzb24od2luZG93LkZNLmdldFVSTCgpLnF1ZXJ5KSwKICAgICAgICAgICAgZyA9IGEuY29uZi50cmFucy5mZWVkLmZlZWQsCiAgICAgICAgICAgIGggPSBhLmNvcmUub2JqLnBhcnNlUGFyYW0oewogICAgICAgICAgICAgIGxvYWRGZWVkVHJhbnNLZXk6ICJnZXRmZWVkIiwKICAgICAgICAgICAgICBwbE5vZGU6IG51bGwKICAgICAgICAgICAgfSwgZSk7CiAgICAgICAgICB2YXIgZCA9IGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAgIHZhciBjID0gYS5DKCJkaXYiKTsKICAgICAgICAgICAgYy5pbm5lckhUTUwgPSBiOwogICAgICAgICAgICB3aW5kb3cuV0JFWFAgJiYgd2luZG93LldCRVhQLnN0YXJ0KGMpOwogICAgICAgICAgICBjID0gbnVsbDsKICAgICAgICAgIH07CiAgICAgICAgICB2YXIgbCA9IGMoaywgeyBzaW5jZV9pZDogYi5nZXRFbmRJZCgpIH0pOwogICAgICAgICAgZy5yZXF1ZXN0KGgubG9hZEZlZWRUcmFuc0tleSwgewogICAgICAgICAgICBvblN1Y2Nlc3M6IGZ1bmN0aW9uIChhKSB7IGIudXBkYXRlRmVlZChhLmRhdGEsICJ0b3AiLCAibmV3RmVlZCIpOyBkKGEuZGF0YSk7IH0sCiAgICAgICAgICAgIG9uRmFpbDogZnVuY3Rpb24gKCkgeyBiLnNob3dFcnJvcigidG9wIiwgIm5ld0ZlZWQiKTsgfSwKICAgICAgICAgICAgb25FcnJvcjogZnVuY3Rpb24gKCkgeyBiLnNob3dFcnJvcigidG9wIiwgIm5ld0ZlZWQiKTsgfQogICAgICAgICAgfSwgYyhsLCBqKSk7CiAgICAgICAgfTsKICAgICAgICAvKiBTVEsubGliLmZlZWQuYmFzZSAqLwogICAgICAgIHZhciBiYXNlID0gZnVuY3Rpb24gKGIsIGMpIHsKICAgICAgICAgIHZhciBkID0ge30sIGUgPSBhLmxpYi5mZWVkLkFQSShiLCBjKTsKICAgICAgICAgIGZvciAodmFyIGYgaW4gZSkgIWRbZl0gJiYgKGRbZl0gPSBlW2ZdKTsgLyogYXMgaXMgKi8KICAgICAgICAgIGFjdGlvbihkLCBjKTsKICAgICAgICB9OwogICAgICAgIC8qIFNUSy5wbC5jb250ZW50LmhvbWVmZWVkLnNvdXJjZS5ob21lZmVlZC5mZWVkTGlzdCAqLwogICAgICAgIHZhciBmZWVkTGlzdCA9IGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICBiYXNlKGIsIHsgcGxOb2RlOiBiIH0pOwogICAgICAgIH07CiAgICAgICAgLyogY2hlY2sgZm9yIGhvbWVfbmV3X2ZlZWRfdGlwIGFuZCBhdXRvIGxvYWQgbmV3IGZlZWRzLi4uICovCiAgICAgICAgdmFyIHBlbmRpbmcgPSBmYWxzZTsKICAgICAgICAobmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24gKG11dGF0aW9ucykgewogICAgICAgICAgdmFyIHRpcCA9IGEuc2l6emxlKCcjaG9tZV9uZXdfZmVlZF90aXAnKTsKICAgICAgICAgIGlmICghdGlwLmxlbmd0aCkgcmV0dXJuOwogICAgICAgICAgYS5yZW1vdmVOb2RlKHRpcFswXSk7CiAgICAgICAgICBpZiAocGVuZGluZykgcmV0dXJuOyBwZW5kaW5nID0gdHJ1ZTsKICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBwZW5kaW5nID0gZmFsc2U7CiAgICAgICAgICAgIGZlZWRMaXN0KGEuc2l6emxlKCcjdjZfcGxfY29udGVudF9ob21lZmVlZCcpWzBdKTsKICAgICAgICAgIH0sIDEwMCk7CiAgICAgICAgfSkpLm9ic2VydmUoZG9jdW1lbnQuYm9keSwgeyAnY2hpbGRMaXN0JzogdHJ1ZSwgJ3N1YnRyZWUnOiB0cnVlIH0pOwogICAgICB9KTsKICAgIH0pOwoKICAgIC8vIOeci+ingeacieaWsOW+ruWNmuS6hu+8jOeci+eci+aYr+S4jeaYr+aWsOWKoOi9veWHuuadpeeahAogICAgb2JzZXJ2ZXIud2VpYm8ub25sb2FkKGZ1bmN0aW9uIChmZWVkKSB7CiAgICAgIHZhciBmZWVkcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLldCX2ZlZWQgLldCX2ZlZWRfdHlwZScpKTsKICAgICAgdmFyIHNob3duID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuV0JfZmVlZF90eXBlW3lhd2YtdW5yZWFkPSJzaG93Il0sIC5XQl9mZWVkX3R5cGVbeWF3Zi11bnJlYWQ9InNob3ciXX4uV0JfZmVlZF90eXBlLCAuV0JfZmVlZF90eXBlW3lhd2YtdW5yZWFkPSJzaG93Il1+KiAuV0JfZmVlZF90eXBlJykpOwogICAgICBpZiAoZmVlZHMuaW5kZXhPZihmZWVkKSA9PT0gLTEpIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXVucmVhZCcsICdzaG93Jyk7CiAgICAgIGVsc2UgaWYgKHNob3duLmxlbmd0aCA8IDggfHwgc2hvd24uaW5kZXhPZihmZWVkKSAhPT0gLTEpIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXVucmVhZCcsICdzaG93Jyk7CiAgICAgIGVsc2UgZmVlZC5zZXRBdHRyaWJ1dGUoJ3lhd2YtdW5yZWFkJywgJ2hpZGRlbicpOwogICAgfSk7CgogICAgLy8g6LWw5a6M6L+H5ruk5Zmo5LmL5ZCO77yM5aaC5p6c5p+Q5p2h5b6u5Y2a6L+Y5rKh6KKr6ZqQ6JeP5o6J77yM6YKj5LmI5bCx5o+Q56S655So5oi35pyJ5paw5b6u5Y2a6KaB55yL5LqGCiAgICBvYnNlcnZlci53ZWliby5hZnRlcihmdW5jdGlvbiAoZmVlZCkgewogICAgICBpZiAoZmVlZC5nZXRBdHRyaWJ1dGUoJ3lhd2YtdW5yZWFkJykgIT09ICdoaWRkZW4nKSByZXR1cm47CiAgICAgIHZhciBkaXNwbGF5ID0gZmVlZC5nZXRBdHRyaWJ1dGUoJ3lhd2YtZGlzcGxheScpLnJlcGxhY2UoL14uKi0oW14tXSopJC8sICckMScpOwogICAgICBpZiAoZGlzcGxheSA9PT0gJ2hpZGRlbicpIHJldHVybjsKICAgICAgdXRpbC5mdW5jLmNhbGwoZnVuY3Rpb24gKCkgeyBmaWx0ZXIuaXRlbXMuYmFzZS5hdXRvbG9hZC5hdXRvX2V4cGFuZC5leHBhbmQoZmVlZCk7IH0pOwogICAgICBpZiAoZmlsdGVyLml0ZW1zLmJhc2UuYXV0b2xvYWQuZGVza3RvcF9ub3RpZmljYXRpb24pCiAgICAgICAgZmlsdGVyLml0ZW1zLmJhc2UuYXV0b2xvYWQuZGVza3RvcF9ub3RpZmljYXRpb24ubm90aWZ5KGZlZWQpOwogICAgfSk7CgogICAgLy8g5YWo6YO96L+H5ruk5a6M5oiQ5ZCO6KaB5pu05paw6K6h5pWwCiAgICBvYnNlcnZlci53ZWliby5kb25lKGZ1bmN0aW9uICgpIHsgdGhhdC5jb3VudGVyKCk7IH0pOwoKICAgIC8vIOWFgeiuuOaMieWvueW6lOaMiemUruaYvuekuuaWsOW+ruWNmgogICAgdXRpbC5rZXlib2FyZC5yZWcoJ2tleXVwJywgbG9hZEtleSwgZnVuY3Rpb24gKCkgeyB0aGF0LnNob3dOZXcoKTsgfSwgdHJ1ZSk7CgogIH0sCiAgLy8g6ZqQ6JeP6YeN5aSN5b6u5Y2aCiAgJ3ByaW9yaXR5JzogMWU2LCAvLyDmnIDpq5jnmoTkvJjlhYjnuqcKICAncnVsZSc6IGZ1bmN0aW9uIGhpZGVEdXBsaWNhdGUoZmVlZCkgewogICAgaWYgKGZlZWQuZ2V0QXR0cmlidXRlKCd5YXdmLWRpc3BsYXknKSkgcmV0dXJuIG51bGw7CiAgICB2YXIgbWlkID0gZmVlZC5nZXRBdHRyaWJ1dGUoJ21pZCcpOyBpZiAoIW1pZCkgcmV0dXJuIG51bGw7CiAgICB2YXIgYW5vdGhlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tub2RlLXR5cGU9ImZlZWRfbGlzdCJdIC5XQl9mZWVkX3R5cGVbbWlkPSInICsgbWlkICsgJyJdW3lhd2YtZGlzcGxheV0nKTsKICAgIGlmIChhbm90aGVyKSByZXR1cm4gJ2R1cGxpY2F0ZS1oaWRkZW4nOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuYmFzZSk7CgpmaWx0ZXIuaXRlbXMuYmFzZS5hdXRvbG9hZC5hdXRvX2V4cGFuZCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnYXV0b2xvYWQnLAogICd2ZXJzaW9uJzogNDYsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci5hdXRvX2V4cGFuZCcsCiAgJ3RleHQnOiAne3thdXRvRXhwYW5kfX0nLAogICdyZWYnOiB7CiAgICAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2F1dG9FeHBhbmREZXNjfX0nIH0sCiAgICAnZXR5cGVzJzogewogICAgICAndHlwZSc6ICdib29sZWFuJywKICAgIH0sCiAgICAnYmFja2dyb3VuZCc6IHsKICAgICAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgICAgICdkZWZhdWx0JzogdHJ1ZSwKICAgIH0sCiAgfSwKICAnZXhwYW5kJzogZnVuY3Rpb24gKGZlZWQsIGZvcmNlKSB7CiAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICB2YXIgZGlzcGxheSA9IGZlZWQuZ2V0QXR0cmlidXRlKCd5YXdmLWRpc3BsYXknKS5yZXBsYWNlKC9eLiotKFteLV0qKSQvLCAnJDEnKTsKICAgIHZhciBhY3QgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciB1bnJlYWRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLldCX2ZlZWRfdHlwZVt5YXdmLXVucmVhZD0iaGlkZGVuIl0nKTsKICAgICAgdmFyIHJlZiA9IHVucmVhZHNbdW5yZWFkcy5sZW5ndGggLSAxXTsKICAgICAgcmVmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGZlZWQsIHJlZi5uZXh0U2libGluZyk7CiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXVucmVhZCcsICdzaG93Jyk7CiAgICAgIGZpbHRlci5pdGVtcy5iYXNlLmF1dG9sb2FkLmF1dG9fbG9hZF9uZXdfd2VpYm8uY291bnRlcigpOwogICAgfTsKICAgIGlmIChmZWVkLmdldEF0dHJpYnV0ZSgneWF3Zi11bnJlYWQnKSAhPT0gJ2hpZGRlbicpIHJldHVybjsKICAgIGlmIChmb3JjZSkgcmV0dXJuIGFjdCgpOwogICAgaWYgKHdlaWJvLmZlZWQuYXV0aG9yLmlkKGZlZWQpID09PSB1dGlsLmluZm8udWlkKSByZXR1cm4gYWN0KCk7IC8vIOaAu+aYr+S4jeaKmOWPoOiHquW3seeahOW+ruWNmgogICAgaWYgKCF0aGF0LmNvbmYpIHJldHVybjsKICAgIGlmICh0aGF0LnJlZi5ldHlwZXMuY29uZiAmJiBkaXNwbGF5ICE9PSAnc2hvdycpIHJldHVybjsKICAgIGlmICh0aGF0LnJlZi5iYWNrZ3JvdW5kLmNvbmYgJiYgZG9jdW1lbnQuaGFzRm9jdXMoKSkgewogICAgICB2YXIgb25ibHVyID0gZnVuY3Rpb24gKCkgewogICAgICAgIGZpbHRlci5pdGVtcy5iYXNlLmF1dG9sb2FkLmF1dG9fZXhwYW5kLmV4cGFuZChmZWVkKTsKICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdibHVyJywgb25ibHVyKTsKICAgICAgfTsKICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIG9uYmx1cik7CiAgICB9IGVsc2UgYWN0KCk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5iYXNlKTsKCmZpbHRlci5pdGVtcy5iYXNlLmF1dG9sb2FkLmRlc2t0b3Bfbm90aWZpY2F0aW9uID0gbnVsbDsKCmlmICh1dGlsLm5vdGlmeS5hdmFsaWFibGVOb3RpZmljYXRpb24oKS5sZW5ndGgpIGZpbHRlci5pdGVtcy5iYXNlLmF1dG9sb2FkLmRlc2t0b3Bfbm90aWZpY2F0aW9uID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdhdXRvbG9hZCcsCiAgJ3ZlcnNpb24nOiA0NiwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLmRlc2t0b3Bfbm90aWZpY2F0aW9uJywKICAndGV4dCc6ICd7e2Rlc2t0b3BOb3RpZmljYXRpb259fScsCiAgJ3JlZic6IHsKICAgICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7ZGVza3RvcE5vdGlmaWNhdGlvbkRlc2N9fScgfSwKICAgICd0eXBlcyc6IHsKICAgICAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgICAgICdkZWZhdWx0JzogdHJ1ZSwKICAgIH0sCiAgICAnYXV0b2hpZGUnOiB7CiAgICAgICd0eXBlJzogJ2Jvb2xlYW4nLAogICAgICAnZGVmYXVsdCc6IHRydWUsCiAgICB9LAogICAgJ3Nob3J0ZW4nOiB7CiAgICAgICd0eXBlJzogJ2Jvb2xlYW4nLAogICAgfSwKICAgICdzaG9ydGxlbic6IHsKICAgICAgJ3R5cGUnOiAncmFuZ2UnLAogICAgICAnbWluJzogMCwKICAgICAgJ21heCc6IDYwMCwKICAgICAgJ2RlZmF1bHQnOiA1MCwKICAgIH0sCiAgICAnZHVyYXRpb24nOiB7CiAgICAgICd0eXBlJzogJ3JhbmdlJywKICAgICAgJ3N0ZXAnOiA1MCwKICAgICAgJ21pbic6IDFlMywKICAgICAgJ2RlZmF1bHQnOiAzZTMsCiAgICAgICdtYXgnOiAxZTQsCiAgICB9LAogICAgJ2R1cmF0aW9uYyc6IHsKICAgICAgJ3R5cGUnOiAncmFuZ2UnLAogICAgICAnc3RlcCc6IDEwLAogICAgICAnbWluJzogMCwKICAgICAgJ2RlZmF1bHQnOiAxNTAsCiAgICAgICdtYXgnOiA1MDAsCiAgICB9LAogICAgJ250eXBlcyc6IHsKICAgICAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgICB9LAogIH0sCiAgJ3Nob3duJzogZnVuY3Rpb24gKGRvbSkgewogICAgdmFyIHRoYXQgPSB0aGlzOwogICAgdGhhdC5vbm9wdCA9IGRvbS5xdWVyeVNlbGVjdG9yKCdbbmFtZT0ieWF3Zi13ZWliby5vdGhlci5kZXNrdG9wX25vdGlmaWNhdGlvbiJdJyk7CiAgICB0aGF0Lm9ub3B0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRoYXQudXBkYXRlLmJpbmQodGhhdCkpOwogICAgdmFyIG50eXBlcyA9IGRvbS5xdWVyeVNlbGVjdG9yKCdbbmFtZT0ieWF3Zi13ZWliby5vdGhlci5kZXNrdG9wX25vdGlmaWNhdGlvbi5udHlwZXMiXScpOwogICAgaWYgKHV0aWwubm90aWZ5LmF2YWxpYWJsZU5vdGlmaWNhdGlvbigpLmxlbmd0aCA8PSAxKSB7CiAgICAgIHdoaWxlIChudHlwZXMudGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAnbGFiZWwnKSBudHlwZXMgPSBudHlwZXMucGFyZW50Tm9kZTsKICAgICAgbnR5cGVzLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICB9IGVsc2UgbnR5cGVzLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHsKICAgICAgdGhhdC5yZWYubnR5cGVzLnB1dGNvbmYobnR5cGVzLmNoZWNrZWQpOwogICAgICB0aGF0LnVwZGF0ZSgpOwogICAgfSk7CiAgICAvLyDlpoLmnpzmsqHmnInmnYPpmZDnmoTor53vvIzmgLvmmK/opoHmmL7npLrlhbPpl63nmoTnirbmgIEKICAgIGlmICghdXRpbC5ub3RpZnkuaGFzUGVybWlzc2lvbigpKSB0aGF0Lm9ub3B0LmNoZWNrZWQgPSBmYWxzZTsKICB9LAogICdpbml0JzogZnVuY3Rpb24gKCkgewogICAgdXRpbC5ub3RpZnkuY2hvc2VOb3RpZmljYXRpb24odGhpcy5yZWYubnR5cGVzLmNvbmYgPyAnd2Via2l0JyA6ICdzdGFuZGFyZCcpOwogIH0sCiAgJ3VwZGF0ZSc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciB0aGF0ID0gdGhpcywgZGVza3RvcE5vdGlmeSA9IHRoYXQub25vcHQ7CiAgICB0aGF0LmluaXQoKTsKICAgIGlmICghZGVza3RvcE5vdGlmeS5jaGVja2VkKSByZXR1cm47CiAgICB2YXIgcGVybWlzc2lvbiA9IHV0aWwubm90aWZ5Lmhhc1Blcm1pc3Npb24oKTsKICAgIGlmIChwZXJtaXNzaW9uID09PSB0cnVlKSByZXR1cm47CiAgICBkZXNrdG9wTm90aWZ5LmNoZWNrZWQgPSBmYWxzZTsKICAgIGlmIChwZXJtaXNzaW9uID09PSBudWxsKSB1dGlsLm5vdGlmeS5yZXF1ZXN0UGVybWlzc2lvbihmdW5jdGlvbiAoKSB7CiAgICAgIGRlc2t0b3BOb3RpZnkuY2hlY2tlZCA9IHRydWU7CiAgICAgIHRoYXQudXBkYXRlKCk7CiAgICB9KTsKICAgIGlmIChwZXJtaXNzaW9uID09PSBmYWxzZSkgdXRpbC51aS5hbGVydCgnbm90aWZ5LWRpc2FibGVkJywgewogICAgICAndGl0bGUnOiB1dGlsLnN0ci5maWxsKCd7e2Rlc2t0b3BOb3RpZmljYXRpb25EaXNhbGxvd2VkVGl0bGV9fScpLAogICAgICAndGV4dCc6IHV0aWwuc3RyLmZpbGwoJ3t7ZGVza3RvcE5vdGlmaWNhdGlvbkRpc2FsbG93ZWR9fScpLAogICAgICAnaWNvbic6ICdlcnJvcicKICAgIH0pOwogIH0sCiAgJ25vdGlmeSc6IGZ1bmN0aW9uIChmZWVkKSB7CiAgICB2YXIgZGlzcGxheSA9IGZlZWQuZ2V0QXR0cmlidXRlKCd5YXdmLWRpc3BsYXknKS5yZXBsYWNlKC9eLiotKFteLV0qKSQvLCAnJDEnKTsKICAgIHRoaXMuaW5pdCgpOyBpZiAoIXRoaXMuY29uZikgcmV0dXJuOwogICAgaWYgKHRoaXMucmVmLnR5cGVzLmNvbmYgJiYgZGlzcGxheSAhPT0gJ3Nob3cnKSByZXR1cm47CiAgICB2YXIgbWlkLCBhdXRob3IsIHRleHQsIGZhY2UsIG9yaV9hdXRob3IgPSAnJywgb3JpX3RleHQgPSAnJzsKICAgIG1pZCA9IGZlZWQuZ2V0QXR0cmlidXRlKCdtaWQnKTsgaWYgKCFtaWQpIHJldHVybjsKICAgIGZhY2UgPSB3ZWliby5mZWVkLmF2YXRhcihmZWVkKTsKICAgIGF1dGhvciA9IHdlaWJvLmZlZWQuYXV0aG9yLm5hbWUoZmVlZCk7CiAgICB0ZXh0ID0gZmVlZC5xdWVyeVNlbGVjdG9yKCcuV0JfdGV4dCcpLnRleHRDb250ZW50OwogICAgdHJ5IHsKICAgICAgb3JpX2F1dGhvciA9IHdlaWJvLmZlZWQub3JpZ2luYWwubmFtZShmZWVkKTsKICAgICAgb3JpX3RleHQgPSB3ZWliby5mZWVkLm9yaWdpbmFsLnRleHQoZmVlZCk7CiAgICB9IGNhdGNoIChlKSB7IH0KICAgIHZhciBib2R5ID0gdGV4dCArIChvcmlfdGV4dCA/ICgnLy8nICsgb3JpX2F1dGhvciArICc6ICcgKyBvcmlfdGV4dCkgOiAnJyk7CiAgICBib2R5ID0gYm9keS5yZXBsYWNlKC9ccysvZywgJyAnKS50cmltKCk7IGF1dGhvciA9IGF1dGhvci50cmltKCk7CiAgICBpZiAodGhpcy5yZWYuc2hvcnRlbi5jb25mKSBib2R5ID0gYm9keS5zbGljZSgwLCB0aGlzLnJlZi5zaG9ydGxlbi5jb25mKTsKICAgIHZhciBkZWxheSA9IDA7CiAgICBpZiAodGhpcy5jb25mKSBkZWxheSA9IHRoaXMucmVmLmR1cmF0aW9uLmNvbmYgKyBib2R5Lmxlbmd0aCAqIHRoaXMucmVmLmR1cmF0aW9uYy5jb25mOwogICAgdmFyIHNob3dGZWVkID0gdXRpbC5mdW5jLmNhdGNoZWQoZnVuY3Rpb24gKCkgewogICAgICBmaWx0ZXIuaXRlbXMuYmFzZS5hdXRvbG9hZC5hdXRvX2V4cGFuZC5leHBhbmQoZmVlZCwgdHJ1ZSk7CiAgICAgIHV0aWwubm90aWZ5LmhpZGVOb3RpZmljYXRpb24obm90aWZpY2F0aW9uKQogICAgICB1dGlsLmZ1bmMuY2FsbChmdW5jdGlvbiAoKSB7CiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCArPSBmZWVkLmdldENsaWVudFJlY3RzKClbMF0udG9wIC0gODA7CiAgICAgICAgdmFyIGV2dCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCJLZXlib2FyZEV2ZW50Iik7CiAgICAgICAgZXZ0LmluaXRLZXlFdmVudCgna2V5ZG93bicsIHRydWUsIHRydWUsIG51bGwsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCB1dGlsLmtleWJvYXJkLmNvZGUuSiwgMCk7CiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRpc3BhdGNoRXZlbnQoZXZ0KTsKICAgICAgfSk7CiAgICAgIHdpbmRvdy5mb2N1cygpOwogICAgfSk7CiAgICB2YXIgbm90aWZpY2F0aW9uID0gdXRpbC5ub3RpZnkuc2hvd05vdGlmaWNhdGlvbihtaWQsIGF1dGhvciwgYm9keSwgZmFjZSwgZGVsYXksIHNob3dGZWVkKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLmJhc2UpOwoKLy8g5oyJ5YaF5a656L+H5rukCmZpbHRlci5wcmVkZWYuZ3JvdXAoJ2NvbnRlbnQnKS5hZGR0byhmaWx0ZXIuZ3JvdXBzLmJhc2UpOwoKLy8g5YWz6ZSu5a2X6L+H5rukCmZpbHRlci5wcmVkZWYud2JmYyh7CiAgJ25hbWUnOiAna2V5d29yZCcsCiAgJ3ZlcnNpb24nOiAxLAogICdhZGQnOiBmdW5jdGlvbiAocykgeyByZXR1cm4gcy50cmltKCkgfHwgbnVsbDsgfSwKICAncnVsZSc6IGZ1bmN0aW9uIGtleXdvcmRNYXRjaChhY3Rpb24sIGZlZWQpIHsKICAgIHZhciBrZXl3b3JkcyA9IHRoaXMuY29uZi5jb25jYXQodGhpcy5leHRlbnQpOwogICAgdmFyIHRleHRzID0gd2VpYm8uZmVlZC50ZXh0KGZlZWQpLnRvVXBwZXJDYXNlKCk7CiAgICB2YXIgbWF0Y2ggPSBrZXl3b3Jkcy5zb21lKGZ1bmN0aW9uIChrZXl3b3JkKSB7CiAgICAgIGlmICgha2V5d29yZCkgcmV0dXJuIGZhbHNlOwogICAgICBpZiAodGV4dHMuaW5kZXhPZihrZXl3b3JkLnRvVXBwZXJDYXNlKCkpID09PSAtMSkgcmV0dXJuIGZhbHNlOwogICAgICBmZWVkLnNldEF0dHJpYnV0ZSgneWF3Zi1yZWFzb24nLCB1dGlsLnN0ci5maWxsKHRleHQua2V5d29yZEZpbHRlclJlYXNvbiwgeyAnZGV0YWlsJzoga2V5d29yZCB9KSk7CiAgICAgIHJldHVybiB0cnVlOwogICAgfSk7CiAgICBpZiAobWF0Y2gpIHJldHVybiBhY3Rpb247IGVsc2UgcmV0dXJuIG51bGw7CiAgfSwKICAnZmFzdCc6IHsKICAgICd2YWxpZGF0b3InOiBmaWx0ZXIuZmFzdC5jb250ZW50LnZhbGlkYXRvciwKICAgICdyZWNvZ25pemVyJzogZmlsdGVyLmZhc3QuY29udGVudC5yZWNvZ25pemVyLmtleXdvcmQsCiAgICAnc2VsZWN0ZWQnOiBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5mZWVkLAogICAgJ2FkZCc6IGZpbHRlci5mYXN0LmNvbnRlbnQuYWRkLAogICAgJ2Rlc2NyaXB0aW9uJzogZmlsdGVyLmZhc3QuZGVzY3JpcHRpb24uZ2VuKHsKICAgICAgJ2dyb3VwJzogJ2NvbnRlbnQnLCAnbmFtZSc6ICdrZXl3b3JkJywKICAgICAgJ2F0dHInOiAndGV4dCcsICdpbnB1dCc6IHRydWUsICdjaG9zZW4nOiB0cnVlCiAgICB9KSwKICB9Cn0sIGZpbHRlci5ncm91cHMuY29udGVudCk7CgovLyDmjInnhafmraPliJnlvI/ov4fmu6QKZmlsdGVyLnByZWRlZi53YmZjKHsKICAnbmFtZSc6ICdyZWdleHAnLAogICd2ZXJzaW9uJzogOCwKICAnYWRkJzogdXRpbC5zdHIuYWRkcmVnZXgsCiAgJ2Rpc3BsYXknOiBmdW5jdGlvbiAocykgeyByZXR1cm4gJy8nICsgcyArICcvJzsgfSwKICAncnVsZSc6IGZ1bmN0aW9uIHJlZ2V4cE1hdGNoKGFjdGlvbiwgZmVlZCkgewogICAgdmFyIHJlZ2V4ZW4gPSB0aGlzLmNvbmYuY29uY2F0KHRoaXMuZXh0ZW50KS5tYXAodXRpbC5zdHIuY29tcHJlZ2V4KS5maWx0ZXIoQm9vbGVhbik7CiAgICB2YXIgdGV4dHMgPSB3ZWliby5mZWVkLnRleHQoZmVlZCk7CiAgICB2YXIgbWF0Y2ggPSByZWdleGVuLnNvbWUoZnVuY3Rpb24gKHJlZ2V4cCkgewogICAgICBpZiAoIXJlZ2V4cC5leGVjKHRleHRzKSkgcmV0dXJuIGZhbHNlOwogICAgICB2YXIgcmVhc29uID0gKChyZWdleHAgKyAnJykubWF0Y2goL1woXD89XHwoKFteKV18XFxcKSkqKVwpLykgfHwgW10pWzFdOwogICAgICBmZWVkLnNldEF0dHJpYnV0ZSgneWF3Zi1yZWFzb24nLCByZWFzb24gfHwgdXRpbC5zdHIuZmlsbCh0ZXh0LnJlZ2V4cEZpbHRlclJlYXNvbiwgeyAnZGV0YWlsJzogcmVnZXhwICsgJycgfSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0pOwogICAgaWYgKG1hdGNoKSByZXR1cm4gYWN0aW9uOyBlbHNlIHJldHVybiBudWxsOwogIH0sCiAgJ2Zhc3QnOiB7CiAgICAndmFsaWRhdG9yJzogZmlsdGVyLmZhc3QuY29udGVudC52YWxpZGF0b3IsCiAgICAncmVjb2duaXplcic6IGZpbHRlci5mYXN0LmNvbnRlbnQucmVjb2duaXplci5yZWdleHAsCiAgICAnc2VsZWN0ZWQnOiBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5uZXZlciwKICAgICdhZGQnOiBmaWx0ZXIuZmFzdC5jb250ZW50LmFkZCwKICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICdncm91cCc6ICdjb250ZW50JywgJ25hbWUnOiAncmVnZXhwJywKICAgICAgJ2F0dHInOiAndGV4dCcsICdpbnB1dCc6IHRydWUsICdjaG9zZW4nOiBmYWxzZQogICAgfSksCiAgfQp9LCBmaWx0ZXIuZ3JvdXBzLmNvbnRlbnQpOwoKLy8g5YW25LuW6KKr6KeG5Li65YaF5a6555qE5YWD57SgCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ2NvbnRlbnQnLCAnZWxlbWVudHMnLCAne3tjb250ZW50VHlwZXNUaXRsZX19Jyk7CgooZnVuY3Rpb24gKHR5cGVzKSB7CiAgdmFyIHRzID0gT2JqZWN0LmtleXModHlwZXMpOwogIHRzLmZvckVhY2goZnVuY3Rpb24gKHQpIHsKICAgIHZhciB0dCA9IHRbMF0udG9VcHBlckNhc2UoKSArIHQuc2xpY2UoMSk7CiAgICBmaWx0ZXIuaXRlbXMuY29udGVudC5lbGVtZW50c1t0XSA9IGZpbHRlci5pdGVtKHsKICAgICAgJ2dyb3VwJzogJ2VsZW1lbnRzJywKICAgICAgJ3ZlcnNpb24nOiAyMDYsCiAgICAgICd0eXBlJzogJ2Jvb2xlYW4nLAogICAgICAndGV4dCc6ICd7e2NvbnRlbnRUeXBlcycgKyB0dCArICd9fScsCiAgICAgICdrZXknOiAnd2VpYm8uY29udGVudC50eXBlc18nICsgdCwKICAgICAgJ2RlZmF1bHQnOiB0eXBlc1t0XSwKICAgICAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgICAgIHdlaWJvLmZlZWQudGV4dC5hY3RpdmUodCk7CiAgICAgIH0sCiAgICB9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLmNvbnRlbnQpOwogIH0pOwp9KHsKICAnbWVudGlvbic6IHRydWUsCiAgJ3RvcGljJzogdHJ1ZSwKICAnc3RvY2snOiB0cnVlLAogICdsaW5rdCc6IHRydWUsCiAgJ2xpbmt1JzogZmFsc2UsCiAgJ2Vtb3Rpb24nOiBmYWxzZSwKfSkpOwoKZmlsdGVyLnByZWRlZi5hY2NvdW50ID0gZnVuY3Rpb24gKGRldGFpbHMpIHsKICB2YXIgaXRlbSA9IHsKICAgICduYW1lJzogZGV0YWlscy5uYW1lLAogICAgJ3ZlcnNpb24nOiBkZXRhaWxzLnZlcnNpb24sCiAgICAndHlwZSc6ICd1c2VycycsCiAgICAncnVsZSc6IGZ1bmN0aW9uIGFjY291bnRNYXRjaChhY3Rpb24sIGZlZWQsIHdvcmtzT25Vc2VyUGFnZSkgewogICAgICBpZiAoZGV0YWlscy5tYXRjaGYgJiYgIWRldGFpbHMubWF0Y2hmKGZlZWQpKSByZXR1cm47CiAgICAgIHZhciBhY2NvdW50cyA9IHRoaXMuY29uZi5jb25jYXQodGhpcy5leHRlbnQpOwogICAgICB2YXIgb2lkID0gdXRpbC5pbmZvLm9pZCgpOwogICAgICB2YXIgaWQgPSB3ZWliby5mZWVkLmF1dGhvci5pZChmZWVkKSB8fCBvaWQ7CiAgICAgIGlmICgoIWlkIHx8IGlkID09PSBvaWQpICYmICF3b3Jrc09uVXNlclBhZ2UpIHJldHVybiBudWxsOwogICAgICB2YXIgbWF0Y2ggPSBhY2NvdW50cy5pbmRleE9mKGlkKSAhPT0gLTE7CiAgICAgIGlmIChtYXRjaCkgZmVlZC5zZXRBdHRyaWJ1dGUoJ3lhd2YtcmVhc29uJywKICAgICAgICB1dGlsLnN0ci5maWxsKCd7e3snICsgZGV0YWlscy5uYW1lICsgJ0ZpbHRlclJlYXNvbn19fScsCiAgICAgICAgewogICAgICAgICAgJ2RldGFpbCc6IHdlaWJvLmZlZWQuYXV0aG9yLm5hbWUoZmVlZCkgfHwKICAgICAgICAgICAgKGlkID09PSBvaWQgJiYgdXRpbC5pbmZvLm9uaWNrKCkpIHx8IG51bGwKICAgICAgICB9KSk7CiAgICAgIGlmIChtYXRjaCkgcmV0dXJuIGFjdGlvbjsgZWxzZSByZXR1cm4gbnVsbDsKICAgIH0sCiAgICAnYmxhY2tsaXN0JzogewogICAgICAnb3ZlcnJpZGUnOiB7CiAgICAgICAgJ3J1bGUnOiBmdW5jdGlvbiBhY2NvdW50TWF0Y2hCbGFja2xpc3RPdmVycmlkZShfc3VwZXIpIHsKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiBhY2NvdW50TWF0Y2hCbGFja2xpc3QoZmVlZCkgewogICAgICAgICAgICBpZiAoIWZpbHRlci5pdGVtcy5iYXNlLmdyb3VwaW5nLmdyb3VwX2FjY291bnQuY29uZiB8fCAhdXRpbC5wYWdlLmdyb3VwKCkpIHJldHVybiBfc3VwZXIoZmVlZCk7CiAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgfTsKICAgICAgICB9LAogICAgICB9LAogICAgfSwKICAgICd3aGl0ZWxpc3QnOiB7CiAgICAgICdvdmVycmlkZSc6IHsKICAgICAgICAncnVsZSc6IGZ1bmN0aW9uIGFjY291bnRNYXRjaFdoaXRlbGlzdE92ZXJyaWRlKF9zdXBlcikgewogICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIGFjY291bnRNYXRjaFdoaXRlbGlzdChmZWVkKSB7CiAgICAgICAgICAgIHJldHVybiBfc3VwZXIoZmVlZCwgdHJ1ZSk7CiAgICAgICAgICB9OwogICAgICAgIH0sCiAgICAgIH0sCiAgICB9LAogICAgJ2NvbXBsZXRlJzogJ3VzZXInLAogICAgJ2Zhc3QnOiB7CiAgICAgICd2YWxpZGF0b3InOiBmaWx0ZXIuZmFzdC5hY2NvdW50LnZhbGlkYXRvciwKICAgICAgJ3JlY29nbml6ZXInOiBmaWx0ZXIuZmFzdC5hY2NvdW50LnJlY29nbml6ZXIsCiAgICAgICdzZWxlY3RlZCc6IGZpbHRlci5mYXN0LnNlbGVjdGVkLmF1dGhvciwKICAgICAgJ2FkZCc6IGZpbHRlci5mYXN0LmFjY291bnQuYWRkaWQsCiAgICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICAgJ2dyb3VwJzogJ2FjY291bnQnLCAnbmFtZSc6IGRldGFpbHMubmFtZSwKICAgICAgICAnYXR0cic6ICduYW1lJywgJ2Nob3Nlbic6IGRldGFpbHMuY2hvc2VuCiAgICAgIH0pLAogICAgICAnY29udGV4dG1lbnUnOiB3ZWliby5mZWVkLmF1dGhvci5kb20sCiAgICAgICdtZW51ZGVzYyc6IGZ1bmN0aW9uIChhdXRob3IpIHsKICAgICAgICByZXR1cm4gdXRpbC5zdHIuZmlsbCgne3t7JyArIGRldGFpbHMubmFtZSArICdGaWx0ZXJDb250ZXh0TWVudX19fScsIHsgJ25hbWUnOiBhdXRob3IudGV4dENvbnRlbnQudHJpbSgpIH0pOwogICAgICB9LAogICAgfQogIH07CiAgaWYgKGRldGFpbHMubGlzdHR5cGUpIGl0ZW0ubGlzdHR5cGUgPSBkZXRhaWxzLmxpc3R0eXBlOwogIGlmIChkZXRhaWxzLmNvbnRleHRtZW51KSBpdGVtLmZhc3QuY29udGV4dG1lbnUgPSBkZXRhaWxzLmNvbnRleHRtZW51OwogIHJldHVybiBmaWx0ZXIucHJlZGVmLndiZmMoaXRlbSwgZmlsdGVyLmdyb3Vwcy5hY2NvdW50KTsKfTsKCmZpbHRlci5wcmVkZWYuZ3JvdXAoJ2FjY291bnQnKS5hZGR0byhmaWx0ZXIuZ3JvdXBzLmJhc2UpOwoKLy8g5L2c6ICF55So5oi36L+H5rukCmZpbHRlci5wcmVkZWYuYWNjb3VudCh7CiAgJ25hbWUnOiAnYWNjb3VudCcsCiAgJ3ZlcnNpb24nOiA0LAogICdjaG9zZW4nOiB0cnVlLAp9KTsKCi8vIOi9rOWPkeeUqOaIt+i/h+a7pApmaWx0ZXIucHJlZGVmLmFjY291bnQoewogICduYW1lJzogJ2FjY291bnRmJywKICAndmVyc2lvbic6IDIyNSwKICAnbWF0Y2hmJzogZnVuY3Rpb24gKGZlZWQpIHsKICAgIHJldHVybiAhIXdlaWJvLmZlZWQub3JpZ2luYWwuZG9tKGZlZWQpOwogIH0sCiAgJ2Nob3Nlbic6IGZhbHNlLAogICdsaXN0dHlwZSc6IFsnYmxhY2tsaXN0JywgJ2ZvbGRsaXN0J10sCiAgJ2NvbnRleHRtZW51JzogZnVuY3Rpb24gKGZlZWQpIHsKICAgIHJldHVybiB3ZWliby5mZWVkLm9yaWdpbmFsLmRvbShmZWVkKSA/IHdlaWJvLmZlZWQuYXV0aG9yLmRvbShmZWVkKSA6IG51bGw7CiAgfSwKfSk7CgovLyDljp/liJvnlKjmiLfov4fmu6QKZmlsdGVyLmdyb3Vwcy5vcmlnaW5hbCA9IGZpbHRlci5wcmVkZWYud2JmYyh7CiAgJ25hbWUnOiAnb3JpZ2luYWwnLAogICd2ZXJzaW9uJzogNCwKICAndHlwZSc6ICd1c2VycycsCiAgJ3J1bGUnOiBmdW5jdGlvbiBvcmlnaW5hbE1hdGNoKGFjdGlvbiwgZmVlZCkgewogICAgdmFyIG9yaWdpbmFscyA9IHRoaXMuY29uZi5jb25jYXQodGhpcy5leHRlbnQpLCBpZCA9IFt3ZWliby5mZWVkLm9yaWdpbmFsLmlkKGZlZWQpXTsKICAgIGlmIChmaWx0ZXIuaXRlbXMub3JpZ2luYWwuYmxhY2tsaXN0X2QuY29uZiAmJiB1dGlsLnBhZ2UuZGlzY292ZXJ5KSBpZC5wdXNoKHdlaWJvLmZlZWQuYXV0aG9yLmlkKGZlZWQpKTsKICAgIGlkID0gaWQuZmlsdGVyKEJvb2xlYW4pOyBpZiAoIWlkLmxlbmd0aCkgcmV0dXJuIG51bGw7CiAgICB2YXIgbWF0Y2ggPSBvcmlnaW5hbHMuc29tZShmdW5jdGlvbiAoeCkgeyByZXR1cm4gaWQuaW5kZXhPZih4KSAhPT0gLTE7IH0pOwogICAgaWYgKG1hdGNoKSBmZWVkLnNldEF0dHJpYnV0ZSgneWF3Zi1yZWFzb24nLCB1dGlsLnN0ci5maWxsKHRleHQub3JpZ2luYWxGaWx0ZXJSZWFzb24sIHsgJ2RldGFpbCc6IHdlaWJvLmZlZWQub3JpZ2luYWwubmFtZShmZWVkKSB9KSk7CiAgICBpZiAobWF0Y2gpIHJldHVybiBhY3Rpb247IGVsc2UgcmV0dXJuIG51bGw7CiAgfSwKICAndGl0bGUnOiB7CiAgICAnYWZ0ZXInOiBmdW5jdGlvbiAoKSB7CiAgICAgIC8vIOW8gOWQr+ivpemAiemhueWQjuWPkeeOsOmhtemdouaXtui9rOWPkeiHquinhOWImeWvueS9nOiAheWQjOagt+eUn+aViAogICAgICBmaWx0ZXIuaXRlbXMub3JpZ2luYWwuYmxhY2tsaXN0X2QgPSBmaWx0ZXIuaXRlbSh7CiAgICAgICAgJ2dyb3VwJzogJ29yaWdpbmFsJywKICAgICAgICAndmVyc2lvbic6IDIyOCwKICAgICAgICAndHlwZSc6ICdib29sZWFuJywKICAgICAgICAnZGVmYXVsdCc6IHRydWUsCiAgICAgICAgJ2tleSc6ICd3ZWliby5vcmlnaW5hbC5ibGFja2xpc3RfZCcsCiAgICAgICAgJ3RleHQnOiAne3thY3RPbkRpc2NvdmVyeVBhZ2V9fScsCiAgICAgIH0pLmFkZHRvKGZpbHRlci5ncm91cHMub3JpZ2luYWwpOwogICAgfSwKICB9LAogICdjb21wbGV0ZSc6ICd1c2VyJywKICAnZmFzdCc6IHsKICAgICd2YWxpZGF0b3InOiBmaWx0ZXIuZmFzdC5hY2NvdW50LnZhbGlkYXRvciwKICAgICdyZWNvZ25pemVyJzogZmlsdGVyLmZhc3QuYWNjb3VudC5yZWNvZ25pemVyLAogICAgJ3NlbGVjdGVkJzogZmlsdGVyLmZhc3Quc2VsZWN0ZWQub3JpZ2luYWwsCiAgICAnYWRkJzogZmlsdGVyLmZhc3QuYWNjb3VudC5hZGRpZCwKICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICdncm91cCc6ICdvcmlnaW5hbCcsICduYW1lJzogJ29yaWdpbmFsJywKICAgICAgJ2F0dHInOiAnbmFtZScsICdjaG9zZW4nOiB0cnVlCiAgICB9KSwKICAgICdjb250ZXh0bWVudSc6IGZ1bmN0aW9uIChmZWVkKSB7CiAgICAgIHZhciBvcmlnaW5hbCA9IHdlaWJvLmZlZWQub3JpZ2luYWwuZG9tKGZlZWQpLCBhdXRob3IgPSBudWxsOwogICAgICBpZiAoZmlsdGVyLml0ZW1zLm9yaWdpbmFsLmJsYWNrbGlzdF9kLmNvbmYgJiYgdXRpbC5wYWdlLmRpc2NvdmVyeSkKICAgICAgICBhdXRob3IgPSB3ZWliby5mZWVkLmF1dGhvci5kb20oZmVlZCk7CiAgICAgIHJldHVybiBbb3JpZ2luYWwsIGF1dGhvcl0uZmlsdGVyKEJvb2xlYW4pOwogICAgfSwKICAgICdtZW51ZGVzYyc6IGZ1bmN0aW9uIChvcmlnaW5hbCkgewogICAgICByZXR1cm4gdXRpbC5zdHIuZmlsbCh0ZXh0Lm9yaWdpbmFsRmlsdGVyQ29udGV4dE1lbnUsIHsgJ25hbWUnOiBvcmlnaW5hbC50ZXh0Q29udGVudC50cmltKCkucmVwbGFjZSgvXkAvLCAnJykgfSk7CiAgICB9LAogIH0KfSk7CgovLyDmoLnmja7ljp/kvZzogIXnsonkuJ3mlbDov4fmu6QKZmlsdGVyLmdyb3Vwcy5vcmlnaW5hbC5ieV9mb2xsb3dlciA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnb3JpZ2luYWwnLAogICd2ZXJzaW9uJzogNDg5LAogICd0eXBlJzogJ3VzZXJzJywKICAna2V5JzogJ3dlaWJvLm9yaWdpbmFsLmJ5X2ZvbGxvd2VyJywKICAndGV4dCc6ICd7e29yaWdpbmFsRm9sbG93ZXJGaWx0ZXJ9fScsCiAgJ3JlZic6IHsKICAgICdlbmFibGVkJzogewogICAgICAndHlwZSc6ICdib29sZWFuJywKICAgICAgJ2RlZmF1bHQnOiBmYWxzZSwKICAgIH0sCiAgICAnZmFucyc6IHsKICAgICAgJ3R5cGUnOiAncmFuZ2UnLAogICAgICAnbWluJzogMSwKICAgICAgJ21heCc6IDEwMCwKICAgICAgJ2RlZmF1bHQnOiAxMCwKICAgIH0sCiAgICAnaSc6IHsKICAgICAgJ3R5cGUnOiAnc2ljb24nLAogICAgICAnaWNvbic6ICdhc2snLAogICAgICAndGV4dCc6ICd7e29yaWdpbmFsRm9sbG93ZXJGaWx0ZXJEZXNjfX0nLAogICAgfQogIH0sCiAgJ2luaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgcnVsZSA9IHRoaXM7CiAgICBvYnNlcnZlci53ZWliby5vbmxvYWQoZnVuY3Rpb24gKGZlZWQpIHsKICAgICAgaWYgKCFydWxlLnJlZi5lbmFibGVkLmNvbmYpIHJldHVybjsKICAgICAgdmFyIHdoaXRlbGlzdCA9IHJ1bGUuY29uZi5jb25jYXQoZmlsdGVyLml0ZW1zLm9yaWdpbmFsLndoaXRlbGlzdC5jb25mKTsKICAgICAgdmFyIGlkID0gW3dlaWJvLmZlZWQub3JpZ2luYWwuaWQoZmVlZCldOwogICAgICBpZiAoZmlsdGVyLml0ZW1zLm9yaWdpbmFsLmJsYWNrbGlzdF9kLmNvbmYgJiYgdXRpbC5wYWdlLmRpc2NvdmVyeSkgaWQucHVzaCh3ZWliby5mZWVkLmF1dGhvci5pZChmZWVkKSk7CiAgICAgIGlkID0gaWQuZmlsdGVyKGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gaWQgJiYgd2hpdGVsaXN0LmluZGV4T2YoaWQpID09PSAtMTsgfSk7CiAgICAgIGlmICghaWQubGVuZ3RoKSByZXR1cm4gbnVsbDsKICAgICAgZmVlZC5zZXRBdHRyaWJ1dGUoJ3lhd2YtZmVlZC1mb2xsb3dlcicsICcnKTsKICAgICAgdmFyIGNvdW50ID0gMCwgZG9uZSA9IGZhbHNlOwogICAgICB2YXIgZmFpbCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoZG9uZSkgcmV0dXJuOyBkb25lID0gdHJ1ZTsKICAgICAgICBmaWx0ZXIuZml4LmhpZGRlbi5kb25lKGZlZWQpOwogICAgICAgIHV0aWwuZGVidWcoJ1dlaWJvIGhpZGRlbiBieSBmb2xsb3dlciBudW1iZXI6ICVvJywgZmVlZCk7CiAgICAgIH07CiAgICAgIHZhciB0YXJnZXQgPSBydWxlLnJlZi5mYW5zLmNvbmYgKiAxZTQ7CiAgICAgIHZhciBwYXNzID0gZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChkb25lKSByZXR1cm47CiAgICAgICAgaWYgKCsrY291bnQgIT09IGlkLmxlbmd0aCkgcmV0dXJuOwogICAgICAgIGRvbmUgPSB0cnVlOwogICAgICAgIGZlZWQucmVtb3ZlQXR0cmlidXRlKCd5YXdmLWZlZWQtZm9sbG93ZXInKTsKICAgICAgfTsKICAgICAgaWQuZm9yRWFjaChmdW5jdGlvbiAoaWQpIHsKICAgICAgICBuZXR3b3JrLmFjY291bnQuaWQoaWQsIGZ1bmN0aW9uIChhY2NvdW50KSB7CiAgICAgICAgICBpZiAoYWNjb3VudC5mb2xsb3dlciA8IHRhcmdldCkgcGFzcygpOwogICAgICAgICAgZWxzZSBmYWlsKCk7CiAgICAgICAgfSwgZmFpbCk7CiAgICAgIH0pOwogICAgfSk7CiAgICB1dGlsLmNzcy5hZGQoJy5XQl9mZWVkX3R5cGVbeWF3Zi1mZWVkLWZvbGxvd2VyXSB7IHZpc2liaWxpdHk6IGhpZGRlbjsgfScpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3JpZ2luYWwpOwoKLy8g5o+Q5Yiw5p+Q5Lq655qE5b6u5Y2aCmZpbHRlci5ncm91cHMubWVudGlvbiA9IGZpbHRlci5wcmVkZWYud2JmYyh7CiAgJ25hbWUnOiAnbWVudGlvbicsCiAgJ3ZlcnNpb24nOiA0LAogICd0eXBlJzogJ3N0cmluZ3MnLAogICdhZGQnOiBmdW5jdGlvbiAocykgeyByZXR1cm4gcy50cmltKCkucmVwbGFjZSgvXkAvLCAnJykgfHwgbnVsbDsgfSwKICAnZGlzcGxheSc6IGZ1bmN0aW9uIChzKSB7IHJldHVybiAnQCcgKyBzOyB9LAogICdydWxlJzogZnVuY3Rpb24gbWVudGlvbk1hdGNoKGFjdGlvbiwgZmVlZCkgewogICAgdmFyIG1lbnRpb25zID0gdGhpcy5jb25mLmNvbmNhdCh0aGlzLmV4dGVudCksIHVzZXJzID0gd2VpYm8uZmVlZC5tZW50aW9ucy5uYW1lKGZlZWQpOwogICAgdmFyIG1hdGNoID0gdXNlcnMuc29tZShmdW5jdGlvbiAobmFtZSkgewogICAgICB2YXIgaW5kZXggPSBtZW50aW9ucy5pbmRleE9mKG5hbWUpOwogICAgICBpZiAoaW5kZXggPT09IC0xKSByZXR1cm4gZmFsc2U7CiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXJlYXNvbicsIHV0aWwuc3RyLmZpbGwodGV4dC5tZW50aW9uRmlsdGVyUmVhc29uLCB7ICdkZXRhaWwnOiBtZW50aW9uc1tpbmRleF0gfSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0pOwogICAgaWYgKG1hdGNoKSByZXR1cm4gYWN0aW9uOyBlbHNlIHJldHVybiBudWxsOwogIH0sCiAgJ2NvbXBsZXRlJzogJ3VzZXInLAogICdmYXN0JzogewogICAgJ3ZhbGlkYXRvcic6IGZpbHRlci5mYXN0LmFjY291bnQudmFsaWRhdG9yLAogICAgJ3JlY29nbml6ZXInOiBmaWx0ZXIuZmFzdC5hY2NvdW50LnJlY29nbml6ZXIsCiAgICAnc2VsZWN0ZWQnOiBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5tZW50aW9uLAogICAgJ2FkZCc6IGZpbHRlci5mYXN0LmFjY291bnQuYWRkbmFtZSwKICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICdncm91cCc6ICdtZW50aW9uJywgJ25hbWUnOiAnbWVudGlvbicsCiAgICAgICdhdHRyJzogJ25hbWUnLCAnY2hvc2VuJzogdHJ1ZQogICAgfSksCiAgICAnY29udGV4dG1lbnUnOiB3ZWliby5mZWVkLm1lbnRpb25zLmRvbSwKICAgICdtZW51Z3JvdXBlZCc6ICd7e21lbnRpb25GaWx0ZXJDb250ZXh0TWVudUdyb3VwfX0nLAogICAgJ21lbnVkZXNjJzogZnVuY3Rpb24gKG1lbnRpb24pIHsKICAgICAgcmV0dXJuIHV0aWwuc3RyLmZpbGwodGV4dC5tZW50aW9uRmlsdGVyQ29udGV4dE1lbnUsIHsgJ25hbWUnOiBtZW50aW9uLnRleHRDb250ZW50LnRyaW0oKS5yZXBsYWNlKC9eQC8sICcnKSB9KTsKICAgIH0sCiAgfQp9KTsKCi8vIOivnemimOi/h+a7pApmaWx0ZXIucHJlZGVmLmdyb3VwKCd0b3BpYycpLmFkZHRvKGZpbHRlci5ncm91cHMuYmFzZSk7CgpmaWx0ZXIucHJlZGVmLndiZmMoewogICduYW1lJzogJ3RvcGljJywKICAndmVyc2lvbic6IDIsCiAgJ2FkZCc6IGZ1bmN0aW9uIChzKSB7IHJldHVybiBzLnRyaW0oKS5yZXBsYWNlKC9bI1x1ZTYyN10vZywgJycpIHx8IG51bGw7IH0sCiAgJ2Rpc3BsYXknOiBmdW5jdGlvbiAocykgeyByZXR1cm4gJyMnICsgcyArICcjJzsgfSwKICAncnVsZSc6IGZ1bmN0aW9uIHRvcGljTWF0Y2goYWN0aW9uLCBmZWVkKSB7CiAgICB2YXIgdG9waWNzID0gdGhpcy5jb25mLmNvbmNhdCh0aGlzLmV4dGVudCk7CiAgICB2YXIgdG9waWNUZXh0ID0gd2VpYm8uZmVlZC50b3BpY3MudGV4dChmZWVkKS5qb2luKCcjIycpOwogICAgdmFyIG1hdGNoID0gdG9waWNzLnNvbWUoZnVuY3Rpb24gKHRvcGljKSB7CiAgICAgIGlmICh0b3BpY1RleHQuaW5kZXhPZih0b3BpYykgPT09IC0xKSByZXR1cm4gZmFsc2U7CiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXJlYXNvbicsIHV0aWwuc3RyLmZpbGwodGV4dC50b3BpY0ZpbHRlclJlYXNvbiwgeyAnZGV0YWlsJzogdG9waWMgfSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0pOwogICAgaWYgKG1hdGNoKSByZXR1cm4gYWN0aW9uOyBlbHNlIHJldHVybiBudWxsOwogIH0sCiAgJ2NvbXBsZXRlJzogJ3RvcGljJywKICAnZmFzdCc6IHsKICAgICd2YWxpZGF0b3InOiBmaWx0ZXIuZmFzdC50b3BpYy52YWxpZGF0b3IsCiAgICAncmVjb2duaXplcic6IGZpbHRlci5mYXN0LnRvcGljLnJlY29nbml6ZXIudG9waWMsCiAgICAnc2VsZWN0ZWQnOiBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5mZWVkLAogICAgJ2FkZCc6IGZpbHRlci5mYXN0LnRvcGljLmFkZCwKICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICdncm91cCc6ICd0b3BpYycsICduYW1lJzogJ3RvcGljJywKICAgICAgJ2F0dHInOiAndG9waWMnLCAnaW5wdXQnOiB0cnVlLCAnY2hvc2VuJzogdHJ1ZQogICAgfSksCiAgICAnY29udGV4dG1lbnUnOiB3ZWliby5mZWVkLnRvcGljcy5kb20sCiAgICAnbWVudWdyb3VwZWQnOiAne3t0b3BpY0ZpbHRlckNvbnRleHRNZW51R3JvdXB9fScsCiAgICAnbWVudWRlc2MnOiBmdW5jdGlvbiAodG9waWMpIHsKICAgICAgdmFyIHRvcGljVGV4dCA9ICh0b3BpYy5oYXNBdHRyaWJ1dGUoJ3lhd2YtdG9waWMnKSA/IHRvcGljLmdldEF0dHJpYnV0ZSgneWF3Zi10b3BpYycpIDogdG9waWMudGV4dENvbnRlbnQpLnRyaW0oKS5yZXBsYWNlKC8jL2csICcnKTsKICAgICAgcmV0dXJuIHV0aWwuc3RyLmZpbGwodGV4dC50b3BpY0ZpbHRlckNvbnRleHRNZW51LCB7ICd0b3BpYyc6IHRvcGljVGV4dCB9KTsKICAgIH0sCiAgfQp9LCBmaWx0ZXIuZ3JvdXBzLnRvcGljKTsKCi8vIOato+WImeivnemimApmaWx0ZXIucHJlZGVmLndiZmMoewogICduYW1lJzogJ3J0b3BpYycsCiAgJ3ZlcnNpb24nOiA1MiwKICAnYWRkJzogdXRpbC5zdHIuYWRkcmVnZXgsCiAgJ2Rpc3BsYXknOiBmdW5jdGlvbiAocykgeyByZXR1cm4gJy8nICsgcyArICcvJzsgfSwKICAncnVsZSc6IGZ1bmN0aW9uIHJ0b3BpY01hdGNoKGFjdGlvbiwgZmVlZCkgewogICAgdmFyIHJlZ2V4ZW4gPSB0aGlzLmNvbmYuY29uY2F0KHRoaXMuZXh0ZW50KS5tYXAodXRpbC5zdHIuY29tcHJlZ2V4KS5maWx0ZXIoQm9vbGVhbik7CiAgICB2YXIgdG9waWNzID0gd2VpYm8uZmVlZC50b3BpY3MudGV4dChmZWVkKTsKICAgIHZhciBtYXRjaCA9IHJlZ2V4ZW4uc29tZShmdW5jdGlvbiAocmVnZXhwKSB7CiAgICAgIHJldHVybiB0b3BpY3Muc29tZShmdW5jdGlvbiAodG9waWMpIHsKICAgICAgICBpZiAoIXJlZ2V4cC5leGVjKHRvcGljKSkgcmV0dXJuIGZhbHNlOwogICAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXJlYXNvbicsIHV0aWwuc3RyLmZpbGwodGV4dC5ydG9waWNGaWx0ZXJSZWFzb24sIHsgJ2RldGFpbCc6IHJlZ2V4cCArICcnIH0pKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSk7CiAgICB9KTsKICAgIGlmIChtYXRjaCkgcmV0dXJuIGFjdGlvbjsgZWxzZSByZXR1cm4gbnVsbDsKICB9LAogICdmYXN0JzogewogICAgJ3ZhbGlkYXRvcic6IGZpbHRlci5mYXN0LnRvcGljLnZhbGlkYXRvciwKICAgICdyZWNvZ25pemVyJzogZmlsdGVyLmZhc3QudG9waWMucmVjb2duaXplci5ydG9waWMsCiAgICAnc2VsZWN0ZWQnOiBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5uZXZlciwKICAgICdhZGQnOiBmaWx0ZXIuZmFzdC50b3BpYy5hZGQsCiAgICAnZGVzY3JpcHRpb24nOiBmaWx0ZXIuZmFzdC5kZXNjcmlwdGlvbi5nZW4oewogICAgICAnZ3JvdXAnOiAndG9waWMnLCAnbmFtZSc6ICdydG9waWMnLAogICAgICAnYXR0cic6ICd0b3BpYycsICdpbnB1dCc6IHRydWUsICdjaG9zZW4nOiBmYWxzZQogICAgfSksCiAgfQp9LCBmaWx0ZXIuZ3JvdXBzLnRvcGljKTsKCi8vIOadpea6kOi/h+a7pApmaWx0ZXIuZ3JvdXBzLnNvdXJjZSA9IGZpbHRlci5wcmVkZWYud2JmYyh7CiAgJ25hbWUnOiAnc291cmNlJywKICAndmVyc2lvbic6IDIsCiAgJ2FkZCc6IGZ1bmN0aW9uIChzKSB7CiAgICBzID0gcy50cmltKCk7CiAgICBpZiAocyA9PT0gdGV4dC5kZWZhdWx0U291cmNlKSB7CiAgICAgIHV0aWwudWkuYWxlcnQoJ3lhd2Ytc291cmNlLWZpbHRlci13YXJuaW5nJywgewogICAgICAgICd0aXRsZSc6IHV0aWwuc3RyLmZpbGwoJ3t7c291cmNlRmlsdGVyV2FybmluZ1RpdGxlfX0nKSwKICAgICAgICAndGV4dCc6IHV0aWwuc3RyLmZpbGwoJ3t7c291cmNlRmlsdGVyV2FybmluZ319JyksCiAgICAgICAgJ2ljb24nOiAnZXJyb3InCiAgICAgIH0pOwogICAgICBzID0gbnVsbDsKICAgIH0KICAgIHJldHVybiBzOwogIH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiBzb3VyY2VNYXRjaChhY3Rpb24sIGZlZWQpIHsKICAgIHZhciBzb3VyY2VzID0gdGhpcy5jb25mLmNvbmNhdCh0aGlzLmV4dGVudCksIF9zb3VyY2VzID0gd2VpYm8uZmVlZC5zb3VyY2VzLnRleHQoZmVlZCk7CiAgICB2YXIgbWF0Y2ggPSBfc291cmNlcy5zb21lKGZ1bmN0aW9uIChzKSB7CiAgICAgIGlmIChzb3VyY2VzLmluZGV4T2YocykgPT09IC0xKSByZXR1cm4gZmFsc2U7CiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXJlYXNvbicsIHV0aWwuc3RyLmZpbGwodGV4dC5zb3VyY2VGaWx0ZXJSZWFzb24sIHsgJ2RldGFpbCc6IHMgfSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0pOwogICAgaWYgKG1hdGNoKSByZXR1cm4gYWN0aW9uOyBlbHNlIHJldHVybiBudWxsOwogIH0sCiAgJ2Zhc3QnOiB7CiAgICAndmFsaWRhdG9yJzogZmlsdGVyLmZhc3Quc291cmNlLnZhbGlkYXRvciwKICAgICdyZWNvZ25pemVyJzogZmlsdGVyLmZhc3Quc291cmNlLnJlY29nbml6ZXIsCiAgICAnc2VsZWN0ZWQnOiBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5hbHdheXMsCiAgICAnYWRkJzogZmlsdGVyLmZhc3Quc291cmNlLmFkZCwKICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICdncm91cCc6ICdzb3VyY2UnLCAnbmFtZSc6ICdzb3VyY2UnLAogICAgICAnYXR0cic6ICdzb3VyY2UnLCAnY2hvc2VuJzogdHJ1ZQogICAgfSksCiAgICAnY29udGV4dG1lbnUnOiB3ZWliby5mZWVkLnNvdXJjZXMuZG9tLAogICAgJ21lbnVncm91cGVkJzogJ3t7c291cmNlRmlsdGVyQ29udGV4dE1lbnVHcm91cH19JywKICAgICdtZW51ZGVzYyc6IGZ1bmN0aW9uIChzb3VyY2UpIHsKICAgICAgdmFyIHRleHQgPSBudWxsOwogICAgICBmaWx0ZXIuZmFzdC5zb3VyY2UucmVjb2duaXplcihzb3VyY2UsIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgIGlmICh2YWx1ZSkgdGV4dCA9IHV0aWwuc3RyLmZpbGwoJ3t7e3NvdXJjZUZpbHRlckNvbnRleHRNZW51fX19JywgdmFsdWUpOwogICAgICB9KTsKICAgICAgcmV0dXJuIHRleHQ7CiAgICB9LAogIH0KfSk7CgovLyDotoXpk77mjqXov4fmu6QKZmlsdGVyLnByZWRlZi5ncm91cCgnaHlwZXJsaW5rJykuYWRkdG8oZmlsdGVyLmdyb3Vwcy5iYXNlKTsKCi8vIOi2hemTvuaOpeWcsOWdgOi/h+a7pApmaWx0ZXIucHJlZGVmLndiZmMoewogICduYW1lJzogJ2h5cGVybGluaycsCiAgJ3ZlcnNpb24nOiAzNTAsCiAgJ2FkZCc6IGZ1bmN0aW9uIChzKSB7IHJldHVybiBzLnRyaW0oKSB8fCBudWxsOyB9LAogICdydWxlJzogZnVuY3Rpb24gaHlwZXJsaW5rTWF0Y2goYWN0aW9uLCBmZWVkKSB7CiAgICB2YXIgbGlua3MgPSB0aGlzLmNvbmYuY29uY2F0KHRoaXMuZXh0ZW50KSwgX2xpbmtzID0gd2VpYm8uZmVlZC5oeXBlcmxpbmtzLnRleHQoZmVlZCk7CiAgICB2YXIgbWF0Y2ggPSBfbGlua3Muc29tZShmdW5jdGlvbiAobCkgewogICAgICByZXR1cm4gbGlua3Muc29tZShmdW5jdGlvbiAobGluaykgewogICAgICAgIGlmIChsLmluZGV4T2YobGluaykgPT09IC0xKSByZXR1cm4gZmFsc2U7CiAgICAgICAgZmVlZC5zZXRBdHRyaWJ1dGUoJ3lhd2YtcmVhc29uJywgdXRpbC5zdHIuZmlsbCh0ZXh0Lmh5cGVybGlua0ZpbHRlclJlYXNvbiwgeyAnZGV0YWlsJzogbGluayB9KSk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0pOwogICAgfSk7CiAgICBpZiAobWF0Y2gpIHJldHVybiBhY3Rpb247IGVsc2UgcmV0dXJuIG51bGw7CiAgfSwKICAnZmFzdCc6IHsKICAgICd2YWxpZGF0b3InOiBmaWx0ZXIuZmFzdC5oeXBlcmxpbmsudmFsaWRhdG9yLAogICAgJ3JlY29nbml6ZXInOiBmaWx0ZXIuZmFzdC5oeXBlcmxpbmsucmVjb2duaXplciwKICAgICdzZWxlY3RlZCc6IGZpbHRlci5mYXN0LnNlbGVjdGVkLmZlZWQsCiAgICAnYWRkJzogZmlsdGVyLmZhc3QuaHlwZXJsaW5rLmFkZCwKICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICdncm91cCc6ICdoeXBlcmxpbmsnLCAnbmFtZSc6ICdoeXBlcmxpbmsnLAogICAgICAnYXR0cic6ICd1cmwnLCAnY2hvc2VuJzogdHJ1ZQogICAgfSksCiAgICAnY29udGV4dG1lbnUnOiB3ZWliby5mZWVkLmh5cGVybGlua3MuZG9tLAogICAgJ21lbnVncm91cGVkJzogJ3t7aHlwZXJsaW5rRmlsdGVyQ29udGV4dE1lbnVHcm91cH19JywKICAgICdtZW51ZGVzYyc6IGZ1bmN0aW9uIChoeXBlcmxpbmspIHsKICAgICAgcmV0dXJuIHV0aWwuc3RyLmZpbGwodGV4dC5oeXBlcmxpbmtGaWx0ZXJDb250ZXh0TWVudSwgeyAndXJsJzogaHlwZXJsaW5rLmhyZWYgfSk7CiAgICB9LAogIH0sCn0sIGZpbHRlci5ncm91cHMuaHlwZXJsaW5rKTsKCi8vIOi2hemTvuaOpeagh+mimOi/h+a7pApmaWx0ZXIucHJlZGVmLndiZmMoewogICduYW1lJzogJ2xpbmt0aXRsZScsCiAgJ3ZlcnNpb24nOiAyMDYsCiAgJ2FkZCc6IGZ1bmN0aW9uIChzKSB7IHJldHVybiBzLnRyaW0oKSB8fCBudWxsOyB9LAogICdydWxlJzogZnVuY3Rpb24gbGlua1RpdGxlTWF0Y2goYWN0aW9uLCBmZWVkKSB7CiAgICB2YXIgdGV4dHMgPSB0aGlzLmNvbmYuY29uY2F0KHRoaXMuZXh0ZW50KSwgdGl0bGVzID0gd2VpYm8uZmVlZC5saW5rdGl0bGUudGV4dChmZWVkKTsKICAgIHZhciBtYXRjaCA9IHRpdGxlcy5zb21lKGZ1bmN0aW9uICh0aXRsZSkgewogICAgICByZXR1cm4gdGV4dHMuc29tZShmdW5jdGlvbiAodCkgewogICAgICAgIGlmICh0aXRsZS5pbmRleE9mKHQpID09PSAtMSkgcmV0dXJuIGZhbHNlOwogICAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXJlYXNvbicsIHV0aWwuc3RyLmZpbGwodGV4dC5saW5rdGl0bGVGaWx0ZXJSZWFzb24sIHsgJ2RldGFpbCc6IHQgfSkpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9KTsKICAgIH0pOwogICAgaWYgKG1hdGNoKSByZXR1cm4gYWN0aW9uOyBlbHNlIHJldHVybiBudWxsOwogIH0sCiAgJ2Zhc3QnOiB7CiAgICAndmFsaWRhdG9yJzogZmlsdGVyLmZhc3QubGlua3RpdGxlLnZhbGlkYXRvciwKICAgICdyZWNvZ25pemVyJzogZmlsdGVyLmZhc3QubGlua3RpdGxlLnJlY29nbml6ZXIsCiAgICAnc2VsZWN0ZWQnOiBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5mZWVkLAogICAgJ2FkZCc6IGZpbHRlci5mYXN0Lmxpbmt0aXRsZS5hZGQsCiAgICAnZGVzY3JpcHRpb24nOiBmaWx0ZXIuZmFzdC5kZXNjcmlwdGlvbi5nZW4oewogICAgICAnZ3JvdXAnOiAnbGlua3RpdGxlJywgJ25hbWUnOiAnbGlua3RpdGxlJywKICAgICAgJ2F0dHInOiAndGl0bGUnLCAnaW5wdXQnOiB0cnVlLCAnY2hvc2VuJzogdHJ1ZQogICAgfSksCiAgICAnY29udGV4dG1lbnUnOiB3ZWliby5mZWVkLmxpbmt0aXRsZS5kb20sCiAgICAnbWVudWdyb3VwZWQnOiAne3tsaW5rdGl0bGVGaWx0ZXJDb250ZXh0TWVudUdyb3VwfX0nLAogICAgJ21lbnVkZXNjJzogZnVuY3Rpb24gKGxpbmspIHsKICAgICAgcmV0dXJuIHV0aWwuc3RyLmZpbGwodGV4dC5saW5rdGl0bGVGaWx0ZXJDb250ZXh0TWVudSwgeyAndGl0bGUnOiBsaW5rLnRpdGxlLnRyaW0oKSB9KTsKICAgIH0sCiAgfSwKfSwgZmlsdGVyLmdyb3Vwcy5oeXBlcmxpbmspOwoKLy8g5YW25LuW6L+H5ruk5ZmoCmZpbHRlci5wcmVkZWYuZ3JvdXAoJ290aGVyJykuYWRkdG8oZmlsdGVyLmdyb3Vwcy5iYXNlKTsKCi8vIOaAu+aYr+aYvuekuui/meS6m+WGheWuuQpmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCdvdGhlcicsICdzaG93dGhlc2UnLCAne3tvdGhlcldoaXRlbGlzdFRpdGxlfX0nKTsKCi8vIOaAu+aYr+aYvuekuuiHquW3seeahOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuc2hvd3RoZXNlLm15X3dlaWJvID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzaG93dGhlc2UnLAogICd2ZXJzaW9uJzogMjUsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci5teV93ZWlibycsCiAgJ3RleHQnOiAne3tzaG93TXlXZWlib0Rlc2N9fScsCiAgJ3ByaW9yaXR5JzogMWU1IC0gMWUzLCAvLyDnlaXkvY7kuo7nmb3lkI3ljZXvvIzkvYbpq5jkuo7lhbbku5YKICAncnVsZSc6IGZ1bmN0aW9uIHNob3dNeVdlaWJvUnVsZShmZWVkKSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuOwogICAgaWYgKHdlaWJvLmZlZWQuYXV0aG9yLmlkKGZlZWQpID09PSB1dGlsLmluZm8udWlkKSByZXR1cm4gJ3Nob3dtZSc7CiAgICBpZiAod2VpYm8uZmVlZC5hdXRob3IuaWQoZmVlZCkgPT09IG51bGwgJiYgdXRpbC5wYWdlLm15aG9tZSgpKSByZXR1cm4gJ3Nob3dtZSc7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOaAu+aYr+aYvuekuuiHquW3seWOn+WIm+eahOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuc2hvd3RoZXNlLm15X29yaWdpbmFsID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzaG93dGhlc2UnLAogICd2ZXJzaW9uJzogMjUsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci5teV9vcmlnaW5hbCcsCiAgJ3RleHQnOiAne3tzaG93TXlPcmlnaW5hbERlc2N9fScsCiAgJ3ByaW9yaXR5JzogMWU1IC0gMWUzLCAvLyDnlaXkvY7kuo7nmb3lkI3ljZXvvIzkvYbpq5jkuo7lhbbku5YKICAncnVsZSc6IGZ1bmN0aW9uIHNob3dNeU9yaWdpbmFsUnVsZShmZWVkKSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuOwogICAgaWYgKHdlaWJvLmZlZWQub3JpZ2luYWwuaWQoZmVlZCkgPT09IHV0aWwuaW5mby51aWQpIHJldHVybiAnc2hvd21lJzsgZWxzZSByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOaAu+aYr+aYvuekuuaPkOWIsOiHquW3seeahOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuc2hvd3RoZXNlLm1lbnRpb25fbWUgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ3Nob3d0aGVzZScsCiAgJ3ZlcnNpb24nOiAyNSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLm1lbnRpb25fbWUnLAogICd0ZXh0JzogJ3t7c2hvd01lbnRpb25NZURlc2N9fScsCiAgJ3ByaW9yaXR5JzogMWU1IC0gMWUzLCAvLyDnlaXkvY7kuo7nmb3lkI3ljZXvvIzkvYbpq5jkuo7lhbbku5YKICAncnVsZSc6IGZ1bmN0aW9uIHNob3dNZW50aW9uTWVSdWxlKGZlZWQpIHsKICAgIGlmICghdGhpcy5jb25mKSByZXR1cm47CiAgICBpZiAod2VpYm8uZmVlZC5tZW50aW9ucy5uYW1lKGZlZWQpLmluZGV4T2YodXRpbC5pbmZvLm5pY2spICE9PSAtMSkgcmV0dXJuICdzaG93bWUnOyBlbHNlIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g5o6o5bm/44CB5bm/5ZGK57G75b6u5Y2aCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ290aGVyJywgJ2hpZGV0aGVzZV9hZCcsICd7e290aGVyQmxhY2tsaXN0VGl0bGVBZH19Jyk7CgovLyDmjqjlub/lvq7ljZoKZmlsdGVyLml0ZW1zLm90aGVyLmhpZGV0aGVzZV9hZC5hZF9mZWVkID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfYWQnLAogICd2ZXJzaW9uJzogMiwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLmFkX2ZlZWQnLAogICd0ZXh0JzogJ3t7YWRmZWVkRmlsdGVyfX0nLAogICdwcmlvcml0eSc6IDFlNiAtIDFlMywgLy8g5qyh5pyA6auY5LyY5YWI57qnCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3thZGZlZWRGaWx0ZXJEZXNjfX0nIH0gfSwKICAncnVsZSc6IGZ1bmN0aW9uIGFkRmVlZEZpbHRlclJ1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQuZ2V0QXR0cmlidXRlKCdmZWVkdHlwZScpID09PSAnYWQnKSByZXR1cm4gJ2hpZGRlbic7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCdbYWN0aW9uLXR5cGU9ImZlZWRfbGlzdF9hZCJdJykpIHJldHVybiAnaGlkZGVuJzsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJ2FbaHJlZio9Ii8vYWRpbnNpZGUud2VpYm8uY24vIl0nKSkgcmV0dXJuICdoaWRkZW4nOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignW2Rpc3MtZGF0YSo9ImZlZWRhZCJdJykpIHJldHVybiAnaGlkZGVuJzsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJ1tzdWRhLXVhdHJhY2sqPSJpbnNlcnRfZmVlZCJdJykpIHJldHVybiAnaGlkZGVuJzsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJ1tzdWRhLXVhdHJhY2sqPSJuZWdhdGl2ZWZlZWRiYWNrXScpKSByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOeyieS4neWktOadoQpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2FkLmZhbnNfdG9wID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfYWQnLAogICd2ZXJzaW9uJzogNTYsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci5mYW5zX3RvcCcsCiAgJ3RleHQnOiAne3tmYW5zVG9wRmlsdGVyfX0nLAogICdwcmlvcml0eSc6IDFlNiwgLy8g5LyY5YWI5LqO55m95ZCN5Y2VCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tmYW5zVG9wRmlsdGVyRGVzY319JyB9IH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiBmYW5zVG9wRmlsdGVyUnVsZShmZWVkKSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuIG51bGw7CiAgICByZXR1cm4gZmVlZC5xdWVyeVNlbGVjdG9yKCdbYWRjYXJkPSJmYW5zdG9wIl0nKSA/ICdoaWRkZW4nIDogbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOacieWVhuWTgeWNoeeJh+eahOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2FkLnByb2R1Y3RfY2FyZCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnaGlkZXRoZXNlX2FkJywKICAndmVyc2lvbic6IDI2NSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLnByb2R1Y3RfY2FyZCcsCiAgJ3RleHQnOiAne3twcm9kdWN0Q2FyZFdlaWJvfX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7cHJvZHVjdENhcmRXZWlib0Rlc2N9fScgfSB9LAogICdydWxlJzogZnVuY3Rpb24gcHJvZHVjdENhcmRGaWx0ZXJSdWxlKGZlZWQpIHsKICAgIGlmICghdGhpcy5jb25mKSByZXR1cm4gbnVsbDsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJy5XQl9mZWVkX3NwZWNbZXhwLWRhdGEqPSJrZXk9dGJsb2dfd2VpYm9jYXJkIl1bZXhwLWRhdGEqPSIxMDIyLXByb2R1Y3QiXScpKQogICAgICByZXR1cm4gJ2hpZGRlbic7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCcuV0JfZmVlZF9zcGVjW2V4cC1kYXRhKj0ia2V5PXRibG9nX3dlaWJvY2FyZCJdW2V4cC1kYXRhKj0iMjAxNzg0NTAwMi1wcm9kdWN0Il0nKSkKICAgICAgcmV0dXJuICdoaWRkZW4nOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignYVthY3Rpb24tdHlwZT0iZmVlZF9saXN0X3VybCJdW3N1ZGEtdWF0cmFjayo9IjIwMTc4NDUwMDItcHJvZHVjdCJdJykpCiAgICAgIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g5reY5a6dL+WkqeeMq+WVhuWTgQpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2FkLnRiX3RtX3diID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfYWQnLAogICd2ZXJzaW9uJzogMjksCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci50Yl90bV93YicsCiAgJ3RleHQnOiAne3t0YW9iYW9UaWFubWFvV2VpYm99fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3t0YW9iYW9UaWFubWFvV2VpYm9EZXNjfX0nIH0gfSwKICAncnVsZSc6IGZ1bmN0aW9uIHRhb2Jhb1RpYW5tYW9GaWx0ZXJSdWxlKGZlZWQpIHsKICAgIGlmICghdGhpcy5jb25mKSByZXR1cm4gbnVsbDsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJy5pY29uX2NkX3RtYWxsLCAuaWNvbl9jZF90YiwgLmljb25fY2RfanUnKSkKICAgICAgcmV0dXJuICdoaWRkZW4nOwogICAgcmV0dXJuIG51bGw7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5vdGhlcik7CgovLyDlvq7ljZrmlK/ku5jnp6/liIblhZHmjaIKZmlsdGVyLml0ZW1zLm90aGVyLmhpZGV0aGVzZV9hZC53ZWlib19wYXlfZ2lmdD0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfYWQnLAogICd2ZXJzaW9uJzogMzQ2LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8ub3RoZXIud2VpYm9fcGF5X2dpZnQnLAogICd0ZXh0JzogJ3t7d2VpYm9QYXlHaWZ0fX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7d2VpYm9QYXlHaWZ0RGVzY319JyB9IH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiB3ZWlib1BheUdpZnQoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignZGl2W2FjdGlvbi1kYXRhKj0ib2JqZWN0aWQ9MTA0MjAyNToiXScpKSByZXR1cm4gJ2hpZGRlbic7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCdhW3N1ZGEtdWF0cmFjayo9IjEwNDIwMjUtd2VicGFnZSJdJykpIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g5ZCr5pyJ54m55a6a5YaF5a6555qE5b6u5Y2aCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ290aGVyJywgJ2hpZGV0aGVzZV9yZWNvbW1lbmQnLCAne3tvdGhlckJsYWNrbGlzdFRpdGxlUmVjb21tZW5kfX0nKTsKCi8vIOeUqOaIt+S4quS6uuS4u+mhteS4iuS4jeaYr+i/meS4queUqOaIt+WPkeeahOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2FkLnVzZXJfbGlrZWQgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2hpZGV0aGVzZV9yZWNvbW1lbmQnLAogICd2ZXJzaW9uJzogNDc4LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8ub3RoZXIudXNlcl9saWtlJywKICAndGV4dCc6ICd7e3dlaWJvVXNlckxpa2V9fScsCiAgJ3ByaW9yaXR5JzogMWU2LCAvLyDmnIDpq5jkvJjlhYjnuqcKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e3dlaWJvVXNlckxpa2VEZXNjfX0nIH0gfSwKICAncnVsZSc6IGZ1bmN0aW9uIHVzZXJMaWtlZFdlaWJvKGZlZWQpIHsKICAgIHZhciBlbmFibGVkID0gdGhpcy5jb25mOwogICAgdmFyIG5lZWRlZCA9IGZpbHRlci5pdGVtcy5zdHlsZS5zd2VpYm8udXNlcl9wYWdlX25vX2F1dGhvci5jb25mICYmCiAgICAgIGZpbHRlci5pdGVtcy5zdHlsZS5zd2VpYm8udXNlcl9wYWdlX25vX2F1dGhvci5yZWYud2hvLmNvbmYgPT09ICdhbGwnOwogICAgaWYgKCFlbmFibGVkICYmICFuZWVkZWQpIHJldHVybiBudWxsOwogICAgaWYgKCF1dGlsLnBhZ2UudXNlcigpKSByZXR1cm4gbnVsbDsKICAgIHZhciBvaWQgPSB1dGlsLmluZm8ub2lkKCk7CiAgICB2YXIgaWQgPSB3ZWliby5mZWVkLmF1dGhvci5pZChmZWVkKTsKICAgIGlmIChpZCAhPT0gb2lkKSByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOa3t+WFpeaWsOmynOS6i+a1geeahOWFtuS7luS4nOilvwpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2FkLmZha2Vfd2VpYm8gPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2hpZGV0aGVzZV9yZWNvbW1lbmQnLAogICd2ZXJzaW9uJzogMTMsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci5mYWtlX3dlaWJvJywKICAndGV4dCc6ICd7e2Zha2VXZWlib0ZpbHRlcn19JywKICAncHJpb3JpdHknOiAxZTYsIC8vIOacgOmrmOS8mOWFiOe6pwogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7ZmFrZVdlaWJvRmlsdGVyRGVzY319JyB9IH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiBmYWtlV2VpYm9GaWx0ZXJSdWxlKGZlZWQpIHsKICAgIC8vIOmXruetlOWIl+ihqOS4jeaYr+W+ruWNmuWIl+ihqO+8jOWboOatpOS4jeW6lOeUn+aViAogICAgaWYgKHV0aWwuZG9tLm1hdGNoZXMoZmVlZCwgJ1tpZF49IlBsX0NvcmVfV2VuZGFMaXN0X18iXSAqJykpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQuaGFzQXR0cmlidXRlKCdtaWQnKSkgcmV0dXJuIG51bGw7CiAgICBpZiAodGhpcy5jb25mKSByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gJ3Vuc2V0JzsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOWQq+acieeJueWumuWGheWuueeahOW+ruWNmgpmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCdvdGhlcicsICdoaWRldGhlc2VfY29udGVudCcsICd7e290aGVyQmxhY2tsaXN0VGl0bGVDb250ZW50fX0nKTsKCi8vIOW3suWIoOmZpOaIluayoeacieadg+mZkOafpeeci+eahOW+ruWNmueahOi9rOWPkQpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2NvbnRlbnQuZGVsZXRlZF9mb3J3YXJkID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfY29udGVudCcsCiAgJ3ZlcnNpb24nOiAxMSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLmRlbGV0ZWRfZm9yd2FyZCcsCiAgJ3RleHQnOiAne3tkZWxldGVkRm9yd2FyZEZpbHRlcn19JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2RlbGV0ZWRGb3J3YXJkRmlsdGVyRGVzY319JyB9IH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiBkZWxldGVkRm9yd2FyZEZpbHRlclJ1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQuZ2V0QXR0cmlidXRlKCdpc2ZvcndhcmQnKSA9PT0gJzEnICYmCiAgICAgICF3ZWliby5mZWVkLm9yaWdpbmFsLmRvbShmZWVkKSkgcmV0dXJuICdoaWRkZW4nOwogICAgcmV0dXJuIG51bGw7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5vdGhlcik7CgovLyDlm57lpI3lubbovazlj5HnmoTlvq7ljZoKLy8g6KaB5rGC5b6u5Y2a5Lul4oCc5Zue5aSN4oCd5byA5aS077yM5ZCO6Z2i57Sn6Lef5LiA5Liq5o+Q5YiwCmZpbHRlci5pdGVtcy5vdGhlci5oaWRldGhlc2VfY29udGVudC5jb21tZW50X2FuZF9yZXBseSA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnaGlkZXRoZXNlX2NvbnRlbnQnLAogICd2ZXJzaW9uJzogMjAxLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8ub3RoZXIuY29tbWVudF9hbmRfcmVwbHknLAogICd0ZXh0JzogJ3t7Y29tbWVudEFuZEZvcndhcmRGaWx0ZXJ9fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tjb21tZW50QW5kRm9yd2FyZEZpbHRlckRlc2N9fScgfSB9LAogICdydWxlJzogZnVuY3Rpb24gY29tbWVudEFuZEZvcndhcmRGaWx0ZXJSdWxlKGZlZWQpIHsKICAgIGlmICghdGhpcy5jb25mKSByZXR1cm4gbnVsbDsKICAgIHZhciByZXBseVRleHQgPSBbJ+WbnuWkjScsICflm57lvqknLCAn5Zue6KaGJywgJ1JlcGx5JywgJ3JlcGx5J107CiAgICBpZiAoZmVlZC5nZXRBdHRyaWJ1dGUoJ2lzZm9yd2FyZCcpICE9PSAnMScgJiYgZmVlZC5nZXRBdHRyaWJ1dGUoJ2ZlZWR0eXBlJykgIT09ICdzdWJmZWVkJykgcmV0dXJuIG51bGw7CiAgICB2YXIgY29udGVudCA9IGZlZWQucXVlcnlTZWxlY3RvcignW25vZGUtdHlwZT0iZmVlZF9saXN0X2NvbnRlbnQiXScpOyBpZiAoIWNvbnRlbnQpIHJldHVybiBudWxsOwogICAgaWYgKCFjb250ZW50LmZpcnN0Q2hpbGQgfHwgcmVwbHlUZXh0LmluZGV4T2YoY29udGVudC5maXJzdENoaWxkLnRleHRDb250ZW50LnRyaW0oKSkgPT09IC0xKSByZXR1cm4gbnVsbDsKICAgIGlmICghY29udGVudC5jaGlsZE5vZGVzWzFdIHx8ICFjb250ZW50LmNoaWxkTm9kZXNbMV0uZ2V0QXR0cmlidXRlKCd1c2VyY2FyZCcpKSByZXR1cm4gbnVsbDsKICAgIHJldHVybiAnaGlkZGVuJzsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOaKleelqOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2NvbnRlbnQudm90ZV93ZWlibyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnaGlkZXRoZXNlX2NvbnRlbnQnLAogICd2ZXJzaW9uJzogMTEsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci52b3RlX3dlaWJvJywKICAndGV4dCc6ICd7e3ZvdGVXZWlib0ZpbHRlcn19JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e3ZvdGVXZWlib0ZpbHRlckRlc2N9fScgfSB9LAogICdydWxlJzogZnVuY3Rpb24gdm90ZVdlaWJvRmlsdGVyUnVsZShmZWVkKSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuIG51bGw7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCcuV0JfZnJvbSBhW2hyZWYqPSIvL3ZvdGUud2VpYm8uY29tLyJdJykpCiAgICAgIHJldHVybiAnaGlkZGVuJzsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJy5XQl9mZWVkX3NwZWNfY29udCBhW2FjdGlvbi1kYXRhKj0idm90ZS53ZWliby5jb20iXScpKQogICAgICByZXR1cm4gJ2hpZGRlbic7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCdhW3N1ZGEtdWF0cmFjayo9IjEwMjItdm90ZSJdJykpCiAgICAgIHJldHVybiAnaGlkZGVuJzsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJ2Fbc3VkYS11YXRyYWNrKj0iMTAyMi1odWRvbmd2b3RlIl0nKSkKICAgICAgcmV0dXJuICdoaWRkZW4nOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignLmljb25fc3dfdm90ZScpKQogICAgICByZXR1cm4gJ2hpZGRlbic7CiAgICBpZiAod2VpYm8uZmVlZC5zb3VyY2VzLnRleHQoZmVlZCkuaW5kZXhPZign5oqV56WoJykgIT09IC0xKQogICAgICByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOaKoue6ouWMheW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2NvbnRlbnQucmVkcGFjayA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnaGlkZXRoZXNlX2NvbnRlbnQnLAogICd2ZXJzaW9uJzogMzA1LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8ub3RoZXIucmVkMjAxNCcsCiAgJ3RleHQnOiAne3tyZWRQYWNrV2VpYm99fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tyZWRQYWNrV2VpYm9EZXNjfX0nIH0gfSwKICAncnVsZSc6IGZ1bmN0aW9uIHJlZFBhY2tXZWlib1J1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignLlBDRF9ldmVudF9yZWQyMDE0JykpIHJldHVybiAnaGlkZGVuJzsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJy5XQl9mZWVkX3NwZWNfcmVkMjAxNScpKSByZXR1cm4gJ2hpZGRlbic7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCcuV0JfZmVlZF9zcGVjX3JlZDE2JykpIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g6L2s5Y+R5oq95aWW5b6u5Y2a77yI6L2s5Y+R5Zu+5qCH5piv6ZSm6bKk5Zu+5qGI77yJCmZpbHRlci5pdGVtcy5vdGhlci5oaWRldGhlc2VfY29udGVudC5yZWRwYWNrID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfY29udGVudCcsCiAgJ3ZlcnNpb24nOiA0OTMsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci5qaW5saV9mb3J3YXJkJywKICAndGV4dCc6ICd7e2ppbmxpRm9yd2FyZFdlaWJvfX0nLAogICdydWxlJzogZnVuY3Rpb24gamlubGlGb3J3YXJkV2VpYm8oZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignYVthY3Rpb24tdHlwZT0iZmxfZm9yd2FyZCJdIC5pY29uX2ppbmxpJykpIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g5b6u5Y2a5bqU55So5LuL57uNCmZpbHRlci5pdGVtcy5vdGhlci5oaWRldGhlc2VfY29udGVudC5hcHBpdGVtID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfY29udGVudCcsCiAgJ3ZlcnNpb24nOiAyNjUsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci5hcHBpdGVtJywKICAndGV4dCc6ICd7e2FwcEl0ZW1XZWlib319JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2FwcEl0ZW1XZWlib0Rlc2N9fScgfSB9LAogICdydWxlJzogZnVuY3Rpb24gYXBwSXRlbUZpbHRlclJ1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignLldCX2ZlZWRfc3BlY1tleHAtZGF0YSo9ImtleT10YmxvZ193ZWlib2NhcmQiXVtleHAtZGF0YSo9IjEwNDIwMDUtYXBwSXRlbSJdJykpCiAgICAgIHJldHVybiAnaGlkZGVuJzsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJ2FbeWF3Zi1saW5rLXR5cGU9IlMiXScpKQogICAgICByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOW+ruWNmumXruetlApmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2NvbnRlbnQud2VuZGEgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2hpZGV0aGVzZV9jb250ZW50JywKICAndmVyc2lvbic6IDQzMSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLndlbmRhJywKICAndGV4dCc6ICd7e3dlbmRhV2VpYm99fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3t3ZW5kYVdlaWJvRGVzY319JyB9IH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiB3ZW5kYUZpbHRlclJ1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgLy8g6L+Z5p2h6KeE5YiZ5LiN5Zyo5pi+56S65p+Q5Lq655qE5YWo6YOo6Zeu562U6aG16Z2i55Sf5pWI77yM6YG/5YWN5pi+56S656m66aG16Z2iCiAgICBpZiAodXRpbC5kb20ubWF0Y2hlcyhmZWVkLCAnW2lkXj0iUGxfQ29yZV9XZW5kYUxpc3RfXyJdIConKSkgcmV0dXJuIG51bGw7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCdbc3VkYS11YXRyYWNrKj0iMTAyMi13ZW5kYSJdJykpIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g54ix6Zeu5Yy755SfCmZpbHRlci5pdGVtcy5vdGhlci5oaWRldGhlc2VfY29udGVudC53ZW53b2RyID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfY29udGVudCcsCiAgJ3ZlcnNpb24nOiAzMzcsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci53ZW53b2RyJywKICAndGV4dCc6ICd7e3dlbndvRHJXZWlib319JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e3dlbndvRHJXZWlib0Rlc2N9fScgfSB9LAogICdydWxlJzogZnVuY3Rpb24gd2Vud29EckZpbHRlclJ1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignZGl2W2FjdGlvbi1kYXRhKj0ib2JqZWN0aWQ9MjAxNzg5NjAwMToiXScpKSByZXR1cm4gJ2hpZGRlbic7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCdhW3N1ZGEtdWF0cmFjayo9IjIwMTc4OTYwMDEtcHJvZHVjdCJdJykpIHJldHVybiAnaGlkZGVuJzsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJ2FbaHJlZio9Ii8vZHIud2Vud28uY29tLyJdJykpIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g5LiA55u05pKtCmZpbHRlci5pdGVtcy5vdGhlci5oaWRldGhlc2VfY29udGVudC55aXpoaWJvID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfY29udGVudCcsCiAgJ3ZlcnNpb24nOiAzODUsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci55aXpoaWJvJywKICAndGV4dCc6ICd7e3lpemhpYm9XZWlib319JywKICAncmVmJzogewogICAgJ3R5cGUnOiB7CiAgICAgICd0eXBlJzogJ3NlbGVjdCcsCiAgICAgICdkZWZhdWx0JzogJ2FsbCcsCiAgICAgICdzZWxlY3QnOiBbCiAgICAgICAgeyAndmFsdWUnOiAnYWxsJywgJ3RleHQnOiAne3t5aXpoaWJvV2VpYm9BbGx9fScgfSwKICAgICAgICB7ICd2YWx1ZSc6ICdyZXBsYXknLCAndGV4dCc6ICd7e3lpemhpYm9XZWlib1JlcGxheX19JyB9LAogICAgICBdLAogICAgfQogIH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiB5aXpoaWJvRmlsdGVyUnVsZShmZWVkKSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuIG51bGw7CiAgICB2YXIgbGl2ZSA9IGZlZWQucXVlcnlTZWxlY3RvcignLldCX3ZpZGVvW3N1ZGEtdWF0cmFjayo9IjIyMjc3NDcwMDEtbGl2ZSJdJyk7CiAgICBpZiAoIWxpdmUpIHJldHVybiBudWxsOwogICAgaWYgKHRoaXMucmVmLnR5cGUuY29uZiA9PT0gJ2FsbCcpIHJldHVybiAnaGlkZGVuJzsKICAgIHZhciB0eXBlID0gbGl2ZS5xdWVyeVNlbGVjdG9yKCcuV19pY29uX3RhZycpLnRleHRDb250ZW50OwogICAgdXRpbC5kZWJ1ZygnZm91bmQgeWl6aGlibyB2aWRlbyB3aXRoIHN0YXR1cyB0ZXh0OiAlbycsIHR5cGUpOwogICAgaWYgKHR5cGUgPT09ICflm57mlL4nKSByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOiCoeelqOmTvuaOpQpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2NvbnRlbnQuc3RvY2sgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2hpZGV0aGVzZV9jb250ZW50JywKICAndmVyc2lvbic6IDI3NSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLnN0b2NrJywKICAndGV4dCc6ICd7e3N0b2NrV2VpYm99fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tzdG9ja1dlaWJvRGVzY319JyB9IH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiBzdG9ja0ZpbHRlclJ1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignYVtzdWRhLXVhdHJhY2sqPSIxMDIyLXN0b2NrIl0nKSkKICAgICAgcmV0dXJuICdoaWRkZW4nOwogICAgcmV0dXJuIG51bGw7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5vdGhlcik7CgovLyDku5jotLnlhoXlrrkKZmlsdGVyLml0ZW1zLm90aGVyLmhpZGV0aGVzZV9jb250ZW50LnBhaWQgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2hpZGV0aGVzZV9jb250ZW50JywKICAndmVyc2lvbic6IDQ3MiwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLnBhaWQnLAogICd0ZXh0JzogJ3t7cGFpZFdlaWJvfX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7cGFpZFdlaWJvRGVzY319JyB9IH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiBzdG9ja0ZpbHRlclJ1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgLy8g5aaC5p6c55So5oi35b2T5YmN5LuF5p+l55yL5LuY6LS55YaF5a6577yM5YiZ5LiN55Sf5pWI6L+Z5p2h6KeE5YiZCiAgICB2YXIgcXVlcnkgPSB1dGlsLnN0ci5wYXJzZXF1ZXJ5KGxvY2F0aW9uLnNlYXJjaC5zbGljZSgxKSk7CiAgICB2YXIgcGFpZE9ubHkgPSAndnBsdXMnIGluIHF1ZXJ5ICYmIE51bWJlcihxdWVyeS52cGx1cykgfHwKICAgICdpc192Y2x1YicgaW4gcXVlcnkgJiYgTnVtYmVyKHF1ZXJ5LmlzX3ZjbHViKTsKICAgIGlmIChwYWlkT25seSkgcmV0dXJuIG51bGw7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCcuaWNvbl92cGx1cycpKQogICAgICByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOWQq+aciei/h+WkmuivnemimOeahOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2NvbnRlbnQubXVsdGlfdG9waWMgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2hpZGV0aGVzZV9jb250ZW50JywKICAndmVyc2lvbic6IDE0OSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLm11bHRpX3RvcGljJywKICAndGV4dCc6ICd7e211bHRpVG9waWN9fScsCiAgJ3JlZic6IHsKICAgICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7bXVsdGlUb3BpY0Rlc2N9fScgfSwKICAgICdudW0nOiB7CiAgICAgICd0eXBlJzogJ3JhbmdlJywKICAgICAgJ21pbic6IDMsCiAgICAgICdtYXgnOiAxMCwKICAgICAgJ2RlZmF1bHQnOiA1LAogICAgfQogIH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiBtdWx0aVRvcGljUnVsZShmZWVkKSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuIG51bGw7CiAgICB2YXIgdG9waWNzID0gd2VpYm8uZmVlZC50b3BpY3MuZG9tKGZlZWQpOwogICAgaWYgKHRvcGljcy5sZW5ndGggPj0gdGhpcy5yZWYubnVtLmNvbmYpIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g5ZCr5pyJ6LaF6K+d55qE5b6u5Y2aCmZpbHRlci5pdGVtcy5vdGhlci5oaWRldGhlc2VfY29udGVudC5jb250YWluX3RvcGljID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2VfY29udGVudCcsCiAgJ3ZlcnNpb24nOiA1MDYsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci5tdWx0aV90b3BpYycsCiAgJ3RleHQnOiAne3tjb250YWluVG9waWN9fScsCiAgJ3J1bGUnOiBmdW5jdGlvbiBjb250YWluVG9waWNSdWxlKGZlZWQpIHsKICAgIGlmICghdGhpcy5jb25mKSByZXR1cm4gbnVsbDsKICAgIGlmICh1dGlsLnBhZ2UudG9waWMoKSkgcmV0dXJuIG51bGw7CiAgICB2YXIgaHVhdGkgPSBmZWVkLnF1ZXJ5U2VsZWN0b3IoJ2Fbc3VkYS11YXRyYWNrKj0iMTAyMi10b3BpYyJdJyk7CiAgICBpZiAoaHVhdGkpIHJldHVybiAnaGlkZGVuJzsKICAgIHZhciBzb3VyY2UgPSBmZWVkLnF1ZXJ5U2VsZWN0b3IoJ2FbYWN0aW9uLXR5cGU9ImFwcF9zb3VyY2UiXVtocmVmXj0iaHR0cHM6Ly93ZWliby5jb20vcC8xMDA4MDgiXScpOwogICAgaWYgKHNvdXJjZSkgcmV0dXJuICdoaWRlJzsKICAgIHZhciB0b3BpY3MgPSB3ZWliby5mZWVkLnRvcGljcy5kb20oZmVlZCk7CiAgICB2YXIgdG9waWMgPSB0b3BpY3Muc29tZSh0b3BpYyA9PiAvXHVlNjI3fFxb6LaF6K+dXF0kLy50ZXN0KHRvcGljLnRpdGxlIHx8IHRvcGljLnRleHRDb250ZW50KSk7IAogICAgaWYgKHRvcGljKSByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOevh+W5hei/h+mVv+eahOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX2NvbnRlbnQudG9vX2xvbmcgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2hpZGV0aGVzZV9jb250ZW50JywKICAndmVyc2lvbic6IDMyMywKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLnRvb19sb25nJywKICAndGV4dCc6ICd7e3Rvb0xvbmdOZWVkVW5mb2xkfX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7dG9vTG9uZ05lZWRVbmZvbGREZXNjfX0nIH0gfSwKICAncnVsZSc6IGZ1bmN0aW9uIHRvb0xvbmdOZWVkVW5mb2xkUnVsZShmZWVkKSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuIG51bGw7CiAgICBpZiAoIWZlZWQuaGFzQXR0cmlidXRlKCd5YXdmLXVuZm9sZGxvbmcnKSkgcmV0dXJuIG51bGw7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCdbYWN0aW9uLXR5cGU9ImZsX3VuZm9sZCJdJykpIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g54m55a6a5p2l5rqQ55qE5b6u5Y2aCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ290aGVyJywgJ2hpZGV0aGVzZV9zb3VyY2UnLCAne3tvdGhlckJsYWNrbGlzdFRpdGxlU291cmNlfX0nKTsKCi8vIOW+ruivnemimOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX3NvdXJjZS53ZWlfaHVhdGkgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2hpZGV0aGVzZV9zb3VyY2UnLAogICd2ZXJzaW9uJzogMTA0LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8ub3RoZXIud2VpX2h1YXRpJywKICAndGV4dCc6ICd7e2h1YXRpU291cmNlV2VpYm99fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3todWF0aVNvdXJjZVdlaWJvRGVzY319JyB9IH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiBodWF0aVNvdXJjZVdlaWJvUnVsZShmZWVkKSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuIG51bGw7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCdhW3N1ZGEtZGF0YT0ia2V5PXRibG9nX2hvbWVfbmV3JnZhbHVlPWZlZWRfY29tZV9mcm9tIl1baHJlZio9Imh1YXRpLndlaWJvLmNvbSJdJykpCiAgICAgIHJldHVybiAnaGlkZGVuJzsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJ2FbaHJlZio9Ii8vd2VpYm8uY29tL3AvIl1baHJlZiQ9ImZyb209ZmVlZF9jYXJkIl0nKSkKICAgICAgcmV0dXJuICdoaWRkZW4nOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignLldCX2Zyb20gYVtocmVmKj0iLy9hcHAud2VpYm8uY29tL3QvZmVlZC80QWJBRlYiXScpKQogICAgICByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLm90aGVyKTsKCi8vIOaWsOa1quW+rue+pOW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuaGlkZXRoZXNlX3NvdXJjZS53ZWlfcXVuID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2Vfc291cmNlJywKICAndmVyc2lvbic6IDE5MiwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLndlaV9xdW4nLAogICd0ZXh0JzogJ3t7d2VpcXVuU291cmNlV2VpYm99fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3t3ZWlxdW5Tb3VyY2VXZWlib0Rlc2N9fScgfSB9LAogICdydWxlJzogZnVuY3Rpb24gd2VpcXVuU291cmNlV2VpYm9SdWxlKGZlZWQpIHsKICAgIGlmICghdGhpcy5jb25mKSByZXR1cm4gbnVsbDsKICAgIGlmIChmZWVkLnF1ZXJ5U2VsZWN0b3IoJ2FbaHJlZio9Ii8vcS53ZWliby5jb20vIl1baHJlZiQ9InNvdXJjZT13ZWlib3NvdXJjZSJdJykpCiAgICAgIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g5b6u6K+d6aKY5b6u5Y2aCmZpbHRlci5pdGVtcy5vdGhlci5oaWRldGhlc2Vfc291cmNlLndlaV9mYW5ndGFuID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdoaWRldGhlc2Vfc291cmNlJywKICAndmVyc2lvbic6IDE4NCwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLndlaV9mYW5ndGFuJywKICAndGV4dCc6ICd7e2Zhbmd0YW5Tb3VyY2VXZWlib319JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2Zhbmd0YW5Tb3VyY2VXZWlib0Rlc2N9fScgfSB9LAogICdydWxlJzogZnVuY3Rpb24gZmFuZ3RhblNvdXJjZVdlaWJvUnVsZShmZWVkKSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuIG51bGw7CiAgICBpZiAoZmVlZC5xdWVyeVNlbGVjdG9yKCcuV0JfZnJvbSBhW2hyZWYqPSJ0YWxrLndlaWJvLmNvbSJdJykpCiAgICAgIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g5b6u5YWs55uK5b6u5Y2aCmZpbHRlci5pdGVtcy5vdGhlci5oaWRldGhlc2Vfc291cmNlLndlaV9nb25neWkgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2hpZGV0aGVzZV9zb3VyY2UnLAogICd2ZXJzaW9uJzogMjUyLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8ub3RoZXIud2VpX2dvbmd5aScsCiAgJ3RleHQnOiAne3tnb25neWlTb3VyY2VXZWlib319JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2dvbmd5aVNvdXJjZVdlaWJvRGVzY319JyB9IH0sCiAgJ3J1bGUnOiBmdW5jdGlvbiBnb25neWlTb3VyY2VXZWlib1J1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignYVtocmVmKj0iYXBwLndlaWJvLmNvbS90L2ZlZWQvMnU4c013Il0nKSkKICAgICAgcmV0dXJuICdoaWRkZW4nOwogICAgaWYgKGZlZWQucXVlcnlTZWxlY3RvcignYVtocmVmKj0id2VpYm8uY29tL3AvMTAwMTI3cCJdJykpCiAgICAgIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g5p2l6IeqIOacqumAmui/h+WuoeaguOW6lOeUqCDlvq7ljZoKZmlsdGVyLml0ZW1zLm90aGVyLmhpZGV0aGVzZV9zb3VyY2UudW5hdXRoX3NvdXJjZSA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnaGlkZXRoZXNlX3NvdXJjZScsCiAgJ3ZlcnNpb24nOiAxOTYsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5vdGhlci51bmF1dGhfc291cmNlJywKICAndGV4dCc6ICd7e3VuYXV0aGFwcFdlaWJvfX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7dW5hdXRoYXBwV2VpYm9EZXNjfX0nIH0gfSwKICAncnVsZSc6IGZ1bmN0aW9uIHVuYXV0aFNvdXJjZVJ1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgdmFyIGZyb20gPSBBcnJheS5mcm9tKGZlZWQucXVlcnlTZWxlY3RvckFsbCgnLldCX2Zyb20nKSk7CiAgICBmcm9tID0gZnJvbS5tYXAoZnVuY3Rpb24gKGYpIHsgcmV0dXJuIGYubGFzdENoaWxkOyB9KQogICAgICAuZmlsdGVyKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4ICYmIHgubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFOyB9KQogICAgICAubWFwKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LnRleHRDb250ZW50OyB9KQogICAgICAuZmlsdGVyKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LmluZGV4T2YodGV4dC5zb3VyY2VVbmtvd24pICE9PSAtMTsgfSk7CiAgICBpZiAoIWZyb20ubGVuZ3RoKSByZXR1cm47CiAgICByZXR1cm4gJ2hpZGRlbic7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5vdGhlcik7CgovLyDliLflsY/kuI7niYjogYoKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSgnb3RoZXInLCAnc3BhbScsICd7e290aGVyU3BhbW1pbmdUaXRsZX19Jyk7CgovLyDmt7vliqDmlbDph4/lkozmipjlj6Av6ZqQ6JeP55qECmZpbHRlci5yZWYgPSB7fTsKZmlsdGVyLnJlZi5udW1hY3QgPSBmdW5jdGlvbiAoZGVmbnVtLCBkZWZhY3QsIG51bWJlciwgYWN0aW9uLCBiYXNlKSB7CiAgYmFzZSA9IGJhc2UgfHwge307CiAgYmFzZVtudW1iZXIgfHwgJ251bWJlciddID0gewogICAgJ3R5cGUnOiAnbnVtYmVyJywKICAgICdkZWZhdWx0JzogZGVmbnVtIHx8IDMsCiAgICAnbWluJzogMSwKICB9OwogIGJhc2VbYWN0aW9uIHx8ICdhY3Rpb24nXSA9IHsKICAgICd0eXBlJzogJ3NlbGVjdCcsCiAgICAnZGVmYXVsdCc6IGRlZmFjdCB8fCAnZm9sZCcsCiAgICAnc2VsZWN0JzogWwogICAgICB7ICd2YWx1ZSc6ICdmb2xkJywgJ3RleHQnOiAne3tmb2xkbGlzdEFjdGlvbkRlc2N9fScgfSwKICAgICAgeyAndmFsdWUnOiAnaGlkZGVuJywgJ3RleHQnOiAne3tibGFja2xpc3RBY3Rpb25EZXNjfX0nIH0sCiAgICBdCiAgfTsKICByZXR1cm4gYmFzZTsKfTsKCi8vIOebuOWQjOW4kOWPt+eahOi/h+WkmuW+ruWNmgpmaWx0ZXIuaXRlbXMub3RoZXIuc3BhbS5zYW1lX2FjY291bnQgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ3NwYW0nLAogICd2ZXJzaW9uJzogMjUsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ3ByaW9yaXR5JzogLTFlNiwgLy8g5L2O5LyY5YWI57qnCiAgJ2tleSc6ICd3ZWliby5vdGhlci5zYW1lX2FjY291bnQnLAogICdyZWYnOiBmaWx0ZXIucmVmLm51bWFjdCg1LCAnZm9sZCcpLAogICd0ZXh0JzogJ3t7c2FtZUFjY291bnRGaWx0ZXJEZXNjfX0nLAogICdydWxlJzogZnVuY3Rpb24gc2FtZUFjY291bnRSdWxlKGZlZWQpIHsKICAgIGlmICghdGhpcy5jb25mKSByZXR1cm4gbnVsbDsKICAgIC8vIOWmguaenOWcqOWIhue7hOmhtemdou+8jOiAjOS4lOeUqOaIt+iuvue9ruS6huWIhue7hOmhtemdouW/veeVpeivpei/h+a7pOWZqO+8jOWImeS4jeW3peS9nAogICAgaWYgKGZpbHRlci5pdGVtcy5iYXNlLmdyb3VwaW5nLmdyb3VwX3NhbWVfYWNjb3VudC5jb25mICYmIHV0aWwucGFnZS5ncm91cCgpKSByZXR1cm4gbnVsbDsKICAgIC8vIOS4quS6uuS4u+mhteWQjOagt+S4jeiDveW6lOeUqAogICAgaWYgKHV0aWwucGFnZS51c2VyKCkpIHJldHVybjsKICAgIHZhciBpZCA9IHdlaWJvLmZlZWQuYXV0aG9yLmlkKGZlZWQpOwogICAgaWYgKCFpZCkgcmV0dXJuOwogICAgdmFyIG51bWJlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoCiAgICAgICdbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAuV0JfZmVlZF90eXBlW3lhd2YtZGlzcGxheV06bm90KFt5YXdmLWRpc3BsYXkkPSItZm9sZCJdKTpub3QoW3lhd2YtZGlzcGxheSQ9Ii11bmZvbGQiXSk6bm90KFt5YXdmLWRpc3BsYXkkPSItaGlkZGVuIl0pPi5XQl9mZWVkX2RldGFpbD4uV0JfZGV0YWlsPi5XQl9pbmZvPi5XX2ZiW3VzZXJjYXJkXj0iaWQ9JyArIGlkICsgJyJdJwogICAgKS5sZW5ndGg7CiAgICBpZiAobnVtYmVyID49IHRoaXMucmVmLm51bWJlci5jb25mKSB7CiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXJlYXNvbicsIHRleHQuc2FtZUFjY291bnRGaWx0ZXJSZWFzb24pOwogICAgICByZXR1cm4gJ2FjY291bnQtJyArIHRoaXMucmVmLmFjdGlvbi5jb25mOwogICAgfSBlbHNlIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g55u45ZCM5b6u5Y2a55qE6L+H5aSa6L2s5Y+RCmZpbHRlci5pdGVtcy5vdGhlci5zcGFtLnNhbWVfZm9yd2FyZCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc3BhbScsCiAgJ3ZlcnNpb24nOiAxOSwKICAndHlwZSc6ICdib29sZWFuJywKICAncHJpb3JpdHknOiAtMWU2LCAvLyDkvY7kvJjlhYjnuqcKICAna2V5JzogJ3dlaWJvLm90aGVyLnNhbWVfZm9yd2FyZCcsCiAgJ3JlZic6IGZpbHRlci5yZWYubnVtYWN0KDMsICdmb2xkJyksCiAgJ3RleHQnOiAne3tzYW1lRm9yd2FyZEZpbHRlckRlc2N9fScsCiAgJ3J1bGUnOiBmdW5jdGlvbiBzYW1lRm9yd2FyZFJ1bGUoZmVlZCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgdmFyIG9taWQgPSBmZWVkLmdldEF0dHJpYnV0ZSgnb21pZCcpOwogICAgaWYgKCFvbWlkKSByZXR1cm4gbnVsbDsKICAgIHZhciBudW1iZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAnICsKICAgICAgJy5XQl9mZWVkX3R5cGVbb21pZD0iJyArIG9taWQgKyAnIl1beWF3Zi1kaXNwbGF5XTpub3QoW3lhd2YtZGlzcGxheSQ9Ii1mb2xkIl0pOm5vdChbeWF3Zi1kaXNwbGF5JD0iLXVuZm9sZCJdKTpub3QoW3lhd2YtZGlzcGxheSQ9Ii1oaWRkZW4iXSknKS5sZW5ndGg7CiAgICBpZiAobnVtYmVyID49IHRoaXMucmVmLm51bWJlci5jb25mKSB7CiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXJlYXNvbicsIHRleHQuc2FtZUZvcndhcmRGaWx0ZXJSZWFzb24pOwogICAgICByZXR1cm4gJ2ZvcndhcmQtJyArIHRoaXMucmVmLmFjdGlvbi5jb25mOwogICAgfSBlbHNlIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMub3RoZXIpOwoKLy8g6K+E6K666L+H5rukCmZpbHRlci5wcmVkZWYuZ3JvdXAoJ2NvbW1lbnQnKTsKCi8vIOivhOiuuuWFs+mUruivjQpmaWx0ZXIucHJlZGVmLndiZmMoewogICduYW1lJzogJ2NrZXl3b3JkJywKICAndmVyc2lvbic6IDIyMywKICAnYWRkJzogZnVuY3Rpb24gKHMpIHsgcmV0dXJuIHMudHJpbSgpIHx8IG51bGw7IH0sCiAgJ2xpc3R0eXBlJzogWydibGFja2xpc3QnLCAnd2hpdGVsaXN0J10sCiAgJ2NvbW1lbnQnOiBmdW5jdGlvbiBrZXl3b3JkTWF0Y2hDb21tZW50UnVsZShhY3Rpb24sIGNvbW1lbnQpIHsKICAgIHZhciBrZXl3b3JkcyA9IHRoaXMuY29uZi5jb25jYXQodGhpcy5leHRlbnQpOwogICAgdmFyIHRleHRzID0gd2VpYm8uY29tbWVudC50ZXh0KGNvbW1lbnQpLnRvVXBwZXJDYXNlKCk7CiAgICB2YXIgbWF0Y2ggPSBrZXl3b3Jkcy5zb21lKGZ1bmN0aW9uIChrZXl3b3JkKSB7CiAgICAgIGlmICgha2V5d29yZCkgcmV0dXJuIGZhbHNlOwogICAgICBpZiAodGV4dHMuaW5kZXhPZihrZXl3b3JkLnRvVXBwZXJDYXNlKCkpID09PSAtMSkgcmV0dXJuIGZhbHNlOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0pOwogICAgaWYgKG1hdGNoKSByZXR1cm4gYWN0aW9uOyBlbHNlIHJldHVybiBudWxsOwogIH0sCiAgJ2Zhc3QnOiB7CiAgICAndmFsaWRhdG9yJzogZmlsdGVyLmZhc3QuY29udGVudC52YWxpZGF0b3IsCiAgICAncmVjb2duaXplcic6IGZpbHRlci5mYXN0LmNvbnRlbnQucmVjb2duaXplci5rZXl3b3JkLAogICAgJ3NlbGVjdGVkJzogZmlsdGVyLmZhc3Quc2VsZWN0ZWQuY29tbWVudCwKICAgICdhZGQnOiBmaWx0ZXIuZmFzdC5jb250ZW50LmFkZCwKICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICdncm91cCc6ICdjb21tZW50JywgJ25hbWUnOiAnY2tleXdvcmQnLAogICAgICAnYXR0cic6ICd0ZXh0JywgJ2lucHV0JzogdHJ1ZSwgJ2Nob3Nlbic6IHRydWUKICAgIH0pLAogIH0KfSwgZmlsdGVyLmdyb3Vwcy5jb21tZW50KTsKCi8vIOivhOiuuuato+WImeW8jwpmaWx0ZXIucHJlZGVmLndiZmMoewogICduYW1lJzogJ2NyZWdleHAnLAogICd2ZXJzaW9uJzogMjg1LAogICdhZGQnOiB1dGlsLnN0ci5hZGRyZWdleCwKICAnZGlzcGxheSc6IGZ1bmN0aW9uIChzKSB7IHJldHVybiAnLycgKyBzICsgJy8nOyB9LAogICdsaXN0dHlwZSc6IFsnYmxhY2tsaXN0JywgJ3doaXRlbGlzdCddLAogICdjb21tZW50JzogZnVuY3Rpb24gcmVnZXhwTWF0Y2hDb21tZW50UnVsZShhY3Rpb24sIGNvbW1lbnQpIHsKICAgIHZhciByZWdleGVuID0gdGhpcy5jb25mLmNvbmNhdCh0aGlzLmV4dGVudCkubWFwKHV0aWwuc3RyLmNvbXByZWdleCkuZmlsdGVyKEJvb2xlYW4pOwogICAgdmFyIHRleHRzID0gd2VpYm8uY29tbWVudC50ZXh0KGNvbW1lbnQpOwogICAgdmFyIG1hdGNoID0gcmVnZXhlbi5zb21lKGZ1bmN0aW9uIChyZWdleHApIHsKICAgICAgaWYgKCFyZWdleHAuZXhlYyh0ZXh0cykpIHJldHVybiBmYWxzZTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9KTsKICAgIGlmIChtYXRjaCkgcmV0dXJuIGFjdGlvbjsgZWxzZSByZXR1cm4gbnVsbDsKICB9LAogICdmYXN0JzogewogICAgJ3ZhbGlkYXRvcic6IGZpbHRlci5mYXN0LmNvbnRlbnQudmFsaWRhdG9yLAogICAgJ3JlY29nbml6ZXInOiBmaWx0ZXIuZmFzdC5jb250ZW50LnJlY29nbml6ZXIucmVnZXhwLAogICAgJ3NlbGVjdGVkJzogZmlsdGVyLmZhc3Quc2VsZWN0ZWQubmV2ZXIsCiAgICAnYWRkJzogZmlsdGVyLmZhc3QuY29udGVudC5hZGQsCiAgICAnZGVzY3JpcHRpb24nOiBmaWx0ZXIuZmFzdC5kZXNjcmlwdGlvbi5nZW4oewogICAgICAnZ3JvdXAnOiAnY29tbWVudCcsICduYW1lJzogJ2NyZWdleHAnLAogICAgICAnYXR0cic6ICd0ZXh0JywgJ2lucHV0JzogdHJ1ZSwgJ2Nob3Nlbic6IGZhbHNlCiAgICB9KSwKICB9Cn0sIGZpbHRlci5ncm91cHMuY29tbWVudCk7CgovLyDor4TorrrnlKjmiLcKZmlsdGVyLnByZWRlZi53YmZjKHsKICAnbmFtZSc6ICdjdXNlcicsCiAgJ3ZlcnNpb24nOiAyMjMsCiAgJ2FkZCc6IGZ1bmN0aW9uIChzKSB7IHJldHVybiBzLnRyaW0oKS5yZXBsYWNlKC9eQC8sICcnKSB8fCBudWxsOyB9LAogICdkaXNwbGF5JzogZnVuY3Rpb24gKHMpIHsgcmV0dXJuICdAJyArIHM7IH0sCiAgJ2xpc3R0eXBlJzogWydibGFja2xpc3QnLCAnd2hpdGVsaXN0J10sCiAgJ2NvbW1lbnQnOiBmdW5jdGlvbiBtZW50aW9uTWF0Y2hDb21tZW50UnVsZShhY3Rpb24sIGNvbW1lbnQpIHsKICAgIHZhciBtZW50aW9ucyA9IHRoaXMuY29uZi5jb25jYXQodGhpcy5leHRlbnQpLCB1c2VycyA9IHdlaWJvLmNvbW1lbnQudXNlcnMubmFtZShjb21tZW50KTsKICAgIHZhciBtYXRjaCA9IHVzZXJzLnNvbWUoZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIG1lbnRpb25zLmluZGV4T2YobmFtZSkgIT09IC0xOyB9KTsKICAgIGlmIChtYXRjaCkgcmV0dXJuIGFjdGlvbjsgZWxzZSByZXR1cm4gbnVsbDsKICB9LAogICdmYXN0JzogewogICAgJ3ZhbGlkYXRvcic6IGZpbHRlci5mYXN0LmFjY291bnQudmFsaWRhdG9yLAogICAgJ3JlY29nbml6ZXInOiBmaWx0ZXIuZmFzdC5hY2NvdW50LnJlY29nbml6ZXIsCiAgICAnc2VsZWN0ZWQnOiBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5jb21tZW50LAogICAgJ2FkZCc6IGZpbHRlci5mYXN0LmFjY291bnQuYWRkbmFtZSwKICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICdncm91cCc6ICdjdXNlcicsICduYW1lJzogJ2N1c2VyJywKICAgICAgJ2F0dHInOiAnbmFtZScsICdjaG9zZW4nOiB0cnVlCiAgICB9KSwKICB9Cn0sIGZpbHRlci5ncm91cHMuY29tbWVudCk7CgovLyDor4Torrror53popgKZmlsdGVyLnByZWRlZi53YmZjKHsKICAnbmFtZSc6ICdjdG9waWMnLAogICd2ZXJzaW9uJzogMjIzLAogICdhZGQnOiBmdW5jdGlvbiAocykgeyByZXR1cm4gcy50cmltKCkucmVwbGFjZSgvIy9nLCAnJykgfHwgbnVsbDsgfSwKICAnZGlzcGxheSc6IGZ1bmN0aW9uIChzKSB7IHJldHVybiAnIycgKyBzICsgJyMnOyB9LAogICdsaXN0dHlwZSc6IFsnYmxhY2tsaXN0JywgJ3doaXRlbGlzdCddLAogICdjb21tZW50JzogZnVuY3Rpb24gY3RvcGljTWF0Y2goYWN0aW9uLCBjb21tZW50KSB7CiAgICB2YXIgdG9waWNzID0gdGhpcy5jb25mLmNvbmNhdCh0aGlzLmV4dGVudCksIHRvcGljVGV4dCA9IHdlaWJvLmNvbW1lbnQudG9waWNzLnRleHQoY29tbWVudCkuam9pbignIyMnKTsKICAgIHZhciBtYXRjaCA9IHRvcGljcy5zb21lKGZ1bmN0aW9uICh0b3BpYykgeyByZXR1cm4gdG9waWNUZXh0LmluZGV4T2YodG9waWMpICE9PSAtMTsgfSk7CiAgICBpZiAobWF0Y2gpIHJldHVybiBhY3Rpb247IGVsc2UgcmV0dXJuIG51bGw7CiAgfSwKICAnZmFzdCc6IHsKICAgICd2YWxpZGF0b3InOiBmaWx0ZXIuZmFzdC50b3BpYy52YWxpZGF0b3IsCiAgICAncmVjb2duaXplcic6IGZpbHRlci5mYXN0LnRvcGljLnJlY29nbml6ZXIudG9waWMsCiAgICAnc2VsZWN0ZWQnOiBmaWx0ZXIuZmFzdC5zZWxlY3RlZC5jb21tZW50LAogICAgJ2FkZCc6IGZpbHRlci5mYXN0LnRvcGljLmFkZCwKICAgICdkZXNjcmlwdGlvbic6IGZpbHRlci5mYXN0LmRlc2NyaXB0aW9uLmdlbih7CiAgICAgICdncm91cCc6ICdjdG9waWMnLCAnbmFtZSc6ICdjdG9waWMnLAogICAgICAnYXR0cic6ICd0b3BpYycsICdpbnB1dCc6IHRydWUsICdjaG9zZW4nOiB0cnVlCiAgICB9KSwKICB9Cn0sIGZpbHRlci5ncm91cHMuY29tbWVudCk7CgovLyDpq5jnuqfpgInpobkKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSgnY29tbWVudCcsICdvdGhlcmMnLCAne3tjb21tZW50T3RoZXJGaWx0ZXJzfX0nKTsKCi8vIOaIkeeahOivhOiuugpmaWx0ZXIuaXRlbXMuY29tbWVudC5vdGhlcmMubXlfY29tbWVudCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnb3RoZXJjJywKICAndmVyc2lvbic6IDIyOSwKICAndHlwZSc6ICdib29sZWFuJywKICAnZGVmYXVsdCc6IHRydWUsCiAgJ2tleSc6ICd3ZWliby5jb21tZW50Lm15X2NvbW1lbnQnLAogICdwcmlvcml0eSc6IDFlNSArIDFlMywgLy8g5LyY5YWI5LqO55m95ZCN5Y2VCiAgJ3RleHQnOiAne3tjb21tZW50TXlEaXNwbGF5fX0nLAogICdjb21tZW50JzogZnVuY3Rpb24gbXlDb21tZW50UnVsZShjb21tZW50KSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuIG51bGw7CiAgICB2YXIgaWQgPSB3ZWliby5jb21tZW50LmF1dGhvci5pZChjb21tZW50KTsKICAgIGlmIChpZCA9PT0gdXRpbC5pbmZvLnVpZCkgcmV0dXJuICdzaG93JzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuY29tbWVudCk7CgovLyDooajmg4XnmoTmlbDph48KZmlsdGVyLml0ZW1zLmNvbW1lbnQub3RoZXJjLmVtb2ppX2NvdW50ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdvdGhlcmMnLAogICd2ZXJzaW9uJzogMjIzLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8uY29tbWVudC5lbW9qaV9jb3VudCcsCiAgJ3JlZic6IHsKICAgICdudW1iZXInOiB7CiAgICAgICd0eXBlJzogJ251bWJlcicsCiAgICAgICdkZWZhdWx0JzogOCwKICAgICAgJ21pbic6IDEsCiAgICAgICdtYXgnOiAyMAogICAgfQogIH0sCiAgJ3RleHQnOiAne3tjb21tZW50RW1vamlDb3VudERlc2N9fScsCiAgJ2NvbW1lbnQnOiBmdW5jdGlvbiBlbW9qaUNvdW50Q29tbWVudFJ1bGUoY29tbWVudCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgdmFyIGVtb2ppID0gd2VpYm8uY29tbWVudC5lbW9qaShjb21tZW50KTsKICAgIGlmIChlbW9qaS5sZW5ndGggPj0gdGhpcy5yZWYubnVtYmVyLmNvbmYpIHJldHVybiAnaGlkZGVuJzsKICAgIHJldHVybiBudWxsOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuY29tbWVudCk7CgovLyDooajmg4XnmoTnp43nsbsKZmlsdGVyLml0ZW1zLmNvbW1lbnQub3RoZXJjLmVtb2ppX3R5cGVzID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdvdGhlcmMnLAogICd2ZXJzaW9uJzogMjIzLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8uY29tbWVudC5lbW9qaV90eXBlcycsCiAgJ3JlZic6IHsKICAgICdudW1iZXInOiB7CiAgICAgICd0eXBlJzogJ251bWJlcicsCiAgICAgICdkZWZhdWx0JzogNCwKICAgICAgJ21pbic6IDEsCiAgICAgICdtYXgnOiAyMAogICAgfQogIH0sCiAgJ3RleHQnOiAne3tjb21tZW50RW1vamlUeXBlc0Rlc2N9fScsCiAgJ2NvbW1lbnQnOiBmdW5jdGlvbiBlbW9qaVR5cGVzQ29tbWVudFJ1bGUoY29tbWVudCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgdmFyIGVtb2ppID0gd2VpYm8uY29tbWVudC5lbW9qaShjb21tZW50KTsKICAgIGVtb2ppLmZpbHRlcihmdW5jdGlvbiAoZSwgaSkgeyByZXR1cm4gZW1vamkuaW5kZXhPZihlKSA9PT0gaTsgfSk7CiAgICBpZiAoZW1vamkubGVuZ3RoID49IHRoaXMucmVmLm51bWJlci5jb25mKSByZXR1cm4gJ2hpZGRlbic7CiAgICByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLmNvbW1lbnQpOwoKLy8g5rKh5pyJ5YaF5a6555qE6K+E6K66CmZpbHRlci5pdGVtcy5jb21tZW50Lm90aGVyYy5ub19jb250ZW50ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdvdGhlcmMnLAogICd2ZXJzaW9uJzogMjIzLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8uY29tbWVudC5ub19jb250ZW50JywKICAndGV4dCc6ICd7e2NvbW1lbnRXaXRoT3V0Q29udGVudERlc2N9fScsCiAgJ2NvbW1lbnQnOiBmdW5jdGlvbiBtZW50aW9uT25seUNvbW1lbnRSdWxlKGNvbW1lbnQpIHsKICAgIGlmICghdGhpcy5jb25mKSByZXR1cm4gbnVsbDsKICAgIGlmIChjb21tZW50LnF1ZXJ5U2VsZWN0b3IoJy5tZWRpYV9ib3ggLldCX3BpYycpKSByZXR1cm4gbnVsbDsgLy8g5pyJ5Zu+54mH55qE5LiN566X5rKh5YaF5a65CiAgICB2YXIgdGV4dHMgPSBBcnJheS5mcm9tKGNvbW1lbnQucXVlcnlTZWxlY3RvcignLldCX3RleHQnKS5jaGlsZE5vZGVzKTsKICAgIHRleHRzID0gdGV4dHMuZmlsdGVyKGZ1bmN0aW9uIChuKSB7IHJldHVybiAhdXRpbC5kb20ubWF0Y2hlcyhuLCAnYVt1c2VyY2FyZF0nKTsgfSk7IC8vIOaPkOWIsOS6uuS4jeeul+WGheWuuQogICAgdGV4dHMgPSB0ZXh0cy5tYXAoZnVuY3Rpb24gKG4pIHsgcmV0dXJuIG4udGV4dENvbnRlbnQ7IH0pLmpvaW4oJycpOwogICAgdGV4dHMgPSB0ZXh0cy5yZXBsYWNlKC9ccy9nLCAnJykucmVwbGFjZSgv5Zue5aSNfOWbnuW+qXzlm57opoZ8UmVwbHkvaSwgJycpLnNsaWNlKDEpOyAvLyDnqbrmoLzjgIHigJzlm57lpI3igJ3lkozlhpLlj7fkuI3nrpcKICAgIGlmICghdGV4dHMpIHJldHVybiAnaGlkZGVuJzsgZWxzZSByZXR1cm4gbnVsbDsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLmNvbW1lbnQpOwoKLy8g5ZCr5pyJ6L2s5Y+R55qE6K+E6K66CmZpbHRlci5pdGVtcy5jb21tZW50Lm90aGVyYy53aXRoX2ZvcndhcmQgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ290aGVyYycsCiAgJ3ZlcnNpb24nOiAyMjMsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5jb21tZW50LndpdGhfZm9yd2FyZCcsCiAgJ3RleHQnOiAne3tjb21tZW50V2l0aEZvcndhcmREZXNjfX0nLAogICdjb21tZW50JzogZnVuY3Rpb24gd2l0aEZvcndhcmRDb21tZW50UnVsZShjb21tZW50KSB7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuIG51bGw7CiAgICB2YXIgdXNlcnMgPSBBcnJheS5mcm9tKGNvbW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYVt1c2VyY2FyZF0nKSk7CiAgICB2YXIgdGV4dHMgPSB1c2Vycy5maWx0ZXIoZnVuY3Rpb24gKHUpIHsKICAgICAgcmV0dXJuIHUucHJldmlvdXNTaWJsaW5nLnRleHRDb250ZW50Lm1hdGNoKC9cL1wvJC8pOwogICAgfSk7CiAgICBpZiAodGV4dHMubGVuZ3RoKSByZXR1cm4gJ2hpZGRlbic7IGVsc2UgcmV0dXJuIG51bGw7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5jb21tZW50KTsKCi8vIOWQq+acieWbvueJh+eahOivhOiuugpmaWx0ZXIuaXRlbXMuY29tbWVudC5vdGhlcmMud2l0aF9waWN0dXJlID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdvdGhlcmMnLAogICd2ZXJzaW9uJzogMjIzLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8uY29tbWVudC53aXRoX3BpY3R1cmUnLAogICd0ZXh0JzogJ3t7Y29tbWVudFdpdGhQaWN0dXJlfX0nLAogICdyZWYnOiB7CiAgICAnYWN0JzogewogICAgICAndHlwZSc6ICdzZWxlY3QnLAogICAgICAnZGVmYXVsdCc6ICdmb2xkJywKICAgICAgJ3NlbGVjdCc6IFsKICAgICAgICB7ICd2YWx1ZSc6ICdmb2xkJywgJ3RleHQnOiAne3tjb21tZW50V2l0aFBpY3R1cmVGb2xkfX0nIH0sCiAgICAgICAgeyAndmFsdWUnOiAnaGlkZGVuJywgJ3RleHQnOiAne3tjb21tZW50V2l0aFBpY3R1cmVIaWRlfX0nIH0sCiAgICAgIF0sCiAgICB9CiAgfSwKICAnY29tbWVudCc6IGZ1bmN0aW9uIHdpdGhQaWN0dXJlQ29tbWVudFJ1bGUoY29tbWVudCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybiBudWxsOwogICAgdmFyIG1lZGlhID0gY29tbWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfbWVkaWFfd3JhcCcpOyBpZiAoIW1lZGlhKSByZXR1cm4gbnVsbDsKICAgIGlmICh0aGlzLnJlZi5hY3QuY29uZiA9PT0gJ2hpZGRlbicpIHJldHVybiAnaGlkZGVuJzsgZWxzZSByZXR1cm4gbnVsbDsKICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIGlmICh0aGlzLnJlZi5hY3QuY29uZiAhPT0gJ2ZvbGQnKSByZXR1cm47CiAgICBvYnNlcnZlci5jb21tZW50LmFmdGVyKGZ1bmN0aW9uIChjb21tZW50KSB7CiAgICAgIHZhciBtZWRpYSA9IGNvbW1lbnQucXVlcnlTZWxlY3RvcignLldCX21lZGlhX3dyYXA6bm90KFt5YXdmLWNtdC1pbWddKScpOyBpZiAoIW1lZGlhKSByZXR1cm47CiAgICAgIHZhciBpbWcgPSBtZWRpYS5xdWVyeVNlbGVjdG9yKCdsaVthY3Rpb24tdHlwZT0iY29tbWVudF9tZWRpYV9pbWciXSBpbWcnKTsgaWYgKCFpbWcpIHJldHVybjsKICAgICAgdmFyIHBpZCA9IGltZy5zcmMubWF0Y2goL1wvKFteXC9dKilcLlteXC9dKiQvKVsxXTsKICAgICAgdmFyIHRleHQgPSBjb21tZW50LnF1ZXJ5U2VsZWN0b3IoJy5XQl90ZXh0Jyk7CiAgICAgIHZhciBhID0gdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC52aWV3T3JpZ2luYWxGQ0xpbmssIHsgJ3BpZCc6IHBpZCB9KSk7CiAgICAgIG1lZGlhLnNldEF0dHJpYnV0ZSgneWF3Zi1jbXQtaW1nJywgJ2hpZGRlbicpOwogICAgICBhLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkgeyBpbWcuY2xpY2soKTsgfSk7CiAgICAgIHRleHQuYXBwZW5kQ2hpbGQoYSk7CiAgICAgIHZhciBvbGRMaW5rID0gdGV4dC5xdWVyeVNlbGVjdG9yKCdhW2ltYWdlY2FyZF0nKTsKICAgICAgaWYgKG9sZExpbmsgJiYgb2xkTGluayAhPT0gYSkgb2xkTGluay5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG9sZExpbmspOwogICAgfSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5jb21tZW50KTsKCi8vIOiHquWKqOWIoOmZpOivhOiuugpmaWx0ZXIuaXRlbXMuY29tbWVudC5vdGhlcmMuZGVsZXRlX2NvbW1lbnQgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ290aGVyYycsCiAgJ3ZlcnNpb24nOiAyMjksCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby5jb21tZW50LmRlbGV0ZV9jb21tZW50JywKICAndGV4dCc6ICd7e2RlbGV0ZUNvbW1lbnRIaWRkZW59fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnd2FybicsICd0ZXh0JzogJ3t7ZGVsZXRlQ29tbWVudEhpZGRlbkRlc2N9fScgfSB9LAogICdpbml0JzogZnVuY3Rpb24gKCkgewogICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybjsKICAgIHZhciBmID0gZmlsdGVyLmZpeC5jbXRoaWRkZW4uZG9uZTsKICAgIGZpbHRlci5maXguY210aGlkZGVuLmRvbmUgPSBmdW5jdGlvbiAoY29tbWVudCkgewogICAgICBmKGNvbW1lbnQpOwogICAgICB2YXIgZGVsYnV0dG9uID0gY29tbWVudC5xdWVyeVNlbGVjdG9yKCdhW2FjdGlvbi10eXBlPSJkZWxldGUiXScpOyBpZiAoIWRlbGJ1dHRvbikgcmV0dXJuOwogICAgICB2YXIgaW5mbyA9IGRlbGJ1dHRvbi5nZXRBdHRyaWJ1dGUoJ2FjdGlvbi1kYXRhJyk7CiAgICAgIG5ldHdvcmsuY29tbWVudC5kZWwoaW5mbyk7CiAgICB9OwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuY29tbWVudCk7CgovLyDniYjpnaLmuIXnkIYKZmlsdGVyLnByZWRlZi5ncm91cCgnbGF5b3V0Jyk7CgooZnVuY3Rpb24gKCkgewogIHZhciBjdXJyZW50ID0gbnVsbCwgZ3JvdXA7CiAgdmFyIHN1YnRpdGxlID0gZnVuY3Rpb24gKG5hbWUsIGFsbEJ1dHRvbikgewogICAgZ3JvdXAgPSAoY3VycmVudCA9IG5hbWUpLnRvTG9jYWxlTG93ZXJDYXNlKCk7CiAgICBmaWx0ZXIuaXRlbXMubGF5b3V0W2dyb3VwXSA9IHt9OwogICAgLy8g5YiG57uE5qCH6aKYCiAgICB2YXIgdGlkID0gJ2xheW91dEhpZGUnICsgbmFtZTsKICAgIHZhciB3ciA9ICEhdGV4dFt0aWQgKyAnRGVzYyddLCByZWYgPSB7fTsKICAgIGlmICh3cikgcmVmID0geyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7eycgKyB0aWQgKyAnRGVzY319JyB9IH07CiAgICBmaWx0ZXIuaXRlbXMubGF5b3V0W2dyb3VwXS50aXRsZSA9IGZpbHRlci5pdGVtKHsKICAgICAgJ2dyb3VwJzogZ3JvdXAsCiAgICAgICd0eXBlJzogJ3N1YnRpdGxlJywKICAgICAgJ3RleHQnOiAne3snICsgdGlkICsgJ319JyArICh3ciA/ICd7ezxpPn19JyA6ICcnKSwKICAgICAgJ3JlZic6IHJlZgogICAgfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5sYXlvdXQpOwogICAgLy8g5LiL6Z2i5piv5YWo6YCJ5pys57uE5oyJ6ZKuCiAgICBpZiAoIWFsbEJ1dHRvbikgcmV0dXJuOwogICAgZmlsdGVyLml0ZW1zLmxheW91dFtncm91cF0uYWxsID0gZmlsdGVyLml0ZW0oewogICAgICAnZ3JvdXAnOiBncm91cCwKICAgICAgJ3Nob3cnOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGRvbSA9IHV0aWwuZG9tLmNyZWF0ZShodG1sLmNvbmZpZ1NlbGVjdEFsbCk7CiAgICAgICAgdmFyIGEgPSBkb20ucXVlcnlTZWxlY3RvcignYScpOwogICAgICAgIGEuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBmb3IgKHZhciB4ID0gZG9tLm5leHRTaWJsaW5nOyA7IHggPSB4Lm5leHRTaWJsaW5nKSB7CiAgICAgICAgICAgIGlmICh4Lm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERSkgY29udGludWU7CiAgICAgICAgICAgIGlmICh4LmNsYXNzTGlzdC5jb250YWlucygneWF3Zi1jb25maWdCb29sZWFuJykpIHsKICAgICAgICAgICAgICB2YXIgeSA9IHgucXVlcnlTZWxlY3RvcignaW5wdXQnKTsKICAgICAgICAgICAgICBpZiAoIXkuY2hlY2tlZCkgeS5jbGljaygpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICh4LmNsYXNzTGlzdC5jb250YWlucygneWF3Zi1ncm91cFN1YnRpdGxlJykpIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHJldHVybiBkb207CiAgICAgIH0KICAgIH0pLmFkZHRvKGZpbHRlci5ncm91cHMubGF5b3V0KTsKCiAgfTsKCiAgdmFyIGl0ZW0gPSBmdW5jdGlvbiAobmFtZSwgdmVyc2lvbiwgY29udGVudCwgY29uZmlnKSB7CiAgICBpZiAodHlwZW9mIGNvbnRlbnQgIT09ICdmdW5jdGlvbicpIGNvbnRlbnQgPSB1dGlsLmNzcyhjb250ZW50KTsKICAgIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTsKICAgIHZhciB0aWQgPSAnbGF5b3V0SGlkZScgKyBjdXJyZW50ICsgbmFtZSwgcmVmID0gY29uZmlnLnJlZiB8fCB7fSwgd3IgPSAhIXRleHRbdGlkICsgJ0Rlc2MnXTsKICAgIGlmICh3ciAmJiAhcmVmLmkpIHJlZi5pID0gewogICAgICAndHlwZSc6ICdzaWNvbicsCiAgICAgICdpY29uJzogY29uZmlnLmljb24gfHwgJ2FzaycsCiAgICAgICd0ZXh0JzogJ3t7JyArIHRpZCArICdEZXNjfX0nLAogICAgfTsKICAgIGlmIChjb25maWcuYnViYmxlZCkgcmVmLmkuYnViYmxlZCA9IGNvbmZpZy5idWJibGVkOwogICAgdmFyIGl0ZW0gPSB7CiAgICAgICdncm91cCc6IGdyb3VwLAogICAgICAndmVyc2lvbic6IHZlcnNpb24sCiAgICAgICd0eXBlJzogJ2Jvb2xlYW4nLAogICAgICAna2V5JzogJ3dlaWJvLmxheW91dEhpZGUnICsgY3VycmVudCArIG5hbWUsCiAgICAgICdkZWZhdWx0JzogY29uZmlnWydkZWZhdWx0J10gfHwgZmFsc2UsCiAgICAgICd0ZXh0JzogJ3t7JyArIHRpZCArICd9fScgKyAod3IgPyAne3s8aT59fScgOiAnJykgKyAoY29uZmlnLmV4dHQgfHwgJycpLAogICAgICAncmVmJzogcmVmLAogICAgfTsKICAgIGlmIChjb25maWcuYWx3YXlzKSBpdGVtLmluaXQgPSBjb250ZW50OyBlbHNlIGl0ZW0uYWluaXQgPSBjb250ZW50OwogICAgZmlsdGVyLml0ZW1zLmxheW91dFtncm91cF1bbmFtZS50b0xvd2VyQ2FzZSgpXSA9IGZpbHRlci5pdGVtKGl0ZW0pLmFkZHRvKGZpbHRlci5ncm91cHMubGF5b3V0KTsKICB9OwoKICBzdWJ0aXRsZSgnSWNvbicsIHRydWUpOwogIGl0ZW0oJ0xldmVsJywgMTIsICcuaWNvbl9iZWRbbm9kZS10eXBlPSJsZXZlbCJdLCAuV19sZXZlbF9pY28sIC5XX2ljb25fbGV2ZWwgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLCB7ICdleHR0JzogJzxzcGFuIGNsYXNzPSJXX2ljb25fbGV2ZWwgaWNvbl9sZXZlbF9jMiIgc3R5bGU9ImRpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudDttYXJnaW4tYm90dG9tOi0ycHg7Ij48c3Bhbj5Mdi4xPC9zcGFuPjwvc3Bhbj4nIH0pOwogIGl0ZW0oJ01lbWJlcicsIDUsICdbY2xhc3MqPSJpY29uX21lbWJlciJdLCBbY2xhc3MqPSJpY29fbWVtYmVyIl0sIFtjbGFzcyo9Imljb192aXAiXSwgW2NsYXNzKj0iaWNvbl92aXAiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScsIHsgJ2V4dHQnOiAnPGkgY2xhc3M9IldfaWNvbiBpY29uX21lbWJlcjEiIHN0eWxlPSJkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnQiPjwvaT48aW1nIHNyYz0iaHR0cHM6Ly9oNS5zaW5haW1nLmNuL3VwbG9hZC8yMDE2LzA1LzI1LzQ5NC92aXBfaWNvbl96dWFuc2hpNV8xLnBuZyIgY2xhc3M9IldfaWNvbl92aXBzdHlsZSIgc3R5bGU9ImRpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudCI+PGltZyBzcmM9Imh0dHBzOi8vaDUuc2luYWltZy5jbi91cGxvYWQvMjAxNi8wNS8zMC80OTQvYmlydGhkYXloYXRfbGV2ZWxfMS5wbmciIGNsYXNzPSJXX2ljb25fdmlwc3R5bGUiIHN0eWxlPSJkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnQiPjxpbWcgc3JjPSJodHRwczovL2g1LnNpbmFpbWcuY24vdXBsb2FkLzIwMTYvMDUvMjUvNDk0L3ZpcF9pY29uX3lhbmd5YW5nXzEucG5nIiBjbGFzcz0iV19pY29uX3ZpcHN0eWxlIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50Ij4nIH0pOwogIGl0ZW0oJ0FwcHJvdmUnLCA1LCAnLmFwcHJvdmUsIC5pY29uX2FwcHJvdmUsIC5pY29uX3BmX2FwcHJvdmUsIC5pY29uX2FwcHJvdmVfZ29sZCwgLmljb25fcGZfYXBwcm92ZV9nb2xkIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9JywgeyAnZXh0dCc6ICc8aSBjbGFzcz0iV19pY29uIGljb25fYXBwcm92ZSIgc3R5bGU9ImRpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudCI+PC9pPjxpIGNsYXNzPSJXX2ljb24gaWNvbl9hcHByb3ZlX2dvbGQiIHN0eWxlPSJkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnQiPjwvaT4nIH0pOwogIGl0ZW0oJ0FwcHJvdmVDbycsIDUsICcuYXBwcm92ZV9jbywgLmljb25fYXBwcm92ZV9jbywgLmljb25fcGZfYXBwcm92ZV9jbywgW2NsYXNzXj0iV19pY29uX2NvIl0sIFtjbGFzc149Ii5pY29uX2FwcHJvdmVfY29fIl0sIFtjbGFzc149Ii5pY29uX3BmX2FwcHJvdmVfY29fIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLCB7ICdleHR0JzogJzxpIGNsYXNzPSJXX2ljb24gaWNvbl9hcHByb3ZlX2NvIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50Ij48L2k+JyB9KTsKICBpdGVtKCdBcHByb3ZlRGVhZCcsIDEwNywgJy5pY29uX2FwcHJvdmVfZGVhZCwgLmljb25fcGZfYXBwcm92ZV9kZWFkIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9JywgeyAnZXh0dCc6ICc8aSBjbGFzcz0iV19pY29uIGljb25fYXBwcm92ZV9kZWFkIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50Ij48L2k+JyB9KTsKICBpdGVtKCdCaWdGdW4nLCA1MDQsICcuV19pY29uX2JmIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9JywgeyAnZXh0dCc6ICc8aSBjbGFzcz0iV19pY29uX2JmIGljb25fYmlnZnVucyIgc3R5bGU9ImRpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudCI+PC9pPicgfSk7CiAgaXRlbSgnQ2x1YicsIDUsICcuaWNvX2NsdWIsIC5pY29uX3BmX2NsdWIsIC5pY29uX2NsdWIgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLCB7ICdleHR0JzogJzxpIGNsYXNzPSJXX2ljb24gaWNvbl9jbHViIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50Ij48L2k+JyB9KTsKICBpdGVtKCdWR2lybCcsIDUsICcuaWNvX3ZsYWR5LCAuaWNvbl9wZl92bGFkeSwgLmljb25fdmxhZHkgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLCB7ICdleHR0JzogJzxpIGNsYXNzPSJXX2ljb24gaWNvbl92bGFkeSIgc3R5bGU9ImRpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudCI+PC9pPicgfSk7CiAgaXRlbSgnU3VwZXJ2aXNvcicsIDQ1NywgJy5pY29uX3N1cGVydmlzb3IgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLCB7ICdleHR0JzogJzxpIGNsYXNzPSJXX2ljb24gaWNvbl9zdXBlcnZpc29yIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50Ij48L2k+JyB9KTsKICBpdGVtKCdUYW9iYW8nLCA1LCAnLmljb190YW9iYW8sIC5pY29uX3RtYWxsLCAuaWNvbl90YW9iYW8sIC5pY29uX3RtYWxsIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9JywgeyAnZXh0dCc6ICc8aSBjbGFzcz0iV19pY29uIGljb25fdGFvYmFvIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50Ij48L2k+PGkgY2xhc3M9IldfaWNvbiBpY29uX3RtYWxsIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50Ij48L2k+JyB9KTsKICBpdGVtKCdDaGVuZycsIDM3MywgJy5pY29uX2NoZW5nIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9JywgeyAnZXh0dCc6ICc8aSBjbGFzcz0iV19pY29uIGljb25fY2hlbmciIHN0eWxlPSJkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnQiPjwvaT4nIH0pOwogIGl0ZW0oJ0dvbmd5aScsIDkzLCAnLmljb19nb25neWksIC5pY29fZ29uZ3lpMSwgLmljb19nb25neWkyLCAuaWNvX2dvbmd5aTMsIC5pY29fZ29uZ3lpNCwgLmljb19nb25neWk1LCAuaWNvbl9nb25neWksIC5pY29uX2dvbmd5aTIsIC5pY29uX2dvbmd5aTMsIC5pY29uX2dvbmd5aTQsIC5pY29uX2dvbmd5aTUgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLCB7ICdleHR0JzogJzxpIGNsYXNzPSJXX2ljb24gaWNvbl9nb25neWkiIHN0eWxlPSJkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnQiPjwvaT4nIH0pOwogIGl0ZW0oJ1pvbmd5aWthJywgMjksICcuem9uZ3lpa2EyMDE0LCAuaWNvbl96b25neWlrYTIwMTQgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLCB7ICdleHR0JzogJzxpIGNsYXNzPSJXX2ljb24gaWNvbl96b25neWlrYTIwMTQiIHN0eWxlPSJkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnQiPjwvaT4nIH0pOwogIGl0ZW0oJ090aGVyJywgNDQzLCBmdW5jdGlvbiAoKSB7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGljb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYSA+IC5XX2ljb25feXlzdHlsZScpOwogICAgICBBcnJheS5mcm9tKGljb25zKS5mb3JFYWNoKGZ1bmN0aW9uIChpY29uKSB7CiAgICAgICAgaWNvbi5wYXJlbnROb2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaWNvbi5wYXJlbnROb2RlKTsKICAgICAgfSk7CiAgICB9KTsKICAgIHV0aWwuY3NzLmFkZCgnLldfaWNvbl95eXN0eWxlLCAuV19pY29uX3l5IHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgfSk7CgogIHN1YnRpdGxlKCdGb2xsb3cnLCB0cnVlKTsKICBpdGVtKCdTaW5nbGUnLCA0NzUsICdbaWRePSJQbF9PZmZpY2lhbF9XZWlib0RldGFpbF9fIl0gW25vZGUtdHlwZSo9ImZlZWRfcmVjb21tZW5kX2ZvbGxvdyJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnQXRNZScsIDQ3NSwgJyN2Nl9wbF9jb250ZW50X2F0bWV3ZWlibyBbbm9kZS10eXBlKj0iZmVlZF9yZWNvbW1lbmRfZm9sbG93Il0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdEaXNjb3ZlcicsIDQ3NSwgJyNwbGNfZGlzY292ZXIgW25vZGUtdHlwZSo9ImZlZWRfcmVjb21tZW5kX2ZvbGxvdyJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnV2hpc3BlcicsIDQ3OSwgJyN2Nl9wbF9jb250ZW50X2hvbWVmZWVkIFtub2RlLXR5cGUqPSJmZWVkX3JlY29tbWVuZF9mb2xsb3ciXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1ZpZGVvJywgNDc1LCAnLldCX2g1dmlkZW8gLmNvbi0xMSwgLndidi1hZGQtYm94IHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnUmVjb21tZW5kJywgNDc4LCAnW2FjdGlvbi10eXBlPSJmb2xsb3dfcmVjb21tZW5kX2FyciJdLCBbbm9kZS10eXBlPSJmb2xsb3dfcmVjb21tZW5kX2JveCJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CgogIHN1YnRpdGxlKCdOYXYnLCB0cnVlKTsKICBpdGVtKCdMb2dvSW1nJywgMjU2LCBmdW5jdGlvbiByZXBsYWNlTG9nbygpIHsKICAgIC8vIDk0772eMjA1IOeJiOacrOmSiOWvuSB2NSDnmoTlip/og73vvIwyMDYg54mI5pys5ZugIHY2IOacquWHuueOsOiKguaXpeW+veagh+iAjOenu+mZpO+8mzI1NiDniYjmnKzmgaLlpI0KICAgIHZhciBib3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfZ2xvYmFsX25hdiAuZ25fbG9nbyAuYm94Jyk7CiAgICBpZiAoIWJveCkgcmV0dXJuIHNldFRpbWVvdXQocmVwbGFjZUxvZ28sIDEwMCk7CiAgICB2YXIgaW1nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLldCX2dsb2JhbF9uYXYgLmduX2xvZ28gLmJveCBpbWcnKTsKICAgIGlmICghaW1nKSByZXR1cm47CiAgICB2YXIgbG9nbyA9IHV0aWwuZG9tLmNyZWF0ZShodG1sLm5hdkxvZ28pOwogICAgaW1nLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGxvZ28sIGltZyk7CiAgfSk7CiAgaXRlbSgnTWFpbicsIDUsICcuZ25fbmF2X2xpc3Q+bGk6bnRoLWNoaWxkKDEpIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnVFYnLCA0MDUsICcuZ25fbmF2X2xpc3Q+bGk6bnRoLWNoaWxkKDIpIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnSG90JywgNSwgJy5nbl9uYXZfbGlzdD5saTpudGgtY2hpbGQoMykgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdHYW1lJywgNSwgJy5nbl9uYXZfbGlzdD5saTpudGgtY2hpbGQoNCkgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdIb3RTZWFyY2gnLCAyNzcsIGZ1bmN0aW9uICgpIHsgb2JzZXJ2ZXIuc3RvcGpzb25wKC9cL1wvcy53ZWliby5jb21cL2FqYXhcL2pzb25wXC9nZXR0b3BzdWdcPy8pOyB9KTsKICBpdGVtKCdOb3RpY2VOZXcnLCA4NywgJy5XQl9nbG9iYWxfbmF2IC5nbl9zZXRfbGlzdCAuV19uZXdfY291bnQgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdOZXcnLCA0MzMsICcuV0JfZ2xvYmFsX25hdiAuV19uZXcgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdIb3RUaXAnLCA0MzAsIGZ1bmN0aW9uICgpIHsKICAgIC8vIOa3u+WKoOS4gOS4quWBh+eahOWwj+m7hOetvgogICAgdmFyIGZha2VUaXBzID0gbnVsbDsKICAgIHZhciBhZGRGYWtlVGlwID0gZnVuY3Rpb24gYWRkRmFrZVRpcCgpIHsKICAgICAgaWYgKGZha2VUaXBzKSByZXR1cm4gZmFrZVRpcHM7CiAgICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfZ2xvYmFsX25hdiAuZ25fdG9wbWVudWxpc3RfdGlwcycpLnBhcmVudE5vZGU7CiAgICAgIGZha2VUaXBzID0gdXRpbC5kb20uY3JlYXRlKGh0bWwudG9wTWVudUxpc3RUaXBzKTsKICAgICAgZmFrZVRpcHMucXVlcnlTZWxlY3RvcignLmZpY29uX2Nsb3NlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkgewogICAgICAgIGZha2VUaXBzLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgICAgdmFyIHJlYWxUaXBzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLldCX2dsb2JhbF9uYXYgLmduX3RvcG1lbnVsaXN0X3RpcHMnKTsKICAgICAgICByZWFsVGlwcy5xdWVyeVNlbGVjdG9yKCcuZmljb25fY2xvc2UnKS5jbGljaygpOwogICAgICB9KTsKICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGZha2VUaXBzKTsKICAgICAgcmV0dXJuIGZha2VUaXBzOwogICAgfTsKICAgIC8vIOWcqOecn+eahOWwj+m7hOetvuacieWPmOWMlueahOaXtuWAmeabtOaWsOWBh+eahOWwj+m7hOetvgogICAgdmFyIHVwZGF0ZUZha2VUaXBzID0gZnVuY3Rpb24gdXBkYXRlRmFrZVRpcHMoKSB7CiAgICAgIHZhciByZWFsVGlwcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5XQl9nbG9iYWxfbmF2IC5nbl90b3BtZW51bGlzdF90aXBzJyk7IGlmICghcmVhbFRpcHMpIHJldHVybjsKICAgICAgdmFyIGZha2VUaXBzID0gYWRkRmFrZVRpcCgpOyBpZiAoIWZha2VUaXBzKSByZXR1cm47CgogICAgICB2YXIgdGlwc0NvbnRhaW5lciA9IGZha2VUaXBzLnF1ZXJ5U2VsZWN0b3IoJ3VsJyk7CiAgICAgIHZhciBjdXJyZW50VGlwcyA9IEFycmF5LmZyb20odGlwc0NvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCdsaScpKTsKCiAgICAgIHZhciBhbGxUaXBzID0gQXJyYXkuZnJvbShyZWFsVGlwcy5xdWVyeVNlbGVjdG9yQWxsKCdsaScpKTsKICAgICAgYWxsVGlwcyA9IGFsbFRpcHMuZmlsdGVyKGZ1bmN0aW9uICh0aXApIHsKICAgICAgICB2YXIgYSA9IHRpcC5xdWVyeVNlbGVjdG9yKCdhW2hyZWZdJyksIGhyZWYgPSBhICYmIGEuaHJlZiB8fCAnJzsKICAgICAgICBpZiAoaHJlZi5pbmRleE9mKCcvL2Qud2VpYm8uY29tJykgIT09IC0xKSByZXR1cm4gZmFsc2U7CiAgICAgICAgaWYgKGhyZWYuaW5kZXhPZignLy93ZWliby5jb20vdHYnKSAhPT0gLTEpIHJldHVybiBmYWxzZTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSk7CgogICAgICB2YXIgY2hhbmdlZCA9IGFsbFRpcHMubWFwKGZ1bmN0aW9uICh0aXApIHsgcmV0dXJuIHRpcC50ZXh0Q29udGVudDsgfSkuam9pbignLCcpICE9PQogICAgICAgIGN1cnJlbnRUaXBzLm1hcChmdW5jdGlvbiAodGlwKSB7IHJldHVybiB0aXAudGV4dENvbnRlbnQ7IH0pLmpvaW4oJywnKTsKICAgICAgaWYgKCFjaGFuZ2VkKSByZXR1cm47CgogICAgICB2YXIgbmV3Q29udGFpbmVyID0gdGlwc0NvbnRhaW5lci5jbG9uZU5vZGUodHJ1ZSk7CiAgICAgIG5ld0NvbnRhaW5lci5pbm5lckhUTUwgPSAnJzsKICAgICAgYWxsVGlwcy5mb3JFYWNoKGZ1bmN0aW9uICh0aXApIHsgbmV3Q29udGFpbmVyLmFwcGVuZENoaWxkKHRpcC5jbG9uZU5vZGUodHJ1ZSkpOyB9KTsKICAgICAgdGlwc0NvbnRhaW5lci5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChuZXdDb250YWluZXIsIHRpcHNDb250YWluZXIpOwogICAgICBpZiAoYWxsVGlwcy5sZW5ndGggJiYgcmVhbFRpcHMuc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnKSB7CiAgICAgICAgZmFrZVRpcHMuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZmFrZVRpcHMuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgfQogICAgfTsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgLldCX2dsb2JhbF9uYXYgLmduX3RvcG1lbnVsaXN0X3RpcHM6bm90KC55YXdmLWduX3RvcG1lbnVsaXN0X3RpcHMpIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9nbG9iYWxfbmF2IC5nbl90b3BtZW51bGlzdF9ub3RpY2U6bm90KFtzdHlsZSo9Im5vbmUiXSkgfiAueWF3Zi1nbl90b3BtZW51bGlzdF90aXBzIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CiAgICAqLyBub29wKCk7IH0pKTsKICAgIG9ic2VydmVyLmRvbS5hZGQodXBkYXRlRmFrZVRpcHMpOwogICAgdXBkYXRlRmFrZVRpcHMoKTsKICB9KTsKCiAgLy8g6ZqQ6JeP5bem5qCP55qE6L6F5Yqp5Ye95pWwCiAgdmFyIGxldkhpZGRlbiA9IChmdW5jdGlvbiAoaWQpIHsKICAgIHZhciBmaXJzdFJ1biA9IHRydWU7CiAgICB2YXIgaWRzID0gW107CiAgICAvLyDnp7vpmaTkuIDkuKrlt6bmoI/pk77mjqXmiJbnm7jlhbPlhYPntKAKICAgIHZhciByZW1vdmVOb2RlID0gZnVuY3Rpb24gcmVtb3ZlTm9kZShub2RlKSB7CiAgICAgIHZhciBjb250YWluZXIgPSBub2RlLnBhcmVudE5vZGUsIHByZXYsIG5leHQ7CiAgICAgIHZhciByZW1vdmVCbGFuayA9IGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5URVhUX05PREUgJiYgbm9kZS5kYXRhLm1hdGNoKC9eXHMqJC8pKQogICAgICAgICAgcmV0dXJuIGNvbnRhaW5lci5yZW1vdmVDaGlsZChub2RlKTsKICAgICAgICBpZiAobm9kZSAmJiBub2RlLm5vZGVUeXBlID09PSBOb2RlLkNPTU1FTlRfTk9ERSkKICAgICAgICAgIHJldHVybiBjb250YWluZXIucmVtb3ZlQ2hpbGQobm9kZSk7CiAgICAgIH07CiAgICAgIHZhciByZW1vdmVCbGFua1NpYmxpbmcgPSBmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHdoaWxlIChyZW1vdmVCbGFuayhub2RlLnByZXZpb3VzU2libGluZykpOwogICAgICAgIHdoaWxlIChyZW1vdmVCbGFuayhub2RlLm5leHRTaWJsaW5nKSk7CiAgICAgIH07CiAgICAgIHJlbW92ZUJsYW5rU2libGluZyhub2RlKTsKICAgICAgcHJldiA9IG5vZGUucHJldmlvdXNTaWJsaW5nLCBuZXh0ID0gbm9kZS5uZXh0U2libGluZzsKICAgICAgLy8g5aaC5p6c5YmN5ZCO6YO95piv5YiG5Ymy57q/77yI6L+e57ut55qE5YiG5Ymy57q/77yJ6YKj5LmI5bqU5b2T5Yig5o6J5LiA5Liq77yI5Yig5o6J5YmN6Z2i5LiA5Liq77yJCiAgICAgIC8vIOWmguaenOWIhuWJsue6v+WcqOW8gOWktOaIluacq+Wwvu+8jOmCo+S5iOW6lOivpeWIoOaOieWIhuWJsue6vwogICAgICAvLyDlpoLmnpzliY3lkI7pg73msqHmnInkuJzopb/vvIzpgqPkuYjlupTor6Xov57lkIzlrrnlmajkuIDotbfliKDpmaQKICAgICAgd2hpbGUgKCghcHJldiB8fCB1dGlsLmRvbS5tYXRjaGVzKHByZXYsICcubGV2X2xpbmUnKSkgJiYKICAgICAgICAoIW5leHQgfHwgdXRpbC5kb20ubWF0Y2hlcyhuZXh0LCAnLmxldl9saW5lJykpKSB7CiAgICAgICAgdmFyIGxpbmUgPSBudWxsOwogICAgICAgIGlmIChwcmV2ICYmIHV0aWwuZG9tLm1hdGNoZXMocHJldiwgJy5sZXZfbGluZV92MicpKSBsaW5lID0gcHJldjsKICAgICAgICBpZiAobmV4dCAmJiB1dGlsLmRvbS5tYXRjaGVzKG5leHQsICcubGV2X2xpbmVfdjInKSkgbGluZSA9IG5leHQ7CiAgICAgICAgaWYgKGxpbmUpIHsKICAgICAgICAgIGxpbmUgPSBwcmV2IHx8IG5leHQ7CiAgICAgICAgICByZW1vdmVCbGFua1NpYmxpbmcobGluZSk7CiAgICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQobGluZSk7CiAgICAgICAgICBwcmV2ID0gbm9kZS5wcmV2aW91c1NpYmxpbmc7CiAgICAgICAgICBuZXh0ID0gbm9kZS5uZXh0U2libGluZzsKICAgICAgICB9IGVsc2UgYnJlYWs7CiAgICAgIH0KICAgICAgaWYgKG5vZGUucGFyZW50Tm9kZSkgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpOwogICAgICBpZiAoIXByZXYgJiYgIW5leHQpIHJlbW92ZU5vZGUoY29udGFpbmVyKTsKICAgIH07CiAgICAvLyDmo4Dmn6XmmK/lkKbmnInmnKrnrZvpgInnmoTlt6bmoI/pk77mjqXlubbmoLnmja7lkI3np7DliKTmlq0KICAgIHZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIGxlZnROYXZSZW1vdmUoKSB7CiAgICAgIHZhciBsZXZzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjdjZfcGxfbGVmdG5hdl9ncm91cCAubGV2W3lhd2YtaWRdOm5vdChbeWF3Zi1jaGVja2VkLWxldl0pJykpOyBpZiAoIWxldnMpIHJldHVybjsKICAgICAgbGV2cy5mb3JFYWNoKGZ1bmN0aW9uIChsZXYpIHsKICAgICAgICBsZXYuc2V0QXR0cmlidXRlKCd5YXdmLWNoZWNrZWQtbGV2JywgJycpOwogICAgICAgIHZhciBpZCA9IGxldi5nZXRBdHRyaWJ1dGUoJ3lhd2YtaWQnKTsgaWYgKGlkcy5pbmRleE9mKGlkKSA9PT0gLTEpIHJldHVybjsKICAgICAgICByZW1vdmVOb2RlKGxldik7CiAgICAgIH0pOwogICAgfTsKICAgIHJldHVybiBmdW5jdGlvbiAoaWQpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICBpZHMucHVzaCgnbGVmdG5hdl8nICsgaWQpOwogICAgICAgIGlmIChmaXJzdFJ1bikgewogICAgICAgICAgb2JzZXJ2ZXIuZG9tLmFkZChsaXN0ZW5lcik7IGxpc3RlbmVyKCk7CiAgICAgICAgICB1dGlsLmNzcy5hZGQoJyN2Nl9wbF9sZWZ0bmF2X2dyb3VwIC5sZXY6bm90KFt5YXdmLWNoZWNrZWQtbGV2XSkgeyB2aXNpYmlsaXR5OiBoaWRkZW47IH0nKTsKICAgICAgICB9CiAgICAgIH07CiAgICB9OwogIH0oKSk7CiAgc3VidGl0bGUoJ0xlZnQnLCB0cnVlKTsKICBpdGVtKCdIb21lJywgMzkwLCBsZXZIaWRkZW4oJ2hvbWUnKSk7CiAgaXRlbSgnRmF2JywgMzkwLCBsZXZIaWRkZW4oJ2ZhdicpKTsKICBpdGVtKCdMaWtlJywgMzkwLCBsZXZIaWRkZW4oJ2xpa2UnKSk7CiAgaXRlbSgnSG90JywgMzkwLCBsZXZIaWRkZW4oJ2hvdCcpKTsKICBpdGVtKCdUVicsIDQyMywgbGV2SGlkZGVuKCd0dicpKTsKICBpdGVtKCdOZXdGZWVkJywgNTAwLCBsZXZIaWRkZW4oJ25ldycpKTsKICBpdGVtKCdGcmllbmRzJywgNSwgbGV2SGlkZGVuKCdmcmllbmRzJykpOwogIGl0ZW0oJ0dyb3VwVG9NZScsIDMzMywgbGV2SGlkZGVuKCdncm91cHNmZWVkJykpOwogIGl0ZW0oJ1NwZWNpYWwnLCAzMzMsIGxldkhpZGRlbignc3BlY2lhbCcpKTsKICBpdGVtKCdXaGlzcGVyJywgMzMzLCBsZXZIaWRkZW4oJ3doaXNwZXInKSk7CiAgaXRlbSgnVlBsdXMnLCA0NzIsIGxldkhpZGRlbigndnBsdXMnKSk7CiAgaXRlbSgnTmV3JywgMTA2LCAnLldCX2xlZnRfbmF2IC5sZXYgLldfbmV3LCAueWF3Zi1XQl9sZWZ0X25hdiAubGV2IC5XX25ldyB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ05ld3MnLCAxMDYsICcuV0JfbGVmdF9uYXYgLmxldmVsXzFfQm94IC5XX25ld19jb3VudCwgLnlhd2YtV0JfbGVmdF9uYXYgLmxldmVsXzFfQm94IC5XX25ld19jb3VudCB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ0NvdW50JywgMTA2LCAnLldCX2xlZnRfbmF2IC5wbF9sZWZ0bmF2X2dyb3VwIC5XX25ld19jb3VudCwgLldCX2xlZnRfbmF2IC5sZXYgLldfbmV3X2NvdW50LCAueWF3Zi1XQl9sZWZ0X25hdiAucGxfbGVmdG5hdl9ncm91cCAuV19uZXdfY291bnQsIC55YXdmLVdCX2xlZnRfbmF2IC5sZXYgLldfbmV3X2NvdW50IHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CgogIHN1YnRpdGxlKCdNaWRkbGUnLCB0cnVlKTsKICBpdGVtKCdSZWNvbW1lbmRlZFRvcGljJywgNSwgJyN2Nl9wbF9jb250ZW50X3B1Ymxpc2hlcnRvcCBkaXZbbm9kZS10eXBlPSJyZWNvbW1lbmRUb3BpYyJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnRmVlZFJlY29tbWFuZCcsIDM1LCAnYS5ub3Rlc1tub2RlLXR5cGU9ImZlZWRfbGlzdF9uZXdCYXIiXVtocmVmXj0iaHR0cCJdOm5vdChbYWN0aW9uLXR5cGU9ImZlZWRfbGlzdF9uZXdCYXIiXSksIC5XQl9mZWVkX25ld3VzZXJbbm9kZS10eXBlPSJyZWNvbW1mZWVkIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdNZW1iZXJUaXAnLCA1LCAnW25vZGUtdHlwZT0iZmVlZF9saXN0X3NoaWVsZEtleXdvcmQiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwoKICBzdWJ0aXRsZSgnUmlnaHQnLCB0cnVlKTsKICBpdGVtKCdJbmZvJywgNSwgJyN2Nl9wbF9yaWdodG1vZF9teWluZm8geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdSZWNvbU11c2ljUmFuaycsIDM4NywgJyN2Nl9wbF9yaWdodG1vZF9yYW5rIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnSG90VG9waWMnLCA1LCAnW3lhd2YtaWQ9InJpZ2h0bW9kX3p0X2hvdHRvcGljIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdIb3RUb3BpY0V4cGFuZCcsIDE3OCwgJy5ob3RfdG9waWMgLldCX3JpZ2h0X2V4cGFuZCB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ0ludGVyZXN0JywgNSwgJ1t5YXdmLWlkPSJyaWdodG1vZF9yZWNvbV9pbnRlcmVzdCJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnTWVtYmVyJywgNSwgJyN2Nl90cnVzdFBhZ2VsZXRfcmVjb21fbWVtYmVyIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnR3JvdXBzJywgMTAyLCAnI3Y2X3BsX3JpZ2h0bW9kX2dyb3VwcyB7IGRpc3BsYXk6IG5vbmU7IH0nKTsKICBpdGVtKCdSZWNvbUdyb3VwVXNlcicsIDE5MSwgJyN2Nl9wbF9yaWdodG1vZF9yZWNvbWdyb3VwdXNlciB7IGRpc3BsYXk6IG5vbmU7IH0nKTsKICBpdGVtKCdIb25nYmFvUmFuaycsIDQzMiwgJyN2Nl9wbF9yaWdodG1vZF9ob25nYmFvIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnTW92aWUnLCAxODYsICdbeWF3Zi1pZD0icmlnaHRtb2RfcmVjb21fbW92aWUiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ0F0dEZlZWQnLCAyNDgsICcjdjZfcGxfcmlnaHRtb2RfYXR0ZmVlZCB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScsIHsgJ2ljb24nOiAnd2FybicgfSk7CiAgaXRlbSgnVGFvYmFvTW92aWUnLCAyMDAsICdbeWF3Zi1pZD0icmlnaHRtb2RfdGFvYmFvX21vdmllIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdOb3RpY2UnLCA1LCAnI3Y2X3BsX3JpZ2h0bW9kX25vdGljZWJvYXJkIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CgogIHN1YnRpdGxlKCdXZWlibycsIHRydWUpOwogIGl0ZW0oJ1JlY29tRmVlZCcsIDIsICdbbm9kZS10eXBlPSJyZWNvbW1mZWVkIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdGZWVkT3V0ZXJUaXAnLCA0NDksICcuV0JfZmVlZCAuV190aXBzIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnRmVlZFRpcCcsIDcsICdbbm9kZS10eXBlPSJmZWVkX3ByaXZhdGVzZXRfdGlwIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdHcm91cFRpcCcsIDk3LCAnLldCX2ZlZWRfdHlwZSAuV0JfY2FyZHRpdGxlX2IgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdWSVBCYWNrZ3JvdW5kJywgMjUzLCB1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgIC5XQl9mZWVkX2RldGFpbFtzdHlsZSo9ImZlZWRfY292ZXIvc3Rhcl8iXSwKICAgIC5XQl9mZWVkX2RldGFpbFtzdHlsZSo9ImZlZWRfY292ZXIvdmlwXyJdIHsgYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50OyB9CiAgICAuV0JfdmlwY292ZXIsIC5XQl9zdGFyY292ZXIgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0KICAgIC5XQl9mZWVkX3ZpcGNvdmVyIC5XQl9mZWVkX2RldGFpbCB7IHBhZGRpbmctdG9wOiAxMHB4OyB9CiAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mZWVkX3ZpcGNvdmVyIC5XQl9mZWVkX2RldGFpbCB7IHBhZGRpbmctdG9wOiAyMHB4OyB9CiAgKi8gbm9vcCgpOyB9KSk7CiAgaXRlbSgnTGFzdFBpYycsIDcyLCBmdW5jdGlvbiAoKSB7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIGhpZGVMYXN0UGljKCkgewogICAgICB2YXIgbGFzdDsKICAgICAgbGFzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5XQl9mZWVkX3R5cGUgLldCX2V4cGFuZF9tZWRpYSAuV0JfbWVkaWFfdmlldzpub3QoW3lhd2YtcGljbGFzdF0pIC5waWNfY2hvb3NlX2JveCBsaTpsYXN0LWNoaWxkIGEuY3VycmVudCcpOwogICAgICB3aGlsZSAobGFzdCAmJiAhbGFzdC5jbGFzc0xpc3QuY29udGFpbnMoJ1dCX21lZGlhX3ZpZXcnKSkgbGFzdCA9IGxhc3QucGFyZW50Tm9kZTsKICAgICAgaWYgKGxhc3QpIGxhc3Quc2V0QXR0cmlidXRlKCd5YXdmLXBpY2xhc3QnLCAneWF3Zi1waWNsYXN0Jyk7CiAgICAgIGxhc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfZmVlZF90eXBlIC5XQl9leHBhbmRfbWVkaWEgLldCX21lZGlhX3ZpZXdbeWF3Zi1waWNsYXN0XSAucGljX2Nob29zZV9ib3ggbGk6bm90KDpsYXN0LWNoaWxkKSBhLmN1cnJlbnQnKTsKICAgICAgd2hpbGUgKGxhc3QgJiYgIWxhc3QuY2xhc3NMaXN0LmNvbnRhaW5zKCdXQl9tZWRpYV92aWV3JykpIGxhc3QgPSBsYXN0LnBhcmVudE5vZGU7CiAgICAgIGlmIChsYXN0KSBsYXN0LnJlbW92ZUF0dHJpYnV0ZSgneWF3Zi1waWNsYXN0Jyk7CiAgICAgIHZhciBjbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5XQl9mZWVkX3R5cGUgLldCX2V4cGFuZF9tZWRpYSAuV0JfbWVkaWFfdmlldyAuYXJ0d29ya19ib3ggLmZpY29uX2Nsb3NlICcpOwogICAgICBpZiAoY2xvc2UpIGNsb3NlLmNsaWNrKCk7CiAgICB9KTsKICAgIHV0aWwuY3NzLmFkZCgnLldCX2ZlZWRfdHlwZSAuV0JfZXhwYW5kX21lZGlhIC5XQl9tZWRpYV92aWV3W3lhd2YtcGljbGFzdF0gLnJpZ2h0Y3Vyc29yIHsgY3Vyc29yOiB1cmwoIi8vaW1nLnQuc2luYWpzLmNuL3Q2L3N0eWxlL2ltYWdlcy9jb21tb24vc21hbGwuY3VyIiksIGF1dG8gIWltcG9ydGFudDsgfScpOwogIH0pOwogIGl0ZW0oJ1BpY1RhZycsIDE3OSwgJy5XQl9tZWRpYV92aWV3IC5tZWRpYV9zaG93X2JveCAuYXJ0d29ya19ib3ggLnRhZ19zaG93cGljTCwgLldCX21lZGlhX3ZpZXcgLm1lZGlhX3Nob3dfYm94IC5hcnR3b3JrX2JveCAudGFnX3Nob3dwaWNSLCAuaWNvbl90YWdlZF9waWMgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdTb25UaXRsZScsIDM1LCAnLldCX2ZlZWRfdHlwZSAuV0JfZmVlZF90b2dldGhlciAud2Z0X2hkIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnQ2FyZCcsIDE4MiwgJy5XQl9waWNfYXBwLCAuV0JfZmVlZF9zcGVjLCAuV0JfbXVzaWMgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdBcnRpY2FsUGF5JywgMjIwLCBmdW5jdGlvbiAoKSB7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIGhpZGVBcnRpY2FsUGF5KCkgewogICAgICB2YXIgdDEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmVlZF9hcHBfYnRuX2EgYVthY3Rpb24tZGF0YSo9InB4LmUud2VpYm8uY29tIl0nKTsKICAgICAgaWYgKHQxKSB7CiAgICAgICAgd2hpbGUgKCF1dGlsLmRvbS5tYXRjaGVzKHQxLCAnLmZlZWRfYXBwX2J0bl9hJykpIHQxID0gdDEucGFyZW50Tm9kZTsKICAgICAgICB0MS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHQxKTsKICAgICAgfQogICAgICB2YXIgdDIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfY2FyZHdyYXAgI3BsX2FydGljbGVfYXJ0aWNsZVBheScpOwogICAgICBpZiAodDIpIHsKICAgICAgICB3aGlsZSAoIXV0aWwuZG9tLm1hdGNoZXModDIsICcuV0JfY2FyZHdyYXAnKSkgdDIgPSB0Mi5wYXJlbnROb2RlOwogICAgICAgIHQyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodDIpOwogICAgICB9CiAgICAgIHZhciB0MyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXdhcmRjb21wb25lbnQnKTsKICAgICAgaWYgKHQzICYmIHQzLnF1ZXJ5U2VsZWN0b3IoJ2FbYWN0aW9uLXR5cGU9ImJ1eVdyYXAiXVthY3Rpb24tZGF0YSo9InR5cGU9cmV3YXJkIl0nKSkgewogICAgICAgIHdoaWxlICh0My5wYXJlbnROb2RlLmZpcnN0Q2hpbGQgPT09IHQzLnBhcmVudE5vZGUubGFzdENoaWxkKSB0MyA9IHQzLnBhcmVudE5vZGU7CiAgICAgICAgdDMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0Myk7CiAgICAgIH0KICAgIH0pOwogIH0pOwogIGl0ZW0oJ1RhZycsIDE4NiwgJy5XQl90YWcgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdNb3ZpZVRhZycsIDIxOCwgJy5XQl9mZWVkX3R5cGUgLldCX3RhZ19yZWMgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdTb3VyY2UnLCAzNCwgJy5XQl90aW1lKy5TX3R4dDIsIC5XQl90aW1lKy5TX3R4dDIrLlNfbGluazIsIC5XQl90aW1lKy5TX3R4dDIrLlNfZnVuYzIgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nICsKICAgICcuV0JfZmVlZF9kZXRhaWwgLldCX2Zyb20gYVtkYXRlXTo6YWZ0ZXIgeyBjb250ZW50OiAiICI7IGRpc3BsYXk6IGJsb2NrOyB9IC5XQl9mZWVkX2RldGFpbCAuV0JfZnJvbSB7IGhlaWdodDogMTZweDsgb3ZlcmZsb3c6IGhpZGRlbjsgfScpOwogIGl0ZW0oJ1BvcCcsIDExOCwgJy5XQl9mZWVkX2RhdGFpbCBhW2FjdGlvbi10eXBlPSJmbF9wb3AiXSwgLldCX2ZlZWRfZGF0YWlsIGFbYWN0aW9uLXR5cGU9ImZsX3BvcCJdKy5TX3R4dDMsICcgKwogICAgJy5XQl9oYW5kbGUgbGlbeWF3Zi1oYW5kbGUtdHlwZT0iZmxfcG9wIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdMaWtlJywgMzQsICdhW2FjdGlvbi10eXBlPSJmZWVkX2xpc3RfbGlrZSJdLCBhW2FjdGlvbi10eXBlPSJmZWVkX2xpc3RfbGlrZSJdKy5TX3R4dDMsICcgKwogICAgJ1tub2RlLXR5cGU9Im11bHRpX2ltYWdlX2xpa2UiXSwgW2FjdGlvbi10eXBlPSJmZWVkX2xpc3RfaW1hZ2VfbGlrZSJdLCAnICsKICAgICdbYWN0aW9uLXR5cGU9Im9iamVjdF9saWtlIl0sIFthY3Rpb24tdHlwZT0ibGlrZV9vYmplY3QiXSwgJyArCiAgICAnLldCX2ZlZWRfZGF0YWlsIGFbYWN0aW9uLXR5cGU9ImZsX2xpa2UiXSwgLldCX2ZlZWRfZGF0YWlsIGFbYWN0aW9uLXR5cGU9ImZsX2xpa2UiXSsuU190eHQzLCAnICsKICAgICcuV0JfZXhwYW5kIC5XQl9oYW5kbGUuV19mciBsaTpudGgtY2hpbGQoMyksICcgKwogICAgJy5XQl9oYW5kbGUgbGlbeWF3Zi1oYW5kbGUtdHlwZT0iZmxfbGlrZSJdLCAuV0JfaGFuZGxlIGxpW3lhd2YtaGFuZGxlLXR5cGU9Imxpa2UiXSAnICsKICAgICcubGF5ZXJfbXVsdGlwaWNfcHJldmlldyAucG9zX2ljb24geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdMaWtlQ29tbWVudCcsIDM0LCAnLldCX2hhbmRsZSBsaVt5YXdmLWNvbW1lbnQtaGFuZGxlLXR5cGU9Imxpa2UiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ0xpa2VQb3B1cCcsIDQ5NCwgJy5XX2xheWVyX2F0dGl0dWRlIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnRm9yd2FyZCcsIDM0LCAnYVthY3Rpb24tdHlwZT0iZmVlZF9saXN0X2ZvcndhcmQiXSwgYVthY3Rpb24tdHlwZT0iZmVlZF9saXN0X2ZvcndhcmQiXSsuU190eHQzLCAnICsKICAgICcuV0JfbWVkaWFfZXhwYW5kIC5XQl9oYW5kbGUgYS5TX2Z1bmM0W2hyZWYkPSI/dHlwZT1yZXBvc3QiXSwgLldCX21lZGlhX2V4cGFuZCAuV0JfaGFuZGxlIGEuU19mdW5jNFtocmVmJD0iP3R5cGU9cmVwb3N0Il0rLlNfdHh0MywgJyArCiAgICAnLldCX2ZlZWRfZGF0YWlsIGFbYWN0aW9uLXR5cGU9ImZsX2ZvcndhcmQiXSwgLldCX2ZlZWRfZGF0YWlsIGFbYWN0aW9uLXR5cGU9ImZsX2ZvcndhcmQiXSsuU190eHQzLCAnICsKICAgICcuV0JfZXhwYW5kIC5XQl9oYW5kbGUuV19mciBsaTpudGgtY2hpbGQoMSksICcgKwogICAgJy5XQl9oYW5kbGUgbGlbeWF3Zi1oYW5kbGUtdHlwZT0iZmxfZm9yd2FyZCJdLCAuV0JfaGFuZGxlIGxpW3lhd2YtaGFuZGxlLXR5cGU9InRhYiJdOm50aC1jaGlsZCgyKSAnICsKICAgICcgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdGYXZvdXJpdGUnLCAzNCwgJ2FbYWN0aW9uLXR5cGU9ImZlZWRfbGlzdF9mYXZvcml0ZSJdLCBhW2FjdGlvbi10eXBlPSJmZWVkX2xpc3RfZmF2b3JpdGUiXSsuU190eHQzLCAnICsKICAgICcuV0JfZmVlZF9kYXRhaWwgYVthY3Rpb24tdHlwZT0iZmxfZmF2b3JpdGUiXSwgLldCX2ZlZWRfZGF0YWlsIGFbYWN0aW9uLXR5cGU9ImZsX2Zhdm9yaXRlIl0rLlNfdHh0MywgJyArCiAgICAnLldCX2hhbmRsZSAuV0Jfcm93X2xpbmUgbGlbeWF3Zi1oYW5kbGUtdHlwZT0iZmxfZmF2b3JpdGUiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1Byb21vdGVPdGhlcicsIDIyMCwgJy5zY3JlZW5fYm94IC5sYXllcl9tZW51X2xpc3QgYVthY3Rpb24tZGF0YSo9InByb21vdGUudmlwLndlaWJvLmNvbSJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnUmVwb3J0JywgMjIwLCAnLnNjcmVlbl9ib3ggLmxheWVyX21lbnVfbGlzdCBhW29uY2xpY2sqPSJzZXJ2aWNlLmFjY291bnQud2VpYm8uY29tL3JlcG9ydHNwYW0iXSwgLldCX2hhbmRsZSB1bCBsaVt5YXdmLWNvbW1lbnQtaGFuZGxlLXR5cGU9InJlcG9ydCJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnVXNlQ2FyZEJhY2tncm91bmQnLCAyOTQsICcuc2NyZWVuX2JveCAubGF5ZXJfbWVudV9saXN0IGFbYWN0aW9uLXR5cGU9ImZsX2NhcmRDb3ZlciJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CgogIC8vIOagh+iusOW+ruWNmuaMiemSrgogIG9ic2VydmVyLndlaWJvLm9ubG9hZChmdW5jdGlvbiAoZmVlZCkgewogICAgdmFyIGxpID0gQXJyYXkuZnJvbShmZWVkLnF1ZXJ5U2VsZWN0b3JBbGwoJy5XQl9mZWVkX3R5cGUgLldCX2hhbmRsZSAuV0Jfcm93X2xpbmUgbGksIC5XQl9mZWVkX3RvZ2V0aGVyIC5XQl9mdW5jIC5XQl9oYW5kbGUgbGknKSk7CiAgICBsaS5mb3JFYWNoKGZ1bmN0aW9uIChsaSkgewogICAgICB2YXIgdHlwZSA9IGxpLnF1ZXJ5U2VsZWN0b3IoJ2EnKS5nZXRBdHRyaWJ1dGUoJ2FjdGlvbi10eXBlJyk7CiAgICAgIGlmICghdHlwZSAmJiBsaS5xdWVyeVNlbGVjdG9yKCdhW3N1ZGEtdWF0cmFjaz0ia2V5PXByb2ZpbGVfZmVlZCZ2YWx1ZT1wb3B1bGFyaXplX2hvc3QiXScpKSB0eXBlID0gJ2ZsX3BvcCc7CiAgICAgIGlmICghdHlwZSAmJiBsaS5xdWVyeVNlbGVjdG9yKCdzcGFuW3RpdGxlKj0i6K+E6K66Il0sIHNwYW5bdGl0bGUqPSLoqZXoq5YiXSwgc3Bhblt0aXRsZSo9ImNvbW1lbnQiXScpKSB0eXBlID0gJ2ZsX2NvbW1lbnQnOyAvLyDnlLHkuo7nlKjmiLforr7nva7vvIzml6Dms5Xov5vooYzor4TorroKICAgICAgbGkuc2V0QXR0cmlidXRlKCd5YXdmLWhhbmRsZS10eXBlJywgdHlwZSk7CiAgICB9KTsKICAgIHZhciBmd2xpID0gQXJyYXkuZnJvbShmZWVkLnF1ZXJ5U2VsZWN0b3JBbGwoJy5XQl9mZWVkX2V4cGFuZCAuV0JfZnVuYyAuV0JfaGFuZGxlIGxpJykpOwogICAgaWYgKGZ3bGkubGVuZ3RoID09PSAzKSBmd2xpLmZvckVhY2goZnVuY3Rpb24gKGxpLCBpbmRleCkgewogICAgICBsaS5zZXRBdHRyaWJ1dGUoJ3lhd2YtaGFuZGxlLXR5cGUnLCBbJ2ZsX2ZvcndhcmQnLCAnZmxfY29tbWVudCcsICdmbF9saWtlJ11baW5kZXhdKTsKICAgIH0pOyBlbHNlIGlmIChmd2xpLmxlbmd0aCA9PT0gNCkgZndsaS5mb3JFYWNoKGZ1bmN0aW9uIChsaSwgaW5kZXgpIHsKICAgICAgbGkuc2V0QXR0cmlidXRlKCd5YXdmLWhhbmRsZS10eXBlJywgWydmbF9yZWFkJywgJ2ZsX2ZvcndhcmQnLCAnZmxfY29tbWVudCcsICdmbF9saWtlJ11baW5kZXhdKTsKICAgIH0pOwogIH0pOwoKICAvLyDmoIforrDlvq7ljZror4TorrrmjInpkq4KICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIG1hcmtDb21tZW50QnV0dG9uKCkgewogICAgdmFyIGNsaSA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChbCiAgICAgICcubGlzdF91bFtub2RlLXR5cGU9ImZlZWRfbGlzdF9jb21tZW50TGlzdCJdIC5XQl9oYW5kbGUgdWwgbGk6bm90KFt5YXdmLWNvbW1lbnQtaGFuZGxlLXR5cGVdKScsCiAgICAgICcubGlzdF91bFtub2RlLXR5cGU9ImNvbW1lbnRfbGlzdCJdIC5XQl9oYW5kbGUgdWwgbGk6bm90KFt5YXdmLWNvbW1lbnQtaGFuZGxlLXR5cGVdKScsCiAgICAgICcuV0JfZmVlZF9jb21tZW50IC5XQl9oYW5kbGUgdWwgbGk6bm90KFt5YXdmLWNvbW1lbnQtaGFuZGxlLXR5cGVdKScKICAgIF0uam9pbignLCcpKSk7CiAgICBjbGkuZm9yRWFjaChmdW5jdGlvbiAobGkpIHsKICAgICAgdmFyIGEgPSBsaS5xdWVyeVNlbGVjdG9yKCdhJyksIHR5cGUgPSBudWxsOwogICAgICBpZiAodXRpbC5kb20ubWF0Y2hlcyhhLCAnW29uY2xpY2sqPSJzZXJ2aWNlLmFjY291bnQud2VpYm8uY29tL3JlcG9ydHNwYW0iXScpKSB0eXBlID0gJ3JlcG9ydCc7CiAgICAgIGVsc2UgaWYgKHV0aWwuZG9tLm1hdGNoZXMoYSwgJ1thY3Rpb24tdHlwZT0iZGVsZXRlIl0nKSkgdHlwZSA9ICdkZWxldGUnOwogICAgICBlbHNlIGlmICh1dGlsLmRvbS5tYXRjaGVzKGEsICdbYWN0aW9uLXR5cGU9ImNvbW1lbnREaWFsb2d1ZSJdJykpIHR5cGUgPSAnY29udmVyc2l0aW9uJzsKICAgICAgZWxzZSBpZiAodXRpbC5kb20ubWF0Y2hlcyhhLCAnW2FjdGlvbi10eXBlPSJyZXBseSJdJykpIHR5cGUgPSAncmVwbHknOwogICAgICBlbHNlIGlmICh1dGlsLmRvbS5tYXRjaGVzKGEsICdbYWN0aW9uLXR5cGU9InJlcGx5Y29tbWVudCJdJykpIHR5cGUgPSAncmVwbHknOwogICAgICBlbHNlIGlmICh1dGlsLmRvbS5tYXRjaGVzKGEsICdbYWN0aW9uLXR5cGU9ImZsX2xpa2UiXScpKSB0eXBlID0gJ2xpa2UnOwogICAgICBsaS5zZXRBdHRyaWJ1dGUoJ3lhd2YtY29tbWVudC1oYW5kbGUtdHlwZScsIHR5cGUgfHwgJycpOwogICAgfSk7CiAgfSk7CgogIC8vIOagh+iusOafpeeci+Wkp+WbvueahOaMiemSrgogIG9ic2VydmVyLmRvbS5hZGQoZnVuY3Rpb24gbWFya1BpY3R1cmVWaWV3QnV0dG9uKCkgewogICAgdmFyIGNsaSA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm11bHRpcGljX3ByZXZpZXcgLldCX2hhbmRsZSBsaTpub3QoW3lhd2YtaGFuZGxlLXR5cGVdKScpKTsKICAgIGNsaS5mb3JFYWNoKGZ1bmN0aW9uIChsaSkgewogICAgICB2YXIgYSA9IGxpLnF1ZXJ5U2VsZWN0b3IoJ2EnKSwgdHlwZSA9IGEuZ2V0QXR0cmlidXRlKCdhY3Rpb24tdHlwZScpOwogICAgICBsaS5zZXRBdHRyaWJ1dGUoJ3lhd2YtaGFuZGxlLXR5cGUnLCB0eXBlIHx8ICcnKTsKICAgIH0pOwogIH0pOwoKICBzdWJ0aXRsZSgnUGVyc29uJywgdHJ1ZSk7CiAgaXRlbSgnTW92ZVRoaW5ncycsIDUxLCAnLnByb2ZpbGVfbW92ZV90aGluZ3MgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdDb3ZlcicsIDUsIGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgLlBDRF9oZWFkZXIsIC5QQ0RfaGVhZGVyIC5wZl93cmFwLCAuUENEX2hlYWRlciAuc2hhZG93IHsgaGVpZ2h0OiAxMzBweDsgfQogICAgICAuUENEX2hlYWRlciAucGZfcGhvdG8geyBtYXJnaW46IDEwcHggMjBweCAxMHB4IGNhbGMoNTAlIC0gMjgwcHgpOyBmbG9hdDogbGVmdDsgfQogICAgICAuUENEX2hlYWRlciAucGZfdXNlcm5hbWUsIC5QQ0RfaGVhZGVyIC5wZl9pbnRybyB7IHRleHQtc2hhZG93OiAwIDAgNHB4ICMwMDA7IH0KICAgICAgLlBDRF9oZWFkZXIgLnBmX3VzZXJuYW1lLCAuUENEX2hlYWRlciAucGZfaW50cm8sIC5QQ0RfaGVhZGVyIC5wZl9vcHQgeyB0ZXh0LWFsaWduOiBsZWZ0OyBtYXJnaW4tbGVmdDogMTQwcHg7IH0KICAgICAgLlBDRF9oZWFkZXIgLnBmX3dyYXAgLnBmX3VzZV9udW0sIC5QQ0RfaGVhZGVyIC5wZl93cmFwIC5wZl9jb3B5X2ljb24sIC5QQ0RfaGVhZGVyIC51cGNvdmVyIHsgZGlzcGxheTogbm9uZTsgfQogICAgICAuUENEX2hlYWRlciAuU19zaGFkb3csIC5QQ0RfaGVhZGVyIC5jb3Zlcl93cmFwLCAuUENEX2hlYWRlciAucGZfd3JhcCB7IGJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDsgfQogICAgICAuUENEX2hlYWRlciAuc2hhZG93IHsgbWFyZ2luOiAwIGNhbGMoNTAlIC0gMzAwcHgpOyB3aWR0aDogNjAwcHg7IH0KICAgICAgLlBDRF9oZWFkZXIgLnBmX2ludHJvIHsgaGVpZ2h0OiAzNnB4OyBsaW5lLWhlaWdodDogMThweDsgfQogICAgICAuUENEX2hlYWRlciAucGZfb3B0IHsgbWFyZ2luLXRvcDogOHB4OyB9CiAgICAqLyBub29wKCk7IH0pKTsKICAgIG9ic2VydmVyLmRvbS5hZGQoZnVuY3Rpb24gZnVsbFByb2ZpbGVJbnRyb2R1Y3Rpb24oKSB7CiAgICAgIHZhciBpbnRybyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5QQ0RfaGVhZGVyIC5wZl9pbnRybzpub3QoW3lhd2YtZnVsbC1pbnRyb10pJyk7IGlmICghaW50cm8pIHJldHVybjsKICAgICAgaW50cm8uc2V0QXR0cmlidXRlKCd5YXdmLWZ1bGwtaW50cm8nLCAoaW50cm8udGV4dENvbnRlbnQgPSBpbnRyby5nZXRBdHRyaWJ1dGUoJ3RpdGxlJykpKTsKICAgIH0pOwogIH0pOwogIGl0ZW0oJ0JHSW1nJywgMjI3LCAnLlNfcGFnZSwgLlNfcGFnZSAuV0JfbWluaWJsb2cgeyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIlwnXCciKSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnQmFkZ2VJY29uJywgMTAsICcucGZfYmFkZ2VfaWNvbiB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1ZlcmlmeScsIDE3NCwgJ1t5YXdmLWlkPSJ5YXdmLXByLXBjZC1wZXJzb24taW5mby1teSJdIC52ZXJpZnlfYXJlYSwgW3lhd2YtaWQ9Inlhd2YtcHItcGNkLXBlcnNvbi1pbmZvIl0gLnZlcmlmeV9hcmVhIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnRWRpdFBlcnNvbkluZm8nLCAxNzQsICdbeWF3Zi1pZD0ieWF3Zi1wci1wY2QtcGVyc29uLWluZm8tbXkiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1N0YXRzJywgNSwgJ1t5YXdmLWlkPSJ5YXdmLXByLXBjZC1jb3VudGVyIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdNeURhdGEnLCA1LCAnW2lkXj0iUGxfT2ZmaWNpYWxfTXlNaWNyb3dvcmxkX18iXSwgLldCX2ZyYW1lX2IgW2lkXj0iUGxfT2ZmaWNpYWxfTXlQb3B1bGFyaXR5X18iXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1N1Z2dlc3RVc2VyJywgMTAsICdbaWRePSJQbF9Db3JlX1JpZ2h0VXNlckxpc3RfXyJdLCAuV0JfZnJhbWVfYiBbaWRePSJQbF9Db3JlX1JpZ2h0VXNlckxpc3RfXyJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnR3JvdXAnLCAxMiwgJ1tpZF49IlBsX0NvcmVfVXNlckdyaWRfXyJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnUmVsYXRpb24nLCA1LCAnW2lkXj0iUGxfQ29yZV9SaWdodFVzZXJHcmlkX18iXSwgLldCX2ZyYW1lX2IgW2lkXj0iUGxfQ29yZV9SaWdodFVzZXJHcmlkX18iXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ0FsYnVtJywgNSwgJ1tpZF49IlBsX0NvcmVfUmlnaHRQaWNNdWx0aV9fIl0sIC5XQl9mcmFtZV9iIFtpZF49IlBsX0NvcmVfUmlnaHRQaWNNdWx0aV9fIl0sIFt5YXdmLW9iai1uYW1lPSLnm7jlhooiXSwgW3lhd2Ytb2JqLW5hbWU9IuebuOWGjCJdLCAuUENEX3Bob3RvbGlzdCB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ0hvdFRvcGljJywgNSwgJ1tpZF49IlBsX0NvcmVfUmlnaHRUZXh0U2luZ2xlX18iXSwgLldCX2ZyYW1lX2IgW2lkXj0iUGxfQ29yZV9SaWdodFRleHRTaW5nbGVfXyJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnSG90V2VpYm8nLCA1LCAnW2lkXj0iUGxfQ29yZV9SaWdodFBpY1RleHRfXyJdLCAuV0JfZnJhbWVfYiBbaWRePSJQbF9Db3JlX1JpZ2h0UGljVGV4dF9fIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdVc2VyTGlzdCcsIDE2NCwgJ1tpZF49IlBsX0NvcmVfVXQxVXNlckxpc3RfXyJdLCAuV0JfZnJhbWVfYiBbaWRePSJQbF9Db3JlX1JpZ2h0UGljVGV4dF9fIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdIb25nYmFvJywgMTk5LCAnW3lhd2YtaWQ9Inlhd2YtcHItaG9uZ2JhbyJdLCAuV0JfcmVkMjAxNyB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1dlbndvRHInLCAzMzcsICdbeWF3Zi1vYmotbmFtZT0i54ix6Zeu5Yy755SfIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsgLy8g5a+55bqU5qih5Z2X5rKh5pyJ57mB5L2T5oiW6Iux5paH57+76K+RCiAgaXRlbSgnVGltZWxpbmUnLCAxNjQsICdbaWRePSJQbF9PZmZpY2lhbF9UaW1lQmFzZV9fIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKCiAgc3VidGl0bGUoJ1BMZWZ0Jyk7CiAgZmlsdGVyLml0ZW1zLmxheW91dC5wbGVmdC5tb2RzID0gZmlsdGVyLml0ZW0oewogICAgJ2dyb3VwJzogJ3BsZWZ0JywKICAgICd2ZXJzaW9uJzogMTM0LAogICAgJ2tleSc6ICd3ZWliby5sYXlvdXQucGxlZnQnLAogICAgJ3RleHQnOiAne3tsYXlvdXRIaWRlUExlZnREZXRhaWxzfX0nLAogICAgJ3R5cGUnOiAnc3RyaW5ncycsCiAgICAnYWRkJzogZnVuY3Rpb24gKHMpIHsgcmV0dXJuIHMudHJpbSgpIHx8IG51bGw7IH0sCiAgICAnaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKCF0aGlzLmNvbmYubGVuZ3RoKSByZXR1cm47CiAgICAgIHV0aWwuY3NzLmFkZCh0aGlzLmNvbmYubWFwKGZ1bmN0aW9uIChzKSB7CiAgICAgICAgcyA9IHMucmVwbGFjZSgvXFwvZywgJ1xcXFwnKS5yZXBsYWNlKC8iL2csICdcXCInKTsKICAgICAgICByZXR1cm4gJ1t5YXdmLW9iai1uYW1lKj0iJyArIHMgKyAnIl0nOwogICAgICB9KS5qb2luKCcsICcpICsgJyB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogICAgfQogIH0pLmFkZHRvKGZpbHRlci5ncm91cHMubGF5b3V0KTsKCiAgc3VidGl0bGUoJ01lc3NhZ2VzJywgdHJ1ZSk7CiAgaXRlbSgnSGVscCcsIDk3LCAnI3Y2X3BsX3JpZ2h0bW9kX2hlbHBhdCwgI3Y2X3BsX3JpZ2h0bW9kX2hlbHBjb21tZW50LCAjdjZfcGxfcmlnaHRtb2RfaGVscGxpa2UsICN2Nl9wbF9yaWdodG1vZF9oZWxwbm90ZWJveCwgI3Y2X3BsX3JpZ2h0bW9kX2hlbHBmYXYsICN2Nl9wbF9yaWdodG1vZF9oZWxwZ3JvdXBjaGF0bm90aWNlIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnRmVlZGJhY2snLCA5NywgJyN2Nl9wbF9yaWdodG1vZF9mZWVkYmFjayB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1lvdWRhbycsIDE3NCwgJyN2Nl9wbF9yaWdodG1vZF9mYXZ5b3VkYW8geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKCiAgc3VidGl0bGUoJ090aGVyJywgdHJ1ZSk7CiAgaXRlbSgnQWRzJywgMiwgZnVuY3Rpb24gKCkgewogICAgdXRpbC5jc3MuYWRkKFsKICAgICAgJ1thZC1kYXRhXScsICdbZmVlZHR5cGU9ImFkIl0nLAogICAgICAnW2lkXj0iYWRzXyJdJywgJ1tpZF49ImFkXyJdJywKICAgICAgJ1tpZCo9InBsX3JpZ2h0bW9kX2FkcyJdJywgJ1tpZCo9InBsX2NvbnRlbnRfYml6Il0nLCAnW2lkKj0icGxfYWRfIl0nLCAnW2lkXj0ic2luYWFkVG9vbGtpdEJveCJdJywKICAgICAgJ1tjbGFzcyo9IldCX2FkXyJdJywKICAgICAgJyN0b3BpY0FEJywgJyN0b3BpY0FEQnV0dG9tJywgJy5XQl9mZWVkIC5wb3B1bGFyX2J1c3MnLCAnLmZlZWRfYXBwX2FkcycsICcuV19iaWdEYXknLAogICAgICAnLldCX2ZlZWRfeXkyMDE2X3VwX2J1dCcsICcuV0JfZmVlZF95eTIwMTZfZG93bl9idXQnLCAnI3BsX2NvbW1vbl9hbGknLAogICAgICAnLldfc2tpbl9iYW5uZXInLAogICAgICAnW25vZGUtdHlwZT0iaW1nQnRuIl1bYWN0aW9uLWRhdGE9ImNhblVwbG9hZEltYWdlPTAiXScKICAgIF0uam9pbignLCcpICsgJyB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSAnICsKICAgICcjd3JhcEFELCAubmV3c19sb2dvIHsgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7IH0nKTsKICAgIHZhciB2ZXJzaW9uID0gJyc7CiAgICAvLyDmo4Dmn6XlupTlvZPmm7/mjaLkuLrlk6rnp43nmq7ogqQKICAgIC8vIOe9kemhteS4rSAkQ09ORklHLnNraW4g57uZ5Ye65LqG55So5oi36YCJ5oup55qE55qu6IKkCiAgICB2YXIgZGVmYXVsdFNraW4gPSAnc2tpbjA1OCcsIHRhcmdldCA9IGRlZmF1bHRTa2luOwogICAgdHJ5IHsgdGFyZ2V0ID0gdXRpbC5pbmZvLnNraW4gfHwgZGVmYXVsdFNraW47IH0gY2F0Y2ggKGUpIHsgfQogICAgaWYgKC9za2luM1s1Nl1cZC8udGVzdCh0YXJnZXQpKSB0YXJnZXQgPSBkZWZhdWx0U2tpbjsKICAgIC8vIOajgOafpee9kemhteS4reaYr+WQpuiiq+aPkuWFpeS6huW5v+WRiuearuiCpO+8jOWmguaenOacieWImeaNouaIkOeUqOaIt+mAieaLqeeahO+8iOaIlum7mOiupOeahO+8ieearuiCpAogICAgdmFyIHVwZGF0ZVNraW4gPSBmdW5jdGlvbiB1cGRhdGVTa2luKCkgewogICAgICB2YXIgYWRza2luID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbGlua1tocmVmKj0iL3NraW4zNSJdLCBsaW5rW2hyZWYqPSIvc2tpbjM2Il0nKTsKICAgICAgaWYgKGFkc2tpbikgewogICAgICAgIHZhciBhID0gdXRpbC5kb20uY3JlYXRlKCdhJywgJycpOyB2ZXJzaW9uID0gJyc7IGEuaHJlZiA9IGFkc2tpbi5ocmVmOwogICAgICAgIHRyeSB7IHZlcnNpb24gPSB2ZXJzaW9uIHx8IHV0aWwuc3RyLnBhcnNlcXVlcnkoYS5zZWFyY2guc2xpY2UoMSkpLnZlcnNpb247IH0gY2F0Y2ggKGUpIHsgfQogICAgICAgIHV0aWwuZGVidWcoJ2FkIHNraW4gJW8odmVyc2lvbiAlbykgaGFzIGJlZW4gcmVwbGFjZWQnLCBhZHNraW4uaHJlZiwgdmVyc2lvbik7CiAgICAgICAgYWRza2luLnNldEF0dHJpYnV0ZSgnaHJlZicsICcvL2ltZy50LnNpbmFqcy5jbi90Ni9za2luLycgKyB0YXJnZXQgKyAnL3NraW4uY3NzP3ZlcnNpb249JyArIHZlcnNpb24pOwogICAgICB9CiAgICAgIHZhciBhZHNraW5jb3ZlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNza2luX2NvdmVyX3Nbc3R5bGUqPSIvc2tpbjM1Il0sICNza2luX2NvdmVyX3Nbc3R5bGUqPSIvc2tpbjM2Il0nKTsKICAgICAgaWYgKGFkc2tpbmNvdmVyKSBhZHNraW5jb3Zlci5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSAndXJsKCIvL2ltZy50LnNpbmFqcy5jbi90Ni9za2luLycgKyB0YXJnZXQgKyAnL2ltYWdlcy9wcm9maWxlX2NvdmVyX3MuanBnP3ZlcnNpb249JyArIHZlcnNpb24gKyAnIiknOwogICAgfTsKICAgIG9ic2VydmVyLmRvbS5hZGQodXBkYXRlU2tpbik7CgogICAgLy8g5aSE55CGIDIwMTYuNi4xOCDnmoTlub/lkYoKICAgIHV0aWwuZnVuYy5wYWdlKGZ1bmN0aW9uICgpIHsKICAgICAgLy8g5L2g55qE5bm/5ZGK5oiR5bey57uP55yL6L+H5LiK5LiH6YGN5LqG77yM5omA5Lul5Yir57uZ5oiR5pS+5bm/5ZGKCiAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICd3Yl9iYXJyYWdlJyArICRDT05GSUcudWlkICsgJz0nICsgKDEwMDAwICsgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTAwMCkpICsKICAgICAgICAnOyBleHBpcmVzPScgKyBuZXcgRGF0ZShEYXRlLm5vdygpICsgMi42ZTgpLnRvR01UU3RyaW5nKCkgKyAnOyBwYXRoPS8nOwogICAgfSk7CiAgICAvLyDmgLvkuYvkvaDmlL7nmoTkuJzopb/miJHnnIvkuI3liLDvvIzmiYDku6XliKvnu5nmiJHmlL7lub/lkYrkuoYKICAgIHV0aWwuY3NzLmFkZCgnLldCX2FkX3RtMjAxNSB+IGRpdltzdHlsZSo9InBvc2l0aW9uIl1bc3R5bGUqPSJmaXhlZCJdW3N0eWxlKj0iei1pbmRleCJdW3N0eWxlKj0iOTk5OTkiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwoKICAgIC8vIOenu+mZpOS4gOS6m+aYvuekuuW5v+WRiueahCBjbGFzc05hbWUg77yM5LiN56e76Zmk5a+56LGh5pys6LqrCiAgICAvLyDov5nkupsgY2xhc3NOYW1lIOWboOS4uuW9seWTjei/h+Wkp++8jOmAmui/h+agt+W8j+imhueblui+g+S4uuWbsOmavuS4lOWuueaYk+WPkeeUn+mXrumimAogICAgdmFyIGFkQ2xhc3NOYW1lID0gWydXQl9mZWVkX3l5MjAxNl91cCcsICdXQl9mZWVkX3l5MjAxNl9kb3duJ107CiAgICB2YXIgcmVtb3ZlQ2xhc3NOYW1lID0gZnVuY3Rpb24gbm9BZHNSZW1vdmVDbGFzc05hbWUoKSB7CiAgICAgIGFkQ2xhc3NOYW1lLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkgewogICAgICAgIHZhciB0YXJnZXRzID0gQXJyYXkuZnJvbShkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGNsYXNzTmFtZSkpOwogICAgICAgIHRhcmdldHMuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfTsKICAgIG9ic2VydmVyLmRvbS5hZGQocmVtb3ZlQ2xhc3NOYW1lKTsKCiAgICB2YXIgcmVtb3ZlQWRJZnJhbWVzID0gZnVuY3Rpb24gcmVtb3ZlQWRJZnJhbWVzKCkgewogICAgICB2YXIgaWZyYW1lcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaWZyYW1lW3NyYyo9InMuYWxpdHVpLndlaWJvLmNvbSJdJykpOwogICAgICBpZnJhbWVzLmZvckVhY2goZnVuY3Rpb24gKGlmcmFtZSkgewogICAgICAgIGlmcmFtZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGlmcmFtZSk7CiAgICAgIH0pOwogICAgfTsKICAgIG9ic2VydmVyLmRvbS5hZGQocmVtb3ZlQWRJZnJhbWVzKTsKICB9LCB7ICdkZWZhdWx0JzogdHJ1ZSB9KTsKICBpdGVtKCdNdXNpYycsIDExMCwgJy5QQ0RfbXBsYXllciB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1RlbXBsYXRlJywgMjc5LCAnLmljb25fc2V0c2tpbiB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ0hvbWVUaXAnLCAxMjQsICcjdjZfcGxfY29udGVudF9ob21ldGlwIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50IH0nKTsKICBpdGVtKCdGb290ZXInLCA1LCAnLmdsb2JhbF9mb290ZXIsIC5XQl9mb290ZXIgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdXYkltJywgNSwgJy5XQklNX25ld3MsIC5zZW5kYm94X2J0bl9sIGFbaHJlZio9Ii8vZGVza3RvcC53ZWliby5jb20vZG93bmxvYWQucGhwIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdJTScsIDE4OSwgJyNXQl93ZWJpbSwgLldCX3dlYmltIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnSU1OZXdzJywgNDc0LCAnLndlYmltX25ld3MgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICBpdGVtKCdUaXAnLCA4LCAnLldfbGF5ZXJfdGlwcyB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1JlbGF0ZWRXQicsIDEzNCwgJ1t5YXdmLW9iai1uYW1lPSLnm7jlhbPmjqjojZAiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSAjV0Jfd2ViaW0gLndiaW1fY2hhdF9ib3gsICNXQl93ZWJpbSAud2JpbV9taW5fY2hhdCAgeyByaWdodDogMjBweCAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnUmVsYXRlZFZpZGVvJywgNDg1LCAnLnZpZGVvX2JveF9tb3JlIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgaXRlbSgnUmVsYXRlZEFydGljYWwnLCA0MTEsICcuV0JfYXJ0aWNhbCBbbm9kZS10eXBlPSJyZWNvbW1lbmQiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwogIGl0ZW0oJ1NlbmRXZWlibycsIDIyMCwgJy5zZW5kX3dlaWJvX3NpbXBsZSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfScpOwoKICAvLyDmoLnmja7lhYPntKDlhoXlrrnmoIforrDlhYPntKAKICB2YXIgdGFnTW9kcyA9IGZ1bmN0aW9uIChxcywgaWRlbnRpZmllcnMpIHsKICAgIHJldHVybiBmdW5jdGlvbiB0YWdNb2RzSW5uZXIoKSB7CiAgICAgIHZhciBtb2RzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHFzKSk7CiAgICAgIGlmICghbW9kcy5sZW5ndGgpIHJldHVybjsKICAgICAgbW9kcy5mb3JFYWNoKGZ1bmN0aW9uIChtb2QpIHsKICAgICAgICBtb2Quc2V0QXR0cmlidXRlKCd5YXdmLWlkJywgJycpOwogICAgICAgIE9iamVjdC5rZXlzKGlkZW50aWZpZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChxcykgewogICAgICAgICAgaWYgKG1vZC5xdWVyeVNlbGVjdG9yKHFzKSkgbW9kLnNldEF0dHJpYnV0ZSgneWF3Zi1pZCcsIGlkZW50aWZpZXJzW3FzXSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfTsKICB9OwoKICAvLyDmoIforrDpppbpobXlt6bmoI/lr7zoiKrpk77mjqUKICB2YXIgdGFnTGVmdE5hdk1vZHMgPSB0YWdNb2RzKFsKICAgICcjdjZfcGxfbGVmdG5hdl9ncm91cCAubGV2Om5vdChbeWF3Zi1pZF0pJywKICBdLmpvaW4oJywnKSwgewogICAgJ2FbaHJlZio9Ii9ob21lPyJdJzogJ2xlZnRuYXZfaG9tZScsCiAgICAnYVtocmVmKj0iaXNfbmV3PTEiXSc6ICdsZWZ0bmF2X25ldycsCiAgICAnYVtocmVmXj0iL2F0LyJdJzogJ2xlZnRuYXZfbWVzc2FnZScsCiAgICAnYVtocmVmXj0iL2ZhdiJdJzogJ2xlZnRuYXZfZmF2JywKICAgICdhW2hyZWZePSIvbGlrZSJdJzogJ2xlZnRuYXZfbGlrZScsCiAgICAnYVtocmVmXj0iL2ZyaWVuZHMiXSc6ICdsZWZ0bmF2X2ZyaWVuZHMnLAogICAgJ2FbaHJlZl49Ii9ncm91cHNmZWVkIl0nOiAnbGVmdG5hdl9ncm91cHNmZWVkJywKICAgICdhW2hyZWZePSIvbXlncm91cHMiXSc6ICdsZWZ0bmF2X215Z3JvdXBzJywKICAgICdhW2hyZWYqPSIvL2Qud2VpYm8uY29tIl0nOiAnbGVmdG5hdl9ob3QnLAogICAgJ2FbaHJlZio9Ii8vd2VpYm8uY29tL3R2Il0nOiAnbGVmdG5hdl90dicsCiAgICAnYVtocmVmKj0ia3Jjb20uY24iXSc6ICdsZWZ0bmF2X3R2JywKICAgICdhW2hyZWZePSIvbXlncm91cHMiXVtocmVmKj0iaXNzcGVjaWFsZ3JvdXA9MSJdJzogJ2xlZnRuYXZfc3BlY2lhbCcsCiAgICAnYVtocmVmXj0iL215Z3JvdXBzIl1baHJlZio9IndoaXNwZXI9MSJdJzogJ2xlZnRuYXZfd2hpc3BlcicsCiAgICAnYVtocmVmXj0iL215Z3JvdXBzIl1baHJlZio9InZwbHVzPTEiXSc6ICdsZWZ0bmF2X3ZwbHVzJywKICB9KTsKICBvYnNlcnZlci5kb20uYWRkKHRhZ0xlZnROYXZNb2RzKTsKICB0YWdMZWZ0TmF2TW9kcygpOwoKICAvLyDmoIforrDpppbpobXlj7PmoI/lhYPntKAKICB2YXIgdGFnUmlnaHRiYXJNb2RzID0gdGFnTW9kcyhbCiAgICAnI3RydXN0UGFnZWxldF9pbmRleHJpZ2h0X3JlY29tIC5XQl9yaWdodF9tb2R1bGU6bm90KFt5YXdmLWlkXSknLAogICAgJyN2Nl9wbF9yaWdodG1vZF9yZWNvbWluZm8gLldCX2NhcmR3cmFwOm5vdChbeWF3Zi1pZF0pJywKICAgICcjdjZfcGxfcmlnaHRtb2RfcmFuayAuV0JfY2FyZHdyYXA6bm90KFt5YXdmLWlkXSknLAogIF0uam9pbignLCcpLCB7CiAgICAnW2NoYW5nZS1kYXRhKj0ia2V5PWhvdHRvcGljX3IyIl0nOiAncmlnaHRtb2RfenRfaG90dG9waWMnLAogICAgJ1tjaGFuZ2UtZGF0YSo9ImtleT1pbnRlcmVzdF9yMiJdJzogJ3JpZ2h0bW9kX3JlY29tX2ludGVyZXN0JywKICAgICdoNC5vYmpfbmFtZSBhW2hyZWYqPSJtb3ZpZS53ZWliby5jb20iXSc6ICdyaWdodG1vZF9yZWNvbV9tb3ZpZScsCiAgICAnaDQub2JqX25hbWUgYVtocmVmKj0idGFvYmFvLmNvbSJdW2hyZWYqPSJkaWFueWluZyJdJzogJ3JpZ2h0bW9kX3Rhb2Jhb19tb3ZpZScsCiAgICAnaDIubWFpbl90aXRsZSBhW2hyZWYqPSJib29rLndlaWJvLmNvbS90b3AiXSc6ICd2Nl9wbF9yaWdodG1vZF9yYW5rX2Jvb2snLAogICAgJ2g0Lm9ial9uYW1lIGFbaHJlZio9InBvcC53ZWliby5jb20iXSc6ICd2Nl9wbF9yaWdodG1vZF9yYW5rX3BvcCcsCiAgICAnZGl2Lm9ial9uYW1lIGFbaHJlZio9IjEwMDgwOGZhZWNlYmZmOGE1NGI5N2E5MTY5OWM2NTRlNWY0Y2RhIl0nOiAndjZfcGxfcmlnaHRtb2RfcmFua19ob25nJywKICB9KTsKCiAgLy8g5qCH6K6w5Liq5Lq65Li76aG155qE5qih5Z2XCiAgdmFyIHRhZ1BMZWZ0TW9kc05hbWUgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgbmFtZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoWwogICAgICAnLldCX2ZyYW1lX2IgPiBkaXY6bm90KFt5YXdmLW9iai1uYW1lXSkgLm1haW5fdGl0bGUnLAogICAgICAnLldCX2ZyYW1lX2MgPiBkaXY6bm90KFt5YXdmLW9iai1uYW1lXSkgLm1haW5fdGl0bGUnCiAgICBdLmpvaW4oJywnKSkpOwogICAgaWYgKCFuYW1lcy5sZW5ndGgpIHJldHVybjsKICAgIG5hbWVzLmZvckVhY2goZnVuY3Rpb24gKHRpdGxlKSB7CiAgICAgIHZhciBuYW1lID0gdGl0bGUgJiYgdGl0bGUudGV4dENvbnRlbnQudHJpbSgpIHx8ICcnLCBwID0gdGl0bGU7CiAgICAgIHdoaWxlICgKICAgICAgICAhcC5wYXJlbnROb2RlLmNsYXNzTGlzdC5jb250YWlucygnV0JfZnJhbWVfYicpICYmCiAgICAgICAgIXAucGFyZW50Tm9kZS5jbGFzc0xpc3QuY29udGFpbnMoJ1dCX2ZyYW1lX2MnKQogICAgICApIHAgPSBwLnBhcmVudE5vZGU7CiAgICAgIGlmICghcC5oYXNBdHRyaWJ1dGUoJ3lhd2Ytb2JqLW5hbWUnKSkgcC5zZXRBdHRyaWJ1dGUoJ3lhd2Ytb2JqLW5hbWUnLCBuYW1lKTsKICAgIH0pOwogIH07CiAgdmFyIHRhZ1BMZWZ0TW9kc1FzID0gdGFnTW9kcygnLldCX2ZyYW1lX2IgPiBkaXY6bm90KDplbXB0eSk6bm90KFt5YXdmLWlkXSknLCB7CiAgICAnLlBDRF9jb3VudGVyJzogJ3lhd2YtcHItcGNkLWNvdW50ZXInLAogICAgJy5QQ0RfcGVyc29uX2luZm8nOiAneWF3Zi1wci1wY2QtcGVyc29uLWluZm8nLAogICAgJy5XQl9jYXJkd3JhcFthY3Rpb24tZGF0YSo9IndlaWJvLmNvbSUyRmhvbmdiYW8iXSc6ICd5YXdmLXByLWhvbmdiYW8nLAogICAgJy5XQl9jYXJkd3JhcFthY3Rpb24tZGF0YSo9InNpbmEuY29tLmNuJTJGaG9uZ2JhbyJdJzogJ3lhd2YtcHItaG9uZ2JhbycsCiAgICAnYVtocmVmKj0iLy9ob25nYmFvLndlaWJvLmNvbS9ob25nYmFvIl0nOiAneWF3Zi1wci1ob25nYmFvJywKICAgICcuUENEX3BlcnNvbl9pbmZvIGEuV0JfY2FyZG1vcmVbaHJlZl49Ii9wLyJdW2hyZWYkPSJpbmZvP21vZD1wZWRpdCJdJzogJ3lhd2YtcHItcGNkLXBlcnNvbi1pbmZvLW15JywKICB9KTsKICB2YXIgdGFnUExlZnRNb2RzID0gZnVuY3Rpb24gdGFnUExlZnRNb2RzKCkgewogICAgdGFnUExlZnRNb2RzTmFtZSgpOwogICAgdGFnUExlZnRNb2RzUXMoKTsKICB9OwoKICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIHRhZ01vZHMoKSB7CiAgICB0YWdSaWdodGJhck1vZHMoKTsKICAgIHRhZ1BMZWZ0TW9kcygpOwogIH0pOwogIHRhZ1JpZ2h0YmFyTW9kcygpOwogIHRhZ1BMZWZ0TW9kcygpOwoKfSgpKTsKCi8vIOaUuemAoOiuvue9rgpmaWx0ZXIucHJlZGVmLmdyb3VwKCd0b29sJyk7CgovLyDovrnmoI/nm7jlhbPlt6XlhbcKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSgndG9vbCcsICdzaWRlYmFyJywgJ3t7c2lkZUNvbHVtblRvb2xzVGl0bGV9fScpOwoKLy8g5bGV5byA5bem5qCP5raI5oGvCmZpbHRlci5pdGVtcy50b29sLnNpZGViYXIuc2hvd19hbGxfbXNnX25hdiA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc2lkZWJhcicsCiAgJ3ZlcnNpb24nOiAzOTAsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLnNob3dBbGxNc2dOYXYnLAogICd0ZXh0JzogJ3t7e3Nob3dBbGxNc2dOYXZ9fX0nLAogICdyZWYnOiB7CiAgICAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICd3YXJuJywgJ3RleHQnOiAne3tzaG93QWxsTXNnTmF2RGVzY319JyB9LAogICAgJ2F0bWUnOiB7ICd0eXBlJzogJ2Jvb2xlYW4nLCAnZGVmYXVsdCc6IHRydWUgfSwKICAgICdjbXQnOiB7ICd0eXBlJzogJ2Jvb2xlYW4nLCAnZGVmYXVsdCc6IHRydWUgfSwKICAgICdsaWtlJzogeyAndHlwZSc6ICdib29sZWFuJywgJ2RlZmF1bHQnOiBmYWxzZSB9LAogICAgJ2RtJzogeyAndHlwZSc6ICdib29sZWFuJywgJ2RlZmF1bHQnOiBmYWxzZSB9LAogICAgJ21zZ2JveCc6IHsgJ3R5cGUnOiAnYm9vbGVhbicsICdkZWZhdWx0JzogZmFsc2UgfSwKICAgICdncm91cCc6IHsgJ3R5cGUnOiAnYm9vbGVhbicsICdkZWZhdWx0JzogZmFsc2UgfSwKICAgICdkbXN1Yic6IHsgJ3R5cGUnOiAnYm9vbGVhbicsICdkZWZhdWx0JzogZmFsc2UgfSwKICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBjb25mcyA9IHRoaXMucmVmOwogICAgb2JzZXJ2ZXIuZG9tLmFkZChmdW5jdGlvbiBzaG93QWxsTXNnTmF2KCkgewogICAgICB2YXIgZ3JvdXBMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Y2X3BsX2xlZnRuYXZfZ3JvdXAgW25vZGUtdHlwZT0iZ3JvdXBMaXN0Il06bm90KFt5YXdmLW1lc3NhZ2VdKScpOyBpZiAoIWdyb3VwTGlzdCkgcmV0dXJuOwogICAgICB2YXIgaG9tZSA9IGdyb3VwTGlzdC5xdWVyeVNlbGVjdG9yKCcubGV2IGFbaHJlZio9Ii9ob21lPyJdJyk7CiAgICAgIHdoaWxlIChob21lICYmIGhvbWUucGFyZW50Tm9kZSAhPT0gZ3JvdXBMaXN0KSBob21lID0gaG9tZS5wYXJlbnROb2RlOwogICAgICB2YXIgcmVmID0gaG9tZSA/IGhvbWUubmV4dFNpYmxpbmcgOiBncm91cExpc3QuZmlyc3RDaGlsZDsKICAgICAgZ3JvdXBMaXN0LnNldEF0dHJpYnV0ZSgneWF3Zi1tZXNzYWdlJywgJycpOwogICAgICB2YXIgbXNnSHRtbCA9IFtodG1sLmxlZnRNc2dIZWFkZXIsCiAgICAgICAgY29uZnMuYXRtZS5jb25mID8gaHRtbC5sZWZ0TXNnQXRNZSA6ICcnLAogICAgICAgIGNvbmZzLmNtdC5jb25mID8gaHRtbC5sZWZ0TXNnQ210IDogJycsCiAgICAgICAgY29uZnMubGlrZS5jb25mID8gaHRtbC5sZWZ0TXNnTGlrZSA6ICcnLAogICAgICAgIGNvbmZzLmRtLmNvbmYgPyBodG1sLmxlZnRNc2dETSA6ICcnLAogICAgICAgIGNvbmZzLm1zZ2JveC5jb25mID8gaHRtbC5sZWZ0TXNnQm94IDogJycsCiAgICAgICAgY29uZnMuZ3JvdXAuY29uZiA/IGh0bWwubGVmdE1zZ0dyb3VwIDogJycsCiAgICAgICAgY29uZnMuZG1zdWIuY29uZiA/IGh0bWwubGVmdE1zZ0RNU3ViIDogJycsCiAgICAgIGh0bWwubGVmdE1zZ0Zvb3Rlcl0uam9pbignJyk7CiAgICAgIHZhciBtbiA9IHV0aWwuZG9tLmNyZWF0ZSh1dGlsLnN0ci5maWxsKG1zZ0h0bWwpKTsKICAgICAgcmVmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG1uLCByZWYpOwogICAgfSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCgovLyDlsZXlvIDlt6bmoI/liIbnu4QKZmlsdGVyLml0ZW1zLnRvb2wuc2lkZWJhci5zaG93X2FsbF9ncm91cCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc2lkZWJhcicsCiAgJ3ZlcnNpb24nOiAxMCwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuc2hvd0FsbEdyb3VwJywKICAndGV4dCc6ICd7e3Nob3dBbGxHcm91cERlc2N9fScsCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdXRpbC5jc3MuYWRkKCcubGV2X0JveCAubGV2bW9yZSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSAubGV2X0JveCBbbm9kZS10eXBlPSJtb3JlTGlzdCJdIHsgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7IH0nKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKLy8g5ZCI5bm25bem5Y+z6L655qCPCmZpbHRlci5pdGVtcy50b29sLnNpZGViYXIubWVyZ2VfbGVmdF9yaWdodCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc2lkZWJhcicsCiAgJ3ZlcnNpb24nOiAzNSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wubWVyZ2VDb2x1bW5zJywKICAndGV4dCc6ICd7e21lcmdlTGVmdFJpZ2h0fX0nLAogICdyZWYnOiB7CiAgICAnc2lkZSc6IHsKICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgJ3NlbGVjdCc6IFsKICAgICAgICB7ICd2YWx1ZSc6ICdsZWZ0JywgJ3RleHQnOiAne3ttZXJnZUxlZnRSaWdodExlZnR9fScgfSwKICAgICAgICB7ICd2YWx1ZSc6ICdyaWdodCcsICd0ZXh0JzogJ3t7bWVyZ2VMZWZ0UmlnaHRSaWdodH19JyB9LAogICAgICBdLAogICAgICAnZGVmYXVsdCc6ICdyaWdodCcsCiAgICB9LAogICAgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnd2FybicsICd0ZXh0JzogJ3t7bWVyZ2VMZWZ0UmlnaHREZXNjfX0nIH0sCiAgfSwKICAnYWluaXQnOiBmdW5jdGlvbiBtZXJnZUxlZnRSaWdodCgpIHsKICAgIC8vIOWPkeeOsOmhtemdoueahOmAu+i+keS4jeS4gOagt++8jOWBmuWkhOeQhuW+iOm6u+eDpu+8jOaJgOS7peS4jeWBmuWkhOeQhgogICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5CX2Rpc2NvdmVyJykpIHJldHVybjsKICAgIHZhciBtYWluID0gZG9jdW1lbnQuYm9keSwgc2lkZSA9IHRoaXMucmVmLnNpZGUuY29uZjsKICAgIHZhciBsZWZ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLldCX21haW5fbCcpOwogICAgaWYgKCFsZWZ0KSByZXR1cm4gc2V0VGltZW91dChtZXJnZUxlZnRSaWdodC5iaW5kKHRoaXMpLCAxMDApOwogICAgdmFyIGxlZnQwID0gdXRpbC5kb20uY3JlYXRlKGh0bWwubGVmdEZha2UpOwogICAgbGVmdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShsZWZ0MCwgbGVmdCk7CiAgICBsZWZ0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobGVmdCk7CiAgICB2YXIgdXBkYXRlTWFpbkF0dHIgPSBmdW5jdGlvbiAoc2lkZSkgewogICAgICBpZiAoc2lkZSAmJiBtYWluLmdldEF0dHJpYnV0ZSgneWF3Zi1tZXJnZS1sZWZ0JykgIT09IHNpZGUpIG1haW4uc2V0QXR0cmlidXRlKCd5YXdmLW1lcmdlLWxlZnQnLCBzaWRlKTsKICAgICAgaWYgKCFzaWRlICYmIG1haW4uaGFzQXR0cmlidXRlKCd5YXdmLW1lcmdlLWxlZnQnKSkgbWFpbi5yZW1vdmVBdHRyaWJ1dGUoJ3lhd2YtbWVyZ2UtbGVmdCcpOwogICAgfTsKICAgIHZhciBwb3NpdGlvbkxlZnQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciByZWYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdjZfcGxfcmlnaHRtb2RfbXlpbmZvJyk7CiAgICAgIHZhciByaWdodCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5XQl9tYWluX3InKTsKICAgICAgdmFyIGxlZnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLldCX21haW5fbCcpOwogICAgICBpZiAobGVmdG4gJiYgbGVmdCAhPT0gbGVmdG4pIHsgbGVmdCA9IGxlZnRuOyB9CiAgICAgIGlmIChyZWYpIHsKICAgICAgICBpZiAocmVmLm5leHRTaWJsaW5nICE9PSBsZWZ0KSB7CiAgICAgICAgICByZWYucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobGVmdCwgcmVmLm5leHRTaWJsaW5nKTsKICAgICAgICAgIHVwZGF0ZU1haW5BdHRyKHNpZGUpOwogICAgICAgICAgZml4U3R5bGlzaCh0cnVlKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAocmlnaHQpIHsKICAgICAgICBpZiAocmlnaHQuZmlyc3RDaGlsZCAhPT0gbGVmdCkgewogICAgICAgICAgcmlnaHQuaW5zZXJ0QmVmb3JlKGxlZnQsIHJpZ2h0LmZpcnN0Q2hpbGQpOwogICAgICAgICAgdXBkYXRlTWFpbkF0dHIoc2lkZSk7CiAgICAgICAgICBmaXhTdHlsaXNoKHRydWUpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAobGVmdDAucHJldmlvdXNTaWJsaW5nICE9PSBsZWZ0KSB7CiAgICAgICAgICBsZWZ0MC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShsZWZ0LCBsZWZ0MCk7CiAgICAgICAgICB1cGRhdGVNYWluQXR0cigpOwogICAgICAgICAgZml4U3R5bGlzaChmYWxzZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9OwogICAgdXRpbC5jc3MuYWRkKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICBbeWF3Zi1tZXJnZS1sZWZ0XSAuV0JfZnJhbWUgLldCX21haW5fbCwKICAgICAgW3lhd2YtbWVyZ2UtbGVmdF06bm90KFt5YXdmLXdlaWJvLW9ubHldKSAuV0JfZnJhbWUgLnlhd2YtV0JfbGVmdF9uYXYsIGJvZHlbeWF3Zi1tZXJnZS1sZWZ0XTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl9mcmFtZSAuV0JfbGVmdF9uYXYgeyB3aWR0aDogMjI5cHg7IHBhZGRpbmc6IDA7IGZsb2F0OiBub25lOyB9CiAgICAgIFt5YXdmLW1lcmdlLWxlZnRdOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLldCX2ZyYW1lIHsgd2lkdGg6IDg0MHB4ICFpbXBvcnRhbnQ7IHBhZGRpbmc6IDEwcHg7IGJhY2tncm91bmQtcG9zaXRpb246IC0zMDBweCBjZW50ZXI7IH0KICAgICAgW3lhd2YtbWVyZ2UtbGVmdF0gLldCX2ZyYW1lIC55YXdmLVdCX2xlZnRfbmF2IC5sZXZfbGluZSBmaWVsZHNldCwgYm9keVt5YXdmLW1lcmdlLWxlZnRdIC5XQl9mcmFtZSAuV0JfbGVmdF9uYXYgLmxldl9saW5lIGZpZWxkc2V0IHsgcGFkZGluZy1sZWZ0OiAxOTBweDsgfQogICAgICBbeWF3Zi1tZXJnZS1sZWZ0XSAuV0JfbGVmdF9uYXYgLmxldiBhOmhvdmVyLCAuV0JfbGVmdF9uYXYgLmxldl9jdXJyLCAuV0JfbGVmdF9uYXYgLmxldl9jdXJyOmhvdmVyLCAuV0JfbGVmdF9uYXYgLmxldm1vcmUgLm1vcmUgeyBiYWNrZ3JvdW5kOiByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuMSkgIWltcG9ydGFudDsgfQogICAgICBbeWF3Zi1tZXJnZS1sZWZ0XSAuV0JfbGVmdF9uYXYgLmxldl9Cb3gsIC5XQl9sZWZ0X25hdiBmaWVsZHNldCB7IGJvcmRlci1jb2xvcjogcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjUpICFpbXBvcnRhbnQ7IH0KICAgICAgW3lhd2YtbWVyZ2UtbGVmdF0gLldCX2ZyYW1lIC5XQl9tYWluX2wgI3Y2X3BsX2xlZnRuYXZfbXNnYm94Lnlhd2YtY2FyZHdyYXAgaDMgeyBwYWRkaW5nOiAwIDE2cHg7IH0KICAgICAgW3lhd2YtbWVyZ2UtbGVmdF0gYS5XX2dvdG9wIHsgbWFyZ2luLWxlZnQ6IDQzMHB4OyB9CiAgICAgIFt5YXdmLW1lcmdlLWxlZnRdIC5XQl93ZWJpbV9wYWdlICN3ZWlib2NoYXQgeyBwb3NpdGlvbjogc3RhdGljICFpbXBvcnRhbnQ7IH0KICAgICAgW3lhd2YtbWVyZ2UtbGVmdF0gLldCX3dlYmltX3BhZ2UgLndlYmltX2NvbnRhY3RzX21vZCB7IHBvc2l0aW9uOiBzdGF0aWMgIWltcG9ydGFudDsgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDQxMHB4KTsgfQogICAgICBbeWF3Zi1tZXJnZS1sZWZ0XSAuV0Jfd2ViaW1fcGFnZSAud2ViaW1fY29udGFjdHNfYmQgeyBtYXgtaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDcwcHgpOyB9CiAgICAgIFt5YXdmLW1lcmdlLWxlZnRdIC53ZWJpbV9jaGF0X3dpbmRvdyAuV0Jfd2ViaW1fcGFnZSAud2ViaW1fY29udGFjdHNfbW9kLAogICAgICBbeWF3Zi1tZXJnZS1sZWZ0XSAud2ViaW1fY2hhdF93aW5kb3cgLldCX3dlYmltX3BhZ2UgLndlYmltX2NvbnRhY3RzX2JkIHsgbWF4LWhlaWdodDogbm9uZTsgfQogICAgICBbeWF3Zi1tZXJnZS1sZWZ0PSJsZWZ0Il0gLldCX2ZyYW1lIC5XQl9tYWluX3IgeyBmbG9hdDogbGVmdDsgfQogICAgICBbeWF3Zi1tZXJnZS1sZWZ0PSJsZWZ0Il0gLldCX2ZyYW1lIC5XQl9tYWluX2MgeyBmbG9hdDogcmlnaHQ7IH0KCiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMDZweCkgewogICAgICAgIGJvZHlbeWF3Zi1tZXJnZS1sZWZ0XTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XX21haW4geyB3aWR0aDogNjAwcHggIWltcG9ydGFudDsgfQogICAgICAgIGJvZHlbeWF3Zi1tZXJnZS1sZWZ0XTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl9mcmFtZSB7IHdpZHRoOiA2MDBweCAhaW1wb3J0YW50OyB9CiAgICAgICAgYm9keVt5YXdmLW1lcmdlLWxlZnRdIGEuV19nb3RvcCB7IG1hcmdpbi1sZWZ0OiAzMTBweDsgfQogICAgICAgIGJvZHlbeWF3Zi1tZXJnZS1sZWZ0PSJsZWZ0Il0gLldCX21haW4gLldCX21haW5fYyB7IGZsb2F0OiBub25lOyB9CiAgICAgICAgYm9keVt5YXdmLW1lcmdlLWxlZnQ9ImxlZnQiXSAuV19mb2xkIHsgcmlnaHQ6IGF1dG87IGxlZnQ6IDA7IC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZVgoLTEpOyB0cmFuc2Zvcm06IHNjYWxlWCgtMSk7IH0KICAgICAgICBib2R5W3lhd2YtbWVyZ2UtbGVmdD0ibGVmdCJdIC5XX2ZvbGQuV19mb2xkX291dCB7IGxlZnQ6IDI2OXB4OyB9CiAgICAgICAgYm9keVt5YXdmLW1lcmdlLWxlZnQ9ImxlZnQiXSAuV0JfbWFpbl9yIHsgcmlnaHQ6IGF1dG87IGxlZnQ6IDBweDsgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpIHRyYW5zbGF0ZVooMHB4KTsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKSB0cmFuc2xhdGVaKDBweCk7IH0KICAgICAgICBib2R5W3lhd2YtbWVyZ2UtbGVmdD0ibGVmdCJdIC5XQl9tYWluX3IuV19mb2xkX2xheWVyIHsgbGVmdDogMjY5cHg7IH0KICAgICAgICBib2R5W3lhd2YtbWVyZ2UtbGVmdD0ibGVmdCJdIC5XQl9tYWluX3IgeyBkaXJlY3Rpb246IHJ0bDsgfQogICAgICAgIGJvZHlbeWF3Zi1tZXJnZS1sZWZ0PSJsZWZ0Il0gLldCX21haW5fciAuV0JfY2FyZHdyYXAgeyBkaXJlY3Rpb246IGx0cjsgfQogICAgICB9CgogICAgICBib2R5W3lhd2YtbWVyZ2UtbGVmdF06bm90KFt5YXdmLXdlaWJvLW9ubHldKSAjeWF3Zi1kcm9wLWFyZWEgeyBsZWZ0OiBjYWxjKDUwJSArIDE5MHB4KTsgfQogICAgICBib2R5W3lhd2YtbWVyZ2UtbGVmdD0ibGVmdCJdOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgI3lhd2YtZHJvcC1hcmVhIHsgbGVmdDogY2FsYyg1MCUgLSA0MjBweCk7IH0KICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDoxMDA2cHgpIHsKICAgICAgICBib2R5W3lhd2YtbWVyZ2UtbGVmdF06bm90KFt5YXdmLXdlaWJvLW9ubHldKSAjeWF3Zi1kcm9wLWFyZWEgeyBsZWZ0OiBjYWxjKDUwJSArIDcwcHgpOyB9CiAgICAgIH0KICAgICovIG5vb3AoKTsgfSkpOwoKICAgIC8vIGZvbGxvd2luZyBjb2RlcyBhcmUgY29waWVkIGFuZCBtb2RpZmllZCBmcm9tIHdlaWJvLCBzb21lIG9uZSBlbHNlIG1heSBob2xkIGNvcHlyaWdodAogICAgLy8gY29kZXMgbW9kaWZpZWQgZnJvbSBodHRwOi8vaW1nLnQuc2luYWpzLmNuL3Q2L3N0eWxlL2Nzcy9tb2R1bGUvY29tYmluYXRpb24vaG9tZV9BLmNzcyBiZWdpbgogICAgdXRpbC5jc3MuYWRkKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICAueWF3Zi1XQl9sZWZ0X25hdiB7IHdpZHRoOiAxNTBweDsgfQogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2X0JveF9ub2JvcmRlciB7IGJvcmRlci1ib3R0b206IG5vbmU7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldl9saW5lIHt9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXZfbGluZSBmaWVsZHNldCB7IGRpc3BsYXk6IGJsb2NrOyBoZWlnaHQ6IDIycHg7IHBhZGRpbmc6IDAgMCAwIDEyMHB4OyB6b29tOiAxOyBjbGVhcjogYm90aDsgYm9yZGVyLXRvcC13aWR0aDogMXB4OyBib3JkZXItdG9wLXN0eWxlOiBzb2xpZDsgfQogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2X2xpbmUgbGVnZW5kIHsgbGluZS1oZWlnaHQ6IDIycHg7IGZvbnQtc2l6ZTogMTRweDsgcGFkZGluZzogMCAzcHggMCA0cHg7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldl9saW5lIGxlZ2VuZCAuZmljb25fc2V0dXA6aG92ZXIgeyB0ZXh0LXNoYWRvdzogMHB4IDBweCA0cHggcmdiYSgwLCAwLCAwLCAuNCk7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldl9saW5lX3YyIGZpZWxkc2V0IHsgaGVpZ2h0OiAxMXB4OyBtYXJnaW4tdG9wOiAxMXB4OyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXZfQm94IGgzIHsgZGlzcGxheTogYmxvY2s7IGhlaWdodDogMzRweDsgbGluZS1oZWlnaHQ6IDM0cHg7IGZvbnQtc2l6ZTogMTRweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgb3ZlcmZsb3c6IGhpZGRlbjsgfQogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2X0JveCBoMy5sZXYgYSB7IGZvbnQtc2l6ZTogMTRweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHBhZGRpbmc6IDAgMCAwIDE1cHg7IGhlaWdodDogMzRweDsgbGluZS1oZWlnaHQ6IDM0cHg7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldl9Cb3ggaDMubGV2IGEgLnBpYyB7IHdpZHRoOiAxOHB4OyBoZWlnaHQ6IDE4cHg7IGZsb2F0OiBsZWZ0OyBtYXJnaW46IDhweCA1cHggMCAwOyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXZfQm94IGgzLmxldiBhIC5XX2ZpY29uIHsgZmxvYXQ6IHJpZ2h0OyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXZfQm94IGgzLlNfdHh0MSB7IHBhZGRpbmc6IDAgMCAwIDE1cHg7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldl9Cb3ggaDMgLmZpY29uX2FkZCwKICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldl9Cb3ggaDMgLmZpY29uX3NldHVwIHsgZGlzcGxheTogYmxvY2s7IGZsb2F0OiByaWdodDsgZm9udC1zaXplOiAxNHB4OyBmb250LXNpemU6IDEycHhcOTsgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXZfQm94IGgzIC5maWNvbl9hZGQ6aG92ZXIsCiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXZfQm94IGgzIC5maWNvbl9zZXR1cDpob3ZlciB7IHRleHQtc2hhZG93OiAwcHggMHB4IDRweCByZ2JhKDAsIDAsIDAsIC40KTsgfQogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2IGEgeyBkaXNwbGF5OiBibG9jazsgaGVpZ2h0OiAzNHB4OyBsaW5lLWhlaWdodDogMzRweDsgZm9udC1zaXplOiAxMnB4OyBwYWRkaW5nOiAwIDAgMCAxM3B4OyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IG92ZXJmbG93OiBoaWRkZW47IHBvc2l0aW9uOiByZWxhdGl2ZTsgfQogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2IC5sZXZfY3VyciAubGV2dHh0IHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldiAubGV2X2N1cnIgLmZpY29uX2RvdCwKICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldiAubGV2X2N1cnIgLmZpY29uX2ZyaWVuZHMsCiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXYgLmxldl9jdXJyIC5maWNvbl9ncm91cHdiLAogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2IC5sZXZfY3VyciAuZmljb25fcF9pbnRlcmVzdCwKICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldiAubGV2X2N1cnIgLmZpY29uX3Bfcm1kLAogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2IC5sZXZfY3VyciAuZmljb25fcF9xdWlldGZvbGxvdyB7IHdpZHRoOiAxMnB4OyBsZXR0ZXItc3BhY2luZzogMThweDsgdGV4dC1pbmRlbnQ6IC0zMHB4OyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXYgLmxldl9jdXJyIC5maWNvbl9kb3Q6YWZ0ZXIsCiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXYgLmxldl9jdXJyIC5maWNvbl9mcmllbmRzOmFmdGVyLAogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2IC5sZXZfY3VyciAuZmljb25fZ3JvdXB3YjphZnRlciwKICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldiAubGV2X2N1cnIgLmZpY29uX3BfaW50ZXJlc3Q6YWZ0ZXIsCiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXYgLmxldl9jdXJyIC5maWNvbl9wX3JtZDphZnRlciwKICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldiAubGV2X2N1cnIgLmZpY29uX3BfcXVpZXRmb2xsb3c6YWZ0ZXIgeyBjb250ZW50OiAiQiI7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldiAuZmljb25fZ290b3AgeyBkaXNwbGF5OiBub25lOyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXZfZ290b3AgYTpob3ZlciAuZmljb25fZ290b3AgeyBkaXNwbGF5OiBibG9jazsgfQogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2X2dvdG9wIGE6aG92ZXIgLmZpY29uX2dvdG9wOmhvdmVyIHsgdGV4dC1zaGFkb3c6IDBweCAwcHggNHB4IHJnYmEoMCwgMCwgMCwgLjQpOyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXYgLmxldnR4dCB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbWF4LXdpZHRoOiA4MnB4OyBvdmVyZmxvdzogaGlkZGVuOyB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgd2hpdGUtc3BhY2U6IG5vd3JhcDsgY3Vyc29yOiBwb2ludGVyOyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXYgLldfbmV3X2NvdW50IHsgZmxvYXQ6IHJpZ2h0OyBtYXJnaW46IDEwcHggMTBweCAwIDA7IGJhY2tncm91bmQ6ICNlZDc0MWM7IGNvbG9yOiAjZmZmOyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXYgLldfbmV3IHsgZmxvYXQ6IHJpZ2h0OyBtYXJnaW46IDEycHggOHB4IDAgMDsgfQogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2IC5pY29fYmxvY2sgeyBmbG9hdDogbGVmdDsgd2lkdGg6IDE3cHg7IHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luOiAtMXB4IDNweCAwIDA7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldiAuaWNvX2Jsb2NrIC5waWMgeyB3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyBmbG9hdDogbGVmdDsgbWFyZ2luLXRvcDogN3B4OyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXYgLmZpY29uX2hvdCwKICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldiAuZmljb25fdmlkZW8geyBtYXJnaW46IDA7IGxpbmUtaGVpZ2h0OiAzNnB4OyBsaW5lLWhlaWdodDogMzRweFw5OyBmb250LXNpemU6IDE0cHg7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldm1vcmUgeyBkaXNwbGF5OiBibG9jazsgaGVpZ2h0OiAzMHB4OyBsaW5lLWhlaWdodDogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5sZXZtb3JlIC5tb3JlIHsgcG9zaXRpb246IHJlbGF0aXZlOyBoZWlnaHQ6IDE0cHg7IGxpbmUtaGVpZ2h0OiAxNHB4OyBwYWRkaW5nOiAycHggNnB4OyBib3JkZXItcmFkaXVzOiAzcHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgem9vbTogMTsgfQogICAgICAueWF3Zi1XQl9sZWZ0X25hdiAubGV2bW9yZSAuV19idG5fYiB7IG1hcmdpbjogOHB4IDEwcHggOHB4IDA7IH0KICAgICAgLnlhd2YtV0JfbGVmdF9uYXYgLmxldm1vcmUgLldfbmV3IHsgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDA7IHJpZ2h0OiAtMXB4OyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5VSV9zY3JvbGxWaWV3IHsgcG9zaXRpb246IHJlbGF0aXZlOyB9CiAgICAgIC55YXdmLVdCX2xlZnRfbmF2IC5XX3Njcm9sbF95IHsgcmlnaHQ6IDA7IH0KICAgICovIG5vb3AoKTsgfSkpOwogICAgLy8gY29kZXMgbW9kaWZpZWQgZnJvbSBodHRwOi8vaW1nLnQuc2luYWpzLmNuL3Q2L3N0eWxlL2Nzcy9tb2R1bGUvY29tYmluYXRpb24vaG9tZV9BLmNzcyBlbmQKCiAgICAvLyDlsIblt6bmoI/nmoTmoLflvI/mlLnkuLrljaHniYfmlYjmnpzvvIjmiJbmlLnlm57vvIkKICAgIC8vIOeUseS6juW3puagj+agt+W8j+mDveWKoOWcqCAuV0JfbGVmdF9uYXYg5LiK77yM5omA5Lul5L2/55SoIC55YXdmLVdCX2xlZnRfbmF2IOadpei6suW8gOi/meS6m+agt+W8jwogICAgLy8g5L2G55u45YWz6ZyA6KaB5L+d55WZ55qE5qC35byP77yM5Zyo5LiK6Z2i6YeN5paw5re75YqgCiAgICB2YXIgZml4U3R5bGlzaCA9IChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciByID0gZmFsc2U7CiAgICAgIC8vIOW3puagj+WQiOW5tui/h+WOu+S5i+WQjuimgeaUueS4gOS4i+agt+W8jwogICAgICAvLyDogIPomZHliLDopoHog73pgILlupTlkITnp43mqKHmnb/vvIzmiYDku6XlsLHmlLnlvpfnqI3lvq7mnInngrnov4fliIYKICAgICAgLy8g5q+U5aaC6K+05Y6L5qC55bCx5LmI5pyJIC5XQl9sZWZ0X25hdiDov5nkuKrlsZ7mgKfkuobvvIzlhY3lvpfpopzoibLkubHmjokKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChvblJpZ2h0KSB7CiAgICAgICAgaWYgKG9uUmlnaHQgPT0gbnVsbCkgb25SaWdodCA9IHI7IGVsc2UgciA9IG9uUmlnaHQ7CiAgICAgICAgdmFyIG5hdiA9IGxlZnQucXVlcnlTZWxlY3RvcignLldCX2xlZnRfbmF2LCAueWF3Zi1XQl9sZWZ0X25hdicpOwogICAgICAgIGlmICghbmF2KSByZXR1cm47CiAgICAgICAgdmFyIGNsYXNzTmFtZSA9IG9uUmlnaHQgPyAneWF3Zi1XQl9sZWZ0X25hdiBXQl9jYXJkd3JhcCBTX2JnMicgOiAnV0JfbGVmdF9uYXYnOwogICAgICAgIGlmIChuYXYuY2xhc3NOYW1lICE9PSBjbGFzc05hbWUpIG5hdi5jbGFzc05hbWUgPSBjbGFzc05hbWU7CiAgICAgIH07CiAgICB9KCkpOwoKICAgIC8vIOW8uuWItueCueWHu+mTvuaOpeaXtuWIt+aWsOmhtemdou+8jOS7peino+WGs+WboOaatOWKm+S/ruaUuemAoOaIkOeahOmXrumimAogICAgdmFyIGZvcmNlUmVmbHVzaCA9IChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBsID0gbnVsbDsKICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAobCA9PT0gbGVmdCkgcmV0dXJuOyBlbHNlIGwgPSBsZWZ0OwogICAgICAgIGxlZnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgdmFyIHQgPSBlLnRhcmdldDsgaWYgKCF1dGlsLmRvbS5tYXRjaGVzKHQsICdhLCBhIConKSkgcmV0dXJuOwogICAgICAgICAgd2hpbGUgKHQudGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAnYScpIHQgPSB0LnBhcmVudE5vZGU7CiAgICAgICAgICB2YXIgaHJlZiA9IHQuaHJlZjsgaWYgKCFocmVmLm1hdGNoKC9eKD86aHR0cHM/OilcL1wvLykpIHJldHVybjsKICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7IGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgIHV0aWwuZnVuYy5wYWdlKGZ1bmN0aW9uIChocmVmKSB7IGxvY2F0aW9uLmFzc2lnbihocmVmKTsgfSwgaHJlZik7CiAgICAgICAgfSwgdHJ1ZSk7CiAgICAgIH07CiAgICB9KCkpOwoKICAgIHZhciBmbGVmdCA9IGZ1bmN0aW9uIGZpeE1lcmdlTGVmdCgpIHsKICAgICAgcG9zaXRpb25MZWZ0KCk7CiAgICAgIGZpeFN0eWxpc2goKTsKICAgICAgZm9yY2VSZWZsdXNoKCk7CiAgICB9OwogICAgZmxlZnQoKTsKICAgIG9ic2VydmVyLmRvbS5hZGQoZmxlZnQpOwoKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKLy8g57uf5LiA5Liq5Lq65Li76aG144CB6K+d6aKY44CB5Y2V5p2h5b6u5Y2a6aG16Z2i55qE5L6n6L655qCP5Zyo5bem5L6n5oiW5Y+z5L6nCmZpbHRlci5pdGVtcy50b29sLnNpZGViYXIuY2hvc2Vfc2lkZSA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc2lkZWJhcicsCiAgJ3ZlcnNpb24nOiAxNDcsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLmNob3NlX3NpZGUnLAogICd0ZXh0JzogJ3t7Y2hvc2VTaWRlfX0nLAogICdyZWYnOiB7CiAgICAnc2lkZSc6IHsKICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgJ3NlbGVjdCc6IFsKICAgICAgICB7ICd2YWx1ZSc6ICdsZWZ0JywgJ3RleHQnOiAne3tjaG9zZVNpZGVMZWZ0fX0nIH0sCiAgICAgICAgeyAndmFsdWUnOiAncmlnaHQnLCAndGV4dCc6ICd7e2Nob3NlU2lkZVJpZ2h0fX0nIH0sCiAgICAgIF0sCiAgICAgICdkZWZhdWx0JzogJ3JpZ2h0JywKICAgIH0KICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBzaWRlID0gdGhpcy5yZWYuc2lkZS5jb25mOwogICAgb2JzZXJ2ZXIuZG9tLmFkZChmdW5jdGlvbiBjaG9zZVNpZGVSdW5uZXIoKSB7CiAgICAgIHZhciBiLCBjLCBwOwogICAgICBpZiAoc2lkZSA9PT0gJ2xlZnQnKSB7CiAgICAgICAgYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwbGNfbWFpbj4uV0JfZnJhbWVfYzpmaXJzdC1jaGlsZCsuV0JfZnJhbWVfYjpsYXN0LWNoaWxkJyk7IGlmICghYikgcmV0dXJuOwogICAgICAgIHAgPSBiLnBhcmVudE5vZGU7CiAgICAgICAgcC5pbnNlcnRCZWZvcmUoYiwgcC5maXJzdENoaWxkKTsKICAgICAgfSBlbHNlIGlmIChzaWRlID09PSAncmlnaHQnKSB7CiAgICAgICAgYyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwbGNfbWFpbj4uV0JfZnJhbWVfYjpmaXJzdC1jaGlsZCsuV0JfZnJhbWVfYzpsYXN0LWNoaWxkJyk7IGlmICghYykgcmV0dXJuOwogICAgICAgIHAgPSBjLnBhcmVudE5vZGU7CiAgICAgICAgZm9yIChiID0gcC5maXJzdENoaWxkOyBiLm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERTsgYiA9IGIubmV4dFNpYmxpbmcpOwogICAgICAgIHAuYXBwZW5kQ2hpbGQoYik7CiAgICAgIH0KICAgIH0pOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDlsIbor53popjpu5HlkI3ljZXlupTnlKjliLDlj7Pkvqfng63pl6jor53popjmoI/nm64KZmlsdGVyLml0ZW1zLnRvb2wuc2lkZWJhci5maWx0ZV9yaWdodF90b3BpYyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc2lkZWJhcicsCiAgJ3ZlcnNpb24nOiA0NywKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuZmlsdGVfcmlnaHRfdG9waWMnLAogICd0ZXh0JzogJ3t7ZmlsdGVSaWdodFRvcGljfX0nLAogICdjaGVjayc6IGZ1bmN0aW9uICh0ZXh0KSB7CiAgICAvLyDmjInor53popjov4fmu6QKICAgIHZhciB0b3BpY1J1bGUgPSBmaWx0ZXIuaXRlbXMudG9waWMudG9waWMuYmxhY2tsaXN0OwogICAgdmFyIHRvcGljcyA9IHRvcGljUnVsZS5jb25mLmNvbmNhdCh0b3BpY1J1bGUuZXh0ZW50KTsKICAgIGlmICh0b3BpY3MuaW5kZXhPZih0ZXh0KSAhPT0gLTEpIHJldHVybiB0cnVlOwogICAgLy8g5oyJ6K+d6aKY5q2j5YiZ5byP6L+H5rukCiAgICB2YXIgcnRvcGljUnVsZSA9IGZpbHRlci5pdGVtcy50b3BpYy5ydG9waWMuYmxhY2tsaXN0OwogICAgdmFyIHJ0b3BpY3MgPSBydG9waWNSdWxlLmNvbmYuY29uY2F0KHJ0b3BpY1J1bGUuZXh0ZW50KTsKICAgIGlmIChydG9waWNzLnNvbWUoZnVuY3Rpb24gKHIpIHsgcmV0dXJuICEhdGV4dC5tYXRjaChyKTsgfSkpIHJldHVybiB0cnVlOwogICAgLy8g5aaC5p6c5bCG6K+d6aKY6KeG5Li65b6u5Y2a5YaF5a6577yM6YKj5LmI5Lmf6KaB5oyJ54Wn5YaF5a656L+H5rukCiAgICBpZiAoZmlsdGVyLml0ZW1zLmNvbnRlbnQuZWxlbWVudHMudG9waWMuY29uZikgewogICAgICAvLyDmjInlhbPplK7or43ov4fmu6QKICAgICAgdmFyIGtleXdvcmRSdWxlID0gZmlsdGVyLml0ZW1zLmNvbnRlbnQua2V5d29yZC5ibGFja2xpc3Q7CiAgICAgIHZhciBrZXl3b3JkcyA9IGtleXdvcmRSdWxlLmNvbmYuY29uY2F0KGtleXdvcmRSdWxlLmV4dGVudCk7CiAgICAgIGlmIChrZXl3b3Jkcy5zb21lKGZ1bmN0aW9uICh3KSB7IHJldHVybiB0ZXh0LmluZGV4T2YodykgIT09IC0xOyB9KSkgcmV0dXJuIHRydWU7CiAgICAgIC8vIOaMieato+WImeW8j+i/h+a7pAogICAgICB2YXIgcmVnZXhwUnVsZSA9IGZpbHRlci5pdGVtcy5jb250ZW50LnJlZ2V4cC5ibGFja2xpc3Q7CiAgICAgIHZhciByZWdleHAgPSByZWdleHBSdWxlLmNvbmYuY29uY2F0KHJlZ2V4cFJ1bGUuZXh0ZW50KTsKICAgICAgaWYgKHJlZ2V4cC5zb21lKGZ1bmN0aW9uIChyKSB7IHJldHVybiAhIXRleHQubWF0Y2gocik7IH0pKSByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHJldHVybiBmYWxzZTsKICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCgnLmhvdF90b3BpYyBsaVt5YXdmLXJ0b3BpYz0iaGlkZGVuIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICAgIHZhciBjaGVjayA9IHRoaXMuY2hlY2s7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIGZpbHRlUmlnaHRUb3BpYygpIHsKICAgICAgdmFyIHRvcGljcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmhvdF90b3BpYyBsaTpub3QoW3lhd2YtcnRvcGljXSkgYVtzdWRhLXVhdHJhY2sqPSJob3R0b3BpY19yIl0nKSk7CiAgICAgIHRvcGljcy5mb3JFYWNoKGZ1bmN0aW9uICh0b3BpYykgewogICAgICAgIHZhciB0ZXh0ID0gdG9waWMudGl0bGUucmVwbGFjZSgvIy9nLCAnJyk7CiAgICAgICAgdmFyIGxpOyBmb3IgKGxpID0gdG9waWM7IGxpLnRhZ05hbWUudG9Mb3dlckNhc2UoKSAhPT0gJ2xpJzsgbGkgPSBsaS5wYXJlbnROb2RlKTsKICAgICAgICBpZiAoY2hlY2sodGV4dCkpIGxpLnNldEF0dHJpYnV0ZSgneWF3Zi1ydG9waWMnLCAnaGlkZGVuJyk7CiAgICAgICAgZWxzZSBsaS5zZXRBdHRyaWJ1dGUoJ3lhd2YtcnRvcGljJywgJ3Nob3cnKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKLy8g6ZqQ6JeP6ZiF6K+76YeP5aSq5bCR55qE54Ot6Zeo6K+d6aKYCmZpbHRlci5pdGVtcy50b29sLnNpZGViYXIuZmlsdGVfcmlnaHRfdG9waWNfY291bnQgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ3NpZGViYXInLAogICd2ZXJzaW9uJzogMTMyLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5maWx0ZV9yaWdodF90b3BpY19jb3VudCcsCiAgJ3JlZic6IHsKICAgICdudW1iZXInOiB7CiAgICAgICd0eXBlJzogJ3JhbmdlJywKICAgICAgJ21pbic6IDEwLAogICAgICAnbWF4JzogMTAwMCwKICAgICAgJ3N0ZXAnOiAxMCwKICAgICAgJ2RlZmF1bHQnOiAyMDAsCiAgICB9CiAgfSwKICAndGV4dCc6ICd7e2ZpbHRlUmlnaHRUb3BpY0NvdW50fX0nLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCgnLmhvdF90b3BpYyBsaVt5YXdmLXJ0b3BpYy1jb3VudD0iaGlkZGVuIl0sICN0b3BpY0FEIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9Jyk7CiAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIGZpbHRlUmlnaHRUb3BpY0NvdW50KCkgewogICAgICB2YXIgY291bnRzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaG90X3RvcGljIGxpOm5vdChbeWF3Zi1ydG9waWMtY291bnRdKSAudG90YWwnKSk7CiAgICAgIGNvdW50cy5mb3JFYWNoKGZ1bmN0aW9uIChjb3VudCkgewogICAgICAgIC8vIOe9keermeS4reaVsOWtl+eUsSB4eHjkuIcg77yMIHh4Lnjkur8g55qE5pa55byP6KGo56S677yb5LiU5rKh5pyJ57mB5L2T5oiW6Iux5paH54mI5pysCiAgICAgICAgLy8g5rOo5oSP5pyJ5pe25YmN6Z2i55qE5pWw5a2X5Lya5pyJ5bCP5pWw54K577yM5omA5Lul6KaB5pu/5o2i5Li6IGU0LCBlOCDogIzpnZ4gMDAwMCwgMDAwMDAwMDAKICAgICAgICB2YXIgbnVtYmVyID0gTnVtYmVyKGNvdW50LnRleHRDb250ZW50LnJlcGxhY2UoJ+S4hycsICdlNCcpLnJlcGxhY2UoJ+S6vycsICdlOCcpKTsKICAgICAgICB2YXIgbGk7IGZvciAobGkgPSBjb3VudDsgbGkudGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAnbGknOyBsaSA9IGxpLnBhcmVudE5vZGUpOwogICAgICAgIGlmIChpc05hTihudW1iZXIpIHx8IHRoYXQucmVmLm51bWJlci5jb25mICogMWU0ID4gbnVtYmVyKSBsaS5zZXRBdHRyaWJ1dGUoJ3lhd2YtcnRvcGljLWNvdW50JywgJ2hpZGRlbicpOwogICAgICAgIGVsc2UgbGkuc2V0QXR0cmlidXRlKCd5YXdmLXJ0b3BpYy1jb3VudCcsICdzaG93Jyk7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOWcqOWPs+i+ueagj+aYvuekuueZveWQjeWNleW4kOWPt+eahOmTvuaOpQpmaWx0ZXIuaXRlbXMudG9vbC5zaWRlYmFyLnJpZ2h0X3VzZXJfbGlzdCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc2lkZWJhcicsCiAgJ3ZlcnNpb24nOiAyNjcsCiAgJ3R5cGUnOiAndXNlcnMnLAogICdjb21wbGV0ZSc6ICd1c2VyJywKICAna2V5JzogJ3dlaWJvLnRvb2wucmlnaHRfdXNlcl9saXN0JywKICAndGV4dCc6ICd7e2FkZFJpZ2h0VXNlckxpc3R9fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3thZGRSaWdodFVzZXJMaXN0RGVzY319JyB9IH0sCiAgJ2FkZCc6IChmdW5jdGlvbiAoKSB7CiAgICB2YXIgbGFzdCA9IG51bGw7CiAgICByZXR1cm4gZnVuY3Rpb24gKHMpIHsKICAgICAgaWYgKHMgPT09IGxhc3QpIHJldHVybjsKICAgICAgdmFyIG5vdGljZSA9IGZpbHRlci5pdGVtcy50b29sLnNpZGViYXIucmlnaHRfdXNlcl9saXN0X25vdGljZTsKICAgICAgaWYgKG5vdGljZS5jb25mICYmIHRoaXMuY29uZi5sZW5ndGggPj0gNTApIHV0aWwudWkuYWxlcnQoJ3lhd2YtdG9vLW1hbnktbm90aWNlJywgewogICAgICAgICd0aXRsZSc6IHV0aWwuc3RyLmZpbGwoJ3t7YWRkUmlnaHRVc2VyTGlzdFRvb01hbnlUaXRsZX19JyksCiAgICAgICAgJ3RleHQnOiB1dGlsLnN0ci5maWxsKCd7e2FkZFJpZ2h0VXNlckxpc3RUb29NYW55fX0nKSwKICAgICAgICAnaWNvbic6ICd3YXJuJwogICAgICB9KTsKICAgICAgcmV0dXJuIHM7CiAgICB9OwogIH0oKSksCiAgJ3Nob3duJzogZnVuY3Rpb24gKGRvbSkgewogICAgdmFyIGljb24gPSBkb20ucXVlcnlTZWxlY3RvcignLnlhd2YtY29uZmlnU0ljb24nKTsKICAgIHZhciBmb3JtID0gZG9tLnF1ZXJ5U2VsZWN0b3IoJ2Zvcm0nKTsKICAgIGZvcm0uYXBwZW5kQ2hpbGQoaWNvbik7CiAgfSwKICAnaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciB0aGF0ID0gdGhpczsKICAgIHZhciB1c2VycyA9IHRoYXQuY29uZjsKICAgIHZhciBub3RpY2UgPSBmaWx0ZXIuaXRlbXMudG9vbC5zaWRlYmFyLnJpZ2h0X3VzZXJfbGlzdF9ub3RpY2U7CiAgICBpZiAoIXVzZXJzLmxlbmd0aCkgcmV0dXJuOwoKICAgIC8vIOmmluWFiOaIkeS7rOaehOmAoOWHuui/meS4queUqOaIt+WIl+ihqAogICAgdmFyIHVzZXJsaXN0ID0gdXRpbC5kb20uY3JlYXRlKCdkaXYnLCB1dGlsLnN0ci5maWxsKGh0bWwucmlnaHRVc2VyTGlzdCkpLmZpcnN0Q2hpbGQ7CiAgICB2YXIgdXNlcmxpc3RfdWwgPSB1c2VybGlzdC5xdWVyeVNlbGVjdG9yKCd1bCcpOwogICAgdmFyIGdlbmxpID0gZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgcmV0dXJuIHV0aWwuZG9tLmNyZWF0ZSgndWwnLCB1dGlsLnN0ci5maWxsKGh0bWwucmlnaHRVc2VyTGlzdEl0ZW0sIGRhdGEpKS5maXJzdENoaWxkOwogICAgfTsKICAgIHVzZXJzLmZvckVhY2goZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgdmFyIGxpID0gZ2VubGkoeyAnaWQnOiB1c2VyLCAnbmFtZSc6ICcnLCAnYXZhdGFyJzogJycgfSk7CiAgICAgIHVzZXJsaXN0X3VsLmFwcGVuZENoaWxkKGxpKTsKICAgICAgbmV0d29yay5hY2NvdW50LmlkKHVzZXIsIGZ1bmN0aW9uIChpbmZvKSB7CiAgICAgICAgdmFyIG5ld19saSA9IGdlbmxpKGluZm8pOwogICAgICAgIHVzZXJsaXN0X3VsLnJlcGxhY2VDaGlsZChuZXdfbGksIGxpKTsKICAgICAgfSwgZnVuY3Rpb24gKCkgewogICAgICAgIHVzZXJsaXN0X3VsLnJlbW92ZUNoaWxkKGxpKTsKICAgICAgfSk7CiAgICB9KTsKICAgIHV0aWwuY3NzLmFkZCgnI3lhd2YtcmlnaHRtb2RfdXNlcmxpc3QgLldfZmIgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbi1yaWdodDogLTEwcHg7IHdpZHRoOiAxMDAlOyB9Jyk7CgogICAgLy8g6K6+572u5oyJ6ZKuCiAgICB2YXIgc2V0dGluZyA9IHVzZXJsaXN0LnF1ZXJ5U2VsZWN0b3IoJy5vcHRfYm94IGEnKTsKICAgIHNldHRpbmcuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgIHV0aWwudWkuZGlhbG9nKCd5YXdmLWZhdmUtcGVvcGxlLWNvbmZpZycsIHV0aWwuc3RyLmZpbGwoJ3t7YWRkUmlnaHRVc2VyTGlzdENvbmZpZ1RpdGxlfX0nKSwgZnVuY3Rpb24gKGlubmVyKSB7CiAgICAgICAgdmFyIGJvZHkgPSB1dGlsLmRvbS5jcmVhdGUoaHRtbC5yaWdodFVzZXJMaXN0Q29uZmlnKTsKICAgICAgICBpbm5lci5hcHBlbmRDaGlsZChib2R5KTsKICAgICAgICBmaWx0ZXIuY29sbGVjdGlvbi5pdGVtLmxpc3QoZnVuY3Rpb24gKGl0ZW0pIHsgcmV0dXJuIGl0ZW0gPT09IHRoYXQgfHwgaXRlbSA9PT0gbm90aWNlOyB9KS5zaG93KGJvZHkpOwogICAgICB9KS5zaG93KCk7CiAgICB9KTsKCiAgICAvLyDnhLblkI7miJHku6zmiornlKjmiLfliJfooajloZ7liLDlj7PmoI/ljrsKICAgIC8vIOS9jee9ruWcqOeUqOaIt+S/oeaBr+ahhuS4i+mdouWFtuS7luS4nOilv+S4iumdou+8jOWmguaenOWQiOW5tui+ueagj++8jOmCo+S5iOi/mOWcqOW3puagj+S4i+mdogogICAgdmFyIGFkZFJpZ2h0VXNlckxpc3QgPSBmdW5jdGlvbiBhZGRSaWdodFVzZXJMaXN0KCkgewogICAgICB2YXIgcmVmID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLldCX21haW5fciAuV0JfbWFpbl9sJykgfHwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Y2X3BsX3JpZ2h0bW9kX215aW5mbycpOwogICAgICB2YXIgcmlnaHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfbWFpbl9yJyk7CiAgICAgIGlmICghdXRpbC5wYWdlLmhvbWUoKSB8fCAhZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuY29udGFpbnMoJ0ZSQU1FX21haW4nKSkgcmVmID0gcmlnaHQgPSBudWxsOwogICAgICBpZiAocmVmKSB7CiAgICAgICAgaWYgKHJlZi5uZXh0U2libGluZyAhPT0gdXNlcmxpc3QpIHJlZi5wYXJlbnRFbGVtZW50Lmluc2VydEJlZm9yZSh1c2VybGlzdCwgcmVmLm5leHRTaWJsaW5nKTsKICAgICAgfSBlbHNlIGlmIChyaWdodCkgewogICAgICAgIGlmIChyaWdodC5maXJzdENoaWxkICE9PSB1c2VybGlzdCkgcmlnaHQuaW5zZXJ0QmVmb3JlKHVzZXJsaXN0LCByaWdodC5maXJzdENoaWxkKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodXNlcmxpc3QucGFyZW50Tm9kZSkgdXNlcmxpc3QucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh1c2VybGlzdCk7CiAgICAgIH0KICAgIH07CiAgICBhZGRSaWdodFVzZXJMaXN0KCk7CiAgICBvYnNlcnZlci5kb20uYWRkKGFkZFJpZ2h0VXNlckxpc3QpOwogIH0KfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOajgOafpei/meS6m+W4kOWPt+WPkeeahOW+ruWNmuaYr+S4jeaYr+eci+W+l+WIsOeahOWKn+iDvQpmaWx0ZXIuaXRlbXMudG9vbC5zaWRlYmFyLnJpZ2h0X3VzZXJfbGlzdF9ub3RpY2UgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ3NpZGViYXInLAogICd2ZXJzaW9uJzogMjY3LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5yaWdodF91c2VyX2xpc3Rfbm90aWNlJywKICAndGV4dCc6ICd7e2FkZFJpZ2h0VXNlckxpc3ROb3RpY2V9fScsCiAgJ3JlZic6IHsKICAgICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7YWRkUmlnaHRVc2VyTGlzdE5vdGljZURlc2N9fScgfSwKICAgICdfcmVjb3Jkcyc6IHsgJ3R5cGUnOiAnbm91aScsICdkZWZhdWx0JzogW10gfSwKICAgICdfbGFzdCc6IHsgJ3R5cGUnOiAnbm91aScsICdkZWZhdWx0Jzoge30gfSwKICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciB0aGF0ID0gdGhpczsKICAgIHZhciBsaXN0ID0gZmlsdGVyLml0ZW1zLnRvb2wuc2lkZWJhci5yaWdodF91c2VyX2xpc3Q7CiAgICB2YXIgdXNlcnMgPSBsaXN0LmNvbmYuc2xpY2UoMCwgNTApOwoKICAgIC8vIOavj+S4quS6uuS4quS6uuS4u+mhteS4iuacgOaWsOeahOW+ruWNmuaYr+WTquWHoOadoQogICAgdmFyIHJlY2VudHMgPSB7fTsKICAgIHZhciBjaGVja3JlYyA9IGZ1bmN0aW9uIGNoZWNrcmVjKHVpZCkgewogICAgICBuZXR3b3JrLnJlY2VudCh1aWQsIGZ1bmN0aW9uIChtaWRzKSB7CiAgICAgICAgaWYgKCFtaWRzIHx8ICFtaWRzLmxlbmd0aCkgcmV0dXJuOwogICAgICAgIGlmIChtaWRzWzBdIDwgbWlkc1sxXSkgbWlkcy5zaGlmdCgpOwogICAgICAgIHJlY2VudHNbdWlkXSA9IG1pZHM7CiAgICAgICAgdXBkYXRlRG90KHVpZCk7CiAgICAgIH0pOwogICAgICBzZXRUaW1lb3V0KGNoZWNrcmVjLCBNYXRoLnJvdW5kKDE1ZTUgKyA1ZTUgKiBNYXRoLnJhbmRvbSgpKSwgdWlkKTsKICAgIH07CiAgICAvLyDmib7liLDlr7nlupTmr4/kuKrnlKjmiLfnmoTpobnnm64KICAgIHZhciBsaXMgPSB7fTsKICAgIG9ic2VydmVyLmRvbS5hZGQoZnVuY3Rpb24gbm90aWNlVXNlckNoZWNrZXIoKSB7CiAgICAgIHZhciB1c2VycyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI3lhd2YtcmlnaHRtb2RfdXNlcmxpc3QgbGk6bm90KFt5YXdmLW5vdGljZXVzZXJdKScpKTsKICAgICAgdXNlcnMuZm9yRWFjaChmdW5jdGlvbiAobGkpIHsKICAgICAgICBsaS5zZXRBdHRyaWJ1dGUoJ3lhd2Ytbm90aWNldXNlcicsICcnKTsKICAgICAgICB2YXIgdWlkID0gdXRpbC5zdHIucGFyc2VxdWVyeShsaS5xdWVyeVNlbGVjdG9yKCdhW3VzZXJjYXJkXj0iaWQ9Il0nKS5nZXRBdHRyaWJ1dGUoJ3VzZXJjYXJkJykpLmlkOwogICAgICAgIGlmICghbGlzW3VpZF0pIGNoZWNrcmVjKHVpZCk7IGxpc1t1aWRdID0gbGk7CiAgICAgICAgaWYgKHVzZXJzLmluZGV4T2YodWlkKSA9PT0gLTEpIHJldHVybjsKICAgICAgICB1dGlsLmRlYnVnKCdjaGVjayB1c2VyICVvJywgdWlkKTsKICAgICAgfSk7CiAgICB9KTsKICAgIC8vIOavlOi+g+S4pOS4qiBtaWQg6LCB5pu05aSnCiAgICB2YXIgaWRDbXAgPSBmdW5jdGlvbiAoYSwgYikgewogICAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gYS5sZW5ndGggLSBiLmxlbmd0aDsKICAgICAgcmV0dXJuIGEgPiBiID8gMSA6IGEgPT09IGIgPyAwIDogLTE7CiAgICB9OwogICAgLy8g5qOA5p+l54m55a6a55qEIG1pZCDmmK/lkKbigJzlupTlvZPigJ3lh7rnjrDlnKjnu5nlrprnmoQgbWlkIOaVsOe7hOS4re+8jOS9huacquWHuueOsAogICAgdmFyIG1pZE5vdGljZSA9IGZ1bmN0aW9uIChtaWQsIHVpZCkgewogICAgICBpZiAocmFuZ2UubGVuZ3RoIDwgOCkgcmV0dXJuIGZhbHNlOwogICAgICBpZiAocmFuZ2UuaW5kZXhPZihtaWQpICE9PSAtMSkgcmV0dXJuIGZhbHNlOwogICAgICBpZiAoaWRDbXAocmFuZ2VbMF0sIG1pZCkgPiAwKSByZXR1cm4gZmFsc2U7CiAgICAgIGlmIChpZENtcChyYW5nZVtyYW5nZS5sZW5ndGggLSAxXSwgbWlkKSA8IDApIHJldHVybiBmYWxzZTsKICAgICAgaWYgKGlkQ21wKGxhc3RbdWlkXSB8fCAiIiwgbWlkKSA+PSAwKSByZXR1cm4gZmFsc2U7CiAgICAgIHJldHVybiB0cnVlOwogICAgfTsKICAgIC8vIOajgOafpeaYr+S4jeaYr+acieS6uuacieW+ruWNmuW6lOW9k+WHuueOsOayoeWHuueOsAogICAgdmFyIHVwZGF0ZURvdCA9IGZ1bmN0aW9uICh1aWQpIHsKICAgICAgdmFyIG5vdGljZXMgPSAocmVjZW50c1t1aWRdIHx8IFtdKS5maWx0ZXIoZnVuY3Rpb24gKG1pZCkgeyByZXR1cm4gbWlkTm90aWNlKG1pZCwgdWlkKTsgfSk7CiAgICAgIGlmIChub3RpY2VzLmxlbmd0aCA9PT0gMCkgcmV0dXJuOwogICAgICB2YXIgZG90ID0gbGlzW3VpZF0ucXVlcnlTZWxlY3RvcignLldfbmV3Jyk7CiAgICAgIGlmIChub3RpY2VzLmxlbmd0aCkgewogICAgICAgIGlmIChkb3Quc3R5bGUuZGlzcGxheSA9PT0gJ2lubGluZS1ibG9jaycpIHJldHVybjsKICAgICAgICBkb3Quc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snOwogICAgICAgIHV0aWwuZGVidWcoIndlaWJvICVvIGJ5ICVvIG5vdCBzaG93biAobGFzdCA9ICVvKSIsIG5vdGljZXMsIHVpZCwgbGFzdFt1aWRdKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoZG90LnN0eWxlLmRpc3BsYXkgPT09ICdub25lJykgcmV0dXJuOwogICAgICAgIGRvdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICB9CiAgICB9OwogICAgdmFyIHVwZGF0ZUFsbCA9IChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBidXN5ID0gZmFsc2U7CiAgICAgIHJldHVybiBmdW5jdGlvbiB1cGRhdGVSaWdodFVzZXJMaXN0RG90KCkgewogICAgICAgIGlmIChidXN5KSByZXR1cm47IGJ1c3kgPSB0cnVlOwogICAgICAgIHV0aWwuZnVuYy5jYWxsKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGJ1c3kgPSBmYWxzZTsKICAgICAgICAgIHVzZXJzLmZvckVhY2godXBkYXRlRG90KTsKICAgICAgICB9KTsKICAgICAgfTsKICAgIH0oKSk7CgogICAgLy8g6K6w5b2V6aaW6aG15LiK5oiR6YO955yL6L+H5ZOq5Lqb5b6u5Y2aCiAgICB2YXIgcmFuZ2UgPSBbXTsKICAgIChmdW5jdGlvbiAoKSB7CiAgICAgIHJhbmdlID0gQXJyYXkuZnJvbSh0aGF0LnJlZi5fcmVjb3Jkcy5nZXRjb25mKCkgfHwgW10pOwogICAgICBvYnNlcnZlci53ZWliby5vbmxvYWQoZnVuY3Rpb24gKGZlZWQpIHsKICAgICAgICAvLyDov5nkuKrop4TliJnlj6rlnKjpppbpobXkuIrpgILnlKgKICAgICAgICBpZiAoIXV0aWwucGFnZS5ob21lKCkgfHwgIWRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmNvbnRhaW5zKCdGUkFNRV9tYWluJykpIHJldHVybiBbXTsKICAgICAgICBpZiAoZmVlZC5nZXRBdHRyaWJ1dGUoJ2ZlZWR0eXBlJykgPT09ICdhZCcpIHJldHVybjsKICAgICAgICB2YXIgbWlkID0gZmVlZC5nZXRBdHRyaWJ1dGUoJ21pZCcpOyBpZiAoIW1pZCkgcmV0dXJuOwogICAgICAgIHJhbmdlID0gQXJyYXkuZnJvbSh0aGF0LnJlZi5fcmVjb3Jkcy5nZXRjb25mKCkgfHwgW10pOwogICAgICAgIGlmIChyYW5nZS5pbmRleE9mKG1pZCkgIT09IC0xKSByZXR1cm47CiAgICAgICAgcmFuZ2UucHVzaChtaWQpOyByYW5nZSA9IHJhbmdlLnNvcnQoaWRDbXApOwogICAgICAgIHRoYXQucmVmLl9yZWNvcmRzLnB1dGNvbmYocmFuZ2Uuc2xpY2UoTWF0aC5tYXgocmFuZ2UubGVuZ3RoIC0gNTAwLCAwKSkpOwogICAgICAgIHVwZGF0ZUFsbCgpOwogICAgICB9KTsKICAgIH0oKSk7CgogICAgLy8g5oiR5Lus5Zyo5LiA5Liq5Lq655qE5Liq5Lq65Li76aG15LiK55yL5Yiw5LqG5ZOq5p2h5b6u5Y2aCiAgICAvLyDlpoLmnpzlt7Lnu4/lnKjkuKrkurrkuLvpobXkuIrnnIvov4fkuobpgqPkuYjkuIDmoLfkuI3lupTor6XmnInlsI/nuqLngrkKICAgIHZhciBsYXN0ID0gKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGxhc3QgPSB0aGF0LnJlZi5fbGFzdC5nZXRjb25mKCkgfHwge307CiAgICAgIG9ic2VydmVyLndlaWJvLm9ubG9hZChmdW5jdGlvbiAoZmVlZCkgewogICAgICAgIC8vIOi/meS4quinhOWImeWPquWcqOS4quS6uuS4u+mhtemAgueUqAogICAgICAgIGlmICh1dGlsLnBhZ2UuZGlzY292ZXJ5IHx8IHV0aWwucGFnZS5zZWFyY2gpIHJldHVybjsKICAgICAgICBpZiAoZmVlZC5nZXRBdHRyaWJ1dGUoJ2ZlZWR0eXBlJykgPT09ICdhZCcpIHJldHVybjsKICAgICAgICB2YXIgbWlkID0gZmVlZC5nZXRBdHRyaWJ1dGUoJ21pZCcpOyBpZiAoIW1pZCkgcmV0dXJuOwogICAgICAgIHZhciB1aWQgPSB3ZWliby5mZWVkLmF1dGhvci5pZChmZWVkKTsgaWYgKHVpZCkgcmV0dXJuOwogICAgICAgIHVpZCA9IHV0aWwuaW5mby5vaWQoKTsgaWYgKCF1aWQpIHJldHVybjsKICAgICAgICBpZiAobGlzdC5jb25mLmluZGV4T2YodWlkKSA9PT0gLTEpIHJldHVybjsKICAgICAgICBpZiAobGFzdFt1aWRdICYmIGlkQ21wKGxhc3RbdWlkXSwgbWlkKSA+PSAwKSByZXR1cm47CiAgICAgICAgbGFzdCA9IHRoYXQucmVmLl9sYXN0LmdldGNvbmYoKTsKICAgICAgICBsYXN0W3VpZF0gPSBtaWQ7CiAgICAgICAgdGhhdC5yZWYuX2xhc3QucHV0Y29uZihsYXN0KTsKICAgICAgfSk7CiAgICAgIHJldHVybiBsYXN0OwogICAgfSgpKTsKCiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCgovLyDmta7liqjlhYPntKAKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSgndG9vbCcsICdmaXhlZCcsICd7e2ZpeGVkSXRlbXNUaXRsZX19Jyk7CgovLyDlr7zoiKrmoI/oh6rliqjpmpDol48KZmlsdGVyLml0ZW1zLnRvb2wuZml4ZWQuaGlkZV9uYXZfYmFyID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdmaXhlZCcsCiAgJ3ZlcnNpb24nOiAzMDIsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLmhpZGVfbmF2X2JhcicsCiAgJ3RleHQnOiAne3tmbG9hdE5hdn19JywKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgYXR0ciA9ICd5YXdmLWZsb2F0JzsKICAgIHZhciB1cGRhdGVOYXZGbG9hdCA9IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIG5hdnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuV0JfZ2xvYmFsX25hdicpOwogICAgICBpZiAoIW5hdnMubGVuZ3RoKSByZXR1cm47CiAgICAgIC8vIOS9oOiDveebuOS/oeWQl++8n+WvvOiIquagj+S4jeS4gOWumuacieS4gOS4quOAguW+iOelnuWlh+eahOWRogogICAgICB2YXIgeSA9IHdpbmRvdy5zY3JvbGxZOwogICAgICBBcnJheS5mcm9tKG5hdnMpLmZvckVhY2goZnVuY3Rpb24gKG5hdikgewogICAgICAgIHZhciBmID0gbmF2Lmhhc0F0dHJpYnV0ZShhdHRyKSwgciA9IDQyOwogICAgICAgIGlmICh5IDwgciAmJiBmKSBuYXYucmVtb3ZlQXR0cmlidXRlKGF0dHIpOwogICAgICAgIGlmICh5ID49IHIgJiYgIWYpIG5hdi5zZXRBdHRyaWJ1dGUoYXR0ciwgJycpOwogICAgICB9KTsKICAgIH07CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB1cGRhdGVOYXZGbG9hdCk7CiAgICB1cGRhdGVOYXZGbG9hdCgpOwogICAgdXRpbC5jc3MuYWRkKHV0aWwuc3RyLmZpbGwodXRpbC5zdHIuY210KGZ1bmN0aW9uICgpIHsgLyohQ1NTCiAgICAgIC5XQl9nbG9iYWxfbmF2Om5vdChbe3thdHRyfX1dKSwgLldCX2dsb2JhbF9uYXZbe3thdHRyfX1dIHsgbWFyZ2luLXRvcDogLTUwcHg7IHRvcDogNTBweDsgYm94LXNoYWRvdzogbm9uZTsgfQogICAgICAuV0JfZ2xvYmFsX25hdlt7e2F0dHJ9fV0geyB0b3A6IDA7IHRyYW5zaXRpb246IHRvcCBlYXNlLWluLW91dCAwLjFzIDAuMzNzOyB9CiAgICAgIC5XQl9nbG9iYWxfbmF2W3t7YXR0cn19XTpob3ZlciB7IHRvcDogNTBweDsgdHJhbnNpdGlvbjogdG9wIGVhc2UtaW4tb3V0IDAuMXMgMHM7IH0KICAgICAgLldCX2dsb2JhbF9uYXZbe3thdHRyfX1dOjphZnRlciB7IGNvbnRlbnQ6ICIgIjsgd2lkdGg6IDEwMCU7IGhlaWdodDogOHB4OyBjbGVhcjogYm90aDsgZmxvYXQ6IGxlZnQ7IGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwgMCwgMCwgMC4zKSAwJSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCAxMDAlKTsgfQogICAgICAvLyDlm7rlrprlsI/pu4Tnrb7kvY3nva4KICAgICAgLldCX2dsb2JhbF9uYXZbe3thdHRyfX1dIC5nbl90b3BtZW51bGlzdF90aXBzIHsgcGFkZGluZy10b3A6IDUycHg7IHRyYW5zaXRpb246IHBhZGRpbmctdG9wIGVhc2UtaW4tb3V0IDAuMXMgMC4zM3M7IH0KICAgICAgLldCX2dsb2JhbF9uYXZbe3thdHRyfX1dOmhvdmVyIC5nbl90b3BtZW51bGlzdF90aXBzIHsgcGFkZGluZy10b3A6IDJweDsgdHJhbnNpdGlvbjogcGFkZGluZy10b3AgZWFzZS1pbi1vdXQgMC4xcyAwczsgfQogICAgICAuV0JfZ2xvYmFsX25hdlt7e2F0dHJ9fV0gLmduX3RvcG1lbnVsaXN0X3RpcHMgLmZpY29uX2Nsb3NlIHsgdG9wOiA1NnB4OyB0cmFuc2l0aW9uOiB0b3AgZWFzZS1pbi1vdXQgMC4xcyAwLjMzczsgfQogICAgICAuV0JfZ2xvYmFsX25hdlt7e2F0dHJ9fV06aG92ZXIgLmduX3RvcG1lbnVsaXN0X3RpcHMgLmZpY29uX2Nsb3NlIHsgdG9wOiA2cHg7IHRyYW5zaXRpb246IHRvcCBlYXNlLWluLW91dCAwLjFzIDBzOyB9CiAgICAqLyBub29wKCk7IH0pLnJlcGxhY2UoL1wvXC8uKlxuL2csICdcbicpLCB7ICdhdHRyJzogYXR0ciB9KSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOW3pui+ueagj+a1ruWKqApmaWx0ZXIuaXRlbXMudG9vbC5maXhlZC5maXhlZF9sZWZ0ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdmaXhlZCcsCiAgJ3ZlcnNpb24nOiAxNjAsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLmZpeGVkTGVmdCcsCiAgJ3RleHQnOiAne3tmaXhlZExlZnR9fScsCiAgJ2RlZmF1bHQnOiB0cnVlLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIC8vIOemgeeUqOW3puagj+a1ruWKqOeahOebuOWFs+S7o+eggeWcqCBmaXhlZF9yaWdodCDpgqPovrnlj6/ku6Xmib7liLAKICAgIC8vIOWmguaenOWQiOW5tuS6hui+ueagj++8jOmCo+S5iOS8muWboOS4uuemgeeUqOWPs+agj+a1ruWKqOiAjOWQjOaXtuemgeeUqOWcqOWPs+agj+mHjOmdoueahOW3puagjwogICAgLy8g6L+Z5pe25YCZ5bem5qCP5aaC5p6c6L+Y6KaB5rWu5Yqo77yM6YKj5LmI5bCx6KaB6YeN5paw6K6p5LuW5Yqo6LW35p2lCiAgICAvLyDov5nph4znmoTnqIvluo/mmK/kuLrkuoborqnlt6bmoI/lho3liqjotbfmnaXnmoQKICAgIGlmICghZmlsdGVyLml0ZW1zLnRvb2wuc2lkZWJhci5tZXJnZV9sZWZ0X3JpZ2h0LmNvbmYpIHJldHVybjsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgLldCX21haW5fciAuV0JfbWFpbl9sIHsgd2lsbC1jaGFuZ2U6IHNjcm9sbC1wb3NpdGlvbjsgfQogICAgICAuV0JfbWFpbl9yW3lhd2YtZml4ZWRdIC5XQl9tYWluX2wgeyBwb3NpdGlvbjogZml4ZWQ7IHRvcDogNjBweCAhaW1wb3J0YW50OyBvdmVyZmxvdzogaGlkZGVuOyBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDsgd2lkdGg6IDE1MHB4OyB9CiAgICAgIGJvZHlbeWF3Zi1tZXJnZS1sZWZ0XSAuV0JfbWFpbl9yW3lhd2YtZml4ZWRdIC5XQl9tYWluX2wgeyB3aWR0aDogMjI5cHg7IH0KICAgICovIG5vb3AoKTsgfSkpOwogICAgaWYgKGZpbHRlci5pdGVtcy50b29sLmZpeGVkLmhpZGVfbmF2X2Jhci5jb25mKSB7CiAgICAgICAgdXRpbC5jc3MuYWRkKCcuV0JfbWFpbl9yW3lhd2YtZml4ZWRdIC5XQl9tYWluX2wgeyB0b3A6IDEwcHggIWltcG9ydGFudDsgfScpOwogICAgfQoKICAgIC8vIOW9k+W3puS+p+S4jeWkn+mVv+aXtu+8jOmcgOimgea7muWKqOadoe+8jOabtOaWsOa7muWKqOadoeeahOeKtuaAgQogICAgdmFyIHVwZGF0ZVNjcm9sbCA9IGZ1bmN0aW9uICgpIHsKICAgICAgdXRpbC5mdW5jLnBhZ2UoZnVuY3Rpb24gKCkgewogICAgICAgIHdpbmRvdy4kWUFXRiQgPSB3aW5kb3cuJFlBV0YkIHx8IHt9OwogICAgICAgIGlmICghJFlBV0YkLnVwZGF0ZUxlZnRTY3JvbGwpICRZQVdGJC51cGRhdGVMZWZ0U2Nyb2xsID0gKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciB5ID0gU1RLLnNpenpsZSgnW25vZGUtdHlwZT0ibGVmdG5hdl9zY3JvbGwiXScpWzBdOwogICAgICAgICAgdmFyIGcgPSBTVEsudWkuc2Nyb2xsVmlldyh5KTsKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IGcucmVzZXQoKTsgfTsKICAgICAgICB9KCkpOwogICAgICAgICRZQVdGJC51cGRhdGVMZWZ0U2Nyb2xsKCk7CiAgICAgIH0pOwogICAgfTsKCiAgICAvLyDpmZDliLblt6bmoI/mnIDlpKfpq5jluqbvvIzpgb/lhY3otoXlh7rkuK3pl7TljLrln58KICAgIHZhciB1cGRhdGVNYXhIZWlnaHQgPSBmdW5jdGlvbiAobGVmdCwgbWF4SGVpZ2h0KSB7CiAgICAgIHZhciBub25lID0gbWF4SGVpZ2h0ID09IG51bGw7CiAgICAgIHZhciB0ZXh0ID0gbm9uZSA/ICdub25lJyA6IG1heEhlaWdodCArICdweCc7CiAgICAgIHZhciBzcmwgPSBsZWZ0LnF1ZXJ5U2VsZWN0b3IoJ1tub2RlLXR5cGU9ImxlZnRuYXZfc2Nyb2xsIl0nKTsKICAgICAgaWYgKCFzcmwpIHJldHVybjsKICAgICAgaWYgKChsZWZ0LnN0eWxlLm1heEhlaWdodCB8fCAnbm9uZScpICE9PSB0ZXh0KSB7CiAgICAgICAgbGVmdC5zdHlsZS5tYXhIZWlnaHQgPSB0ZXh0OwogICAgICAgIGlmIChub25lKSBzcmwuc2V0QXR0cmlidXRlKCdzdHlsZScsICcnKTsKICAgICAgICBlbHNlIHsKICAgICAgICAgIHZhciBsZXYgPSBBcnJheS5mcm9tKHNybC5xdWVyeVNlbGVjdG9yQWxsKCcubGV2X0JveCcpKTsKICAgICAgICAgIHZhciBjaCA9IGxldi5tYXAoZnVuY3Rpb24gKGxiKSB7IHJldHVybiBsYi5jbGllbnRIZWlnaHQ7IH0pLnJlZHVjZShmdW5jdGlvbiAoeCwgeSkgeyByZXR1cm4geCArIHk7IH0pOwogICAgICAgICAgdmFyIGhlaWdodCA9IE1hdGgubWluKG1heEhlaWdodCAtIHNybC5vZmZzZXRUb3AsIGNoKSArICdweCc7CiAgICAgICAgICBpZiAoc3JsLnN0eWxlLmhlaWdodCAhPT0gaGVpZ2h0KSB7CiAgICAgICAgICAgIHNybC5zdHlsZS5oZWlnaHQgPSBoZWlnaHQ7CiAgICAgICAgICAgIHNybC5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7CiAgICAgICAgICAgIGlmIChzcmwpIHVwZGF0ZVNjcm9sbCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfTsKCiAgICAvLyDmr4/lvZPmu5rliqjmu5rliqjmnaHmiJbosIPmlbTnqpflj6PlpKflsI/ml7bvvIzmm7TmlrDlt6bmoI/nirbmgIEKICAgIHZhciBmbG9hdGluZyA9IGZhbHNlOwogICAgdmFyIHVwZGF0ZVBvc2l0aW9uID0gZnVuY3Rpb24gdXBkYXRlTGVmdFBvc2l0aW9uKCkgewogICAgICB2YXIgbGVmdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy55YXdmLVdCX2xlZnRfbmF2Jyk7CiAgICAgIHZhciByZWZlcmVuY2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuV0JfbWFpbl9yJyk7CiAgICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcGxjX21haW4nKTsKICAgICAgaWYgKCFsZWZ0IHx8ICFyZWZlcmVuY2UpIHJldHVybjsKICAgICAgdmFyIHJlZmMgPSByZWZlcmVuY2UuZ2V0Q2xpZW50UmVjdHMoKTsKICAgICAgaWYgKCFyZWZjIHx8ICFyZWZjWzBdKSByZXR1cm47CiAgICAgIHZhciBwb3MgPSByZWZjWzBdOwogICAgICBpZiAoIWZsb2F0aW5nKSB7CiAgICAgICAgaWYgKHBvcy5ib3R0b20gPCAtNjApIHsKICAgICAgICAgIGZsb2F0aW5nID0gdHJ1ZTsKICAgICAgICAgIHJlZmVyZW5jZS5zZXRBdHRyaWJ1dGUoJ3lhd2YtZml4ZWQnLCAnJyk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGlmIChwb3MuYm90dG9tICsgbGVmdC5jbGllbnRIZWlnaHQgPiA2MCkgewogICAgICAgICAgZmxvYXRpbmcgPSBmYWxzZTsKICAgICAgICAgIHJlZmVyZW5jZS5yZW1vdmVBdHRyaWJ1dGUoJ3lhd2YtZml4ZWQnKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYgKGZsb2F0aW5nKSB7CiAgICAgICAgdmFyIGNpcCA9IGNvbnRhaW5lci5nZXRDbGllbnRSZWN0cygpWzBdOwogICAgICAgIHZhciBmaXAgPSBsZWZ0LmdldENsaWVudFJlY3RzKClbMF07CiAgICAgICAgdmFyIG5vX3NwYWNlID0gZmlsdGVyLml0ZW1zLnN0eWxlLnN3ZWliby5ub193ZWlib19zcGFjZS5jb25mOwogICAgICAgIHZhciBtYXhIZWlnaHRCb3R0b20gPSBjaXAuYm90dG9tIC0gZmlwLnRvcCArIChub19zcGFjZSA/IDAgOiAtMTApOwogICAgICAgIHZhciBtYXhIZWlnaHQgPSBNYXRoLm1heChNYXRoLm1pbihtYXhIZWlnaHRCb3R0b20sIHdpbmRvdy5pbm5lckhlaWdodCAtIDgwKSwgMCk7CiAgICAgICAgaWYgKGNpcCAmJiBmaXApIHVwZGF0ZU1heEhlaWdodChsZWZ0LCBtYXhIZWlnaHQpOwogICAgICB9IGVsc2UgeyB1cGRhdGVNYXhIZWlnaHQobGVmdCk7IH0KICAgIH07CgogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdXBkYXRlUG9zaXRpb24pOwogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHVwZGF0ZVBvc2l0aW9uKTsKICAgIG9ic2VydmVyLmRvbS5hZGQodXBkYXRlUG9zaXRpb24pOwogICAgdXBkYXRlUG9zaXRpb24oKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKLy8g5Y+z6L655qCP5rWu5YqoCmZpbHRlci5pdGVtcy50b29sLmZpeGVkLmZpeGVkX3JpZ2h0ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdmaXhlZCcsCiAgJ3ZlcnNpb24nOiAxNjAsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLmZpeGVkUmlnaHQnLAogICd0ZXh0JzogJ3t7Zml4ZWRSaWdodH19JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2ZpeGVkUmlnaHREZXNjfX0nIH0gfSwKICAnZGVmYXVsdCc6IHRydWUsCiAgJ2luaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgbWVyZ2UgPSBmaWx0ZXIuaXRlbXMudG9vbC5zaWRlYmFyLm1lcmdlX2xlZnRfcmlnaHQuY29uZjsKICAgIHZhciBmbGVmdCA9IGZpbHRlci5pdGVtcy50b29sLmZpeGVkLmZpeGVkX2xlZnQuY29uZjsKICAgIHZhciBmcmlnaHQgPSBmaWx0ZXIuaXRlbXMudG9vbC5maXhlZC5maXhlZF9yaWdodC5jb25mICYmICEobWVyZ2UgJiYgZmxlZnQpOwogICAgdmFyIGZvdGhlciA9IGZpbHRlci5pdGVtcy50b29sLmZpeGVkLmZpeGVkX290aGVycy5jb25mOwogICAgdmFyIGl0ZW1BdHRycyA9IFsnZml4ZWQtaXRlbScsICdmaXhlZC1ib3gnXTsKICAgIHZhciBjb250YWluZXJBdHRycyA9IFsnZml4ZWQtaW5ib3gnLCAnZml4ZWQtaWQnXTsKICAgIHZhciB3aXRoSW4gPSBbXTsKICAgIHZhciBxdWVyeVN0cmluZyA9IGZ1bmN0aW9uIChjbGFzc05hbWVzLCBhdHRyaWJ1dGVzKSB7CiAgICAgIHJldHVybiBjbGFzc05hbWVzLm1hcChmdW5jdGlvbiAoY2xhc3NOYW1lKSB7CiAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZXMubWFwKGZ1bmN0aW9uIChhdHRyaWJ1dGUpIHsKICAgICAgICAgIHJldHVybiBjbGFzc05hbWUgKyAnIFsnICsgYXR0cmlidXRlICsgJ10nOwogICAgICAgIH0pLmpvaW4oJywnKTsKICAgICAgfSkuam9pbignLCcpOwogICAgfTsKICAgIGlmICghZnJpZ2h0KSB3aXRoSW4ucHVzaCgnLldCX21haW5fcicpOwogICAgaWYgKCFmbGVmdCkgd2l0aEluLnB1c2goJy5XQl9tYWluX2wnKTsKICAgIGlmICghZm90aGVyKSB7IHdpdGhJbi5wdXNoKCcuV0JfZnJhbWVfYicsICcuV0JfZnJhbWVfYycpOyB9CiAgICBpZiAod2l0aEluLmxlbmd0aCA9PT0gMCkgcmV0dXJuOwogICAgdmFyIHJlbW92ZUZpeGVkID0gZnVuY3Rpb24gcmVtb3ZlUmlnaHRGaXhlZCgpIHsKICAgICAgdmFyIGl0ZW1RdWVyeSA9IHF1ZXJ5U3RyaW5nKHdpdGhJbiwgaXRlbUF0dHJzKTsKICAgICAgdmFyIGl0ZW1zID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGl0ZW1RdWVyeSkpOwogICAgICBpdGVtcy5mb3JFYWNoKGZ1bmN0aW9uIChmaXhlZCkgewogICAgICAgIHZhciB4ID0gZml4ZWQuY2xvbmVOb2RlKHRydWUpOwogICAgICAgIGl0ZW1BdHRycy5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyKSB7IHgucmVtb3ZlQXR0cmlidXRlKGF0dHIpOyB9KTsKICAgICAgICBmaXhlZC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZCh4LCBmaXhlZCk7CiAgICAgIH0pOwogICAgICB2YXIgY29udGFpbmVyUXVlcnkgPSBxdWVyeVN0cmluZyh3aXRoSW4sIGNvbnRhaW5lckF0dHJzKTsKICAgICAgdmFyIGNvbnRhaW5lcnMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29udGFpbmVyUXVlcnkpKTsKICAgICAgY29udGFpbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChjb250YWluZXIpIHsKICAgICAgICB2YXIgeCA9IGNvbnRhaW5lci5jbG9uZU5vZGUodHJ1ZSk7CiAgICAgICAgY29udGFpbmVyQXR0cnMuZm9yRWFjaChmdW5jdGlvbiAoYXR0cikgeyB4LnJlbW92ZUF0dHJpYnV0ZShhdHRyKTsgfSk7CiAgICAgICAgdmFyIHBhcmVudCA9IGNvbnRhaW5lci5wYXJlbnROb2RlOwogICAgICAgIHZhciBwcmV2ID0gcGFyZW50LnByZXZpb3VzRWxlbWVudFNpYmxpbmc7CiAgICAgICAgdmFyIGhhZFdyYXBlZCA9IHBhcmVudC5zdHlsZS53aWxsQ2hhbmdlICYmIHByZXYgJiYgcHJldi5pbm5lckhUTUwgPT09ICcnOwogICAgICAgIHZhciByZXBsYWNlVGFyZ2V0ID0gaGFkV3JhcGVkID8gcGFyZW50IDogY29udGFpbmVyOwogICAgICAgIGlmIChoYWRXcmFwZWQpIHByZXYucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChwcmV2KTsKICAgICAgICByZXBsYWNlVGFyZ2V0LnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHgsIHJlcGxhY2VUYXJnZXQpOwogICAgICB9KTsKICAgIH07CiAgICByZW1vdmVGaXhlZCgpOwogICAgb2JzZXJ2ZXIuZG9tLmFkZChyZW1vdmVGaXhlZCk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOaWsOW+ruWNmuaPkOekuua1ruWKqApmaWx0ZXIuaXRlbXMudG9vbC5maXhlZC5maXhlZF9uZXdfZmVlZF90aXAgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2ZpeGVkJywKICAndmVyc2lvbic6IDE4MywKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuZml4ZWROZXdGZWVkVGlwJywKICAndGV4dCc6ICd7e2ZpeGVkTmV3RmVlZFRpcH19JywKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdXBkYXRlUG9zaXRpb24gPSBmdW5jdGlvbiB1cGRhdGVOZXdGZWVkVGlwUG9zaXRpb24oKSB7CiAgICAgIHZhciB0aXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaG9tZV9uZXdfZmVlZF90aXAsIFt5YXdmLWlkPSJob21lX25ld19mZWVkX3RpcCJdJyk7IGlmICghdGlwKSByZXR1cm47CiAgICAgIHZhciBmZWVkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5XQl9mZWVkJyk7CiAgICAgIHZhciBwb3MgPSBudWxsLCBmaXhlZCA9IGZhbHNlOwogICAgICB0cnkgeyBwb3MgPSBmZWVkcy5nZXRDbGllbnRSZWN0cygpWzBdLnRvcDsgfSBjYXRjaCAoZSkgeyByZXR1cm47IH0KICAgICAgdmFyIHJlYWRpbmcgPSBkb2N1bWVudC5ib2R5Lmhhc0F0dHJpYnV0ZSgneWF3Zi13ZWliby1vbmx5Jyk7CiAgICAgIGZpeGVkID0gcG9zIDwgKHJlYWRpbmcgPyAzNSA6IDkwKTsKICAgICAgaWYgKHRpcC5oYXNBdHRyaWJ1dGUoJ3lhd2YtZml4ZWQnKSA9PSBmaXhlZCkgcmV0dXJuOwogICAgICBpZiAoZml4ZWQpIHRpcC5zZXRBdHRyaWJ1dGUoJ3lhd2YtZml4ZWQnLCAnJyk7CiAgICAgIGVsc2UgdGlwLnJlbW92ZUF0dHJpYnV0ZSgneWF3Zi1maXhlZCcpOwogICAgfTsKICAgIHVwZGF0ZVBvc2l0aW9uKCk7CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB1cGRhdGVQb3NpdGlvbik7CiAgICBvYnNlcnZlci5kb20uYWRkKHVwZGF0ZVBvc2l0aW9uKTsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgW3lhd2YtaWQ9ImhvbWVfbmV3X2ZlZWRfdGlwIl1beWF3Zi1maXhlZF0sICNob21lX25ld19mZWVkX3RpcFt5YXdmLWZpeGVkXSB7IGRpc3BsYXk6IGJsb2NrOyBwb3NpdGlvbjogZml4ZWQ7IHRvcDogNjZweDsgd2lkdGg6IDYwMHB4OyBwYWRkaW5nLXRvcDogMDsgei1pbmRleDogOTk5ODsgfQogICAgICBbeWF3Zi1pZD0iaG9tZV9uZXdfZmVlZF90aXAiXVt5YXdmLWZpeGVkXSArIC5XQl9mZWVkLCAjaG9tZV9uZXdfZmVlZF90aXBbeWF3Zi1maXhlZF0gKyAuV0JfZmVlZCB7IG1hcmdpbi10b3A6IDQwcHg7IH0KICAgICovIG5vb3AoKTsgfSkpOwogIH0KfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCmZpbHRlci5pdGVtcy50b29sLmZpeGVkLmZpeGVkX290aGVycyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnZml4ZWQnLAogICd2ZXJzaW9uJzogMTYwLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5maXhlZE90aGVycycsCiAgJ3RleHQnOiAne3tmaXhlZE90aGVyc319JywKICAnZGVmYXVsdCc6IHRydWUsCn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDlvq7ljZrnm7jlhbPlt6XlhbcKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSgndG9vbCcsICd3ZWlib3Rvb2wnLCAne3t3ZWlib1Rvb2xzVGl0bGV9fScpOwoKLy8g6Ieq5Yqo5bGV5byA5a2X5pWw5LiN5aSa55qE5b6u5Y2aCmZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5hdXRvX3VuZm9sZF93ZWlibyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnd2VpYm90b29sJywKICAndmVyc2lvbic6IDMyMCwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuYXV0b191bmZvbGRfd2VpYm8nLAogICd0ZXh0JzogJ3t7dW5mb2xkTG9uZ1dlaWJvfX0nLAogICdyZWYnOiB7CiAgICAnY291bnQnOiB7ICd0eXBlJzogJ3JhbmdlJywgJ21pbic6IDE0MCwgJ21heCc6IDIwMDAsICdzdGVwJzogMTAsICdkZWZhdWx0JzogMjAwIH0sCiAgICAnYnInOiB7ICd0eXBlJzogJ3JhbmdlJywgJ21pbic6IDEsICdtYXgnOiA2MCwgJ3N0ZXAnOiAxLCAnZGVmYXVsdCc6IDMwIH0sCiAgfSwKICAnaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIC8vIOe7meW3sue7j+WxleW8gOi/h+eahO+8iOaIluivleWbvuWxleW8gOi/h+eahO+8ieW+ruWNmuagh+iusAogICAgdmFyIG1hcmtVbmZvbGRlZCA9IGZ1bmN0aW9uIChmZWVkKSB7CiAgICAgIGZlZWQuc2V0QXR0cmlidXRlKCd5YXdmLXVuZm9sZGxvbmcnLCAnJyk7CiAgICB9OwogICAgLy8g5aaC5p6c6K6+572u5LiN5YWB6K646ISa5pys5bGV5byA77yM6YKj5LmI5bCx55u05o6l5omT5LiK5qCH6K6w54S25ZCO57uT5p2fCiAgICBpZiAoIXRoaXMuY29uZikgewogICAgICBvYnNlcnZlci53ZWliby5vbmxvYWQoZnVuY3Rpb24gKGZlZWQpIHsgbWFya1VuZm9sZGVkKGZlZWQpOyB9KTsKICAgICAgcmV0dXJuOwogICAgfQogICAgdmFyIGNvdW50ID0gdGhpcy5yZWYuY291bnQuY29uZiwgYnIgPSB0aGlzLnJlZi5ici5jb25mOwogICAgbmV0d29yay53ZWliby5sb25ndGV4dC5zZXRNYXhMZW5ndGgoY291bnQsIGJyKTsKICAgIC8vIOWboOS4uuaIkeS7rOS/ruaUueS6huW+ruWNmueahOWGheWuue+8jOaJgOS7pemcgOimgeagh+iusOW+ruWNmuS4uuWwmuacqui/h+a7pOi/h++8jOmHjeaWsOi/m+ihjOi/h+a7pAogICAgdmFyIHJlc2V0V2VpYm8gPSBmdW5jdGlvbiAoZmVlZCkgewogICAgICBtYXJrVW5mb2xkZWQoZmVlZCk7CiAgICAgIHZhciBwbGFjZWhvbGRlciA9IHV0aWwuZG9tLmNyZWF0ZSgnZGl2JywgJycpLCBwYXJlbnQgPSBmZWVkLnBhcmVudE5vZGU7CiAgICAgIGlmICghcGFyZW50KSByZXR1cm47CiAgICAgIHBhcmVudC5yZXBsYWNlQ2hpbGQocGxhY2Vob2xkZXIsIGZlZWQpOwogICAgICBmZWVkLnJlbW92ZUF0dHJpYnV0ZSgneWF3Zi1kaXNwbGF5Jyk7CiAgICAgIGZlZWQucmVtb3ZlQXR0cmlidXRlKCd5YXdmLXdlaWJvJyk7IC8vIEZJWE1FIOi/meagt+S8muiuqei/h+a7pOWZqOmHjeaWsOi1sO+8jOS9huaYr+S5n+S8muiuqeaXoOWFs+eahOS4nOilv+i1sOS4pOmBjQogICAgICBwYXJlbnQucmVwbGFjZUNoaWxkKGZlZWQsIHBsYWNlaG9sZGVyKTsKICAgIH07CiAgICAvLyDmr4/mnaHlvq7ljZrlnKjov4fmu6TlkI7lho3mianlsZXlhajmlofvvIzlr4TluIzmnJvkuo7lj6/ku6XpooTlhYjpmpDol4/mjonkuIDkupsKICAgIG9ic2VydmVyLndlaWJvLmFmdGVyKGZ1bmN0aW9uIChmZWVkKSB7CiAgICAgIGlmIChmZWVkLmhhc0F0dHJpYnV0ZSgneWF3Zi11bmZvbGRsb25nJykpIHJldHVybjsKICAgICAgdmFyIHJ1bm5pbmcgPSAwOwogICAgICB2YXIgdW5mb2xkID0gQXJyYXkuZnJvbShmZWVkLnF1ZXJ5U2VsZWN0b3JBbGwoJ1thY3Rpb24tdHlwZT0iZmxfdW5mb2xkIl0nKSk7CiAgICAgIHVuZm9sZC5mb3JFYWNoKGZ1bmN0aW9uIChidXR0b24pIHsKICAgICAgICB2YXIgbWlkID0gdXRpbC5zdHIucGFyc2VxdWVyeShidXR0b24uZ2V0QXR0cmlidXRlKCdhY3Rpb24tZGF0YScpKS5taWQ7CiAgICAgICAgcnVubmluZysrOwogICAgICAgIG5ldHdvcmsud2VpYm8ubG9uZ3RleHQobWlkLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgaWYgKCFkYXRhKSByZXR1cm47IC8vIOiOt+WPluWksei0pQogICAgICAgICAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykgeyAvLyBkYXRhOiDlhoXlrrkKICAgICAgICAgICAgYnV0dG9uLnBhcmVudE5vZGUuaW5uZXJIVE1MID0gZGF0YTsKICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YSAvIDEwMCkgeyAvLyBkYXRhOiDplb/luqYKICAgICAgICAgICAgYnV0dG9uLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQgKz0gdXRpbC5zdHIuZmlsbCgne3t7dW5mb2xkV2VpYm9MZW5ndGh9fX0nLAogICAgICAgICAgICAgIHsgJ2xlbmd0aCc6IGRhdGEgPiAxMDAwID8gTWF0aC5yb3VuZChkYXRhIC8gMTAwKSArICcwMCcgOiBNYXRoLnJvdW5kKGRhdGEgLyAxMCkgKyAnMCcgfSk7CiAgICAgICAgICB9CiAgICAgICAgICBpZiAoLS1ydW5uaW5nID09PSAwKSByZXNldFdlaWJvKGZlZWQpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0pOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDmuIXpmaTlj5HluIPmoYbkuK3nmoTpu5jorqTor53popggKHdjZikKZmlsdGVyLml0ZW1zLnRvb2wud2VpYm90b29sLmNsZWFyX2RlZl90b3BpYyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnd2VpYm90b29sJywKICAndmVyc2lvbic6IDM2LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5jbGVhcl9kZWZfdG9waWMnLAogICd0ZXh0JzogJ3t7Y2xlYXJEZWZUb3BpY0Rlc2N9fScsCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIGNsZWFyRGVmVG9waWMgPSBmdW5jdGlvbiBjbGVhckRlZmF1bHRUb3BpYygpIHsKICAgICAgdmFyIGlucHV0Qm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Y2X3BsX2NvbnRlbnRfcHVibGlzaGVydG9wIC5zZW5kX3dlaWJvIC5pbnB1dCB0ZXh0YXJlYScpOwogICAgICBpZiAoaW5wdXRCb3ggJiYgaW5wdXRCb3guaGFzQXR0cmlidXRlKCdob3R0b3BpYycpKSB7CiAgICAgICAgaW5wdXRCb3gucmVtb3ZlQXR0cmlidXRlKCdob3R0b3BpYycpOyBpbnB1dEJveC5yZW1vdmVBdHRyaWJ1dGUoJ2hvdHRvcGljaWQnKTsKICAgICAgICBpbnB1dEJveC52YWx1ZSA9ICdEVU1NWSc7IGlucHV0Qm94LmZvY3VzKCk7CiAgICAgICAgaW5wdXRCb3gudmFsdWUgPSAnJzsgaW5wdXRCb3guYmx1cigpOwogICAgICB9CiAgICB9OwogICAgb2JzZXJ2ZXIuZG9tLmFkZChjbGVhckRlZlRvcGljKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKLy8g5Liq5Lq65Li76aG16buY6K6k5pi+56S65YWo6YOo5b6u5Y2aCmZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5yZWRpcmVjdF93ZWlibyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnd2VpYm90b29sJywKICAndmVyc2lvbic6IDMwMSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wucmVkaXJlY3RXZWlibycsCiAgJ3RleHQnOiAne3twZXJzb25hbFJlZGlyZWN0V2VpYm99fScsCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgLy8g6YGH6KeB5pi+56S655qE5piv54Ot6Zeo55qE77yM6Ieq5Yqo6Lez6L2s5Yiw5YWo6YOo5Y67CiAgICB2YXIgdXBkYXRlTG9jYXRpb24gPSBmdW5jdGlvbiByZWRpcmVjdFBlcnNpb25hbFdlaWJvUmVkaXJlY3QoKSB7CiAgICAgIHZhciBwcm9maWxlTmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2lkXj0iUGxfT2ZmaWNpYWxfUHJvZmlsZUZlZWROYXYiXScpOwogICAgICBpZiAoIXByb2ZpbGVOYXYpIHJldHVybjsKICAgICAgdmFyIGhvdEJ1dHRvbiA9IHByb2ZpbGVOYXYucXVlcnlTZWxlY3RvcignbGlbYWN0aW9uLXR5cGU9InNlYXJjaF90eXBlIl1bYWN0aW9uLWRhdGEqPSJpc19ob3Q9MSJdOm5vdChbYWN0aW9uLWRhdGEqPSJ5YXdmX25vdGFsbD0xIl0pJyk7CiAgICAgIGlmIChob3RCdXR0b24pIGhvdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FjdGlvbi1kYXRhJywgaG90QnV0dG9uLmdldEF0dHJpYnV0ZSgnYWN0aW9uLWRhdGEnKSArICcmeWF3Zl9ub3RhbGw9MScpOwogICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmluZGV4T2YoJ2lzX2hvdD0xJykgIT09IC0xICYmIGxvY2F0aW9uLnNlYXJjaC5pbmRleE9mKCd5YXdmX25vdGFsbD0xJykgPT09IC0xKSB7CiAgICAgICAgdmFyIGFsbCA9IHByb2ZpbGVOYXYucXVlcnlTZWxlY3RvcignbGlbYWN0aW9uLXR5cGU9InNlYXJjaF90eXBlIl1bYWN0aW9uLWRhdGEqPSJpc19hbGw9MSJdJyk7CiAgICAgICAgdmFyIGEgPSB1dGlsLmRvbS5jcmVhdGUoJ2EnLCAnJyk7IGEuaHJlZiA9IGxvY2F0aW9uLmhyZWY7IGEuc2VhcmNoID0gYWxsLmdldEF0dHJpYnV0ZSgnYWN0aW9uLWRhdGEnKTsgYS5oYXNoID0gJyNfMCc7CiAgICAgICAgaGlzdG9yeS5wdXNoU3RhdGUoJ1lBV0ZfJyArIG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgJ18nICsgKE1hdGgucmFuZG9tKCkgKyAnJykuc2xpY2UoMiksIG51bGwsIGEuaHJlZik7CiAgICAgICAgYWxsLmNsaWNrKCk7CiAgICAgIH0KICAgIH07CiAgICBvYnNlcnZlci5kb20uYWRkKHVwZGF0ZUxvY2F0aW9uKTsKICAgIC8vIOaKiuaMh+WQkeeUqOaIt+S4u+mhteeahOmTvuaOpemDveWKoOS4gOS4qiBpc19hbGwg5bGe5oCn77yM54K56L+H5Y675bCx5Y+v5Lul55yB5Y675LiA5qyh6Lez6L2sCiAgICB2YXIgdXBkYXRlVXNlckxpbmtzV2l0aElzQWxsID0gZnVuY3Rpb24gdXBkYXRlVXNlckxpbmtzV2l0aElzQWxsKCkgewogICAgICB2YXIgbGlua3MgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoWwogICAgICAgICdhW3VzZXJjYXJkXScsIC8vIOS4gOiIrOeahOeUqOaIt+mTvuaOpQogICAgICAgICcuV0JfZmFjZSBhJywgLy8g5b6u5Y2a55So5oi35aS05YOP77yIdXNlcmNhcmTliqDlnKjpk77mjqXph4zpnaLnmoTlm77niYfkuIrkuobvvIkKICAgICAgICAnLnBpY19ib3ggYVtzdWRhLXVhdHJhY2sqPSJ1c2VyX3BpYyJdJywgLy8g5Y2V5p2h5b6u5Y2a5LiK5pa555qE55So5oi3CiAgICAgICAgJy5XQl9hcnRpY2FsIC5tYWluX2VkaXRvciAuYXV0aG9yaW5mbyBhJywgLy8g5aS05p2h5paH56ug55qE5L2c6ICF5L+h5oGvCiAgICAgICAgJy53ZWJpbV9jaGF0X3dpbmRvdyAuY2hhdF90aXRsZSBhW25vZGUtdHlwZT0iX2NoYXRVc2VyTmFtZSJdJywgLy8g6IGK5aSp56qX5Y+j5LiK55qE55So5oi35ZCNCiAgICAgIF0ubWFwKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4ICsgJ1tocmVmXTpub3QoW2hyZWYqPSJpc19hbGwiXSknOyB9KS5qb2luKCcsJykpKTsKICAgICAgbGlua3MuZm9yRWFjaChmdW5jdGlvbiAobCkgewogICAgICAgIHZhciBzID0gdXRpbC5zdHIucGFyc2VxdWVyeShsLnNlYXJjaC5zbGljZSgxKSk7CiAgICAgICAgcy5pc19hbGwgPSAnMSc7CiAgICAgICAgbC5zZWFyY2ggPSB1dGlsLnN0ci50b3F1ZXJ5KHMpOwogICAgICB9KTsKICAgIH07CiAgICBvYnNlcnZlci5kb20uYWRkKHVwZGF0ZVVzZXJMaW5rc1dpdGhJc0FsbCk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCgovLyDkvb/nlKjljaHniYfmjInpkq7mm7/mjaLlr7nlupTpk77mjqUKZmlsdGVyLml0ZW1zLnRvb2wud2VpYm90b29sLmNhcmRfYnV0dG9uID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICd3ZWlib3Rvb2wnLAogICd2ZXJzaW9uJzogMTgyLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5jYXJkQnV0dG9uJywKICAndGV4dCc6ICd7e2NhcmRCdXR0b259fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tjYXJkQnV0dG9uRGVzY319JyB9IH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIGZpeGVkID0gW107CiAgICB2YXIga2V5dmFscyA9IGZ1bmN0aW9uIChzKSB7CiAgICAgIHJldHVybiBzLmZpbHRlcihmdW5jdGlvbiAoeCkgeyByZXR1cm4gIXgubWF0Y2goL15jbGlja18vKTsgfSk7CiAgICB9OwogICAgdmFyIHN1YnNldCA9IGZ1bmN0aW9uICh4LCB5KSB7CiAgICAgIHJldHVybiB4LmV2ZXJ5KGZ1bmN0aW9uIChpKSB7IHJldHVybiB5LmluZGV4T2YoaSkgIT09IC0xOyB9KTsKICAgIH07CiAgICB2YXIgZml4QnV0dG9uID0gZnVuY3Rpb24gKGZlZWQpIHsKICAgICAgaWYgKGZpeGVkLmluZGV4T2YoZmVlZCkgIT09IC0xKSByZXR1cm47IGZpeGVkLnB1c2goZmVlZCk7CiAgICAgIHZhciBsaW5rcyA9IEFycmF5LmZyb20oZmVlZC5xdWVyeVNlbGVjdG9yQWxsKCdbYWN0aW9uLXR5cGU9ImZlZWRfbGlzdF91cmwiXScpKTsKICAgICAgdmFyIGJ1dHRvbnMgPSBBcnJheS5mcm9tKGZlZWQucXVlcnlTZWxlY3RvckFsbCgnLm1lZGlhX2JveCBbZXhwLWRhdGEqPSJrZXk9dGJsb2dfd2VpYm9jYXJkIl0gLldfZnIgLldfYnRuX2EnKSk7CiAgICAgIHZhciB0dGFydGljbGVzID0gQXJyYXkuZnJvbShmZWVkLnF1ZXJ5U2VsZWN0b3JBbGwoJy5tZWRpYV9ib3ggW2FjdGlvbi10eXBlPSJ3aWRnZXRfYXJ0aWNsZUxheWVyIl0nKSk7CiAgICAgIC8vIOavj+S4qumTvuaOpe+8jOajgOafpeaYr+WQpuacieWvueW6lOeahOaMiemSrgogICAgICBsaW5rcy5mb3JFYWNoKGZ1bmN0aW9uIChsaW5rKSB7CiAgICAgICAgdmFyIGxhdHRyID0gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8uZ2V0QXR0cmlidXRlKCdzdWRhLXVhdHJhY2snKSB8fCAnJzsgfTsKICAgICAgICB2YXIgYmF0dHIgPSBmdW5jdGlvbiAobykgeyByZXR1cm4gby5nZXRBdHRyaWJ1dGUoJ2FjdGlvbi1kYXRhJykgfHwgJyc7IH07CiAgICAgICAgdmFyIHRhdHRyID0gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8uZ2V0QXR0cmlidXRlKCdzdWRhLXVhdHJhY2snKSB8fCAnJzsgfTsKICAgICAgICB2YXIgaW5mbyA9IGxhdHRyKGxpbmspOyBpZiAoIWluZm8pIHJldHVybjsKICAgICAgICBpbmZvID0gdXRpbC5zdHIucGFyc2VxdWVyeShpbmZvKTsKICAgICAgICB2YXIgaW5mb3ZhbCA9IGtleXZhbHMoaW5mby52YWx1ZS5zcGxpdCgnOicpKTsKICAgICAgICAvLyDmo4Dmn6XkuIDkuKrog73ngrnlh7vnmoTkuJzopb/mmK/kuI3mmK/lr7nlupTov5nkuKrpk77mjqUKICAgICAgICB2YXIgdmFsaWRUYXJnZXQgPSBmdW5jdGlvbiAoYXJnKSB7CiAgICAgICAgICBpZiAoIWFyZyB8fCAhYXJnLnZhbHVlKSByZXR1cm4gZmFsc2U7CiAgICAgICAgICB2YXIgdmFsdWVzID0ga2V5dmFscyhhcmcudmFsdWUuc3BsaXQoJzonKSk7CiAgICAgICAgICAvLyDopoHmsYIga2V5IOS4gOagtwogICAgICAgICAgaWYgKGFyZy5rZXkgIT09IGluZm8ua2V5KSByZXR1cm4gZmFsc2U7CiAgICAgICAgICAvLyDogIzkuJTmiYDmnIkgdmFsdWUg5Lmf5a+55bqUCiAgICAgICAgICByZXR1cm4gc3Vic2V0KGluZm92YWwsIHZhbHVlcykgfHwgc3Vic2V0KHZhbHVlcywgaW5mb3ZhbCk7CiAgICAgICAgfTsKICAgICAgICAvLyDmo4Dmn6Xmr4/kuKrmjInpkq7mmK/lkKbkuI7ku5blr7nlupQKICAgICAgICB2YXIgYnV0dG9uID0gYnV0dG9ucy5maWx0ZXIoZnVuY3Rpb24gKGJ1dHRvbikgewogICAgICAgICAgdmFyIGFyZyA9IHV0aWwuc3RyLnBhcnNlcXVlcnkoYmF0dHIoYnV0dG9uKSkgfHwge307CiAgICAgICAgICByZXR1cm4gdmFsaWRUYXJnZXQoYXJnKTsKICAgICAgICB9KVswXTsKICAgICAgICB2YXIgdHRhcnRpY2xlID0gdHRhcnRpY2xlcy5maWx0ZXIoZnVuY3Rpb24gKHR0YXJ0aWNsZSkgewogICAgICAgICAgdmFyIGFyZyA9IHV0aWwuc3RyLnBhcnNlcXVlcnkodGF0dHIodHRhcnRpY2xlKSkgfHwge307CiAgICAgICAgICByZXR1cm4gdmFsaWRUYXJnZXQoYXJnKTsKICAgICAgICB9KVswXTsKICAgICAgICB2YXIgdGFyZ2V0ID0gYnV0dG9uIHx8IHR0YXJ0aWNsZSB8fCBudWxsOwogICAgICAgIHV0aWwuZGVidWcoJ2xpbmsgJW8gLT4gdGFyZ2V0ICVvJywgbGluaywgdGFyZ2V0KTsKICAgICAgICBpZiAoIXRhcmdldCkgcmV0dXJuOwogICAgICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgdGFyZ2V0LmNsaWNrKCk7CiAgICAgICAgfSk7CiAgICAgICAgdmFyIHRleHQgPSB0YXJnZXQgPT09IGJ1dHRvbiA/IGJ1dHRvbi50ZXh0Q29udGVudCA6IG51bGw7CiAgICAgICAgaWYgKHRleHQpIGxpbmsuaW5zZXJ0QmVmb3JlKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdbJyArIHRleHQgKyAnXScpLCBsaW5rLnF1ZXJ5U2VsZWN0b3IoJy5XX2ZpY29uJykubmV4dFNpYmxpbmcpOwogICAgICB9KTsKICAgIH07CiAgICBvYnNlcnZlci53ZWliby5hZnRlcihmaXhCdXR0b24pOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDmn6XnnIvlpKflm77ml4Hmt7vliqDmn6XnnIvljp/lm77pk77mjqUKOyAoZnVuY3Rpb24gKCkgewoKICB2YXIgaW1nUGFnZSA9IGZ1bmN0aW9uIChpbmZvKSB7CiAgICB2YXIgaHRtbCA9IHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUhUTUwKICAgICAgPCFET0NUWVBFIGh0bWw+CiAgICAgIDxodG1sPgogICAgICA8aGVhZD48bWV0YSBjaGFyc2V0PSJVVEYtOCIgLz48dGl0bGU+e3t2aWV3T3JpZ2luYWxUaXRsZX19PC90aXRsZT48c3R5bGU+CiAgICAgICAgYm9keSwgI2Nob3NlIHsgYmFja2dyb3VuZDogIzIyMjsgfQogICAgICAgIGJvZHksIGJvZHkgKiB7IC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7IC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7IHVzZXItc2VsZWN0OiBub25lOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IH0KICAgICAgICAjdmlld2VyIHsgYmFja2dyb3VuZDogaHNsKDAsIDAlLCA5MCUpOyB9CiAgICAgICAgLm5vcm1hbCAjdmlld2VyIHsgd2lkdGg6IGF1dG87IGhlaWdodDogYXV0bzsgY3Vyc29yOiBhdXRvOyB9CiAgICAgICAgLm92ZXIgI3ZpZXdlci5sYXJnZSB7IHdpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87IGN1cnNvcjogem9vbS1vdXQ7IH0KICAgICAgICAub3ZlciAjdmlld2VyLmZpdCB7IG1heC13aWR0aDogMTAwdnc7IG1heC1oZWlnaHQ6IGNhbGMoMTAwJSAtIDIwcHgpOyBjdXJzb3I6IHpvb20taW47IH0KICAgICAgICAjY29udGFpbmVyIHsgdG9wOiAwOyBvdmVyZmxvdzogYXV0bzsgd2lkdGg6IDEwMHZ3OyBoZWlnaHQ6IGNhbGMoMTAwdmggLSAxMDFweCk7IH0KICAgICAgICAjY29udGFpbmVyLmxlZnQsICNjb250YWluZXIubGVmdCAjdmlld2VyIHsgY3Vyc29yOiB1cmwoImh0dHBzOi8vaW1nLnQuc2luYWpzLmNuL3Q2L3N0eWxlL2ltYWdlcy9jb21tb24vcGljX3ByZXYuY3VyIiksIGF1dG87IH0KICAgICAgICAjY29udGFpbmVyLnJpZ2h0LCAjY29udGFpbmVyLnJpZ2h0ICN2aWV3ZXIgeyBjdXJzb3I6IHVybCgiaHR0cHM6Ly9pbWcudC5zaW5hanMuY24vdDYvc3R5bGUvaW1hZ2VzL2NvbW1vbi9waWNfbmV4dC5jdXIiKSwgYXV0bzsgfQogICAgICAgIC5zaW5nbGUgI2NvbnRhaW5lciwgLnNpbmdsZSAjaW1nYXJlYSB7IGhlaWdodDogMTAwdmg7IH0KICAgICAgICAjaW1nYXJlYSB7IGRpc3BsYXk6IHRhYmxlLWNlbGw7IHBvc2l0aW9uOiByZWxhdGl2ZTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogMTAwdnc7IGhlaWdodDogY2FsYygxMDB2aCAtIDEwMXB4KTsgfQogICAgICAgICNjaG9zZSB7IHBvc2l0aW9uOiBmaXhlZDsgY2xlYXI6IGJvdGg7IHdpZHRoOiAxMDAlOyBib3R0b206IDA7IGhlaWdodDogMTAwcHg7IG92ZXJmbG93OiBhdXRvOyBvdmVyZmxvdy14OiBoaWRkZW47IGJvcmRlci10b3A6IDFweCBzb2xpZCAjYWFhOyB9CiAgICAgICAgLnNpbmdsZSAjY2hvc2UgeyBkaXNwbGF5OiBub25lOyB9CiAgICAgICAgI2Nob3NlIGEgeyBkaXNwbGF5OiBibG9jazsgaGVpZ2h0OiA4MHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiA4MHB4OyBmbG9hdDogbGVmdDsgbWFyZ2luOiAxMHB4OyB9CiAgICAgICAgI2Nob3NlIGEuY3VycmVudCB7IG91dGxpbmU6IDJweCBzb2xpZCByZWQ7IH0KICAgICAgICAjY2hvc2UgaW1nIHsgbWF4LWhlaWdodDogODBweDsgbWF4LXdpZHRoOiA4MHB4OyB9CiAgICAgICAgQC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpIHsKICAgICAgICAgIGJvZHkgeyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoImNocm9tZTovL2dsb2JhbC9za2luL21lZGlhL2ltYWdlZG9jLWRhcmtub2lzZS5wbmciKTsgIH0KICAgICAgICAgICN2aWV3ZXIgeyBiYWNrZ3JvdW5kOiBoc2woMCwgMCUsIDkwJSkgdXJsKCJjaHJvbWU6Ly9nbG9iYWwvc2tpbi9tZWRpYS9pbWFnZWRvYy1saWdodG5vaXNlLnBuZyIpIHJlcGVhdCBzY3JvbGwgMCAwOyB9CiAgICAgICAgfQogICAgICA8L3N0eWxlPjxzY3JpcHQ+dmFyIGluZm8gPSB7e2luZm99fTs8L3NjcmlwdD48L2hlYWQ+CiAgICAgIDxib2R5PjxkaXYgaWQ9ImNvbnRhaW5lciIgdGFiaW5kZXg9IjEiPjxkaXYgaWQ9ImltZ2FyZWEiIHRhYmluZGV4PSItMSI+PGltZyBpZD0idmlld2VyIiBjbGFzcz0ibGFyZ2UiIC8+PC9kaXY+PC9kaXY+PGRpdiBpZD0iY2hvc2UiIHRhYmluZGV4PSItMSI+PHNjcmlwdD4KICAgICAgICBpbmZvLmltYWdlcy5mb3JFYWNoKGZ1bmN0aW9uIChpbWFnZSwgaSkgewogICAgICAgICAgdmFyIHVybCA9IGltYWdlLnJlcGxhY2UoL2xhcmdlLywgJ3NxdWFyZScpOwogICAgICAgICAgZG9jdW1lbnQud3JpdGUoJzxhIGlkPSJpbWcnICsgaSArICciIGhyZWY9ImphdmFzY3JpcHQ6OyIgb25jbGljaz0icmV0dXJuIGdvdG8oJyArIGkgKyAnKSAmJiBmYWxzZSI+PGltZyBzcmM9IicgKyB1cmwgKyAnIj48L2E+Jyk7CiAgICAgICAgfSk7CiAgICAgIDwvc2NyaXB0PjwvZGl2PjxzY3JpcHQ+CiAgICAgICAgZnVuY3Rpb24gcmVzaXplKCkgewogICAgICAgICAgdmFyIHdpZHRoID0gdmlld2VyLm5hdHVyYWxXaWR0aDsKICAgICAgICAgIHZhciBoZWlnaHQgPSB2aWV3ZXIubmF0dXJhbEhlaWdodDsKICAgICAgICAgIGlmICh3aWR0aCA+IGNvbnRhaW5lci5jbGllbnRXaWR0aCB8fCBoZWlnaHQgPiBjb250YWluZXIuY2xpZW50SGVpZ2h0KSBpbWdhcmVhLmNsYXNzTmFtZSA9ICdvdmVyJzsKICAgICAgICAgIGVsc2UgaW1nYXJlYS5jbGFzc05hbWUgPSAnbm9ybWFsJzsKICAgICAgICAgIGZvY3VzKCk7CiAgICAgICAgfQogICAgICAgIGZ1bmN0aW9uIHNob3coKSB7CiAgICAgICAgICB2YXIgdXJsID0gaW5mby5pbWFnZXNbaW5mby5jdXJyZW50XTsKICAgICAgICAgIGlmICh2aWV3ZXIuc3JjID09PSB1cmwpIHJldHVybjsKICAgICAgICAgIHZpZXdlci5zcmMgPSAnJzsKICAgICAgICAgIHZpZXdlci5zcmMgPSB1cmw7CiAgICAgICAgICBjb250YWluZXIuc2Nyb2xsVG9wID0gMDsKICAgICAgICAgIGNvbnRhaW5lci5zY3JvbGxMZWZ0ID0gMDsKICAgICAgICAgIEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI2Nob3NlIGEnKSkuZm9yRWFjaChmdW5jdGlvbiAoYSkgewogICAgICAgICAgICBpZiAoYS5pZCA9PT0gJ2ltZycgKyBpbmZvLmN1cnJlbnQpIGEuY2xhc3NOYW1lID0gJ2N1cnJlbnQnOwogICAgICAgICAgICBlbHNlIGEuY2xhc3NOYW1lID0gJyc7CiAgICAgICAgICB9KTsKICAgICAgICAgIGZvY3VzKCk7CiAgICAgICAgfQogICAgICAgIGZ1bmN0aW9uIGZvY3VzKCkgeyBjb250YWluZXIuZm9jdXMoKTsgfQogICAgICAgIGlmIChpbmZvLmltYWdlcy5sZW5ndGggPT09IDEpIGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lID0gJ3NpbmdsZSc7CiAgICAgICAgZnVuY3Rpb24gcHJldkltZygpIHsgZ290byhpbmZvLmN1cnJlbnQgLSAxKTsgfQogICAgICAgIGZ1bmN0aW9uIG5leHRJbWcoKSB7IGdvdG8oaW5mby5jdXJyZW50ICsgMSk7IH0KICAgICAgICBmdW5jdGlvbiBnb3RvKG4pIHsKICAgICAgICAgIHdoaWxlIChuIDwgMCkgbiArPSBpbmZvLmltYWdlcy5sZW5ndGg7CiAgICAgICAgICBuID0gbiAlIGluZm8uaW1hZ2VzLmxlbmd0aDsKICAgICAgICAgIGluZm8uY3VycmVudCA9IG47CiAgICAgICAgICBzaG93KCk7CiAgICAgICAgfQogICAgICAgIGZ1bmN0aW9uIGNoZWNrTFIoeCkgewogICAgICAgICAgaWYgKGluZm8uaW1hZ2VzLmxlbmd0aCA9PT0gMSkgcmV0dXJuICdtaWQnOwogICAgICAgICAgdmFyIHBvcyA9ICdtaWQnLCB3ID0gY29udGFpbmVyLmNsaWVudFdpZHRoOwogICAgICAgICAgaWYgKHggPCAxMDAgJiYgeCA8IHcgKiAwLjIpIHBvcyA9ICdsZWZ0JzsKICAgICAgICAgIGlmICh4ID4gdyAtIDEwMCAmJiB4ID4gdyAqIDAuOCkgcG9zID0gJ3JpZ2h0JzsKICAgICAgICAgIGlmIChjb250YWluZXIuY2xhc3NOYW1lICE9PSBwb3MpIGNvbnRhaW5lci5jbGFzc05hbWUgPSBwb3M7CiAgICAgICAgICByZXR1cm4gcG9zOwogICAgICAgIH0KICAgICAgICBmdW5jdGlvbiBpbml0RXZlbnRzKCkgewogICAgICAgICAgdmlld2VyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsgc2hvdygpOyBzZXRUaW1lb3V0KHJlc2l6ZSwgMCk7IH07CiAgICAgICAgICBpbWdhcmVhLm9ubW91c2Vtb3ZlID0gZnVuY3Rpb24gKGUpIHsgY2hlY2tMUihlLmNsaWVudFgpOyB9OwogICAgICAgICAgaW1nYXJlYS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIHZhciBwb3MgPSBjaGVja0xSKGUuY2xpZW50WCk7CiAgICAgICAgICAgIGlmIChwb3MgPT09ICdsZWZ0JykgcHJldkltZygpOyBlbHNlIGlmIChwb3MgPT09ICdyaWdodCcpIG5leHRJbWcoKTsgZWxzZSByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICAgICAgZm9jdXMoKTsKICAgICAgICAgIH0sIHRydWUpOwogICAgICAgICAgdmlld2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoaW1nYXJlYS5jbGFzc05hbWUgPT09ICdub3JtYWwnKSByZXR1cm47CiAgICAgICAgICAgIGlmICh2aWV3ZXIuY2xhc3NOYW1lID09PSAnbGFyZ2UnKSB2aWV3ZXIuY2xhc3NOYW1lID0gJ2ZpdCc7CiAgICAgICAgICAgIGVsc2Ugdmlld2VyLmNsYXNzTmFtZSA9ICdsYXJnZSc7CiAgICAgICAgICB9KTsKICAgICAgICAgIHdpbmRvdy5vbnJlc2l6ZSA9IHJlc2l6ZTsKICAgICAgICAgIHdpbmRvdy5vbmtleWRvd24gPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICB2YXIga2V5ID0gZS5rZXlDb2RlLCBuID0ga2V5ICYgMTU7CiAgICAgICAgICAgIGlmIChrZXkgPT09IDMzKSBwcmV2SW1nKCk7IGVsc2UgaWYgKGtleSA9PT0gMzQpIG5leHRJbWcoKTsKICAgICAgICAgICAgZWxzZSBpZiAoWzQ4LCA5Nl0uaW5kZXhPZihrZXkgJiAtMTYpICE9PSAtMSkgewogICAgICAgICAgICAgIGlmIChuID4gMCAmJiBuIDw9IGluZm8uaW1hZ2VzLmxlbmd0aCkgZ290byhuIC0gMSk7CiAgICAgICAgICAgIH0gZWxzZSByZXR1cm47CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgIH07CiAgICAgICAgICB3aW5kb3cub25sb2FkID0gZnVuY3Rpb24gKCkgeyBzaG93KCk7IGZvY3VzKCk7IH07CiAgICAgICAgICBjb250YWluZXIub25ibHVyID0gZnVuY3Rpb24gKCkgeyBzZXRUaW1lb3V0KGZvY3VzLCAwKTsgfTsKICAgICAgICB9CiAgICAgICAgaW5pdEV2ZW50cygpOwogICAgICA8L3NjcmlwdD48L2JvZHk+CiAgICAgIDwvaHRtbD4KICAgICovIG5vb3AoKTsgfSkuc3BsaXQoJ1xuJykubWFwKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LnRyaW0oKTsgfSkuam9pbignXG4nKTsKICAgIHJldHVybiB1dGlsLnN0ci5maWxsKGh0bWwsIHsgJ2luZm8nOiBKU09OLnN0cmluZ2lmeShpbmZvKSB9KTsKICB9OwoKICB2YXIgZm9yRWFjaEVsZW1lbnRBdHRyID0gZnVuY3Rpb24gKGF0dHIpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoc2VsZWN0b3JzLCBjYWxsYmFjaykgewogICAgICB2YXIgc2VsZWN0b3IgPSBzZWxlY3RvcnMubWFwKGZ1bmN0aW9uIChzKSB7IHJldHVybiBzICsgJzpub3QoWycgKyBhdHRyICsgJ10pJzsgfSkuam9pbignLCcpOwogICAgICB2YXIgZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTsKICAgICAgZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHIsICcnKTsKICAgICAgICBjYWxsYmFjayhlbGVtZW50KTsKICAgICAgfSk7CiAgICB9OwogIH07CgogIHZhciBnZXRJbWFnZVNyYyA9IGZ1bmN0aW9uIChpbWcpIHsKICAgIGlmIChpbWcuaGFzQXR0cmlidXRlKCd5YXdmLXBhdXNlLWFuaW1hdGUnKSkgcmV0dXJuIGltZy5nZXRBdHRyaWJ1dGUoJ29yaS1zcmMnKTsKICAgIHJldHVybiBpbWcuc3JjOwogIH07CgogIHZhciBnZXRPcmlnaW5hbFVybCA9IGZ1bmN0aW9uIChzcmMpIHsKICAgIHZhciBob3N0ID0gdXRpbC5zdHIuaG9zdChzcmMpLCBmaWxlbmFtZSA9IHNyYy5tYXRjaCgvXC8oW15cL10qKSQvKVsxXTsKICAgIHZhciB1cmwgPSBbbG9jYXRpb24ucHJvdG9jb2wsICcvLycsIGhvc3QsICcvbGFyZ2UvJywgZmlsZW5hbWVdLmpvaW4oJycpOwogICAgcmV0dXJuIHVybDsKICB9OwoKICB2YXIgZ2V0SW5mbyA9IGZ1bmN0aW9uIChyZWYpIHsKICAgIHZhciBjb250YWluZXIsIGltZ3MsIGltZzsKICAgIGlmICh1dGlsLmRvbS5tYXRjaGVzKHJlZiwgJy5XQl9kZXRhaWwgLldCX2V4cGFuZF9tZWRpYSAqJykpIHsKICAgICAgLy8g5bey57uP5bGV5byA6K+m5oOF55qE5Zu+54mHCiAgICAgIGNvbnRhaW5lciA9IHV0aWwuZG9tLmNsb3Nlc3QocmVmLCAnLldCX2RldGFpbCcpOwogICAgICBpbWdzID0gQXJyYXkuZnJvbShjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLldCX21lZGlhX3dyYXAgLldCX3BpYyBpbWcnKSk7CiAgICAgIGltZyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcubWVkaWFfc2hvd19ib3ggaW1nJykgfHwKICAgICAgICBjb250YWluZXIucXVlcnlTZWxlY3RvcignLmN1cnJlbnQgaW1nJyk7CiAgICAgIC8vIGZhbGx0aHJvdWdoCiAgICB9IGVsc2UgaWYgKHV0aWwuZG9tLm1hdGNoZXMocmVmLCAnLldCX2V4cGFuZF9tZWRpYSAudGFiX2ZlZWRfYSAqJykpIHsKICAgICAgLy8g5bey57uP5bGV5byA6K+m5oOF55qE6K+E6K666YWN5Zu+CiAgICAgIGNvbnRhaW5lciA9IHV0aWwuZG9tLmNsb3Nlc3QocmVmLCAnLldCX2V4cGFuZF9tZWRpYScpOwogICAgICBpbWcgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLmFydHdvcmtfYm94IGltZycpOwogICAgICBpbWdzID0gW2ltZ107CiAgICAgIC8vIGZhbGx0aHJvdWdoCiAgICB9IGVsc2UgaWYgKHV0aWwuZG9tLm1hdGNoZXMocmVmLCAnLldCX21lZGlhX3dyYXAgLldCX3BpYycpKSB7CiAgICAgIC8vIOayoeacieWxleW8gOivpuaDheeahOWbvueJhwogICAgICBjb250YWluZXIgPSB1dGlsLmRvbS5jbG9zZXN0KHJlZiwgJy5XQl9tZWRpYV93cmFwJyk7CiAgICAgIGltZ3MgPSBBcnJheS5mcm9tKGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcuV0JfcGljIGltZycpKTsKICAgICAgaW1nID0gcmVmLnF1ZXJ5U2VsZWN0b3IoJ2ltZycpOwogICAgICAvLyBmYWxsdGhyb3VnaAogICAgfSBlbHNlIGlmIChyZWYuZ2V0QXR0cmlidXRlKCdpbWFnZWNhcmQnKSkgewogICAgICB2YXIgcGlkID0gdXRpbC5zdHIucGFyc2VxdWVyeShyZWYuZ2V0QXR0cmlidXRlKCdpbWFnZWNhcmQnKSkucGlkOwogICAgICByZXR1cm4geyBpbWFnZXM6IFsnaHR0cHM6Ly93eDEuc2luYWltZy5jbi9sYXJnZS8nICsgcGlkICsgJy5qcGcnXSwgY3VycmVudDogMCB9OwogICAgfSBlbHNlIGlmIChyZWYuaHJlZiAmJiByZWYuaHJlZi5pbmRleE9mKCdqYXZhc2NyaXB0OicpID09PSAtMSkgewogICAgICByZXR1cm4geyBpbWFnZXM6IFtyZWYuaHJlZl0sIGN1cnJlbnQ6IDAgfTsKICAgIH0gZWxzZSBpZiAocmVmLnNyYykgewogICAgICByZXR1cm4geyBpbWFnZXM6IFtyZWYuaHJlZl0sIGN1cnJlbnQ6IDAgfTsKICAgIH0gZWxzZSByZXR1cm4gbnVsbDsKICAgIHZhciBpbWFnZXMgPSBpbWdzLm1hcChmdW5jdGlvbiAoaW1nKSB7CiAgICAgIHZhciBzcmMgPSBnZXRJbWFnZVNyYyhpbWcpOwogICAgICByZXR1cm4gZ2V0T3JpZ2luYWxVcmwoc3JjKTsKICAgIH0pOwogICAgdmFyIHBpZCA9IGltZyAmJiBnZXRJbWFnZVNyYyhpbWcpLm1hdGNoKC9bXi8uXSooPz0oPzpcLlteLy5dKik/JCkvKVswXTsKICAgIHZhciBjdXJyZW50OwogICAgZm9yIChjdXJyZW50ID0gMDsgY3VycmVudCA8IGltYWdlcy5sZW5ndGg7IGN1cnJlbnQrKykgewogICAgICBpZiAoaW1hZ2VzW2N1cnJlbnRdLmluZGV4T2YocGlkKSAhPT0gLTEpIGJyZWFrOwogICAgfQogICAgcmV0dXJuIHsgaW1hZ2VzOiBpbWFnZXMsIGN1cnJlbnQ6IGN1cnJlbnQgJSBpbWFnZXMubGVuZ3RoIH07CiAgfTsKCiAgdmFyIGdldElkID0gZnVuY3Rpb24gKGl0ZW0pIHsKICAgIHZhciBjb250YWluZXIgPSB1dGlsLmRvbS5jbG9zZXN0KGl0ZW0sICdbbWlkXSwgW29taWRdLCBbY29tbWVudF9pZF0nKTsKICAgIHJldHVybiBjb250YWluZXIuZ2V0QXR0cmlidXRlKCdjb21tZW50X2lkJykgfHwKICAgICAgdXRpbC5kb20uY2xvc2VzdChpdGVtLCAnLldCX2ZlZWRfZXhwYW5kJykgJiYgY29udGFpbmVyLmdldEF0dHJpYnV0ZSgnb21pZCcpIHx8CiAgICAgIGNvbnRhaW5lci5nZXRBdHRyaWJ1dGUoJ21pZCcpIHx8IDA7CiAgfTsKCiAgZmlsdGVyLml0ZW1zLnRvb2wud2VpYm90b29sLnZpZXdfb3JpZ2luYWwgPSBmaWx0ZXIuaXRlbSh7CiAgICAnZ3JvdXAnOiAnbWVkaWF0b29sJywKICAgICd2ZXJzaW9uJzogNDc1LAogICAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgICAna2V5JzogJ3dlaWJvLnRvb2wudmlld09yaWdpbmFsJywKICAgICd0ZXh0JzogJ3t7dmlld09yaWdpbmFsfX0nLAogICAgJ3JlZic6IHsKICAgICAgJ29wZW4nOiB7CiAgICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgICAnZGVmYXVsdCc6ICdwYWdlJywKICAgICAgICAnc2VsZWN0JzogWwogICAgICAgICAgeyAndmFsdWUnOiAncGFnZScsICd0ZXh0JzogJ3t7dmlld09yaWdpbmFsUGFnZX19JyB9LAogICAgICAgICAgeyAndmFsdWUnOiAnaW1hZ2UnLCAndGV4dCc6ICd7e3ZpZXdPcmlnaW5hbEltYWdlfX0nIH0sCiAgICAgICAgXSwKICAgICAgfSwKICAgICAgJ2RpcmVjdCc6IHsgJ3R5cGUnOiAnYm9vbGVhbicgfSwKICAgICAgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3t2aWV3T3JpZ2luYWxEZXNjfX0nIH0sCiAgICAgIC8vIOmakOiXj+iuvue9rumhue+8iOayoeacieeVjOmdou+8iQogICAgICAvLyBkZWZhdWx0IOm7mOiupO+8iD1vcGVu77yJCiAgICAgIC8vIG9wZW4g5L2/55SoIHdpbmRvdy5vcGVuCiAgICAgIC8vIGdtYmcsIGdtZmcg5L2/55SoIEdNX29wZW5JblRhYgogICAgICAvLyBvcGVuYnIg5L2/55SoIHdpbmRvdy5vcGVuKCdhYm91dDpibGFuaycpLmxvY2F0aW9uCiAgICAgICdtZXRob2QnOiB7CiAgICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgICAnZGVmYXVsdCc6ICdkZWZhdWx0JywKICAgICAgICAnc2VsZWN0JzogWydkZWZhdWx0JywgJ29wZW4nLCAnZ21iZycsICdnbWZnJywgJ29wZW5iciddLm1hcChmdW5jdGlvbiAodGV4dCkgewogICAgICAgICAgcmV0dXJuIHsgJ3ZhbHVlJzogdGV4dCwgJ3RleHQnOiB0ZXh0IH07CiAgICAgICAgfSksCiAgICAgIH0sCiAgICAgIC8vIOmakOiXj+iuvue9rumhue+8iOayoeacieeVjOmdou+8iQogICAgICAvLyBkZWZhdWx0IOm7mOiupO+8iD1ibG9i77yJCiAgICAgIC8vIGRhdGEsIGJsb2Ig5L2/55So5ZOq56eN5Y2P6K6uCiAgICAgICd1cmwnOiB7CiAgICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgICAnZGVmYXVsdCc6ICdkZWZhdWx0JywKICAgICAgICAnc2VsZWN0JzogWydkZWZhdWx0JywgJ2RhdGEnLCAnYmxvYiddLm1hcChmdW5jdGlvbiAodGV4dCkgewogICAgICAgICAgcmV0dXJuIHsgJ3ZhbHVlJzogdGV4dCwgJ3RleHQnOiB0ZXh0IH07CiAgICAgICAgfSksCiAgICAgIH0sCiAgICB9LAogICAgJ2luaXQnOiBmdW5jdGlvbiAoKSB7CiAgICAgIHV0aWwuY29uZmlnLm9ucHV0KHRoaXMucmVmLmRpcmVjdC5rZXksIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgIGlmICghdmFsdWUpIHJldHVybjsKICAgICAgICBmaWx0ZXIuaXRlbXMudG9vbC53ZWlib3Rvb2wuZG93bmxvYWRfaW1hZ2UucmVmLmRpcmVjdC5wdXRjb25mKGZhbHNlKTsKICAgICAgfSk7CiAgICB9LAogIH0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgogIGZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5kb3dubG9hZF9pbWFnZSA9IGZpbHRlci5pdGVtKHsKICAgICdncm91cCc6ICdtZWRpYXRvb2wnLAogICAgJ3ZlcnNpb24nOiA0NzUsCiAgICAndHlwZSc6ICdib29sZWFuJywKICAgICdrZXknOiAnd2VpYm8udG9vbC5kb3dubG9hZEltYWdlJywKICAgICd0ZXh0JzogJ3t7ZG93bmxvYWRJbWFnZX19JywKICAgICdyZWYnOiB7CiAgICAgICdkaXJlY3QnOiB7ICd0eXBlJzogJ2Jvb2xlYW4nIH0sCiAgICAgICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7ZG93bmxvYWRJbWFnZURlc2N9fScgfSwKICAgIH0sCiAgICAnaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgICAgdXRpbC5jb25maWcub25wdXQodGhpcy5yZWYuZGlyZWN0LmtleSwgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuOwogICAgICAgIGZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC52aWV3X29yaWdpbmFsLnJlZi5kaXJlY3QucHV0Y29uZihmYWxzZSk7CiAgICAgIH0pOwoKICAgICAgdmFyIGRvd25sb2FkID0gZmlsdGVyLml0ZW1zLnRvb2wud2VpYm90b29sLmRvd25sb2FkX2ltYWdlOwogICAgICB2YXIgb3JpZ2luYWwgPSBmaWx0ZXIuaXRlbXMudG9vbC53ZWlib3Rvb2wudmlld19vcmlnaW5hbDsKCiAgICAgIHZhciBoYXNEb3dubG9hZCA9IGRvd25sb2FkLmNvbmY7CiAgICAgIHZhciBoYXNPcmlnaW5hbCA9IG9yaWdpbmFsLmNvbmY7CiAgICAgIGlmICghaGFzRG93bmxvYWQgJiYgIWhhc09yaWdpbmFsKSByZXR1cm47CgogICAgICB2YXIgb3JpZ2luYWxEaXJlY3QgPSBvcmlnaW5hbC5yZWYuZGlyZWN0LmNvbmY7CiAgICAgIHZhciBkb3dubG9hZERpcmVjdCA9IGRvd25sb2FkLnJlZi5kaXJlY3QuY29uZjsKICAgICAgdmFyIHVzZVBhZ2UgPSBvcmlnaW5hbC5yZWYub3Blbi5jb25mID09PSAncGFnZSc7CiAgICAgIHZhciBtZXRob2QgPSBvcmlnaW5hbC5yZWYubWV0aG9kLmNvbmY7CiAgICAgIHZhciB1cmxUeXBlID0gb3JpZ2luYWwucmVmLnVybC5jb25mOwogICAgICBpZiAobWV0aG9kID09PSAnZGVmYXVsdCcpIG1ldGhvZCA9ICdvcGVuJzsKICAgICAgaWYgKHVybFR5cGUgPT09ICdkZWZhdWx0JykgdXJsVHlwZSA9ICdibG9iJzsKCiAgICAgIHZhciBzaG93UGFnZSA9IGZ1bmN0aW9uIChpbmZvKSB7CiAgICAgICAgaWYgKCFpbmZvKSByZXR1cm47CiAgICAgICAgdmFyIHVybDsKICAgICAgICBpZiAodXNlUGFnZSkgewogICAgICAgICAgdmFyIGh0bWwgPSBpbWdQYWdlKGluZm8pOwogICAgICAgICAgaWYgKHVybFR5cGUgPT09ICdibG9iJykgewogICAgICAgICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtodG1sXSwgeyB0eXBlOiAndGV4dC9odG1sJyB9KTsKICAgICAgICAgICAgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHVybCA9ICdkYXRhOnRleHQvaHRtbDtiYXNlNjQsJyArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGh0bWwpKSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHVybCA9IGluZm8uaW1hZ2VzW2luZm8uY3VycmVudF07CiAgICAgICAgfQogICAgICAgICh7CiAgICAgICAgICAnb3BlbmJyJzogZnVuY3Rpb24gKHVybCkgewogICAgICAgICAgICB2YXIgd2luID0gd2luZG93Lm9wZW4oJ2Fib3V0OmJsYW5rJyk7CiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyB3aW4ubG9jYXRpb24gPSB1cmw7IH0sIDApOwogICAgICAgICAgfSwKICAgICAgICAgICdvcGVuJzogZnVuY3Rpb24gKHVybCkgeyB3aW5kb3cub3Blbih1cmwpOyB9LAogICAgICAgICAgJ2dtYmcnOiBmdW5jdGlvbiAodXJsKSB7IEdNX29wZW5JblRhYih1cmwsIHRydWUpOyB9LAogICAgICAgICAgJ2dtZmcnOiBmdW5jdGlvbiAodXJsKSB7IEdNX29wZW5JblRhYih1cmwsIGZhbHNlKTsgfSwKICAgICAgICB9W21ldGhvZF0odXJsKSk7CiAgICAgICAgaWYgKHVybFR5cGUgPT09ICdibG9iJykgewogICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7IFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTsgfSwgMzAwMCk7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgdmFyIGRvd25sb2FkSW1hZ2VzID0gZnVuY3Rpb24gKGlkLCBpbmZvLCBsaW5rKSB7CiAgICAgICAgaWYgKCFpbmZvKSByZXR1cm47CiAgICAgICAgaWYgKGxpbmsgJiYgbGluay5oYXNBdHRyaWJ1dGUoJ3lhd2YtZG93bmxvYWRpbmcnKSkgcmV0dXJuOwogICAgICAgIGlmIChsaW5rKSB7CiAgICAgICAgICBsaW5rLnF1ZXJ5U2VsZWN0b3IoJy55YXdmLXRleHQnKS50ZXh0Q29udGVudCA9IHRleHQuZG93bmxvYWRJbWFnZURvd25sb2FkaW5nOwogICAgICAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ3lhd2YtZG93bmxvYWRpbmcnLCAnJyk7CiAgICAgICAgfQogICAgICAgIHZhciB1cmxzID0gaW5mby5pbWFnZXMsIGNvdW50ID0gdXJscy5sZW5ndGg7CiAgICAgICAgdmFyIGZpbGVzID0gQXJyYXkoY291bnQpOwogICAgICAgIHVybHMuZm9yRWFjaChmdW5jdGlvbiAodXJsLCBpbmRleCkgewogICAgICAgICAgdXRpbC54aHIoewogICAgICAgICAgICAnbWV0aG9kJzogJ0dFVCcsCiAgICAgICAgICAgICd1cmwnOiB1cmwsCiAgICAgICAgICAgICdyZXNwb25zZVR5cGUnOiAnYXJyYXlidWZmZXInLAogICAgICAgICAgICAnb25sb2FkJzogZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgICAgICAgICB2YXIgbXRpbWUgPSAocmVzcC5yZXNwb25zZUhlYWRlcnMubWF0Y2goL15MYXN0LU1vZGlmaWVkOiAoLiopJC9taSkgfHwgW10pWzFdOwogICAgICAgICAgICAgIHZhciBleHRlbnNpb24gPSB1cmwubWF0Y2goLyhcLlteLl0qKSQvKVsxXTsKICAgICAgICAgICAgICBmaWxlc1tpbmRleF0gPSB7CiAgICAgICAgICAgICAgICBmaWxlbmFtZTogKGluZGV4ICsgMSkgKyBleHRlbnNpb24sCiAgICAgICAgICAgICAgICBjb250ZW50OiByZXNwLnJlc3BvbnNlLAogICAgICAgICAgICAgICAgbXRpbWU6IG5ldyBEYXRlKG10aW1lIHx8IERhdGUubm93KCkpLAogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgaWYgKC0tY291bnQpIHJldHVybjsKICAgICAgICAgICAgICBkb3dubG9hZFN1Y2Nlc3MoaWQpOwogICAgICAgICAgICB9LAogICAgICAgICAgICAnb25lcnJvcic6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBkb3dubG9hZEZhaWwoKTsKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIHZhciBkb3dubG9hZERvbmUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAobGluaykgewogICAgICAgICAgICBsaW5rLnF1ZXJ5U2VsZWN0b3IoJy55YXdmLXRleHQnKS50ZXh0Q29udGVudCA9IHRleHQuZG93bmxvYWRJbWFnZVRleHQ7CiAgICAgICAgICAgIGxpbmsucmVtb3ZlQXR0cmlidXRlKCd5YXdmLWRvd25sb2FkaW5nJyk7CiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICB2YXIgZmFpbCA9IGZhbHNlOwogICAgICAgIHZhciBkb3dubG9hZEZhaWwgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAoZmFpbCkgcmV0dXJuOwogICAgICAgICAgZmFpbCA9IHRydWU7CiAgICAgICAgICB1dGlsLnVpLmFsZXJ0KCd5YXdmLWRvd25sb2FkLWltYWdlcy1mYWlsJywgewogICAgICAgICAgICAndGl0bGUnOiB1dGlsLnN0ci5maWxsKCd7e2Rvd25sb2FkSW1hZ2VzRmFpbFRpdGxlfX0nKSwKICAgICAgICAgICAgJ3RleHQnOiB1dGlsLnN0ci5maWxsKCd7e2Rvd25sb2FkSW1hZ2VzRmFpbFRleHR9fScpLAogICAgICAgICAgICAnaWNvbic6ICdlcnJvcicKICAgICAgICAgIH0pOwogICAgICAgICAgZG93bmxvYWREb25lKCk7CiAgICAgICAgfTsKICAgICAgICB2YXIgZG93bmxvYWRTdWNjZXNzID0gZnVuY3Rpb24gKGlkKSB7CiAgICAgICAgICB2YXIgdGFyYmFsbCA9IHV0aWwudGFyYmFsbC5maWxlcyhmaWxlcyk7CiAgICAgICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFt0YXJiYWxsXSwgeyB0eXBlOiAnYXBwbGljYXRpb24veC10YXInIH0pOwogICAgICAgICAgdmFyIHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7CiAgICAgICAgICB2YXIgYSA9IHV0aWwuZG9tLmNyZWF0ZSgnYScsICcnKTsKICAgICAgICAgIGEuaHJlZiA9IHVybDsKICAgICAgICAgIGEuc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsICd3ZWliby0nICsgaWQgKyAnLWltYWdlcy50YXInKTsKICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSk7CiAgICAgICAgICBhLmNsaWNrKCk7CiAgICAgICAgICB1dGlsLmZ1bmMuY2FsbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTsKICAgICAgICAgICAgZG93bmxvYWREb25lKCk7CiAgICAgICAgICB9KTsKICAgICAgICB9OwogICAgICB9OwoKICAgICAgdmFyIGZvckVhY2hFbGVtZW50ID0gZm9yRWFjaEVsZW1lbnRBdHRyKCd5YXdmLXZpZXctb3JpJyk7CgogICAgICAvLyDmt7vliqDmn6XnnIvljp/lm77nmoTpk77mjqUKICAgICAgdmFyIGFkZFZpZXdPcmlnaW5hbExpbmsgPSBmdW5jdGlvbiAocmVmKSB7CiAgICAgICAgaWYgKCFoYXNPcmlnaW5hbCkgcmV0dXJuOwogICAgICAgIHZhciB2b2wgPSB1dGlsLmRvbS5jcmVhdGUoJ3VsJywgdXRpbC5zdHIuZmlsbChodG1sLnZpZXdPcmlnaW5hbExpbmspKTsKICAgICAgICB2YXIgbGluayA9IHZvbC5xdWVyeVNlbGVjdG9yKCdhJyk7CiAgICAgICAgdmFyIGxpID0gdXRpbC5kb20uY2xvc2VzdChyZWYsICdsaScpOwogICAgICAgIHdoaWxlICh2b2wuZmlyc3RDaGlsZCkgbGkucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodm9sLmZpcnN0Q2hpbGQsIGxpKTsKICAgICAgICByZXR1cm4gbGluazsKICAgICAgfTsKCiAgICAgIC8vIOa3u+WKoOS4i+i9veWbvueJh+eahOmTvuaOpQogICAgICB2YXIgYWRkRG93bmxvYWRJbWFnZUxpbmsgPSBmdW5jdGlvbiAocmVmKSB7CiAgICAgICAgaWYgKCFoYXNEb3dubG9hZCkgcmV0dXJuOwogICAgICAgIHZhciB2b2wgPSB1dGlsLmRvbS5jcmVhdGUoJ3VsJywgdXRpbC5zdHIuZmlsbChodG1sLmRvd25sb2FkSW1hZ2VMaW5rKSk7CiAgICAgICAgdmFyIGxpbmsgPSB2b2wucXVlcnlTZWxlY3RvcignYScpOwogICAgICAgIHZhciBsaSA9IHV0aWwuZG9tLmNsb3Nlc3QocmVmLCAnbGknKTsKICAgICAgICB3aGlsZSAodm9sLmZpcnN0Q2hpbGQpIGxpLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodm9sLmZpcnN0Q2hpbGQpOwogICAgICAgIHJldHVybiBsaW5rOwogICAgICB9OwoKICAgICAgdmFyIGFkZEltYWdlSGFuZGxlckxpbmsgPSBmdW5jdGlvbiBhZGRJbWFnZUhhbmRsZXJMaW5rKCkgewogICAgICAgIGZvckVhY2hFbGVtZW50KFsKICAgICAgICAgIC8vIOW+ruWNmumFjeWbvgogICAgICAgICAgJy5XQl9mZWVkIGxpIGFbYWN0aW9uLXR5cGU9IndpZGdldF9waG90b3ZpZXciXScsCiAgICAgICAgICAvLyDor4TorrrphY3lm74KICAgICAgICAgICcuV0JfZmVlZCBsaSBhW2FjdGlvbi10eXBlPSJ3aWRnZXRfY29tbWVudFBob3RvVmlldyJdJywKICAgICAgICBdLCBmdW5jdGlvbiAodmlld0xhcmdlTGluaykgewogICAgICAgICAgdmFyIHZpZXdPcmlnaW5hbExpbmsgPSBhZGRWaWV3T3JpZ2luYWxMaW5rKHZpZXdMYXJnZUxpbmspOwogICAgICAgICAgdmFyIGRvd25sb2FkSW1hZ2VMaW5rID0gYWRkRG93bmxvYWRJbWFnZUxpbmsodmlld0xhcmdlTGluayk7CiAgICAgICAgICB2YXIgdXBkYXRlID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgaW5mbyA9IGdldEluZm8odmlld0xhcmdlTGluayk7CiAgICAgICAgICAgIHZhciB1cmwgPSBpbmZvLmltYWdlc1tpbmZvLmN1cnJlbnRdOwogICAgICAgICAgICBpZiAodmlld09yaWdpbmFsTGluaykgdmlld09yaWdpbmFsTGluay5ocmVmID0gZ2V0T3JpZ2luYWxVcmwodXJsKTsKICAgICAgICAgICAgaWYgKGRvd25sb2FkSW1hZ2VMaW5rKSBkb3dubG9hZEltYWdlTGluay5ocmVmID0gZ2V0T3JpZ2luYWxVcmwodXJsKTsKICAgICAgICAgIH07CiAgICAgICAgICBpZiAodmlld09yaWdpbmFsTGluaykgdmlld09yaWdpbmFsTGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICBzaG93UGFnZShnZXRJbmZvKHZpZXdPcmlnaW5hbExpbmspKTsKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgIH0pOwogICAgICAgICAgaWYgKGRvd25sb2FkSW1hZ2VMaW5rKSBkb3dubG9hZEltYWdlTGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICBkb3dubG9hZEltYWdlcyhnZXRJZCh2aWV3T3JpZ2luYWxMaW5rKSwgZ2V0SW5mbyh2aWV3T3JpZ2luYWxMaW5rKSwgZG93bmxvYWRJbWFnZUxpbmspOwogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgfSk7CiAgICAgICAgICAobmV3IE11dGF0aW9uT2JzZXJ2ZXIodXBkYXRlKSkub2JzZXJ2ZSh2aWV3TGFyZ2VMaW5rLCB7ICdhdHRyaWJ1dGVzJzogdHJ1ZSB9KTsKICAgICAgICAgIHVwZGF0ZSgpOwogICAgICAgIH0pOwogICAgICB9OwogICAgICBvYnNlcnZlci5kb20uYWRkKGFkZEltYWdlSGFuZGxlckxpbmspOwoKICAgICAgaWYgKG9yaWdpbmFsRGlyZWN0IHx8IGRvd25sb2FkRGlyZWN0KSB7CiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7CiAgICAgICAgICBpZiAoZXZlbnQuYnV0dG9uICE9PSAwKSByZXR1cm47IC8vIOWPquWTjeW6lOW3pumUruaTjeS9nAogICAgICAgICAgaWYgKGV2ZW50LnNoaWZ0S2V5KSByZXR1cm47IC8vIOaMieS4iyBTaGlmdCDml7bkuI3lk43lupQKICAgICAgICAgIHZhciBwaWMgPSAoCiAgICAgICAgICAgIHV0aWwuZG9tLmNsb3Nlc3QodGFyZ2V0LCAnLldCX21lZGlhX3dyYXAgLldCX3BpYycpIHx8CiAgICAgICAgICAgIHV0aWwuZG9tLmNsb3Nlc3QodGFyZ2V0LCAnYVtpbWFnZWNhcmRdJykKICAgICAgICAgICk7CiAgICAgICAgICBpZiAoIXBpYykgcmV0dXJuOwogICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICB2YXIgaW5mbyA9IGdldEluZm8ocGljKTsKICAgICAgICAgIGlmIChvcmlnaW5hbERpcmVjdCkgc2hvd1BhZ2UoaW5mbyk7CiAgICAgICAgICBlbHNlIGRvd25sb2FkSW1hZ2VzKGdldElkKHBpYyksIGluZm8pOwogICAgICAgIH0sIHRydWUpOwogICAgICB9CiAgICB9LAogIH0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7Cgp9KCkpOwoKLy8g5bCG5re75Yqg5qCH562+55qE5a+56K+d5qGG5o2i5oiQ5rCU55CDCmZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5ub190YWdfZGlhbG9nID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICd3ZWlib3Rvb2wnLAogICd2ZXJzaW9uJzogMzYzLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5ub1RhZ0RpYWxvZycsCiAgJ3RleHQnOiAne3tub1RhZ0RpYWxvZ319JywKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB1dGlsLmZ1bmMud3JhcHN0aygnbGliLmZlZWQucGx1Z2lucy5mYXZvcml0ZS50YWdEaWFsb2cnLCBmdW5jdGlvbiAocmVnRnVuYykgewogICAgICByZXR1cm4gZnVuY3Rpb24gKHN0aykgewogICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgICAgfTsKICAgICAgfTsKICAgIH0pOwogIH0KfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOWkmuWqkuS9k+exu++8iOinhumikeWSjOWbvueJh++8iQpmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCd0b29sJywgJ21lZGlhdG9vbCcsICd7e21lZGlhVG9vbHNUaXRsZX19Jyk7CgpmaWx0ZXIuaXRlbXMudG9vbC53ZWlib3Rvb2wudXNlX2J1aWx0X2luX3ZpZGVvX3BsYXllciA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnbWVkaWF0b29sJywKICAndmVyc2lvbic6IDQ5NiwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wudXNlX2J1aWx0X2luX3ZpZGVvX3BsYXllcicsCiAgJ3RleHQnOiAne3t1c2VCdWlsdEluVmlkZW9QbGF5ZXJ9fScsCiAgJ3JlZic6IHsKICAgICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7dXNlQnVpbHRJblZpZGVvUGxheWVyRGVzY319JyB9LAogICAgJ3ZvbHVtZSc6IHsgJ3R5cGUnOiAncmFuZ2UnLCAnbWluJzogMCwgJ21heCc6IDEwMCwgJ2RlZmF1bHQnOiAxMDAgfSwKICAgICdtZW1vcml6ZSc6IHsgJ3R5cGUnOiAnYm9vbGVhbicgfSwKICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBydWxlID0gdGhpczsKICAgIHZhciByZXBsYWNlV2VpYm9WaWRlb1BsYXllciA9IGZ1bmN0aW9uIHJlcGxhY2VXZWlib1ZpZGVvUGxheWVyKCkgewogICAgICB2YXIgY29udGFpbmVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2xpLldCX3ZpZGVvW25vZGUtdHlwZT0iZmxfaDVfdmlkZW8iXVt2aWRlby1zb3VyY2VzXScpOwogICAgICBjb250YWluZXJzLmZvckVhY2goZnVuY3Rpb24gKGNvbnRhaW5lcikgewogICAgICAgIHZhciBzbWFsbEltYWdlID0gZmlsdGVyLml0ZW1zLnN0eWxlLnN3ZWliby5pbWFnZV9zaXplLmNvbmY7CgogICAgICAgIHZhciBjb3ZlciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCdbbm9kZS10eXBlPSJmbF9oNV92aWRlb19wcmUiXSBpbWcnKTsgaWYgKCFjb3ZlcikgcmV0dXJuOwogICAgICAgIHZhciB2aWRlbyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCd2aWRlbycpOwogICAgICAgIGlmICh2aWRlbykgdmlkZW8uc3JjID0gJ2RhdGE6dGV4dC9wbGFpbiw0Mic7CiAgICAgICAgdmFyIHZpZGVvU291cmNlRGF0YSA9IHV0aWwuc3RyLnBhcnNlcXVlcnkoY29udGFpbmVyLmdldEF0dHJpYnV0ZSgndmlkZW8tc291cmNlcycpKTsKICAgICAgICB2YXIgdmlkZW9Tb3VyY2UgPSB2aWRlb1NvdXJjZURhdGFbdmlkZW9Tb3VyY2VEYXRhLnFUeXBlXTsgaWYgKCF2aWRlb1NvdXJjZSkgcmV0dXJuOwogICAgICAgIHZpZGVvU291cmNlID0gdmlkZW9Tb3VyY2UucmVwbGFjZSgvXmh0dHA6LywgJ2h0dHBzOicpOwogICAgICAgIHZhciBuZXdDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgICAgIG5ld0NvbnRhaW5lci5jbGFzc05hbWUgPSBjb250YWluZXIuY2xhc3NOYW1lICsgJyB5YXdmLVdCX3ZpZGVvJzsKICAgICAgICB2YXIgbmV3VmlkZW8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd2aWRlbycpOwogICAgICAgIG5ld1ZpZGVvLnBvc3RlciA9IGNvdmVyLnNyYzsKICAgICAgICBuZXdWaWRlby5zcmMgPSB2aWRlb1NvdXJjZTsKICAgICAgICBuZXdWaWRlby5wcmVsb2FkID0gJ25vbmUnOwogICAgICAgIG5ld1ZpZGVvLmNvbnRyb2xzID0gIXNtYWxsSW1hZ2U7CiAgICAgICAgbmV3VmlkZW8uYXV0b3BsYXkgPSBmYWxzZTsKICAgICAgICB2YXIgdXBkYXRlUGxheVN0YXRlID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIGlzUGxheWluZyA9ICFuZXdWaWRlby5wYXVzZWQgfHwgbmV3VmlkZW8uc2Vla2luZzsKICAgICAgICAgIGlmIChpc1BsYXlpbmcpIG5ld0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ3lhd2YtdmlkZW8tcGxheScsICcnKTsKICAgICAgICAgIGVsc2UgbmV3Q29udGFpbmVyLnJlbW92ZUF0dHJpYnV0ZSgneWF3Zi12aWRlby1wbGF5Jyk7CiAgICAgICAgICBpZiAoc21hbGxJbWFnZSkgbmV3VmlkZW8uY29udHJvbHMgPSBpc1BsYXlpbmc7CiAgICAgICAgfTsKICAgICAgICBuZXdWaWRlby5hZGRFdmVudExpc3RlbmVyKCdwbGF5JywgdXBkYXRlUGxheVN0YXRlKTsKICAgICAgICBuZXdWaWRlby5hZGRFdmVudExpc3RlbmVyKCdwYXVzZScsIHVwZGF0ZVBsYXlTdGF0ZSk7CiAgICAgICAgaWYgKHNtYWxsSW1hZ2UpIHsKICAgICAgICAgIG5ld0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICBpZiAoIW5ld0NvbnRhaW5lci5oYXNBdHRyaWJ1dGUoJ3lhd2YtdmlkZW8tcGxheScpKSBuZXdWaWRlby5wbGF5KCk7CiAgICAgICAgICB9KTsKICAgICAgICAgIG5ld0NvbnRhaW5lci5hcHBlbmRDaGlsZCh1dGlsLmRvbS5jcmVhdGUodXRpbC5zdHIuZmlsbChodG1sLnZpZGVvVGlwKSkpOwogICAgICAgIH0KICAgICAgICBuZXdWaWRlby52b2x1bWUgPSBydWxlLnJlZi52b2x1bWUuY29uZiAvIDEwMDsKICAgICAgICBpZiAocnVsZS5yZWYubWVtb3JpemUuY29uZikgewogICAgICAgICAgbmV3VmlkZW8uYWRkRXZlbnRMaXN0ZW5lcigndm9sdW1lY2hhbmdlJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICBydWxlLnJlZi52b2x1bWUucHV0Y29uZihNYXRoLnJvdW5kKG5ld1ZpZGVvLnZvbHVtZSAqIDEwMCkpOwogICAgICAgICAgfSk7CiAgICAgICAgICBuZXdWaWRlby5hZGRFdmVudExpc3RlbmVyKCdwbGF5JywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICBuZXdWaWRlby52b2x1bWUgPSBydWxlLnJlZi52b2x1bWUuY29uZiAvIDEwMDsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICBuZXdDb250YWluZXIuYXBwZW5kQ2hpbGQobmV3VmlkZW8pOwogICAgICAgIGNvbnRhaW5lci5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChuZXdDb250YWluZXIsIGNvbnRhaW5lcik7CiAgICAgIH0pOwogICAgfTsKICAgIG9ic2VydmVyLmRvbS5hZGQocmVwbGFjZVdlaWJvVmlkZW9QbGF5ZXIpOwogICAgcmVwbGFjZVdlaWJvVmlkZW9QbGF5ZXIoKTsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgbGkuV0JfdmlkZW9bbm9kZS10eXBlPSJmbF9oNV92aWRlbyJdW3ZpZGVvLXNvdXJjZXNdID4gZGl2W25vZGUtdHlwZT0iZmxfaDVfdmlkZW9fcHJlIl0sCiAgICAgIGxpLldCX3ZpZGVvW25vZGUtdHlwZT0iZmxfaDVfdmlkZW8iXVt2aWRlby1zb3VyY2VzXSA+IGRpdltub2RlLXR5cGU9ImZsX2g1X3ZpZGVvX2Rpc3AiXSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfQogICAgICAueWF3Zi1XQl92aWRlbyB7IHRyYW5zaXRpb246IHdpZHRoLCBoZWlnaHQgMC4yczsgfQogICAgICAueWF3Zi1XQl92aWRlbyB2aWRlbyB7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAwOyBib3R0b206IDA7IGxlZnQ6IDA7IHJpZ2h0OiAwOyBtYXJnaW46IGF1dG87IH0KICAgICAgLldCX21lZGlhX2EgLldCX3ZpZGVvLnlhd2YtV0JfdmlkZW8geyBjdXJzb3I6IHVuc2V0OyB9CiAgICAgIC55YXdmLVdCX3ZpZGVvIC5XX2ljb25fdGFnX3YyIHsgei1pbmRleDogMTsgfQogICAgICAuV0JfdmlkZW9beWF3Zi12aWRlby1wbGF5XSAuV19pY29uX3RhZ192MiB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfQogICAgKi8gbm9vcCgpOyB9KSk7CiAgICB1dGlsLmZ1bmMucGFnZShmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBGYWtlVmlkZW9QbGF5ZXIgPSBmdW5jdGlvbiBlKCkge307CiAgICAgIEZha2VWaWRlb1BsYXllci5wcm90b3R5cGUudGh1bWJuYWlsID0gZnVuY3Rpb24gKCkge307CiAgICAgIEZha2VWaWRlb1BsYXllci5wcm90b3R5cGUucGxheVN0YXR1cyA9IGZ1bmN0aW9uICgpIHt9OwogICAgICBpZiAod2luZG93LlZpZGVvUGxheWVyKSB7CiAgICAgICAgd2luZG93LlZpZGVvUGxheWVyID0gRmFrZVZpZGVvUGxheWVyOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB2YXIgZ2xvYmFsVmlkZW9QbGF5ZXIgPSB2b2lkIDA7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdWaWRlb1BsYXllcicsIHsKICAgICAgICBnZXQoKSB7IHJldHVybiBnbG9iYWxWaWRlb1BsYXllcjsgfSwKICAgICAgICBzZXQoKSB7IGdsb2JhbFZpZGVvUGxheWVyID0gRmFrZVZpZGVvUGxheWVyOyB9LAogICAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSwKICAgICAgfSk7CiAgICB9KTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKLy8g5Yqo5Zu+5L+d5oyB6Z2Z5q2iCmZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5wYXVzZV9hbmltYXRlZF9pbWFnZSA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnbWVkaWF0b29sJywKICAndmVyc2lvbic6IDQ0OCwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wucGF1c2VfYW5pbWF0ZWRfaW1hZ2UnLAogICd0ZXh0JzogJ3t7cGF1c2VBbmltYXRlZEltYWdlfX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ3dhcm4nLCAndGV4dCc6ICd7e3BhdXNlQW5pbWF0ZWRJbWFnZURlc2N9fScgfSB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBlbXB0eUltYWdlID0gJ2RhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsJyArIGJ0b2EoJzxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIi8+Jyk7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIHBhdXNlQW5pbWF0ZWRJbWFnZSgpIHsKICAgICAgdmFyIGltYWdlcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChbCiAgICAgICAgJy5QQ0RfcGhvdG9saXN0IGltZ1tzcmMkPSIuZ2lmIl06bm90KFt5YXdmLXBhdXNlLWFuaW1hdGVdKScsCiAgICAgICAgJy5XQl9waWMgaW1nW3NyYyQ9Ii5naWYiXTpub3QoW3lhd2YtcGF1c2UtYW5pbWF0ZV0pJywKICAgICAgXS5qb2luKCcsJykpKTsKICAgICAgaW1hZ2VzLmZvckVhY2goZnVuY3Rpb24gKGltYWdlKSB7CiAgICAgICAgdmFyIHNyYyA9IGltYWdlLnNyYzsgaW1hZ2Uuc3JjID0gZW1wdHlJbWFnZTsgaW1hZ2Uuc2V0QXR0cmlidXRlKCdvcmktc3JjJywgc3JjKTsKICAgICAgICBpbWFnZS5zZXRBdHRyaWJ1dGUoJ3lhd2YtcGF1c2UtYW5pbWF0ZScsICd5YXdmLXBhdXNlLWFuaW1hdGUnKTsKICAgICAgICB2YXIgZmFpbCA9IGZ1bmN0aW9uICgpIHsgaW1hZ2Uuc3JjID0gc3JjOyB9OwogICAgICAgIG5ldHdvcmsuaW1hZ2UuZ2V0KHNyYywgZnVuY3Rpb24gKGFycmF5YnVmZmVyKSB7CiAgICAgICAgICBpZiAoIWFycmF5YnVmZmVyKSByZXR1cm4gZmFpbCgpOwogICAgICAgICAgdmFyIHVpbnQ4YXJyID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXlidWZmZXIpOwogICAgICAgICAgdmFyIGJhc2U2NCA9IFtdLCBpLCBsID0gdWludDhhcnIubGVuZ3RoOwogICAgICAgICAgZm9yIChpID0gMDsgaSA8IGw7IGkgKz0gMTAyMykgewogICAgICAgICAgICBiYXNlNjQucHVzaChidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgdWludDhhcnIuc2xpY2UoaSwgaSArIDEwMjMpKSkpOwogICAgICAgICAgfQogICAgICAgICAgdmFyIHVybCA9ICdkYXRhOmltYWdlL2dpZjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0LmpvaW4oJycpOwogICAgICAgICAgdmFyIGFuaW1hdGVkID0gbmV3IEltYWdlKCk7CiAgICAgICAgICBhbmltYXRlZC5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgd2lkdGggPSBhbmltYXRlZC53aWR0aCwgaGVpZ2h0ID0gYW5pbWF0ZWQuaGVpZ2h0OwogICAgICAgICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7CiAgICAgICAgICAgIGNhbnZhcy53aWR0aCA9IHdpZHRoOyBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0OwogICAgICAgICAgICBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKS5kcmF3SW1hZ2UoYW5pbWF0ZWQsIDAsIDAsIHdpZHRoLCBoZWlnaHQpOwogICAgICAgICAgICBpbWFnZS5zcmMgPSBjYW52YXMudG9EYXRhVVJMKCJpbWFnZS9wbmciKTsKICAgICAgICAgIH0pOwogICAgICAgICAgYW5pbWF0ZWQuc3JjID0gdXJsOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0pOwogICAgdXRpbC5jc3MuYWRkKHV0aWwuc3RyLmZpbGwodXRpbC5zdHIuY210KGZ1bmN0aW9uICgpIHsgLyohQ1NTCiAgICAgIC5QQ0RfcGhvdG9saXN0IGltZ1tzcmMkPSIuZ2lmIl06bm90KFt5YXdmLXBhdXNlLWFuaW1hdGVdKSwKICAgICAgLldCX3BpYyBpbWdbc3JjJD0iLmdpZiJdOm5vdChbeWF3Zi1wYXVzZS1hbmltYXRlXSksCiAgICAgIC5XQl9naWZfdmlkZW9fYm94CiAgICAgIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9naWZfYm94IHsgdmlzaWJpbGl0eTogdmlzaWJsZSAhaW1wb3J0YW50OyB9CiAgICAqLyBub29wKCk7CiAgICB9KSkpOwogIH0KfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOemgeeUqOinhumikeWPs+mUruiPnOWNlQpmaWx0ZXIuaXRlbXMudG9vbC53ZWlib3Rvb2wuZGlzYWJsZV92aWRlb19tZW51ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdtZWRpYXRvb2wnLAogICd2ZXJzaW9uJzogNDQyLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5kaXNhYmxlX3ZpZGVvX21lbnUnLAogICd0ZXh0JzogJ3t7ZGlzYWJsZVZpZGVvQ29udGV4dE1lbnV9fScsCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgb2JzZXJ2ZXIuZG9tLmFkZChmdW5jdGlvbiBkaXNhYmxlVmlkZW9Db250ZXh0TWVudSgpIHsKICAgICAgdmFyIHZpZGVvZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5XQl92aWRlbyB2aWRlbzpub3QoW3lhd2YtZGlzYWJsZS1tZW51XSksIC5XQl92aWRlb19oNV92Mjpub3QoW3lhd2YtZGlzYWJsZS1tZW51XSknKSk7CiAgICAgIHZpZGVvZXMuZm9yRWFjaChmdW5jdGlvbiAodmlkZW8pIHsKICAgICAgICB2aWRlby5zZXRBdHRyaWJ1dGUoJ3lhd2YtZGlzYWJsZS1tZW51JywgJ3lhd2YtZGlzYWJsZS1tZW51Jyk7CiAgICAgICAgdmlkZW8uYWRkRXZlbnRMaXN0ZW5lcignY29udGV4dG1lbnUnLCBmdW5jdGlvbiAoZXZlbnQpIHsgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7IH0sIHRydWUpOwogICAgICB9KTsKICAgIH0pOwogICAgdXRpbC5jc3MuYWRkKFsKICAgICAgJy5XQl92aWRlbyAuY29uLTcgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLAogICAgICAnLldCX3ZpZGVvLldCX2g1dmlkZW9fdjIgLndidi1wb3AtbGF5ZXIgeyBwb3NpdGlvbjogc3RhdGljOyB3aWR0aDogMDsgaGVpZ2h0OiAwOyB9JywKICAgIF0uam9pbignJykpOwogIH0KfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOeUqCBVUkwg5pu/5o2i5b6u5Y2a5YaF55qE572R6aG16ZO+5o6lCmZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5yZXBsYWNlX2xpbmsgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ3dlaWJvdG9vbCcsCiAgJ3ZlcnNpb24nOiAzNTAsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLnJlcGxhY2VfbGluaycsCiAgJ3RleHQnOiAne3tyZXBsYWNlTGlua0J5VXJsfX0nLAogICdtYXJrJzogZnVuY3Rpb24gbWFya0xpbmtUeXBlKCkgewogICAgLy8g5qCH6K6w5q+P5Liq6ZO+5o6l6YO95piv5LuA5LmI57G75Z6L55qE77yM5pa55L6/6L+H5ruk5ZKM5aSE55CGCiAgICB2YXIgaWNvbiA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLldCX2ZlZWRfdHlwZSBhOm5vdChbeWF3Zi1saW5rLXR5cGVdKSA+IC5XX2ZpY29uOmZpcnN0LWNoaWxkJykpOwogICAgaWNvbi5mb3JFYWNoKGZ1bmN0aW9uIChpKSB7IGkucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoJ3lhd2YtbGluay10eXBlJywgaS50ZXh0Q29udGVudC50cmltKCkpOyB9KTsKICB9LAogICdpbml0JzogZnVuY3Rpb24gKCkgewogICAgaWYgKHRoaXMuY29uZikgcmV0dXJuOwogICAgdGhpcy5tYXJrKCk7CiAgICBvYnNlcnZlci5kb20uYWRkKHRoaXMubWFyayk7CiAgfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICB2YXIgZXhwYW5kTGluayA9IGZ1bmN0aW9uIGV4cGFuZFdlaWJvTGluaygpIHsKICAgICAgdGhhdC5tYXJrKCk7CiAgICAgIHZhciBsaW5rcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLldCX2ZlZWRfdHlwZSBhW3lhd2YtbGluay10eXBlPSJPIl1bdGl0bGU9Iue9kemhtemTvuaOpSJdOm5vdChbeWF3Zi1saW5rLWV4cGFuZF0pJykpOwogICAgICBsaW5rcy5mb3JFYWNoKGZ1bmN0aW9uIChsaW5rKSB7CiAgICAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ3lhd2YtbGluay1leHBhbmQnLCAnJyk7CiAgICAgICAgdmFyIHVybCA9IGxpbmsuaHJlZjsKICAgICAgICBsaW5rLnRleHRDb250ZW50ID0gdXJsOwogICAgICAgIGxpbmsuY2xhc3NOYW1lID0gJ3lhd2YtbGluayc7CiAgICAgIH0pOwogICAgfTsKICAgIGV4cGFuZExpbmsoKTsKICAgIG9ic2VydmVyLmRvbS5hZGQoZXhwYW5kTGluayk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOS9v+eUqOaWh+acrOabv+aNouWbvueJh+ihqOaDhQpmaWx0ZXIuaXRlbXMudG9vbC53ZWlib3Rvb2wucmVwbGFjZV9pbWFnZV9lbW9qaSA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnd2VpYm90b29sJywKICAndmVyc2lvbic6IDI4MiwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wucmVwbGFjZV9pbWFnZV9lbW9qaScsCiAgJ3RleHQnOiAne3tyZXBsYWNlSW1hZ2VFbW9qaX19JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e3JlcGxhY2VJbWFnZUVtb2ppRGVzY319JyB9IH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIHJlcGxhY2VJbWFnZUVtb2ppID0gZnVuY3Rpb24gcmVwbGFjZUltYWdlRW1vamkoKSB7CiAgICAgIHZhciBlbW9qaSA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW3NyYyo9Ii8vaW1nLnQuc2luYWpzLmNuL3Q0L2FwcHN0eWxlL2V4cHJlc3Npb24vZW1pbWFnZS9lIl0nKSk7CiAgICAgIGVtb2ppLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICB2YXIgY29kZSA9IG5vZGUuZ2V0QXR0cmlidXRlKCdzcmMnKS5tYXRjaCgvKGUuLi4uLilcLnBuZy8pWzFdOwogICAgICAgIHZhciB0ZXh0ID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodXRpbC5zdHIuZW1vamkoY29kZSkpOwogICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQodGV4dCwgbm9kZSk7CiAgICAgICAgaWYgKHRleHQucGFyZW50Tm9kZS5ub3JtYWxpemUpIHRleHQucGFyZW50Tm9kZS5ub3JtYWxpemUoKTsKICAgICAgfSk7CiAgICB9OwogICAgcmVwbGFjZUltYWdlRW1vamkoKTsKICAgIG9ic2VydmVyLmRvbS5hZGQocmVwbGFjZUltYWdlRW1vamkpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDoh6rlrprkuYnmnaXlvq7mupDljZoKZmlsdGVyLml0ZW1zLnRvb2wud2VpYm90b29sLnJlcGxhY2VfbGluayA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnd2VpYm90b29sJywKICAndmVyc2lvbic6IDEwNCwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLmN1c3RvbWl6ZV9zb3VyY2UnLAogICd0ZXh0JzogJ3t7Y3VzdG9taXplU291cmNlV2VpYm99fScsCiAgJ3JlZic6IHsKICAgICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7Y3VzdG9taXplU291cmNlV2VpYm9EZXNjfX0nIH0sCiAgfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICAvLyDmib7liLDmiYDmnInoh6rlrprkuYnnmoTlvq7ljZrmnaXmupAKICAgIHZhciBjdXN0b21pemVkID0gZnVuY3Rpb24gY3VzdG9taXplU291cmNlV2VpYm8oKSB7CiAgICAgIHZhciBmcm9tID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuV0JfZnJvbTpub3QoW3lhd2YtY3NvdXJjZV0pJykpLCBpdGVtcyA9IFtdOwogICAgICBmcm9tLmZvckVhY2goZnVuY3Rpb24gKGYpIHsKICAgICAgICBmLnNldEF0dHJpYnV0ZSgneWF3Zi1jc291cmNlJywgJ3lhd2YtY3NvdXJjZScpOwogICAgICAgIGlmICh1dGlsLmRvbS5tYXRjaGVzKGYsICcubGlzdF9saVttaWRdIConKSkgcmV0dXJuOwogICAgICAgIGlmIChmLnRleHRDb250ZW50LmluZGV4T2YodGV4dC5zb3VyY2VVbmtvd24pICE9PSAtMSkgcmV0dXJuOwogICAgICAgIC8vIOiHquWumuS5ieW+ruWNmuadpea6kOWPr+S7peS4jeaYvuekuuadpea6kAogICAgICAgIGlmIChmLnF1ZXJ5U2VsZWN0b3IoJ1tub2RlLXR5cGU9ImZlZWRfbGlzdF9pdGVtX2RhdGUiXTpvbmx5LWNoaWxkJykpCiAgICAgICAgICByZXR1cm4gaXRlbXMucHVzaChmLmFwcGVuZENoaWxkKHV0aWwuZG9tLmNyZWF0ZSgnZGl2JywgJycpKSk7CiAgICAgICAgLy8g5Lmf5Y+v5Lul5pi+56S66Ieq5a6a5LmJ55qE5p2l5rqQCiAgICAgICAgdmFyIGl0ZW0gPSBmLnF1ZXJ5U2VsZWN0b3IoJ2FbaHJlZio9InZpcC53ZWliby5jb20iXScpOwogICAgICAgIGlmIChpdGVtKSBpdGVtcy5wdXNoKGl0ZW0pOwogICAgICB9KTsKICAgICAgaXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoZikgewogICAgICAgIHZhciB3YiA9IHV0aWwuZG9tLmNyZWF0ZSh1dGlsLnN0ci5maWxsKGh0bWwud2VpYm9WaWFXZWlib0NvbSkpOwogICAgICAgIGYucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQod2IsIGYpOwogICAgICB9KTsKICAgIH07CiAgICBvYnNlcnZlci5kb20uYWRkKGN1c3RvbWl6ZWQpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDmipjlj6Dkuoznuqfor4TorrrvvIjmpbzkuK3mpbzvvIkKZmlsdGVyLml0ZW1zLnRvb2wud2VpYm90b29sLmZvbGRfY2hpbGRfY29tbWVudCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnd2VpYm90b29sJywKICAndmVyc2lvbic6IDQyMywKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLmZvbGRfY2hpbGRfY29tbWVudCcsCiAgJ3RleHQnOiAne3tmb2xkQ2hpbGRDb21tZW50fX0nLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBmb2xkQ2hpbGRDb21tZW50ID0gZnVuY3Rpb24gZm9sZENoaWxkQ29tbWVudCgpIHsKICAgICAgdmFyIHJvb3RDb21tZW50ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubGlzdF9saVtub2RlLXR5cGU9InJvb3RfY29tbWVudCJdOm5vdChbeWF3Zi1mb2xkZWQtcm9vdC1jb21tZW50XSknKSk7CiAgICAgIHJvb3RDb21tZW50LmZvckVhY2goZnVuY3Rpb24gKHJvb3RDb21tZW50KSB7CiAgICAgICAgcm9vdENvbW1lbnQuc2V0QXR0cmlidXRlKCd5YXdmLWZvbGRlZC1yb290LWNvbW1lbnQnLCAneWF3Zi1mb2xkZWQtcm9vdC1jb21tZW50Jyk7CgogICAgICAgIHZhciBmZWVkID0gdXRpbC5kb20uY2xvc2VzdChyb290Q29tbWVudCwgJy5XQl9mZWVkX3R5cGVbbWlkXScpOwogICAgICAgIHZhciByZXBseSA9IHJvb3RDb21tZW50LnF1ZXJ5U2VsZWN0b3IoJ2FbYWN0aW9uLXR5cGU9InJlcGx5Il0nKTsKICAgICAgICB2YXIgY2hpbGRDb21tZW50TGlzdCA9IEFycmF5LmZyb20ocm9vdENvbW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmxpc3RfdWxbbm9kZS10eXBlPSJjaGlsZF9jb21tZW50Il0nKSk7CgogICAgICAgIHZhciBjb21tZW50SWQgPSByb290Q29tbWVudC5nZXRBdHRyaWJ1dGUoJ2NvbW1lbnRfaWQnKTsKICAgICAgICB2YXIgbWlkID0gZmVlZC5nZXRBdHRyaWJ1dGUoJ21pZCcpOwogICAgICAgIHZhciBjaGlsZENvdW50ID0gMDsKCiAgICAgICAgaWYgKCFjaGlsZENvdW50KSBkbyB7CiAgICAgICAgICB2YXIgbW9yZUNoaWxkTGlua3MgPSByb290Q29tbWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbbm9kZS10eXBlPSJtb3JlX2NoaWxkX2NvbW1lbnQiXSBhJyk7CiAgICAgICAgICB2YXIgbW9yZUNoaWxkID0gbW9yZUNoaWxkTGlua3NbbW9yZUNoaWxkTGlua3MubGVuZ3RoIC0gMV07CiAgICAgICAgICBpZiAoIW1vcmVDaGlsZCkgYnJlYWs7CiAgICAgICAgICB2YXIgbW9yZUNoaWxkTnVtYmVyID0gbW9yZUNoaWxkLnRleHRDb250ZW50Lm1hdGNoKC9cZCsvKTsKICAgICAgICAgIGlmICghbW9yZUNoaWxkTnVtYmVyIHx8ICFtb3JlQ2hpbGROdW1iZXJbMF0pIGJyZWFrOwogICAgICAgICAgY2hpbGRDb3VudCA9IHBhcnNlSW50KG1vcmVDaGlsZE51bWJlclswXSwgMTApIHx8IDA7CiAgICAgICAgfSB3aGlsZSAoZmFsc2UpOwoKICAgICAgICBpZiAoIWNoaWxkQ291bnQpIGRvIHsKICAgICAgICAgIHZhciBjaGlsZENvbW1lbnRJdGVtcyA9IHJvb3RDb21tZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5saXN0X3VsIC5saXN0X2xpW2NvbW1lbnRfaWRdJyk7CiAgICAgICAgICBjaGlsZENvdW50ID0gY2hpbGRDb21tZW50SXRlbXMubGVuZ3RoIHx8IDA7CiAgICAgICAgfSB3aGlsZSAoZmFsc2UpOwoKICAgICAgICBpZiAoIWNoaWxkQ291bnQpIHJldHVybjsKCiAgICAgICAgdmFyIHVuZm9sZCA9IHV0aWwuZG9tLmNyZWF0ZSh1dGlsLnN0ci5maWxsKGh0bWwudW5mb2xkQ2hpbGRDb21tZW50LAogICAgICAgICAgeyAnbWlkJzogbWlkLCAnY29tbWVudF9pZCc6IGNvbW1lbnRJZCwgJ2NoaWxkX2NvdW50JzogY2hpbGRDb3VudCB9KSk7CiAgICAgICAgcmVwbHkucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodW5mb2xkLCByZXBseS5uZXh0U2libGluZyk7CgogICAgICAgIGNoaWxkQ29tbWVudExpc3QuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGRDb21tZW50KSB7CiAgICAgICAgICBjaGlsZENvbW1lbnQucGFyZW50Tm9kZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgIH0pOwogICAgICAgIHVuZm9sZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGNoaWxkQ29tbWVudExpc3QuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGRDb21tZW50KSB7CiAgICAgICAgICAgIGNoaWxkQ29tbWVudC5wYXJlbnROb2RlLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfTsKICAgIG9ic2VydmVyLmRvbS5hZGQoZm9sZENoaWxkQ29tbWVudCk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOiHquWKqOS7jueDremXqOivhOiuuuWIh+aNouWIsOWFqOmDqOivhOiuugpmaWx0ZXIuaXRlbXMudG9vbC53ZWlib3Rvb2wuY29tbWVudF9zaG93X2FsbCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnd2VpYm90b29sJywKICAndmVyc2lvbic6IDQyNSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLm90aGVyLmNvbW1lbnRfc2hvd19hbGwnLAogICd0ZXh0JzogJ3t7Y29tbWVudFNob3dBbGx9fScsCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIHN3aXRjaFRvQWxsQ29tbWVudCA9IGZ1bmN0aW9uIHN3aXRjaFRvQWxsQ29tbWVudCgpIHsKICAgICAgdmFyIGFsbEJ1dHRvbnMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2FbYWN0aW9uLXR5cGU9ImZlZWRfbGlzdF9jb21tZW50U2VhcmNoIl1bYWN0aW9uLWRhdGEqPSJmaWx0ZXI9YWxsIl06bm90KFt5YXdmLWFsbC1jb21tZW50XSknKSk7CiAgICAgIGFsbEJ1dHRvbnMuZm9yRWFjaChmdW5jdGlvbiAoYnV0dG9uKSB7CiAgICAgICAgYnV0dG9uLnNldEF0dHJpYnV0ZSgneWF3Zi1hbGwtY29tbWVudCcsICd5YXdmLWFsbC1jb21tZW50Jyk7CiAgICAgICAgaWYgKCFidXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCdjdXJyJykpIGJ1dHRvbi5jbGljaygpOwogICAgICB9KTsKICAgIH07CiAgICBvYnNlcnZlci5kb20uYWRkKHN3aXRjaFRvQWxsQ29tbWVudCk7CiAgfQp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKLy8g5oqV56Wo5YaF5bWMCmZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5zaG93X3ZvdGVfcmVzdWx0ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICd3ZWlib3Rvb2wnLAogICd2ZXJzaW9uJzogNTA4LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8ub3RoZXIuc2hvd192b3RlX3Jlc3VsdCcsCiAgJ3RleHQnOiAne3t7c2hvd1ZvdGVSZXN1bHR9fX0nLAogICdyZWYnOiB7CiAgICAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICd3YXJuJywgJ3RleHQnOiAne3tzaG93Vm90ZVJlc3VsdERldGFpbH19JyB9LAogIH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewoKICAgIHZhciByZW5kZXJSZXN1bHQgPSBmdW5jdGlvbiAodm90ZVJlc3VsdCwgcGxhY2Vob2xkZXIsIHZvdGVDYXJkKSB7CiAgICAgIHZhciB0ZW1wbGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICB0ZW1wbGF0ZS5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz0ieWF3Zi12b3RlLWRldGFpbCBTX3R4dDEgU19iZzIgIj48ZGl2IGNsYXNzPSJ5YXdmLXZvdGUtdGl0bGUiPjwvZGl2PjxkaXYgY2xhc3M9Inlhd2Ytdm90ZS1zdWJ0aXRsZSBTX3R4dDIiPjwvZGl2PjxkaXYgY2xhc3M9Inlhd2Ytdm90ZS1vcHRpb24tbGlzdCI+PC9kaXY+PGRpdiBjbGFzcz0ieWF3Zi12b3RlLWZvb3RlciI+PC9kaXY+PC9kaXY+JzsKCiAgICAgIHZhciBjb250YWluZXIgPSB0ZW1wbGF0ZS5maXJzdENoaWxkOwogICAgICB2YXIgdGl0bGUgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLnlhd2Ytdm90ZS10aXRsZScpOwogICAgICB2YXIgc3VidGl0bGUgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLnlhd2Ytdm90ZS1zdWJ0aXRsZScpOwogICAgICB2YXIgb3B0aW9uTGlzdCA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcueWF3Zi12b3RlLW9wdGlvbi1saXN0Jyk7CiAgICAgIHZhciBmb290ZXIgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLnlhd2Ytdm90ZS1mb290ZXInKTsKICAgICAgdmFyIHZvdGVJbmZvID0gdm90ZVJlc3VsdC52b3RlX2luZm87CiAgICAgIHZhciB3aXRoSW1hZ2UgPSB2b3RlSW5mby5vcHRpb25fbGlzdC5zb21lKG9wdGlvbiA9PiBvcHRpb24ucGljKTsKICAgICAgaWYgKHdpdGhJbWFnZSkgewogICAgICAgIG9wdGlvbkxpc3QuY2xhc3NMaXN0LmFkZCgneWF3Zi12b3RlLXdpdGgtaW1hZ2UnKTsKICAgICAgfQoKICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSB2b3RlSW5mby50aXRsZTsKICAgICAgLy8g5pyq5oiq6Iez55qE5oqV56Wo5Lya5Ye6546w5b2i5aaC4oCc5oiq5q2i5pel5pyfIHjlubR45pyIeOaXpSB4eDo6eHjigJ3moLzlvI/nmoTlrZfkuLIKICAgICAgLy8g5q2k5pe26K+G5Yir5ZCO6Z2i55qE5pel5pyf5Lul5pa55L6/4oCc5L2/55So5pys5py65pe25Yy64oCd5Yqf6IO95bCG5YW25L+u5q2j5Li65pys5py65pe26Ze0CiAgICAgIGlmICgvXi4qXGQr5bm0XGQr5pyIXGQr5pelIFxkKzpcZCskLy50ZXN0KHZvdGVJbmZvLnNob3dfc3RyKSkgewogICAgICAgIHZhciBbX2ksIHRleHQsIGRhdGVTdHJdID0gdm90ZUluZm8uc2hvd19zdHIubWF0Y2goL14oLio/KShcZCvlubRcZCvmnIhcZCvml6UgXGQrOlxkKykkLyk7CiAgICAgICAgdmFyIFtfaiwgeWVhciwgbW9udGgsIGRhdGUsIGhvdXIsIG1pbl0gPSBkYXRlU3RyLm1hdGNoKC8oXGQrKeW5tChcZCsp5pyIKFxkKynml6UgKFxkKyk6KFxkKykvKTsKICAgICAgICB2YXIgdGltZXN0YW1wID0gRGF0ZS5VVEMoeWVhciwgbW9udGggLSAxLCBkYXRlLCBob3VyIC0gOCwgbWluKTsKICAgICAgICBzdWJ0aXRsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0ZXh0KSk7CiAgICAgICAgdmFyIGRhdGVUZXh0ID0gc3VidGl0bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpKTsKICAgICAgICBkYXRlVGV4dC50ZXh0Q29udGVudCA9IGRhdGVTdHI7CiAgICAgICAgZGF0ZVRleHQuc2V0QXR0cmlidXRlKCd5YXdmLWRhdGUnLCB0aW1lc3RhbXApOwogICAgICB9IGVsc2UgewogICAgICAgIHN1YnRpdGxlLnRleHRDb250ZW50ID0gdm90ZUluZm8uc2hvd19zdHI7CiAgICAgIH0KICAgICAgdm90ZUluZm8ub3B0aW9uX2xpc3QuZm9yRWFjaChmdW5jdGlvbiAob3B0aW9uKSB7CiAgICAgICAgdmFyIHdyYXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICB3cmFwLmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPSJ5YXdmLXZvdGUtb3B0aW9uLWl0ZW0iPjxkaXYgY2xhc3M9Inlhd2Ytdm90ZS1vcHRpb24tdGV4dCI+PHNwYW4gY2xhc3M9Inlhd2Ytdm90ZS1vcHRpb24tdGl0bGUiPjwvc3Bhbj48c3BhbiBjbGFzcz0ieWF3Zi12b3RlLW9wdGlvbi1jb3VudCI+PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9Inlhd2Ytdm90ZS1vcHRpb24tYmFyIFNfYmcxIj48L2Rpdj48L2Rpdj4nOwogICAgICAgIHZhciBjb250YWluZXIgPSB3cmFwLmZpcnN0Q2hpbGQ7CiAgICAgICAgdmFyIHRleHQgPSBjb250YWluZXIuZmlyc3RDaGlsZC5maXJzdENoaWxkOwogICAgICAgIHRleHQudGV4dENvbnRlbnQgPSBvcHRpb24udGl0bGU7CiAgICAgICAgdmFyIGNvdW50ID0gdGV4dC5uZXh0U2libGluZzsKICAgICAgICBjb3VudC50ZXh0Q29udGVudCA9IG9wdGlvbi5wYXJ0X251bTsKICAgICAgICBjb250YWluZXIuc3R5bGUuc2V0UHJvcGVydHkoJy0teWF3Zi12b3RlLXJhdGlvJywgb3B0aW9uLnBhcnRfcmF0aW8gLyAxMDApOwogICAgICAgIGlmICh3aXRoSW1hZ2UpIHsKICAgICAgICAgIHZhciB3cmFwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgICB3cmFwLmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPSJ5YXdmLXZvdGUtb3B0aW9uLWltYWdlIj48aW1nIC8+PC9kaXY+JzsKICAgICAgICAgIHZhciBpbWcgPSB3cmFwLmZpcnN0Q2hpbGQuZmlyc3RDaGlsZDsKICAgICAgICAgIGltZy5zcmMgPSBvcHRpb24ucGljOwogICAgICAgICAgaW1nLmFsdCA9IG9wdGlvbi50ZXh0OwogICAgICAgICAgY29udGFpbmVyLmluc2VydEJlZm9yZSh3cmFwLmZpcnN0Q2hpbGQsIGNvbnRhaW5lci5maXJzdENoaWxkKTsKICAgICAgICB9CiAgICAgICAgaWYgKG9wdGlvbi5zZWxlY3RlZCA9PT0gJzEnKSB7CiAgICAgICAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgneWF3Zi12b3RlLXNlbGVjdGVkJyk7CiAgICAgICAgfQogICAgICAgIG9wdGlvbkxpc3QuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTsKICAgICAgfSk7CiAgICAgIGlmICh2b3RlSW5mby5zdGF0dXMgPT09ICcxJykgewogICAgICAgIHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2FjdGlvbi10eXBlJywgdm90ZUNhcmQuZ2V0QXR0cmlidXRlKCdhY3Rpb24tdHlwZScpKTsKICAgICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnYWN0aW9uLWRhdGEnLCB2b3RlQ2FyZC5nZXRBdHRyaWJ1dGUoJ2FjdGlvbi1kYXRhJykpOwogICAgICAgIGxpbmsudGV4dENvbnRlbnQgPSB1dGlsLnN0ci5maWxsKCd7e2ZvbGxvd1ZvdGVMaW5rfX0nKTsKICAgICAgICBmb290ZXIuYXBwZW5kQ2hpbGQobGluayk7CiAgICAgIH0KICAgICAgcGxhY2Vob2xkZXIucmVwbGFjZVdpdGgoY29udGFpbmVyKTsKICAgIH07CgogICAgb2JzZXJ2ZXIud2VpYm8uYWZ0ZXIoZnVuY3Rpb24gKGZlZWQpIHsKICAgICAgdmFyIHZvdGVDYXJkID0gZmVlZC5xdWVyeVNlbGVjdG9yKCcuV0JfZmVlZF9zcGVjW2FjdGlvbi10eXBlPSJmbF9qdW1wdXJsIl1bYWN0aW9uLWRhdGEqPSJ2b3RlLndlaWJvLmNvbSJdJyk7CiAgICAgIGlmICghdm90ZUNhcmQpIHJldHVybjsKICAgICAgdmFyIHVybCA9IHV0aWwuc3RyLnBhcnNlcXVlcnkodm90ZUNhcmQuZ2V0QXR0cmlidXRlKCdhY3Rpb24tZGF0YScpKS51cmw7CiAgICAgIGlmICh1cmwuaW5kZXhPZignaHR0cHM6Ly92b3RlLndlaWJvLmNvbS9oNS9pbmRleC9pbmRleD8nKSAhPT0gMCkgcmV0dXJuOwogICAgICB2YXIgdm90ZUlkID0gdXRpbC5zdHIucGFyc2VxdWVyeSh1cmwuc2xpY2UodXJsLmluZGV4T2YoJz8nKSArIDEpKS52b3RlX2lkOwogICAgICBpZiAoIXZvdGVJZCkgcmV0dXJuOwogICAgICB2YXIgcGxhY2Vob2xkZXIgPSB1dGlsLmRvbS5jcmVhdGUoJ2RpdicsICcnKTsKICAgICAgdm90ZUNhcmQucGFyZW50Tm9kZS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChwbGFjZWhvbGRlciwgdm90ZUNhcmQucGFyZW50Tm9kZSk7CgogICAgICBuZXR3b3JrLnZvdGUodm90ZUlkLCBmdW5jdGlvbiAodm90ZVJlc3VsdCkgewogICAgICAgIHJlbmRlclJlc3VsdCh2b3RlUmVzdWx0LCBwbGFjZWhvbGRlciwgdm90ZUNhcmQpOwogICAgICB9KTsKICAgIH0pOwoKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICB2YXIgd2VpYm9fbGFyZ2VfZm9udCA9IGZpbHRlci5pdGVtcy5zdHlsZS50ZXh0LndlaWJvX2xhcmdlX2ZvbnQ7CiAgICAgIHZhciBmb250UmF0aW8gPSB3ZWlib19sYXJnZV9mb250LmNvbmYgPyB3ZWlib19sYXJnZV9mb250LnJlZi5yYXRpby5jb25mIDogMTAwOwogICAgICB2YXIgZm9udFNpemUgPSB7ICcxMjAnOiAxNiwgJzE1MCc6IDIxLCAnMjAwJzogMjgsICczMDAnOiA0MiB9W2ZvbnRSYXRpb10gfHwgMTI7CiAgICAgIHZhciBzbWFsbEltYWdlID0gZmlsdGVyLml0ZW1zLnN0eWxlLnN3ZWliby5pbWFnZV9zaXplLmNvbmY7CiAgICAgIHZhciBpbWFnZVNpemUgPSBzbWFsbEltYWdlICYmIGZvbnRTaXplIDw9IDE2ID8gMTIwIDogMjI1OwogICAgICB1dGlsLmNzcy5hZGQodXRpbC5zdHIuZmlsbCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgICAueWF3Zi12b3RlLWRldGFpbCB7IGZvbnQtc2l6ZToge3tmb250U2l6ZX19cHg7IH0KICAgICAgICAueWF3Zi12b3RlLWRldGFpbCB7IG1hcmdpbi1sZWZ0OiAxMHB4OyBwYWRkaW5nOiAxMHB4OyBib3gtc2hhZG93OiAwIDAgMnB4ICM3Nzc7IGJvcmRlci1yYWRpdXM6IDNweDsgfQogICAgICAgIC55YXdmLXZvdGUtdGl0bGUgeyBmb250LXdlaWdodDogYm9sZDsgfSAKICAgICAgICAueWF3Zi12b3RlLW9wdGlvbi1pdGVtIHsgYm9yZGVyOiAxcHggc29saWQgI2ViZWJlYjsgbWFyZ2luOiA1cHggMDsgbGluZS1oZWlnaHQ6IDI7IHBhZGRpbmc6IDAgNXB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IH0KICAgICAgICAueWF3Zi12b3RlLW9wdGlvbi10ZXh0IHsgZGlzcGxheTogZmxleDsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyB9CiAgICAgICAgLnlhd2Ytdm90ZS1vcHRpb24tdGl0bGUgeyBmbGV4OiAxIDEgYXV0bzsgfSAKICAgICAgICAueWF3Zi12b3RlLW9wdGlvbi1jb3VudCB7IGZsZXg6IDAgMCBhdXRvOyB9CiAgICAgICAgLnlhd2Ytdm90ZS1vcHRpb24tY291bnQ6OmJlZm9yZSB7IGNvbnRlbnQ6ICIoIjsgfQogICAgICAgIC55YXdmLXZvdGUtb3B0aW9uLWNvdW50OjphZnRlciB7IGNvbnRlbnQ6ICIpIjsgfQogICAgICAgIC55YXdmLXZvdGUtb3B0aW9uLWJhciB7IGNvbnRlbnQ6ICIgIjsgd2lkdGg6IGNhbGMoMTAwJSAqIHZhcigtLXlhd2Ytdm90ZS1yYXRpbykpOyBoZWlnaHQ6MTAwJTsgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDA7IGxlZnQ6IDA7IHotaW5kZXg6IDA7IH0KICAgICAgICAueWF3Zi12b3RlLXNlbGVjdGVkIHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KICAgICAgICAueWF3Zi12b3RlLXdpdGgtaW1hZ2UgeyBkaXNwbGF5OiBncmlkOyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7IGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwge3tpbWFnZVNpemV9fSk7IGdyaWQtZ2FwOiAxMHB4OyB9CiAgICAgICAgLnlhd2Ytdm90ZS13aXRoLWltYWdlIC55YXdmLXZvdGUtb3B0aW9uLWl0ZW0geyBtYXgtd2lkdGg6IHt7aW1hZ2VTaXplfX07IH0KICAgICAgICAueWF3Zi12b3RlLW9wdGlvbi1pbWFnZSB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMjsgbWFyZ2luOiAwIC01cHggLTVweDt9CiAgICAgICAgLnlhd2Ytdm90ZS1vcHRpb24taW1hZ2UgaW1nIHsgbWF4LXdpZHRoOiAxMDAlOyBtYXgtaGVpZ2h0OiAyMjVweDsgfQogICAgICAgIC55YXdmLXZvdGUtZm9vdGVyOmVtcHR5IHsgZGlzcGxheTogbm9uZTsgfQogICAgICAgIC55YXdmLXZvdGUtZm9vdGVyIHsgbWFyZ2luLXRvcDogMTBweDsgY3Vyc29yOiBwb2ludGVyOyB9CiAgICAgICovIG5vb3AoKTsgfSksIHsKICAgICAgICAnaW1hZ2VTaXplJzogaW1hZ2VTaXplLAogICAgICAgICdmb250U2l6ZSc6IGZvbnRTaXplLAogICAgICB9KSk7CiAgICB9LCAwKTsKICB9Cn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDlhbPms6jnm7jlhbPlt6XlhbcKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSgndG9vbCcsICdmb2xsb3dpbmd0b29sJywgJ3t7Zm9sbG93aW5nVG9vbHNUaXRsZX19Jyk7CgovLyDoh6rliqjmo4Dmn6XlhbPms6jkuoblk6rkupvkuroKZmlsdGVyLml0ZW1zLnRvb2wuZm9sbG93aW5ndG9vbC5hdXRvX2NoZWNrX2ZvbGxvd2luZyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnZm9sbG93aW5ndG9vbCcsCiAgJ3ZlcnNpb24nOiAzOTYsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLmF1dG9fY2hlY2tfZm9sbG93aW5nJywKICAndGV4dCc6ICd7e2F1dG9DaGVja0ZvbGxvd2luZ319JywKICAncmVmJzogewogICAgJ2ZyZXF1ZW5jeSc6IHsKICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgJ2RlZmF1bHQnOiAnMycsCiAgICAgICdzZWxlY3QnOiBbCiAgICAgICAgeyAndGV4dCc6ICd7e2F1dG9DaGVja0ZvbGxvd2luZzF9fScsICd2YWx1ZSc6ICcxJyB9LAogICAgICAgIHsgJ3RleHQnOiAne3thdXRvQ2hlY2tGb2xsb3dpbmczfX0nLCAndmFsdWUnOiAnMycgfSwKICAgICAgICB7ICd0ZXh0JzogJ3t7YXV0b0NoZWNrRm9sbG93aW5nN319JywgJ3ZhbHVlJzogJzcnIH0sCiAgICAgIF0sCiAgICB9LAogICAgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3thdXRvQ2hlY2tGb2xsb3dpbmdEZXNjfX0nIH0sCiAgfSwKICAnZ2V0X2xhc3QnOiBmdW5jdGlvbiAoKSB7CiAgICB0cnkgeyByZXR1cm4gSlNPTi5wYXJzZShHTV9nZXRWYWx1ZSgnZm9sbG93aW5nX2luZm9fJyArIHV0aWwuaW5mby51aWQsICd7fScpKTsgfQogICAgY2F0Y2ggKGUxKSB7IHJldHVybiB7fTsgfQogIH0sCiAgJ2dldF9ub3RpY2UnOiBmdW5jdGlvbiAoKSB7CiAgICB0cnkgeyByZXR1cm4gSlNPTi5wYXJzZShHTV9nZXRWYWx1ZSgnZm9sbG93aW5nX25vdGljZV8nICsgdXRpbC5pbmZvLnVpZCwgJ3t9JykpOyB9CiAgICBjYXRjaCAoZTEpIHsgcmV0dXJuIHt9OyB9CiAgfSwKICAnY3VycmVudCc6IHsgJ2ZldGNoaW5nJzogZmFsc2UgfSwKICAndXBkYXRlaW5mbyc6IHV0aWwuZnVuYy5ub29wLAogICdjaGVja25vdyc6IGZ1bmN0aW9uICh1c2VyQWN0aXZlKSB7CiAgICB1dGlsLmRlYnVnKCdzdGFydCBjaGVja2luZyBmb2xsb3dpbmcgbGlzdCcpOwogICAgdmFyIHRoYXQgPSB0aGlzLCB1aWQgPSB1dGlsLmluZm8udWlkOwogICAgdGhpcy5jdXJyZW50LmZldGNoaW5nID0gdHJ1ZTsgdGhpcy51cGRhdGVpbmZvKCk7CiAgICAvLyDojrflj5blhbPms6jliJfooagKICAgIG5ldHdvcmsuZm9sbG93aW5nKGZ1bmN0aW9uICh1c2VycykgewogICAgICB0aGF0LmN1cnJlbnQuZmV0Y2hpbmcgPSBmYWxzZTsKICAgICAgdmFyIGxhc3QgPSB0aGF0LmdldF9sYXN0KCk7CiAgICAgIHV0aWwuZGVidWcoJ2dvdCBmb2xsb3dpbmcgbGlzdDogJW8nLCB1c2Vycyk7CiAgICAgIEdNX3NldFZhbHVlKCdmb2xsb3dpbmdfaW5mb18nICsgdWlkLCBKU09OLnN0cmluZ2lmeSh7ICd0aW1lc3RhbXAnOiBEYXRlLm5vdygpLCAnZm9sbG93aW5nJzogdXNlcnMgfSkpOwogICAgICB2YXIgbm90aWNlID0gdGhhdC5jb21wYXJlKGxhc3QuZm9sbG93aW5nLCB1c2VycywgdGhhdC5nZXRfbm90aWNlKCkpOwogICAgICBHTV9zZXRWYWx1ZSgnZm9sbG93aW5nX25vdGljZV8nICsgdWlkLCBKU09OLnN0cmluZ2lmeShub3RpY2UpKTsKICAgICAgdGhhdC51cGRhdGVpbmZvKCk7CiAgICAgIC8vIOS7heW9k+aYr+eUqOaIt+inpuWPkeeahOajgOafpeaXtuWxleekuuajgOafpee7k+aenO+8jOiHquWKqOajgOafpeeahOWwhuWcqOS4i+asoeWIt+aWsOmhtemdouaXtuWxleekuuS7peWFjeaJk+aJsOeUqOaItwogICAgICBpZiAodXNlckFjdGl2ZSkgdGhhdC5ub3RpY2UoKTsKICAgIH0pOwogIH0sCiAgJ25vdGljZSc6IGZ1bmN0aW9uICgpIHsKICAgIGlmIChzZWxmICE9PSB0b3ApIHJldHVybjsKICAgIHZhciB0aGF0ID0gdGhpcywgbm90aWNlID0gdGhpcy5nZXRfbm90aWNlKCk7CiAgICBpZiAoIW5vdGljZS5hZGQgfHwgIW5vdGljZS5sb3N0IHx8ICEobm90aWNlLmFkZC5sZW5ndGggKyBub3RpY2UubG9zdC5sZW5ndGgpKSByZXR1cm47CiAgICB1dGlsLmRlYnVnKCdmb2xsb3dpbmcgbGlzdCBoYXZlIGJlZW4gY2hhbmdlZDogJW8nLCBub3RpY2UpOwogICAgLy8g5bGV56S65LiA5Liq5a+56K+d5qGG77yM5o+Q6YaS55So5oi35YWz5rOo5YiX6KGo5Y+R55Sf5LqG5Y+Y5YyWCiAgICB2YXIgZGlhbG9nID0gdXRpbC51aS5kaWFsb2coJ3lhd2YtZm9sbG93aW5nLW5vdGljZScsICd7e2F1dG9DaGVja0ZvbGxvd2luZ0RpYWxvZ1RpdGxlfX0nLCBmdW5jdGlvbiAoaW5uZXIpIHsKICAgICAgdmFyIGNvbnRlbnQgPSB1dGlsLmRvbS5jcmVhdGUodXRpbC5zdHIuZmlsbChodG1sLmF1dG9DaGVja0ZvbGxvd2luZ0JvZHkpKTsKICAgICAgWydhZGQnLCAnbG9zdCddLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHsKICAgICAgICBpZiAoIShub3RpY2VbdHlwZV0gfHwgW10pLmxlbmd0aCkgcmV0dXJuOwogICAgICAgIHZhciBjb250YWluZXIgPSBjb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy55YXdmLWZvbGxvd2luZy0nICsgdHlwZSk7CiAgICAgICAgdmFyIHVsID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJ3VsJyk7CiAgICAgICAgaWYgKG5vdGljZVt0eXBlXSAmJiBub3RpY2VbdHlwZV0ubGVuZ3RoKSB7CiAgICAgICAgICBub3RpY2VbdHlwZV0uZm9yRWFjaChmdW5jdGlvbiAodSkgewogICAgICAgICAgICB1bC5hcHBlbmRDaGlsZCh1dGlsLmRvbS5jcmVhdGUodS5pZFswXSAhPT0gJyMnID8gLy8g5ZCR5YmN5YW85a6555qE5aSE55CG5pa55byP77yM5bCG5p2l6KaB5o2i5oiQ5L2/55SoZGVzY3JpcHRpb24KICAgICAgICAgICAgICB1dGlsLnN0ci5maWxsKGh0bWwuYXV0b0NoZWNrRm9sbG93aW5nSXRlbSwgdSkgOgogICAgICAgICAgICAgIHV0aWwuc3RyLmZpbGwoaHRtbC5hdXRvQ2hlY2tGb2xsb3dpbmdPdGhlckl0ZW0sIHUpCiAgICAgICAgICAgICkpOwogICAgICAgICAgfSk7CiAgICAgICAgICBjb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICcnOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHZhciBjb25maXJtID0gY29udGVudC5xdWVyeVNlbGVjdG9yKCcueWF3Zi1mb2xsb3dpbmctbm90aWNlLWNvbmZpcm0nKTsKICAgICAgY29uZmlybS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgaWYgKCdpc1RydXN0ZWQnIGluIGUgJiYgIWUuaXNUcnVzdGVkKSByZXR1cm47IC8vIOi/meS4quehruiupOaTjeS9nOS4jeW6lOW9k+iiq+WFtuS7luiEmuacrOinpuWPkQogICAgICAgIHZhciBjdXJyZW50ID0gdGhhdC5nZXRfbm90aWNlKCk7CiAgICAgICAgWydhZGQnLCAnbG9zdCddLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHsKICAgICAgICAgIGN1cnJlbnRbdHlwZV0gPSBjdXJyZW50W3R5cGVdLmZpbHRlcihmdW5jdGlvbiAodSkgewogICAgICAgICAgICByZXR1cm4gbm90aWNlW3R5cGVdLmV2ZXJ5KGZ1bmN0aW9uICh2KSB7IHJldHVybiB2LmlkICE9PSB1LmlkOyB9KTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIEdNX3NldFZhbHVlKCdmb2xsb3dpbmdfbm90aWNlXycgKyB1dGlsLmluZm8udWlkLCBKU09OLnN0cmluZ2lmeShjdXJyZW50KSk7CiAgICAgICAgZGlhbG9nLmhpZGUoKTsKICAgICAgfSk7CiAgICAgIGlubmVyLmFwcGVuZENoaWxkKGNvbnRlbnQpOwogICAgfSk7CiAgICBkaWFsb2cuc2hvdygpOwogIH0sCiAgJ2NsZWFudXAnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdWlkID0gdXRpbC5pbmZvLnVpZDsKICAgIEdNX2RlbGV0ZVZhbHVlKCdmb2xsb3dpbmdfbm90aWNlXycgKyB1aWQpOwogICAgR01fZGVsZXRlVmFsdWUoJ2ZvbGxvd2luZ19pbmZvXycgKyB1aWQpOwogICAgdGhpcy51cGRhdGVpbmZvKCk7CiAgfSwKICAnZG93bmxvYWQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdWlkID0gdXRpbC5pbmZvLnVpZDsKICAgIHZhciBkYXRhID0gdGhpcy5nZXRfbGFzdCgpOwogICAgdmFyIHRpbWVzdGFtcCA9IGRhdGEudGltZXN0YW1wOwogICAgdmFyIGZvbGxvd2luZyA9IGRhdGEuZm9sbG93aW5nOwogICAgdmFyIGNzdkl0ZW0gPSBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgIGlmICghL1siLFxzXS8udGVzdChzdHJpbmcpKSByZXR1cm4gc3RyaW5nOwogICAgICByZXR1cm4gJyInICsgc3RyaW5nLnJlcGxhY2UoLyIvZywgJyIiJykgKyAnIic7CiAgICB9OwogICAgdmFyIGxpbmsgPSB1dGlsLmRvbS5jcmVhdGUoJ2EnLCAnJyk7CiAgICB2YXIgZm9ybWF0VXJsID0gZnVuY3Rpb24gKHVybCkgewogICAgICBsaW5rLmhyZWYgPSAnaHR0cHM6Ly93ZWliby5jb20vJzsKICAgICAgbGluay5ocmVmID0gdXJsOwogICAgICByZXR1cm4gbGluay5ocmVmOwogICAgfTsKICAgIC8vIOi/memHjOaIkeS7rOeUqOS4iiBCT00g5Y+v5Lul6I635b6X5pu05aW955qE5YW85a655oCnCiAgICAvLyDlnKjliY3pnaLmlL7kuIDliJfluo/lj7fvvIzov5nmoLfljbPkvr/kuI3og73lpITnkIYgQk9NIO+8jOS5n+WPr+S7pei6suW8gOacgOWJjemdouS4gOihjOeahOW6j+aVsO+8jOS4jeS8muWHuuS7gOS5iOmXrumimAogICAgdmFyIGNvbnRlbnQgPSAnXHVmZWZmIyxuYW1lLGhvbWVwYWdlLGF2YXRhclxyXG4nICsgZm9sbG93aW5nLm1hcChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgdmFyIG5hbWUgPSBjc3ZJdGVtKGl0ZW0ubmFtZSk7CiAgICAgIHZhciBob21lcGFnZSA9IGNzdkl0ZW0oZm9ybWF0VXJsKGl0ZW0uaHJlZikpOwogICAgICB2YXIgYXZhdGFyID0gY3N2SXRlbShmb3JtYXRVcmwoaXRlbS5hdmF0YXIpKTsKICAgICAgcmV0dXJuIFtpbmRleCArIDEsIG5hbWUsIGhvbWVwYWdlLCBhdmF0YXJdLmpvaW4oJywnKTsKICAgIH0pLmpvaW4oJ1xyXG4nKSArICdcclxuJzsgLy8gQ1JMRiDmjaLooYznrKbmlK/mjIHmlYjmnpzmnIDlpb3vvIzogIzkuJTkuZ/mm7TlkIjkuY7op4TojIMKICAgIHZhciBibG9iID0gbmV3IEJsb2IoW2NvbnRlbnRdLCB7ICd0eXBlJzogJ3RleHQvY3N2JyB9KTsKICAgIHZhciB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOwogICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSh0aW1lc3RhbXApLnRvSVNPU3RyaW5nKCkucmVwbGFjZSgvWy1dfFQuKi9nLCAnJyk7CiAgICB2YXIgZmlsZW5hbWUgPSAnZm9sbG93aW5nLScgKyB1dGlsLmluZm8udWlkICsgJy0nICsgZGF0ZSArICcuY3N2JzsKICAgIHZhciBhID0gdXRpbC5kb20uY3JlYXRlKCdhJywgJycpOwogICAgYS5ocmVmID0gdXJsOyBhLmRvd25sb2FkID0gZmlsZW5hbWU7CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOyBhLmNsaWNrKCk7CiAgICB1dGlsLmZ1bmMuY2FsbChmdW5jdGlvbiAoKSB7CiAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTsKICAgICAgYS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGEpOwogICAgfSk7CiAgfSwKICAnY29tcGFyZSc6IGZ1bmN0aW9uIChvcmksIG5vdywgbm90aWNlKSB7CiAgICBpZiAoIW9yaSB8fCAhbm93KSByZXR1cm4ge307CiAgICB2YXIgYWRkID0gW10sIGxvc3QgPSBbXTsKICAgIHZhciBvcmlfbSA9IHt9LCBub3dfbSA9IHt9OwogICAgdmFyIGF0dHIgPSAnaWQnOwogICAgb3JpLmZvckVhY2goZnVuY3Rpb24gKHUpIHsgb3JpX21bdVthdHRyXV0gPSB1OyB9KTsKICAgIHRyeSB7CiAgICAgICgobm90aWNlIHx8IHt9KS5hZGQgfHwgW10pLmZvckVhY2goZnVuY3Rpb24gKHUpIHsgZGVsZXRlIG9yaV9tW3VbYXR0cl1dOyB9KTsKICAgICAgKChub3RpY2UgfHwge30pLmxvc3QgfHwgW10pLmZvckVhY2goZnVuY3Rpb24gKHUpIHsgb3JpX21bdVthdHRyXV0gPSB1OyB9KTsKICAgIH0gY2F0Y2ggKGUpIHsgfQogICAgbm93LmZvckVhY2goZnVuY3Rpb24gKHUpIHsgbm93X21bdVthdHRyXV0gPSB1OyB9KTsKICAgIE9iamVjdC5rZXlzKG9yaV9tKS5mb3JFYWNoKGZ1bmN0aW9uIChpZCkgeyB2YXIgdSA9IG9yaV9tW2lkXTsgaWYgKCEodVthdHRyXSBpbiBub3dfbSkpIGxvc3QucHVzaCh1KTsgfSk7CiAgICBPYmplY3Qua2V5cyhub3dfbSkuZm9yRWFjaChmdW5jdGlvbiAoaWQpIHsgdmFyIHUgPSBub3dfbVtpZF07IGlmICghKHVbYXR0cl0gaW4gb3JpX20pKSBhZGQucHVzaCh1KTsgfSk7CiAgICByZXR1cm4geyAnYWRkJzogYWRkLCAnbG9zdCc6IGxvc3QgfTsKICB9LAogICdpbml0JzogZnVuY3Rpb24gKCkgewogICAgLy8g5oC75piv5qOA5p+l5piv5ZCm5pyJ5raI5oGv6ZyA6KaB5o+Q56S677yM5Y2z5L6/5rKh5pyJ5byA5ZCv4oCc6Ieq5Yqo5qOA5p+l4oCd55qE5Yqf6IO9CiAgICB2YXIgbGFzdCA9IHRoaXMuZ2V0X2xhc3QoKSwgZGF5cyA9IE51bWJlcih0aGlzLnJlZi5mcmVxdWVuY3kuY29uZikgfHwgMzsKICAgIHRoaXMubm90aWNlKCk7CiAgICBpZiAoIXRoaXMuY29uZikgcmV0dXJuOwogICAgaWYgKCFsYXN0LnRpbWVzdGFtcCB8fAogICAgICBsYXN0LnRpbWVzdGFtcCA8IERhdGUubm93KCkgLSBkYXlzICogODY0ZTUgfHwKICAgICAgbGFzdC50aW1lc3RhbXAgPiBEYXRlLm5vdygpICsgNjBlMykKICAgICAgc2V0VGltZW91dCh0aGlzLmNoZWNrbm93LmJpbmQodGhpcywgZmFsc2UpLCAxNWUzKTsKICB9LAogICdzaG93bic6IGZ1bmN0aW9uIChkb20pIHsKICAgIHZhciBsYXN0ID0gdGhpcy5nZXRfbGFzdCgpOwogICAgdmFyIGZvcm1hdFRpbWUgPSBmdW5jdGlvbiAodGltZXN0YW1wKSB7CiAgICAgIHZhciBvcHRpb24gPSB7IHllYXI6ICdudW1lcmljJywgbW9udGg6ICdsb25nJywgZGF5OiAnbnVtZXJpYycsIGhvdXI6ICdudW1lcmljJywgbWludXRlOiAnbnVtZXJpYycsIHNlY29uZDogJ251bWVyaWMnIH07CiAgICAgIGlmICghdGltZXN0YW1wKSByZXR1cm4gdXRpbC5zdHIuZmlsbCgne3thdXRvQ2hlY2tGb2xsb3dpbmdOZXZlcn19Jyk7CiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUodGltZXN0YW1wKTsKICAgICAgdHJ5IHsgcmV0dXJuIG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KHV0aWwuaW5mby5sYW5nLCBvcHRpb24pLmZvcm1hdChkYXRlKTsgfQogICAgICBjYXRjaCAoZTEpIHsKICAgICAgICB0cnkgeyByZXR1cm4gbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQoJ3poLUNOJywgb3B0aW9uKS5mb3JtYXQoZGF0ZSk7IH0KICAgICAgICBjYXRjaCAoZTIpIHsgcmV0dXJuICcnICsgdGltZXN0YW1wOyB9CiAgICAgIH0KICAgIH07CiAgICBkb20uYXBwZW5kQ2hpbGQodXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC5hdXRvQ2hlY2tGb2xsb3dpbmdDb25maWcpKSk7CiAgICBkb20ucXVlcnlTZWxlY3RvcignLnlhd2YtZm9sbG93aW5nLWNoZWNrLW5vdycpCiAgICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuY2hlY2tub3cuYmluZCh0aGlzLCB0cnVlKSk7CiAgICBkb20ucXVlcnlTZWxlY3RvcignLnlhd2YtZm9sbG93aW5nLWRvd25sb2FkJykKICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5kb3dubG9hZC5iaW5kKHRoaXMsIHRydWUpKTsKICAgIGRvbS5xdWVyeVNlbGVjdG9yKCcueWF3Zi1mb2xsb3dpbmctY2xlYXInKQogICAgICAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmNsZWFudXAuYmluZCh0aGlzLCB0cnVlKSk7CiAgICB0aGlzLnVwZGF0ZWluZm8gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBsYXN0ID0gdGhpcy5nZXRfbGFzdCgpOwogICAgICB2YXIgZmV0Y2hpbmcgPSB0aGlzLmN1cnJlbnQuZmV0Y2hpbmc7CiAgICAgIHZhciBzdGF0dXMgPSBmZXRjaGluZyA/IDIgOiAobGFzdC50aW1lc3RhbXAgPiBEYXRlLm5vdygpIC0gMTgwMGUzID8gMyA6IDEpOwogICAgICBkb20ucXVlcnlTZWxlY3RvcignLnlhd2YtZm9sbG93aW5nLWNoZWNrLW5vdycpLnN0eWxlLmRpc3BsYXkgPSBzdGF0dXMgPT09IDEgPyAnJyA6ICdub25lJzsKICAgICAgZG9tLnF1ZXJ5U2VsZWN0b3IoJy55YXdmLWZvbGxvd2luZy1jaGVja2luZycpLnN0eWxlLmRpc3BsYXkgPSBzdGF0dXMgPT09IDIgPyAnJyA6ICdub25lJzsKICAgICAgZG9tLnF1ZXJ5U2VsZWN0b3IoJy55YXdmLWZvbGxvd2luZy1sYXN0JykudGV4dENvbnRlbnQgPSBmb3JtYXRUaW1lKGxhc3QudGltZXN0YW1wKTsKICAgICAgZG9tLnF1ZXJ5U2VsZWN0b3IoJy55YXdmLWZvbGxvd2luZy1jbGVhcicpLnN0eWxlLmRpc3BsYXkgPSBOdW1iZXIobGFzdC50aW1lc3RhbXApID8gJycgOiAnbm9uZSc7CiAgICAgIGRvbS5xdWVyeVNlbGVjdG9yKCcueWF3Zi1mb2xsb3dpbmctZG93bmxvYWQnKS5zdHlsZS5kaXNwbGF5ID0gTnVtYmVyKGxhc3QudGltZXN0YW1wKSA/ICcnIDogJ25vbmUnOwogICAgfTsKICAgIHRoaXMudXBkYXRlaW5mbygpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDoh6rliqjlsZXlvIDlpLTmnaHmlofnq6Dku6XlhY3lhbPms6jkvZzogIUKZmlsdGVyLml0ZW1zLnRvb2wuZm9sbG93aW5ndG9vbC5hdXRvX3VuZm9sZF90dGFydGljYWwgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2ZvbGxvd2luZ3Rvb2wnLAogICd2ZXJzaW9uJzogMzk1LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5hdXRvX3VuZm9sZF90dGFydGljYWwnLAogICd0ZXh0JzogJ3t7dW5mb2xkVFRBcnRpY2FsfX0nLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgLldCX2VkaXRvcl9pZnJhbWUsIC5XQl9lZGl0b3JfaWZyYW1lX25ldyB7IGhlaWdodDogYXV0byAhaW1wb3J0YW50OyB9CiAgICAgIC5hcnRpY2FsX2FkZF9ib3ggW25vZGUtdHlwZT0ibWFza0NvbnRlbnQiXSB7IGRpc3BsYXk6IG5vbmU7IH0KICAgICovIG5vb3AoKTsgfSkpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDlj5bmtojli77pgInor53popjpobXpnaLlj5HluIPmoYbigJzoh6rliqjlhbPms6jor53popjkuLvmjIHkurrigJ0KZmlsdGVyLml0ZW1zLnRvb2wuZm9sbG93aW5ndG9vbC51bmNoZWNrX2ZvbGxvd19wcmVzZW50ZXIgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2ZvbGxvd2luZ3Rvb2wnLAogICd2ZXJzaW9uJzogMTU1LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC51bmNoZWNrX2ZvbGxvd19wcmVzZW50ZXInLAogICd0ZXh0JzogJ3t7dW5jaGVja0ZvbGxvd1ByZXNlbnRlcn19JywKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdW5jaGVja0ZvbGxvd1ByZXNlbnRlciA9IGZ1bmN0aW9uIHVuY2hlY2tGb2xsb3dQcmVzZW50ZXIoKSB7CiAgICAgIHZhciBpbnB1dHMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9ImNoZWNrYm94Il1bY2hlY2tlZF1bYWN0aW9uLWRhdGEqPSJmb2xsb3ciXTpub3QoW3lhd2YtdW5jaGVjay1mb2xsb3ddKScpKTsKICAgICAgaW5wdXRzLmZvckVhY2goY2hlY2tib3ggPT4gewogICAgICAgIGNoZWNrYm94LnNldEF0dHJpYnV0ZSgneWF3Zi11bmNoZWNrJywgJycpOwogICAgICAgIGlmIChjaGVja2JveC5jaGVja2VkKSBjaGVja2JveC5jbGljaygpOwogICAgICB9KTsKICAgIH07CiAgICBvYnNlcnZlci5kb20uYWRkKHVuY2hlY2tGb2xsb3dQcmVzZW50ZXIpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7CgovLyDlhbbku5blt6XlhbcKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSgndG9vbCcsICdvdGhlcnRvb2wnLCAne3tvdGhlclRvb2xzVGl0bGV9fScpOwoKLy8g6KGo5oOF5pa55L6/6L6T5YWlCmZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5mYXN0X2Vtb2ppID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdvdGhlcnRvb2wnLAogICd2ZXJzaW9uJzogMjI2LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5mYXN0X2Vtb2ppJywKICAndGV4dCc6ICd7e2Zhc3RFbW9qaUlucHV0fX0nLAogICdyZWYnOiB7CiAgICAndG9wJzogeyAndHlwZSc6ICdub3VpJywgJ2RlZmF1bHQnOiBbbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbF0gfSwKICAgICdyZWNlbnQnOiB7ICd0eXBlJzogJ25vdWknLCAnZGVmYXVsdCc6IFtudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsXSB9LAogIH0sCiAgJ3Nob3duJzogZnVuY3Rpb24gKGRvbSkgewogICAgdmFyIHRoYXQgPSB0aGlzOwogICAgdmFyIGNsZWFyID0gZG9tLmFwcGVuZENoaWxkKHV0aWwuZG9tLmNyZWF0ZSh1dGlsLnN0ci5maWxsKGh0bWwuZmFzdEVtb2ppQ2xlYXJCdXR0b24pKSk7CiAgICBjbGVhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIG5pbCA9IFtudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsXTsKICAgICAgdGhhdC5yZWYudG9wLnB1dGNvbmYobmlsKTsgdGhhdC5yZWYucmVjZW50LnB1dGNvbmYobmlsKTsKICAgIH0pOwogIH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIHRoYXQgPSB0aGlzOwogICAgdmFyIG9ucHV0cyA9IHsgJ3RvcCc6IG51bGwsICdyZWNlbnQnOiBudWxsIH07CiAgICAvLyDmmL7npLrkuIDkuKrooajmg4XvvJvogYrlpKnnqpflj6Pph4zpnaLooajmg4XovpPlhaXnmoTmoLzlvI/lkozliKvnmoTlnLDmlrnkuI3kuIDmoLcKICAgIHZhciBjcmVhdGVMaSA9IGZ1bmN0aW9uIChpdGVtLCBpc0ltKSB7CiAgICAgIGlmICghaXRlbSkgcmV0dXJuIHV0aWwuZG9tLmNyZWF0ZSgnbGknLCAnJyk7CiAgICAgIHZhciBiYXNlID0gaXNJbSA/IGh0bWwuZmFzdEVtb2ppTGlzdEl0ZW1JTSA6IGh0bWwuZmFzdEVtb2ppTGlzdEl0ZW07CiAgICAgIHJldHVybiB1dGlsLmRvbS5jcmVhdGUoJ3VsJywgdXRpbC5zdHIuZmlsbChiYXNlLCBpdGVtKSkuZmlyc3RDaGlsZDsKICAgIH07CiAgICAvLyDlsIbliJfooajmmL7npLrlh7rmnaUKICAgIHZhciBzaG93ID0gZnVuY3Rpb24gKHVsLCBsaXN0LCBrZWVwLCBpc0ltKSB7CiAgICAgIC8vLyA8cGFyYW0gbmFtZT0idWwiIHR5cGU9IkhUTUxVTGlzdEVsZW1lbnQiPkRlc2NyaXB0aW9uPC9wYXJhbT4KICAgICAgdmFyIGxpcyA9IEFycmF5LmZyb20odWwucXVlcnlTZWxlY3RvckFsbCgnbGknKSk7CiAgICAgIHZhciByZXBsYWNlID0gZnVuY3Rpb24gKGksIGl0ZW0pIHsKICAgICAgICB2YXIgbiA9IGNyZWF0ZUxpKGl0ZW0sIGlzSW0pOwogICAgICAgIHVsLnJlcGxhY2VDaGlsZChuLCBsaXNbaV0pOwogICAgICAgIGxpc1tpXSA9IG47CiAgICAgIH07CiAgICAgIHZhciBuYW1lID0gZnVuY3Rpb24gKGxpKSB7IHJldHVybiBsaS50aXRsZSB8fCBudWxsOyB9OwogICAgICB2YXIgdXBkYXRlID0ga2VlcCA/ZnVuY3Rpb24gKGxpc3QpIHsKICAgICAgICAvLyDmm7TmlrDliJfooajvvIzmr5TovoPlt67lvILlubblsL3ph4/lsJHkv67mlLnlt7LmnInnmoTmjpLliJfpobrluo8KICAgICAgICB2YXIgbnRpdGxlID0gW10sIGVtb2ppID0ge30sIGVtcHR5cyA9IFtdOwogICAgICAgIC8vIOe7n+iuoeacieWTquS6m+ihqOaDhei/mOimgQogICAgICAgIGxpc3QuZm9yRWFjaChmdW5jdGlvbiAoaSkgewogICAgICAgICAgaWYgKCFpIHx8ICFpLnRpdGxlKSByZXR1cm47CiAgICAgICAgICBudGl0bGUucHVzaChpLnRpdGxlKTsgZW1vamlbaS50aXRsZV0gPSBpOwogICAgICAgIH0pOwogICAgICAgIC8vIOaKiuS4jeWcqOWIl+ihqOS4reeahOWIoOmZpAogICAgICAgIGxpcy5mb3JFYWNoKGZ1bmN0aW9uIChsaSwgaSkgewogICAgICAgICAgdmFyIHRpdGxlID0gbmFtZShsaSksIHBvcyA9IHRpdGxlID8gbnRpdGxlLmluZGV4T2YodGl0bGUpIDogLTE7CiAgICAgICAgICBpZiAocG9zICE9PSAtMSkgbnRpdGxlLnNwbGljZShwb3MsIDEpOwogICAgICAgICAgZWxzZSBpZiAodGl0bGUpIHJlcGxhY2UoaSk7CiAgICAgICAgICBpZiAocG9zID09PSAtMSkgZW1wdHlzLnB1c2goaSk7CiAgICAgICAgfSk7CiAgICAgICAgLy8g5b6A56m65L2N6YeM6Z2i5aGe5paw55qE6KGo5oOFCiAgICAgICAgbnRpdGxlLmZvckVhY2goZnVuY3Rpb24gKHRpdGxlKSB7IHJlcGxhY2UoZW1wdHlzLnNoaWZ0KCksIGVtb2ppW3RpdGxlXSk7IH0pOwogICAgICB9IDogZnVuY3Rpb24gKGxpc3QpIHsKICAgICAgICAvLyDmm7TmlrDliJfooajvvIzkv53or4HkvY3nva7nmoTlr7nlupTlhbPns7sKICAgICAgICBsaXN0LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGkpIHsKICAgICAgICAgIGlmIChsaXNbaV0udGl0bGUgPT09IChpdGVtICYmIGl0ZW0udGl0bGUgfHwgJycpKSByZXR1cm47CiAgICAgICAgICByZXBsYWNlKGksIGl0ZW0pOwogICAgICAgIH0pOwogICAgICB9OwogICAgICB1cGRhdGUobGlzdCk7CiAgICAgIHJldHVybiB7ICd1cGRhdGUnOiB1cGRhdGUgfTsKICAgIH07CiAgICAvLyDku47ooqvngrnlh7vnmoTlr7nosaHvvIjlm77niYfmiJbogIXliJfooajpobnvvInlvpfliLDooajmg4XnmoTnm7jlhbPkv6Hmga8KICAgIHZhciBnZXRFbW9qaSA9IGZ1bmN0aW9uICh0YXJnZXQpIHsKICAgICAgaWYgKHV0aWwuZG9tLm1hdGNoZXModGFyZ2V0LCAnbGk+aW1nJykpIHRhcmdldCA9IHRhcmdldC5wYXJlbnROb2RlOwogICAgICB0cnkgewogICAgICAgIHZhciBlbW9qaSA9IHsKICAgICAgICAgICd0aXRsZSc6IHRhcmdldC50aXRsZSwKICAgICAgICAgICd0ZXh0JzogdXRpbC5zdHIucGFyc2VxdWVyeSh0YXJnZXQuZ2V0QXR0cmlidXRlKCdhY3Rpb24tZGF0YScpKS5pbnNlcnQsCiAgICAgICAgICAnaW1nJzogdGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoJ2ltZycpLnNyYwogICAgICAgIH07CiAgICAgICAgaWYgKCFlbW9qaS50aXRsZSB8fCAhZW1vamkudGV4dCB8fCAhZW1vamkuaW1nKSByZXR1cm4gbnVsbDsKICAgICAgICByZXR1cm4gZW1vamk7CiAgICAgIH0gY2F0Y2ggKGUpIHsgcmV0dXJuIG51bGw7IH0KICAgIH07CiAgICAvLyDlsIbmn5DkuKrorr7nva7pobnlkozmmL7npLrnmoTnlYzpnaLnu5PlkIgKICAgIHZhciBiaW5kY29uZiA9IGZ1bmN0aW9uIChsaXN0LCB0eXBlLCBrZWVwLCBpc0ltKSB7CiAgICAgIG9ucHV0c1t0eXBlXSA9IGZ1bmN0aW9uIChjb25mKSB7IHNob3cobGlzdCwgY29uZiwga2VlcCwgaXNJbSk7IH07CiAgICAgIG9ucHV0c1t0eXBlXSh0aGF0LnJlZlt0eXBlXS5nZXRjb25mKCkpOwogICAgfTsKICAgIC8vIOS7juWIl+ihqOS4reenu+mZpOmHjeWkjeeahOmhue+8jOW5tuS/neeVmSAxMCDkuKoKICAgIHZhciByZW1vdmVEdXBsaWNhdGUgPSBmdW5jdGlvbiAobGlzdCkgewogICAgICB2YXIgcmVjID0ge30sIHJldCA9IFtdOwogICAgICBsaXN0LmZvckVhY2goZnVuY3Rpb24gKGkpIHsKICAgICAgICBpZiAoIWkgfHwgaS50aXRsZSBpbiByZWMpIHJldHVybjsKICAgICAgICByZXQucHVzaChyZWNbaS50aXRsZV0gPSBpKTsKICAgICAgfSk7CiAgICAgIHdoaWxlIChyZXQubGVuZ3RoIDwgMTApIHJldC5wdXNoKG51bGwpOwogICAgICByZXR1cm4gcmV0LnNsaWNlKDAsIDEwKTsKICAgIH07CiAgICAvLyDlnKjnlKjmiLfngrnlh7vooajmg4XlkI7mm7TmlrDmnIDov5Hkvb/nlKjnmoTooajmg4UKICAgIHZhciB1cGRhdGVSZWNlbnQgPSBmdW5jdGlvbiAoZSkgewogICAgICB2YXIgZW1vamkgPSBnZXRFbW9qaShlLnRhcmdldCk7IGlmICghZW1vamkpIHJldHVybjsKICAgICAgdmFyIHJlY2VudCA9IFtlbW9qaV0uY29uY2F0KHRoYXQucmVmLnJlY2VudC5nZXRjb25mKCkpOwogICAgICB0aGF0LnJlZi5yZWNlbnQucHV0Y29uZihyZW1vdmVEdXBsaWNhdGUocmVjZW50KS5zbGljZSgwLCAxMCkpOwogICAgfTsKICAgIC8vIOWcqOiuvue9ruS/ruaUueS5i+WQjuWQjOatpeWIsOaYvuekuuS4iuWOuwogICAgWyd0b3AnLCAncmVjZW50J10uZm9yRWFjaChmdW5jdGlvbiAodHlwZSkgewogICAgICB1dGlsLmNvbmZpZy5vbnB1dCh0aGF0LnJlZlt0eXBlXS5rZXksIGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAob25wdXRzW3R5cGVdKSBvbnB1dHNbdHlwZV0uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfSk7CiAgICB9KTsKICAgIC8vIOS9v+eUqOaLluaLvee9rumhtuihqOaDhQogICAgdmFyIGRyYWdFbW9qaSA9IGZ1bmN0aW9uIChjb250YWluZXIsIHVsKSB7CiAgICAgIC8vIOaYvuekuuWSjOmakOiXj+aPkOekuuaLluaLveeahOagh+ivrQogICAgICB2YXIgbm90aWNlID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJyN5YXdmLWZhY2UtZHJvcC1hcmVhJyk7CiAgICAgIHZhciBzaG93Tm90aWNlID0gZnVuY3Rpb24gKCkgeyBub3RpY2Uuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7IH07CiAgICAgIHZhciBoaWRlTm90aWNlID0gZnVuY3Rpb24gKCkgewogICAgICAgIG5vdGljZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICB9OwogICAgICAvLyDmi5bmi70KICAgICAgdmFyIGRyYWdnaW5nID0gbnVsbCwgbGlzOwogICAgICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ3N0YXJ0JywgZnVuY3Rpb24gKGUpIHsKICAgICAgICBkcmFnZ2luZyA9IGdldEVtb2ppKGUudGFyZ2V0KSB8fCBudWxsOwogICAgICAgIC8vIOW8gOWni+aLluaLveeahOaXtuWAme+8jOagh+iusOaJgOacieebrueahOWcsOS4uuWPr+e8lui+keeahAogICAgICAgIGxpcyA9IEFycmF5LmZyb20odWwuY2hpbGROb2Rlcyk7CiAgICAgICAgbGlzLmZvckVhY2goZnVuY3Rpb24gKGxpKSB7IGxpLnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgJ3RydWUnKTsgfSk7CiAgICAgICAgc2hvd05vdGljZSgpOwogICAgICB9KTsKICAgICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCBmdW5jdGlvbiAoKSB7IGRyYWdnaW5nID0gbnVsbDsgfSk7CiAgICAgIG5vdGljZS5hZGRFdmVudExpc3RlbmVyKCdkcmFnZW50ZXInLCBmdW5jdGlvbiAoKSB7IGhpZGVOb3RpY2UoKTsgfSk7CiAgICAgIHVsLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdlbnRlcicsIGZ1bmN0aW9uICgpIHsgaGlkZU5vdGljZSgpOyB9KTsKICAgICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdlbmQnLCBmdW5jdGlvbiAoZSkgeyBoaWRlTm90aWNlKCk7IH0pOwogICAgICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgLy8g57uT5p2f5ouW5ou955qE5pe25YCZ5oGi5aSN5Y6f5qC3CiAgICAgICAgaWYgKGxpcykgbGlzLmZvckVhY2goZnVuY3Rpb24gKGxpKSB7IGxpLnJlbW92ZUF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJyk7IH0pOyBsaXMgPSBudWxsOwogICAgICAgIHZhciBpbWdfdXBsb2FkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlbmRfd2VpYm8gLmltZ191cGxvYWQnKTsKICAgICAgICBpZiAoaW1nX3VwbG9hZCkgaW1nX3VwbG9hZC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgIC8vIOeEtuWQjueci+eci+i1t+atoumDveWcqOWTqumHjAogICAgICAgIHZhciBjdXJyZW50ID0gZS50YXJnZXQ7CiAgICAgICAgaWYgKGRyYWdnaW5nID09PSBudWxsKSByZXR1cm47CiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOyBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgIHdoaWxlIChjdXJyZW50LnBhcmVudE5vZGUgIT09IHVsKSBjdXJyZW50ID0gY3VycmVudC5wYXJlbnROb2RlOwogICAgICAgIHZhciBpbmRleCA9IEFycmF5LmZyb20odWwuY2hpbGROb2RlcykuaW5kZXhPZihjdXJyZW50KTsKICAgICAgICAvLyDmiormi73liLDnmoTkuJzopb/liqDliLDnva7pobbph4zpnaLljrsKICAgICAgICB2YXIgbGlzdCA9IHRoYXQucmVmLnRvcC5nZXRjb25mKCksIG9sZCA9IGxpc3RbaW5kZXhdOwogICAgICAgIGxpc3QgPSBsaXN0Lm1hcChmdW5jdGlvbiAoZSkgewogICAgICAgICAgaWYgKCFlKSByZXR1cm4gbnVsbDsKICAgICAgICAgIGlmIChlLnRpdGxlID09PSBkcmFnZ2luZy50aXRsZSkgcmV0dXJuIG9sZDsKICAgICAgICAgIHJldHVybiBlOwogICAgICAgIH0pOwogICAgICAgIGxpc3RbaW5kZXhdID0gZHJhZ2dpbmc7CiAgICAgICAgdGhhdC5yZWYudG9wLnB1dGNvbmYobGlzdCk7CiAgICAgIH0pOwogICAgICBpZiAodGhhdC5yZWYudG9wLmdldGNvbmYoKS5zb21lKEJvb2xlYW4pKSBoaWRlTm90aWNlKCk7CiAgICB9OwogICAgLy8g55uR6KeG5paw55qE6KGo5oOF5qGGCiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIGVtb2ppRmFzdE9ic2VydmVyKCkgewogICAgICB2YXIgdGFiID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxheWVyX2ZhY2VzIC5XQl9taW5pdGFiOmZpcnN0LWNoaWxkJyk7IGlmICghdGFiKSByZXR1cm47CiAgICAgIHZhciBjb250YWluZXIgPSB0YWIucGFyZW50Tm9kZTsKICAgICAgdmFyIGFyZWEgPSBjb250YWluZXIuaW5zZXJ0QmVmb3JlKHV0aWwuZG9tLmNyZWF0ZSh1dGlsLnN0ci5maWxsKGh0bWwuZmFzdEVtb2ppSW5wdXQpKSwgdGFiKTsKICAgICAgdmFyIGxpc3RzID0gQXJyYXkuZnJvbShhcmVhLnF1ZXJ5U2VsZWN0b3JBbGwoJ1t5YXdmLWZhY2VdIHVsJykpOwogICAgICB2YXIgY2hhdExpc3ROb2RlID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJ3VsW25vZGUtdHlwZT0iX3BoaXpMaXN0Tm9kZSJdJyksIGlzSW0gPSEhY2hhdExpc3ROb2RlOwogICAgICBiaW5kY29uZihsaXN0c1swXSwgJ3RvcCcsIGZhbHNlLCBpc0ltKTsKICAgICAgYmluZGNvbmYobGlzdHNbMV0sICdyZWNlbnQnLCB0cnVlLCBpc0ltKTsKICAgICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdXBkYXRlUmVjZW50KTsKICAgICAgZHJhZ0Vtb2ppKGNvbnRhaW5lciwgbGlzdHNbMF0pOwogICAgICBpZiAoaXNJbSkgZml4Q2hhdChsaXN0cywgY2hhdExpc3ROb2RlKTsKICAgIH0pOwogICAgLy8g5L+u55CG5LiA5LiL6IGK5aSp56qX5Y+j6YeM6Z2i55qE5oOF5Ya1CiAgICB2YXIgZml4Q2hhdCA9IGZ1bmN0aW9uIChsaXN0cywgY2hhdExpc3ROb2RlKSB7CiAgICAgIHZhciBiaW5kRXZlbnQgPSBmdW5jdGlvbiAobGlzdCkgewogICAgICAgIGxpc3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldDsKICAgICAgICAgIGlmICh1dGlsLmRvbS5tYXRjaGVzKHRhcmdldCwgJ2xpIGltZycpKSB0YXJnZXQgPSB0YXJnZXQucGFyZW50Tm9kZTsKICAgICAgICAgIGlmICghdGFyZ2V0LnRpdGxlKSByZXR1cm47CiAgICAgICAgICAvLyDlvITkuIDkuKrlgYfnmoTmjInpkq7vvIzmlL7lnKjljp/mnKznmoTliJfooajmnKvlsL7vvIzpqpfku5bor7TmiJHngrnnmoTmmK/ljp/mnKznmoTliJfooajph4zpnaLnmoQKICAgICAgICAgIHZhciBmYWtlID0gdGFyZ2V0LmNsb25lTm9kZSh0cnVlKTsKICAgICAgICAgIGZha2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICAgIGNoYXRMaXN0Tm9kZS5hcHBlbmRDaGlsZChmYWtlKTsKICAgICAgICAgIGZha2UuY2xpY2soKTsKICAgICAgICAgIGZha2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChmYWtlKTsKICAgICAgICB9KTsKICAgICAgfTsKICAgICAgbGlzdHMuZm9yRWFjaChiaW5kRXZlbnQpOwogICAgfTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKaWYgKCFmdW5jdGlvbiBpc0JKVCgpIHsKICAvLyDlpoLmnpznlKjmiLfkvb/nlKjnmoTmmK/lt7Lnu4/mmK/lkozljJfkuqzml7bpl7TkuIDoh7TnmoTml7bljLrvvIzpgqPkuYjmiJHku6zlsLHkuI3mj5Dkvpvov5nkuKrlip/og73kuoYKICAvLyDkvYbmmK/pnIDopoHms6jmhI/nmoTmmK/mmK/lkKblnKjkuJzlhavljLrkuIDngrnpnIDopoHpop3lpJbliKTmlq3mmK/lkKblj5fliLDlpI/ku6Tml7blvbHlk40KICB2YXIgY3VyID0gbmV3IERhdGUoKTsKICB2YXIgamFuID0gbmV3IERhdGUoY3VyLmdldEZ1bGxZZWFyKCksIDAsIDEpOwogIHZhciBqdWwgPSBuZXcgRGF0ZShjdXIuZ2V0RnVsbFllYXIoKSwgNiwgMSk7CiAgcmV0dXJuIGN1ci5nZXRUaW1lem9uZU9mZnNldCgpID09PSAtNDgwICYmCiAgICBqYW4uZ2V0VGltZXpvbmVPZmZzZXQoKSA9PT0gLTQ4MCAmJgogICAganVsLmdldFRpbWV6b25lT2Zmc2V0KCkgPT09IC00ODA7Cn0oKSkgewogIC8vIOS9v+eUqOacrOWcsOaXtuWMugogIGZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5zaG93X2xvY2FsX3RpbWUgPSBmaWx0ZXIuaXRlbSh7CiAgICAnZ3JvdXAnOiAnb3RoZXJ0b29sJywKICAgICd2ZXJzaW9uJzogMjc0LAogICAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgICAna2V5JzogJ3dlaWJvLnRvb2wuc2hvd19sb2NhbF90aW1lJywKICAgICd0ZXh0JzogJ3t7c2hvd0xvY2FsVGltZX19JywKICAgICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHogPSBmdW5jdGlvbiAoeCkgeyByZXR1cm4gKCcwJyArIHgpLnNsaWNlKC0yKTsgfTsKICAgICAgLy8g5Y+C6ICDIGxpYi5mZWVkLnBsdWdpbnMudXBkYXRlVGltZQogICAgICB2YXIgZSA9IHRleHQudGltZVRvZGF5LCBmID0gdGV4dC50aW1lU2Vjb25kQmVmb3JlLCBnID0gdGV4dC50aW1lTWludXRlQmVmb3JlOwogICAgICB2YXIgY29udmVydCA9IGZ1bmN0aW9uIChhLCBjKSB7CiAgICAgICAgdmFyIGQgPSBhLmdldEZ1bGxZZWFyKCksIGkgPSBhLmdldE1vbnRoKCkgKyAxLCBrID0gYS5nZXREYXRlKCksIG0gPSBhLmdldEhvdXJzKCk7CiAgICAgICAgdmFyIGggPSBjLmdldEZ1bGxZZWFyKCksIGogPSBjLmdldE1vbnRoKCkgKyAxLCBsID0gYy5nZXREYXRlKCksIG4gPSBjLmdldEhvdXJzKCksIG8gPSBjLmdldE1pbnV0ZXMoKTsKICAgICAgICAvLyDkv67mlLnov5nph4zvvIzmiJHku6znlKjmnKzlnLDml7bpl7TvvIzogIzkuI3mmK/kuJzlhavljLrml7bpl7QKICAgICAgICB2YXIgcSA9IGgsIHIgPSBqLCBzID0gbCwgdCA9IHoobiksIHUgPSB6KG8pOwogICAgICAgIHZhciB2ID0gYSAtIGM7CiAgICAgICAgdiA9IHYgPiAwID8gdiA6IDA7CiAgICAgICAgdiA9IHYgLyAxZTM7CiAgICAgICAgaWYgKGQgIT0gaCkgcmV0dXJuIHEgKyAiLSIgKyByICsgIi0iICsgcyArICIgIiArIHQgKyAiOiIgKyB1OwogICAgICAgIGlmIChpICE9IGogfHwgayAhPSBsKSByZXR1cm4gdGV4dC50aW1lTW9udGhEYXkuc3BsaXQoJyVzJykubWFwKGZ1bmN0aW9uICh4LCBpKSB7IHJldHVybiB4ICsgW3IsIHMsIHQsIHUsICcnXVtpXTsgfSkuam9pbignJyk7CiAgICAgICAgaWYgKG0gIT0gbiAmJiB2ID4gMzYwMCkgcmV0dXJuIGUgKyAiICIgKyB0ICsgIjoiICsgdTsKICAgICAgICBpZiAodiA8IDUxKSB7CiAgICAgICAgICB2ID0gdiA8IDEgPyAxIDogdjsKICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKCh2IC0gMSkgLyAxMCkgKyAxICsgIjAiICsgZjsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IodiAvIDYwICsgMSkgKyBnOwogICAgICB9OwogICAgICAvLyDmiorljLnphY3liLDnmoTmlbDlrZfovazmjaLmiJDmlbTmlbDmlbDnu4TnmoTlvojmlrnkvr/nmoTlh73mlbAKICAgICAgdmFyIG1hdGNoID0gZnVuY3Rpb24gKHN0ciwgcmVnKSB7CiAgICAgICAgdmFyIG0gPSBzdHIubWF0Y2gocmVnKTsgaWYgKCFtKSByZXR1cm4gbnVsbDsKICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShtKS5zbGljZSgxKS5tYXAoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHBhcnNlSW50KHgsIDEwKTsgfSk7CiAgICAgIH07CiAgICAgIC8vIOebr+edgOe9kemhteeci+acieayoeacieW4piBkYXRlIOWxnuaAp+eahOWFg+e0oAogICAgICAvLyDov5nkupvlhYPntKDpgJrov4cgZGF0ZSDlsZ7mgKfnu5nlrprlhbbml7bpl7TvvIzpnIDopoHlrp7ml7bmm7TmlrDvvIjlpoJ4eOenkuWJje+8iQogICAgICB2YXIgbW9kaWZ5ID0gZnVuY3Rpb24gY2hhbmdlRGF0ZUVsZW1lbnQoKSB7CiAgICAgICAgdmFyIHRpbWVUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW25vZGUtdHlwZT0iZmVlZF9saXN0X3RpbWVUaXAiXVtkYXRlXSBbbm9kZS10eXBlPSJmZWVkX2xpc3RfdGltZVRleHQiXScpOwogICAgICAgIGlmICh0aW1lVGV4dCkgdGltZVRleHQucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoCiAgICAgICAgICB1dGlsLmRvbS5jcmVhdGUodXRpbC5zdHIuZmlsbCgKICAgICAgICAgIGh0bWwuZmVlZFRpbWVUaXAsIHsgJ2RhdGUnOiB0aW1lVGV4dC5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZSgnZGF0ZScpLCAndGltZSc6ICd7e3RpbWVSZWFkSGVyZX19JyB9KQogICAgICAgICAgKS5maXJzdENoaWxkLCB0aW1lVGV4dCk7CiAgICAgICAgdmFyIGYgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2Fbbm9kZS10eXBlPSJmZWVkX2xpc3RfaXRlbV9kYXRlIl1bZGF0ZV0nKSk7CiAgICAgICAgZi5mb3JFYWNoKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICBbJ25vZGUtdHlwZScsICdkYXRlJ10uZm9yRWFjaChmdW5jdGlvbiAoYXR0cikgewogICAgICAgICAgICBpLnNldEF0dHJpYnV0ZSgneWF3Zi0nICsgYXR0ciwgaS5nZXRBdHRyaWJ1dGUoYXR0cikpOwogICAgICAgICAgICBpLnJlbW92ZUF0dHJpYnV0ZShhdHRyKTsKICAgICAgICAgIH0pOwogICAgICAgICAgdmFyIHRpdGxlID0gaS5nZXRBdHRyaWJ1dGUoJ3RpdGxlJyk7CiAgICAgICAgICBpZiAodGl0bGUpIHsKICAgICAgICAgICAgdmFyIGsgPSBpLmdldEF0dHJpYnV0ZSgieWF3Zi1kYXRlIik7CiAgICAgICAgICAgIGlmICghL15ccypcZCtccyokLy50ZXN0KGspKSByZXR1cm47CiAgICAgICAgICAgIHZhciBsID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgbC5zZXRUaW1lKHBhcnNlSW50KGssIDEwKSk7CiAgICAgICAgICAgIGkudGl0bGUgPSAoZnVuY3Rpb24gKGMpIHsKICAgICAgICAgICAgICB2YXIgaCA9IGMuZ2V0RnVsbFllYXIoKSwgaiA9IGMuZ2V0TW9udGgoKSArIDEsIGwgPSBjLmdldERhdGUoKSwgbiA9IGMuZ2V0SG91cnMoKSwgbyA9IGMuZ2V0TWludXRlcygpOwogICAgICAgICAgICAgIHZhciB0eiA9IGMuZ2V0VGltZXpvbmVPZmZzZXQoKSwgdHptID0gTWF0aC5hYnModHopICUgNjAsIHR6aCA9IChNYXRoLmFicyh0eikgLSB0em0pIC8gNjAsIHR6dDsKICAgICAgICAgICAgICBpZiAodHogPT09IDApIHR6dCA9ICcnOyBlbHNlIHR6dCA9ICh0eiA8IDAgPyAnKycgOiAnLScpICsgeih0emgpICsgJzonICsgeih0em0pOwogICAgICAgICAgICAgIHJldHVybiBoICsgJy0nICsgeihqKSArICctJyArIHoobCkgKyAnICcgKyB6KG4pICsgJzonICsgeihvKSArICcgVVRDJyArIHR6dDsKICAgICAgICAgICAgfShsKSk7CiAgICAgICAgICAgIHV0aWwuZGVidWcoJ3RpbWV6b25lIFVUQys4IHRvIExvY2FsOiAlbyAtPiAlbycsIHRpdGxlLCBpLnRpdGxlKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICB1cGRhdGUoZik7CiAgICAgIH07CiAgICAgIC8vIOWkhOeQhumCo+S6m+ayoeaciSBkYXRlIOWxnuaAp+eahOaXtumXtOeahOaWh+acrAogICAgICAvLyDov5nkupvkuovku7bkuI3pnIDopoHmm7TmlrAKICAgICAgLy8g5paH5pys55qE55Sf5oiQ6KeE5YiZ5ZKM6ZyA6KaB5pu05paw55qE5YW25a6e55Wl5pyJ5LiN5ZCM77yM5Zug5Li66L+Z5Lqb5paH5pys5aSn5aSa5piv5Zyo5pyN5Yqh5Zmo56uv55Sf5oiQ55qECiAgICAgIHZhciBjb252ZXJ0VGV4dCA9IGZ1bmN0aW9uIChpbnB1dCkgewogICAgICAgIHZhciBudW1zLCBjID0gbnVsbCwgYSA9IG5ldyBEYXRlKCk7CiAgICAgICAgdmFyIGIgPSBhOyBiLnNldFRpbWUoYi5nZXRUaW1lKCkgKyAyODhlNSk7CiAgICAgICAgdmFyIHEgPSBiLmdldFVUQ0Z1bGxZZWFyKCksIHJyID0gYi5nZXRVVENNb250aCgpLCBzID0gYi5nZXRVVENEYXRlKCk7CiAgICAgICAgaWYgKChudW1zID0gbWF0Y2goaW5wdXQsIC9eKFxkKyktKFxkKyktKFxkKykgKFxkKyk6KFxkKykkLykpKSBjID0gbmV3IERhdGUoRGF0ZS5VVEMobnVtc1swXSwgbnVtc1sxXSAtIDEsIG51bXNbMl0sIG51bXNbM10sIG51bXNbNF0sIDApKTsKICAgICAgICBlbHNlIGlmICgobnVtcyA9IG1hdGNoKGlucHV0LCBuZXcgUmVnRXhwKCdeJyArIHRleHQudGltZU1vbnRoRGF5LnJlcGxhY2UoLyVzL2csICcoXFxkKyknKSArICckJykpKSkgYyA9IG5ldyBEYXRlKERhdGUuVVRDKHEsIG51bXNbMF0gLSAxLCBudW1zWzFdLCBudW1zWzJdLCBudW1zWzNdLCAwKSk7CiAgICAgICAgZWxzZSBpZiAoKG51bXMgPSBtYXRjaChpbnB1dCwgbmV3IFJlZ0V4cCgnXicgKyBlICsgJ1xccyooXFxkKyk6KFxcZCspJCcpKSkpIGMgPSBuZXcgRGF0ZShEYXRlLlVUQyhxLCByciwgcywgbnVtc1swXSwgbnVtc1sxXSwgMCkpOwogICAgICAgIGlmIChjID09PSBudWxsKSByZXR1cm4gaW5wdXQ7CiAgICAgICAgYy5zZXRUaW1lKGMuZ2V0VGltZSgpIC0gMjg4ZTUpOwogICAgICAgIGlmIChjLmdldFRpbWUoKSA+IGEuZ2V0VGltZSgpKSBjLnNldFRpbWUoYy5nZXRUaW1lKCkgLSA4NjRlNSAqIE1hdGguY2VpbCgoYy5nZXRUaW1lKCkgLSBhLmdldFRpbWUoKSkgLyA4NjRlNSkpOwogICAgICAgIHJldHVybiBjb252ZXJ0KGEsIGMpOwogICAgICB9OwogICAgICAvLyDmm7TmlrDpnIDopoHmm7TmlrDnmoTml7bpl7QKICAgICAgdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uIChmKSB7CiAgICAgICAgdmFyIGcgPSBuZXcgRGF0ZSgpOwogICAgICAgIGlmICghZikgZiA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW3lhd2YtZGF0ZV0nKSk7CiAgICAgICAgZy5zZXRUaW1lKGcuZ2V0VGltZSgpIC0gKCh1bnNhZmVXaW5kb3cuJENPTkZJRyB8fCB7fSkudGltZURpZmYgfHwgMCkpOwogICAgICAgIGYuZm9yRWFjaChmdW5jdGlvbiAoaikgewogICAgICAgICAgdmFyIGsgPSBqLmdldEF0dHJpYnV0ZSgieWF3Zi1kYXRlIik7CiAgICAgICAgICBpZiAoIS9eXHMqXGQrXHMqJC8udGVzdChrKSkgcmV0dXJuOwogICAgICAgICAgdmFyIGwgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgbC5zZXRUaW1lKHBhcnNlSW50KGssIDEwKSk7CiAgICAgICAgICB2YXIgdGV4dCA9IGNvbnZlcnQoZywgbCk7CiAgICAgICAgICBpZiAodGV4dCAhPT0gai50ZXh0Q29udGVudCkgai50ZXh0Q29udGVudCA9IHRleHQ7CiAgICAgICAgfSk7CiAgICAgIH07CiAgICAgIC8vIOWkhOeQhuaWh+acrOaYvuekuueahOaXtumXtAogICAgICB2YXIgdGV4dHRpbWUgPSBmdW5jdGlvbiBjaGFuZ2VEYXRlVGV4dCgpIHsKICAgICAgICB2YXIgc2VsZWN0b3JzID0gWwogICAgICAgICAgJy5XQl9mcm9tOm5vdChbeWF3Zi1sb2NhbHRpbWVdKScsCiAgICAgICAgICAnLmNvbnRfdG9wIC5kYXRhOm5vdChbeWF3Zi1sb2NhbHRpbWVdKScsCiAgICAgICAgICAnbGVnZW5kOm5vdChbeWF3Zi1sb2NhbHRpbWVdKScsCiAgICAgICAgXS5qb2luKCcsJyk7CiAgICAgICAgdmFyIG5vZGVzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9ycykpOwogICAgICAgIG5vZGVzLmZvckVhY2goZnVuY3Rpb24gKHgpIHsKICAgICAgICAgIHguc2V0QXR0cmlidXRlKCd5YXdmLWxvY2FsdGltZScsICcnKTsKICAgICAgICAgIGlmICh1dGlsLmRvbS5tYXRjaGVzKHgsICcuV0Jfd2ViaW0gKicpKSByZXR1cm47IC8vIOiBiuWkqeeql+WPo+S4reeahOaXtumXtOaYr+acrOWcsOeahOaXtumXtAogICAgICAgICAgdmFyIHQgPSB4LmZpcnN0Q2hpbGQ7CiAgICAgICAgICBpZiAodC5ub2RlVHlwZSAhPT0gTm9kZS5URVhUX05PREUpIHJldHVybjsKICAgICAgICAgIHZhciB2ID0gdC50ZXh0Q29udGVudC50cmltKCk7CiAgICAgICAgICBpZiAodiA9PT0gJycpIHJldHVybjsKICAgICAgICAgIHZhciByID0gdi5yZXBsYWNlKC9eKC4qPylccyoo5p2l6IeqfOS+huiHqnxjb21lIGZyb218KSQvLCBmdW5jdGlvbiAoeCwgdCwgcykgewogICAgICAgICAgICByZXR1cm4gY29udmVydFRleHQodCkgKyAocyA/ICcgJyArIHMgKyAnICcgOiAnJyk7CiAgICAgICAgICB9KTsKICAgICAgICAgIHQudGV4dENvbnRlbnQgPSByOwogICAgICAgICAgdXRpbC5kZWJ1ZygndGltZXpvbmUgVVRDKzggdG8gTG9jYWw6ICVvIC0+ICVvJywgdiwgcik7CiAgICAgICAgfSk7CiAgICAgIH07CiAgICAgIG1vZGlmeSgpOwogICAgICB1cGRhdGUoKTsKICAgICAgb2JzZXJ2ZXIuZG9tLmFkZChtb2RpZnkpOwogICAgICBvYnNlcnZlci5kb20uYWRkKHRleHR0aW1lKTsKICAgICAgc2V0SW50ZXJ2YWwodXBkYXRlLCAxZTQpOwogICAgfQogIH0pLmFkZHRvKGZpbHRlci5ncm91cHMudG9vbCk7Cn0KCi8vIOemgeeUqOahjOmdouaPkOmGkgppZiAoZnVuY3Rpb24gZGVza3RvcE5vdGlmaWNhdGlvblN1cHBvcnQoKSB7CiAgLy8g5qOA5p+l5b6u5Y2a5piv5ZCm5Lya5byA5ZCv5qGM6Z2i5o+Q6YaS5Yqf6IO9CiAgdmFyIGhhc05vdGlmaWNhdGlvbiA9ICJOb3RpZmljYXRpb24iIGluIHdpbmRvdyB8fCAibW96Tm90aWZpY2F0aW9uIiBpbiB3aW5kb3cgfHwgIndlYmtpdE5vdGlmaWNhdGlvbiIgaW4gd2luZG93OwogIHZhciBpc01heHRob25MaWtlID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCJNYXh0aG9uIikgIT09IC0xOwogIHJldHVybiBoYXNOb3RpZmljYXRpb24gJiYgIWlzTWF4dGhvbkxpa2U7Cn0oKSkgewogIGZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5kaXNhYmxlX2Rlc2t0b3Bfbm90aWZpY2F0aW9uID0gZmlsdGVyLml0ZW0oewogICAgJ2dyb3VwJzogJ290aGVydG9vbCcsCiAgICAndmVyc2lvbic6IDQxNiwKICAgICd0eXBlJzogJ2Jvb2xlYW4nLAogICAgJ2tleSc6ICd3ZWliby50b29sLmRpc2FibGVfZGVza3RvcF9ub3RpZmljYXRpb24nLAogICAgJ3RleHQnOiAne3tkaXNhYmxlTm90aWZpY2F0aW9ufX0nLAogICAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tkaXNhYmxlTm90aWZpY2F0aW9uRGVzY319JyB9IH0sCiAgICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICAgIHV0aWwuZnVuYy53cmFwc3RrKCdsaWIubm90aWZpY2F0aW9uLmJyb3dzZXJOb3RpZmljYXRpb24nLCBmdW5jdGlvbiAocmVnRnVuYykgewogICAgICAgIHJldHVybiBmdW5jdGlvbiAoc3RrKSB7CiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gdm9pZCAwOwogICAgICAgICAgfTsKICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKfQoKLy8g56aB55So5b6u5Y2a55qETGl2ZSBQaG90bwppZiAoZnVuY3Rpb24gbGl2ZVBob3RvU3VwcG9ydGVkKCkgewogIC8vIOajgOafpeW+ruWNmuaYr+WQpuS8muW8gOWQryBMaXZlIFBob3RvIOWKn+iDvQogIHZhciB2aWRlbyA9IHV0aWwuZG9tLmNyZWF0ZSgndmlkZW8nLCAnJyk7CiAgdmFyIGlzU2FmYXJpTGlrZSA9IG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZigiU2FmYXJpIikgPj0gMDsKICByZXR1cm4gaXNTYWZhcmlMaWtlICYmICEhdmlkZW8uY2FuUGxheVR5cGUgJiYgISF2aWRlby5jYW5QbGF5VHlwZSgidmlkZW8vbXA0Iik7Cn0oKSkgewogIGZpbHRlci5pdGVtcy50b29sLndlaWJvdG9vbC5kaXNhYmxlX2xpdmVfcGhvdG8gPSBmaWx0ZXIuaXRlbSh7CiAgICAnZ3JvdXAnOiAnbWVkaWF0b29sJywKICAgICd2ZXJzaW9uJzogNDE2LAogICAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgICAna2V5JzogJ3dlaWJvLnRvb2wuZGlzYWJsZV9saXZlX3Bob3RvJywKICAgICd0ZXh0JzogJ3t7ZGlzYWJsZUxpdmVQaG90b319JywKICAgICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgICAgdXRpbC5mdW5jLndyYXBzdGsoJ2xpYi5pbWFnZS5saXZlcGhvdG8nLCBmdW5jdGlvbiAocmVnRnVuYykgewogICAgICAgIHJldHVybiBmdW5jdGlvbiAoc3RrKSB7CiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGltZywgaWQsIGNhbGxiYWNrcykgewogICAgICAgICAgICBpZiAoY2FsbGJhY2tzICYmIGNhbGxiYWNrcy5jYW5Ob3RQbGF5KSB7CiAgICAgICAgICAgICAgY2FsbGJhY2tzLmNhbk5vdFBsYXkoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICB9OwogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICB9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwp9CgpmaWx0ZXIuaXRlbXMudG9vbC53ZWlib3Rvb2wuZGlzYWJsZV92aWRlb19jbGlja19wb3AgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ21lZGlhdG9vbCcsCiAgJ3ZlcnNpb24nOiA0ODUsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLmRpc2FibGVfdmlkZW9fY2xpY2tfcG9wJywKICAndGV4dCc6ICd7e2Rpc2FibGVWaWRlb0NsaWNrUG9wfX0nLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCgnLndidi1wb3AtbGF5ZXIgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKZmlsdGVyLml0ZW1zLnRvb2wud2VpYm90b29sLm5vX3BvcF9idXRfZnVsbF9zY3JlZW4gPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ21lZGlhdG9vbCcsCiAgJ3ZlcnNpb24nOiA0ODUsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLm5vX3BvcF9idXRfZnVsbF9zY3JlZW4nLAogICd0ZXh0JzogJ3t7dmlkZW9GdWxsU2NyZWVuTm90UG9wfX0nLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCgnLndidi1wb3AtY29udHJvbCB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSAud2J2LWZ1bGxzY3JlZW4tY29udHJvbCB7IGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH0nKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnRvb2wpOwoKZmlsdGVyLml0ZW1zLnRvb2wud2VpYm90b29sLnZpZGVvX25vX2F1dG9fbmV4dCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnbWVkaWF0b29sJywKICAndmVyc2lvbic6IDQ4NSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wudmlkZW9fbm9fYXV0b19uZXh0JywKICAndGV4dCc6ICd7e3ZpZGVvTm9BdXRvTmV4dH19JywKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIGF1dG9OZXh0Q2xvc2UoKSB7CiAgICAgIHZhciBjbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy52aWRlb19ib3hfbmV4dCBbYWN0aW9uLXR5cGU9Im5leHRfY2xvc2UiXTpub3QoW3lhd2Ytbm8tYXV0by1uZXh0XSknKTsKICAgICAgaWYgKCFjbG9zZSkgcmV0dXJuOwogICAgICBjbG9zZS5zZXRBdHRyaWJ1dGUoJ3lhd2Ytbm8tYXV0by1uZXh0JywgJycpOwogICAgICBjbG9zZS5jbGljaygpOwogICAgfSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy50b29sKTsKCi8vIOagt+W8jwovLyDnlLHkuo7ljoblj7Lljp/lm6DvvIzmoLflvI/kuIvplK7lgLzlvZLlsZ4gdG9vbApmaWx0ZXIucHJlZGVmLmdyb3VwKCdzdHlsZScpOwoKLy8g5LiA5Liq5bim5pyJ6aKc6ImyL+mAj+aYjuW6pueahOmAieahhumhuQpmaWx0ZXIucmVmLnJnYmEgPSBmdW5jdGlvbiAoZGVmY29sb3IsIGRlZnQsIGNvbG9yLCB0cmFuc3BhcmVuY3ksIHJnYmEpIHsKICB2YXIgX2NvbG9yID0gewogICAgJ3R5cGUnOiAnY29sb3InLAogICAgJ2RlZmF1bHQnOiBkZWZjb2xvciB8fCAnIzAwMDAwMCcsCiAgfTsKICB2YXIgX3RyYW5zcGFyZW5jeSA9IHsKICAgICd0eXBlJzogJ3JhbmdlJywKICAgICdkZWZhdWx0JzogZGVmdCB8fCAwLAogICAgJ21pbic6IDAsCiAgICAnbWF4JzogMTAwLAogIH07CiAgdmFyIGJhc2UgPSB7fTsKICBiYXNlW2NvbG9yIHx8ICdjb2xvciddID0gX2NvbG9yOwogIGJhc2VbdHJhbnNwYXJlbmN5IHx8ICd0cmFuc3BhcmVuY3knXSA9IF90cmFuc3BhcmVuY3k7CiAgYmFzZVtyZ2JhIHx8ICdyZ2JhJ10gPSB7CiAgICAndG9TdHJpbmcnOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB1dGlsLnN0ci5yZ2JhKF9jb2xvci5jb25mLCBfdHJhbnNwYXJlbmN5LmNvbmYpOwogICAgfSwKICB9OwogIHJldHVybiBiYXNlOwp9OwoKLy8g5a2X5L2T5a2X5Y+355u45YWz5qC35byPCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ3N0eWxlJywgJ3RleHQnLCAne3t0ZXh0U3R5bGVUaXRsZX19Jyk7CgovLyDkv67mlLnlrZfkvZMKZmlsdGVyLml0ZW1zLnN0eWxlLnRleHQuY3VzdG9tX2ZvbnRfZmFtaWx5ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICd0ZXh0JywKICAndmVyc2lvbic6IDE3OCwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuY3VzdG9tX2ZvbnRfZmFtaWx5JywKICAndGV4dCc6ICd7e2N1c3RvbUZvbnRGYW1pbHl9fScsCiAgJ3dlc3QnOiBmb250Lndlc3QsCiAgJ2NoaW5lc2UnOiBmb250LmNoaW5lc2UsCiAgJ250bSc6IHt9LAogICdyZWYnOiB7CiAgICAnd2YnOiB7CiAgICAgICd0eXBlJzogJ3NlbGVjdCcsCiAgICAgICdzZWxlY3QnOiBmb250Lndlc3QubWFwKGZ1bmN0aW9uIChpKSB7IHJldHVybiB7ICd0ZXh0JzogaVsxXSwgJ3ZhbHVlJzogaVsxXSB9OyB9KSwKICAgICAgJ2RlZmF1bHQnOiBmb250Lndlc3RbMF1bMF0sCiAgICB9LAogICAgJ2NmJzogewogICAgICAndHlwZSc6ICdzZWxlY3QnLAogICAgICAnc2VsZWN0JzogZm9udC5jaGluZXNlLm1hcChmdW5jdGlvbiAoaSkgeyByZXR1cm4geyAndGV4dCc6IGlbMV0sICd2YWx1ZSc6IGlbMV0gfTsgfSksCiAgICAgICdkZWZhdWx0JzogZm9udC5jaGluZXNlWzBdWzBdLAogICAgfSwKICB9LAogICdpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIHRoYXQgPSB0aGlzOwogICAgdmFyIHVwZGF0ZUNvbmZpZyA9IGZ1bmN0aW9uICgpIHsKICAgICAgdXRpbC5kZWJ1ZygndmFsaWQgZm9udHM6ICVvLCAlbycsIHRoYXQud2VzdCwgdGhhdC5jaGluZXNlKTsKICAgICAgdGhhdC5udG0gPSB7fTsKICAgICAgdGhhdC53ZXN0LmNvbmNhdCh0aGF0LmNoaW5lc2UpLmZvckVhY2goZnVuY3Rpb24gKGYpIHsgdGhhdC5udG1bZlsxXV0gPSBmWzBdOyB9KTsKICAgICAgaWYgKHRoYXQubnRtW3RoYXQucmVmLndmLmNvbmZdICYmIHRoYXQubnRtW3RoYXQucmVmLmNmLmNvbmZdKSByZXR1cm47CiAgICAgIGlmICghdGhhdC5udG1bdGhhdC5yZWYud2YuY29uZl0pIHRoYXQucmVmLndmLnB1dGNvbmYodGhhdC53ZXN0WzBdWzFdKTsKICAgICAgaWYgKCF0aGF0Lm50bVt0aGF0LnJlZi5jZi5jb25mXSkgdGhhdC5yZWYuY2YucHV0Y29uZih0aGF0LmNoaW5lc2VbMF1bMV0pOwogICAgICB0aGF0LnB1dGNvbmYoZmFsc2UpOwogICAgfTsKICAgIHZhciB2YWxpZEZvbnRzID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7CiAgICAgIHZhciBmb250cyA9IHRoYXQud2VzdC5jb25jYXQodGhhdC5jaGluZXNlKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiB2YWxpZEZvbnQoKSB7CiAgICAgICAgaWYgKGZvbnRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIGNhbGxiYWNrKCk7CiAgICAgICAgdmFyIGZvbnQgPSBmb250cy5zaGlmdCgpLCB2YWxpZCA9IHV0aWwuZm9udC52YWxpZChmb250WzBdKTsKICAgICAgICB1dGlsLmRlYnVnKCclczogJW8nLCBmb250WzFdLCB2YWxpZCk7CiAgICAgICAgaWYgKCF2YWxpZCkgewogICAgICAgICAgdGhhdC53ZXN0ID0gdGhhdC53ZXN0LmZpbHRlcihmdW5jdGlvbiAoZikgeyByZXR1cm4gZlswXSAhPT0gZm9udFswXTsgfSk7CiAgICAgICAgICB0aGF0LmNoaW5lc2UgPSB0aGF0LmNoaW5lc2UuZmlsdGVyKGZ1bmN0aW9uIChmKSB7IHJldHVybiBmWzBdICE9PSBmb250WzBdOyB9KTsKICAgICAgICB9CiAgICAgICAgc2V0VGltZW91dCh2YWxpZEZvbnQsIDFlMyk7CiAgICAgIH0sIDJlNCk7CiAgICB9OwogICAgdmFsaWRGb250cyh1cGRhdGVDb25maWcpOwogICAgdXBkYXRlQ29uZmlnKCk7CiAgfSwKICAnc2hvd24nOiBmdW5jdGlvbiAoZG9tKSB7CiAgICB2YXIgbyA9IEFycmF5LmZyb20oZG9tLnF1ZXJ5U2VsZWN0b3JBbGwoJ29wdGlvbicpKTsKICAgIHZhciB0aGF0ID0gdGhpczsKICAgIG8uZm9yRWFjaChmdW5jdGlvbiAobykgewogICAgICBpZiAodGhhdC5udG1bby52YWx1ZV0pIG8uc3R5bGUuZm9udEZhbWlseSA9IHRoYXQubnRtW28udmFsdWVdOwogICAgICBlbHNlIG8uc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgIH0pOwogIH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgLy8g5Zug5Li65LiK6Z2iIGluaXQg6KKr5bu25pe26LCD55So77yM5omA5Lul6L+Z6YeM5ou/5Yiw55qE5a2X5L2T5Y+v6IO95piv5pyJ6Zeu6aKY55qE44CCCiAgICAvLyDlpb3lnKjov5nkuKrpl67popjlj6rkvJrlj5HnlJ/lnKjnlKjmiLflr7zlhaXkuoborr7nva7lkI7nrKzkuIDmrKHliLfmlrDvvIzmiYDku6XnrYnnlKjmiLfkuIvmrKHliLfmlrDlsLHlpb3kuobjgIIKICAgIHZhciB3ZiA9IHRoaXMubnRtW3RoaXMucmVmLndmLmNvbmZdLCBjZiA9IHRoaXMubnRtW3RoaXMucmVmLmNmLmNvbmZdOwogICAgaWYgKCF3ZiB8fCAhY2YpIHJldHVybjsKICAgIHV0aWwuY3NzLmFkZCgnYm9keSwgYm9keS5XQl9tYWNULCBib2R5LldCX3hwVCwgLldCX3dlYmltIHsgZm9udC1mYW1pbHk6ICcgKyB3ZiArICcsICcgKyBjZiArICc7IH0nKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnN0eWxlKTsKCi8vIOWinuWkpyB2NiDkuIvlvq7ljZrlrZflj7cKZmlsdGVyLml0ZW1zLnN0eWxlLnRleHQud2VpYm9fbGFyZ2VfZm9udCA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAndGV4dCcsCiAgJ3ZlcnNpb24nOiAxNDAsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLndlaWJvX2xhcmdlX2ZvbnQnLAogICd0ZXh0JzogJ3t7d2VpYm9MYXJnZUZvbnR9fScsCiAgJ3JlZic6IHsKICAgICdyYXRpbyc6IHsKICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgJ3NlbGVjdCc6IFsKICAgICAgICB7ICd2YWx1ZSc6ICcxMjAnLCAndGV4dCc6ICd7e3dlaWJvTGFyZ2VGb250MTIwfX0nIH0sCiAgICAgICAgeyAndmFsdWUnOiAnMTUwJywgJ3RleHQnOiAne3t3ZWlib0xhcmdlRm9udDE1MH19JyB9LAogICAgICAgIHsgJ3ZhbHVlJzogJzIwMCcsICd0ZXh0JzogJ3t7d2VpYm9MYXJnZUZvbnQyMDB9fScgfSwKICAgICAgICB7ICd2YWx1ZSc6ICczMDAnLCAndGV4dCc6ICd7e3dlaWJvTGFyZ2VGb250MzAwfX0nIH0sCiAgICAgIF0sCiAgICAgICdkZWZhdWx0JzogJzEyMCcsCiAgICB9LAogIH0sCiAgJ3ByZWYnOiB7CiAgICAnMTIwJzogeyAnZnMnOiAnMTYnLCAnbGgnOiAnMjYnLCAnZnMyJzogJzE0JywgJ2xoMic6ICcyNCcsICdoJzogJzIwJywgJ2gyJzogJzE4JywgJ2ZzMyc6ICcxMicgfSwKICAgICcxNTAnOiB7ICdmcyc6ICcyMScsICdsaCc6ICczMicsICdmczInOiAnMTgnLCAnbGgyJzogJzI3JywgJ2gnOiAnMjUnLCAnaDInOiAnMjMnLCAnZnMzJzogJzE0JyB9LAogICAgJzIwMCc6IHsgJ2ZzJzogJzI4JywgJ2xoJzogJzQyJywgJ2ZzMic6ICcyNCcsICdsaDInOiAnMzYnLCAnaCc6ICczMycsICdoMic6ICcyOScsICdmczMnOiAnMTknIH0sCiAgICAnMzAwJzogeyAnZnMnOiAnNDInLCAnbGgnOiAnNjQnLCAnZnMyJzogJzM2JywgJ2xoMic6ICc1NCcsICdoJzogJzUwJywgJ2gyJzogJzQ2JywgJ2ZzMyc6ICcyOCcgfSwKICB9LAogICdzaG93bic6IGZ1bmN0aW9uIChkb20pIHsKICAgIHZhciBzID0gZG9tLnF1ZXJ5U2VsZWN0b3IoJ3NlbGVjdCcpOwogICAgdmFyIG8gPSBBcnJheS5mcm9tKHMucXVlcnlTZWxlY3RvckFsbCgnb3B0aW9uJykpOwogICAgdmFyIHRoYXQgPSB0aGlzOwogICAgcy5zdHlsZS5oZWlnaHQgPSAnMjBweCc7CiAgICBvLmZvckVhY2goZnVuY3Rpb24gKG8pIHsKICAgICAgby5zdHlsZS5mb250U2l6ZSA9IHRoYXQucHJlZltvLnZhbHVlXS5mcyArICdweCc7CiAgICB9KTsKICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5maWxsKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICAuV0JfaW5mbywgLldCX3RleHQsIC5XQl9pbmZvICosIC5XQl90ZXh0ICogeyBmb250LXNpemU6IHt7ZnN9fXB4ICFpbXBvcnRhbnQ7IGxpbmUtaGVpZ2h0OiB7e2xofX1weCAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9mZWVkX2V4cGFuZCAuV0JfaW5mbyAqLCAuV0JfZmVlZF9leHBhbmQgLldCX3RleHQgKiwgLldCX2ZlZWRfZXhwYW5kIC5XQl9pbmZvLCAuV0JfZmVlZF9leHBhbmQgLldCX3RleHQgeyBmb250LXNpemU6IHt7ZnMyfX1weCAhaW1wb3J0YW50OyBsaW5lLWhlaWdodDoge3tsaDJ9fXB4ICFpbXBvcnRhbnQ7IH0KICAgICAgLldCX3RleHQgLldfYnRuX2IgeyBoZWlnaHQ6IHt7aH19cHggIWltcG9ydGFudDsgfQogICAgICAuV0JfdGV4dCAuV19idG5fYiwgLldCX3RleHQgLldfYnRuX2IgKiB7IGxpbmUtaGVpZ2h0OiB7e2h9fXB4ICFpbXBvcnRhbnQ7IGZvbnQtc2l6ZToge3tmczJ9fXB4ICFpbXBvcnRhbnQ7IH0KICAgICAgLldCX2ZlZWRfZXhwYW5kIC5XQl90ZXh0IC5XX2J0bl9iLCAuV0JfdGV4dCAuV19idG5fYywgLldCX2VtcHR5IC5XX2J0bl9jIHsgaGVpZ2h0OiB7e2gyfX1weCAhaW1wb3J0YW50OyBsaW5lLWhlaWdodDoge3toMn19cHggIWltcG9ydGFudDsgfQogICAgICAuV0JfZmVlZF9leHBhbmQgLldCX3RleHQgLldfYnRuX2IsIC5XQl9mZWVkX2V4cGFuZCAuV0JfdGV4dCAuV19idG5fYiAqLCAuV0JfdGV4dCAuV19idG5fYyAqLCAuV0JfZW1wdHkgLldfYnRuX2MgKiB7IGxpbmUtaGVpZ2h0OiB7e2gyfX1weCAhaW1wb3J0YW50OyBmb250LXNpemU6IHt7ZnMzfX1weCAhaW1wb3J0YW50OyB9CiAgICAgIC5XX2ljb25fZmVlZHBpbiwgLldfaWNvbl9mZWVkaG90IHsgaGVpZ2h0OiAxNnB4ICFpbXBvcnRhbnQ7IGxpbmUtaGVpZ2h0OiAxNnB4ICFpbXBvcnRhbnQ7IH0KICAgICovIG5vb3AoKTsgfSksIHRoaXMucHJlZlt0aGlzLnJlZi5yYXRpby5jb25mXSkpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc3R5bGUpOwoKLy8g54mI6Z2i55u45YWz5qC35byPCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ3N0eWxlJywgJ2xheW91dCcsICd7e2xheW91dFN0eWxlVGl0bGV9fScpOwoKLy8g57uf5LiA5aS05YOP5b2i54q2CmZpbHRlci5pdGVtcy5zdHlsZS5sYXlvdXQuYXZhdGFyX3NoYXBlID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdsYXlvdXQnLAogICd2ZXJzaW9uJzogMTUwLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5hdmF0YXJfc2hhcGUnLAogICd0ZXh0JzogJ3t7YXZhdGFyU2hhcGV9fScsCiAgJ3JlZic6IHsKICAgICdzaGFwZSc6IHsKICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgJ3NlbGVjdCc6IFsKICAgICAgICB7ICd2YWx1ZSc6ICdjaXJjbGUnLCAndGV4dCc6ICd7e2F2YXRhclNoYXBlQ2lyY2xlfX0nIH0sCiAgICAgICAgeyAndmFsdWUnOiAnc3F1YXJlJywgJ3RleHQnOiAne3thdmF0YXJTaGFwZVNxdWFyZX19JyB9LAogICAgICBdLAogICAgICAnZGVmYXVsdCc6ICdzcXVhcmUnLAogICAgfSwKICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCh0aGlzLnJlZi5zaGFwZS5jb25mID09PSAnc3F1YXJlJyA/IHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICAuV19mYWNlX3JhZGl1cywgLldfcGVyc29uX2luZm8gLmNvdmVyIC5oZWFkcGljLCAuUENEX2hlYWRlciAucGZfcGhvdG8sIC5QQ0RfaGVhZGVyIC5waG90b193cmFwLCAuUENEX2hlYWRlciAucGZfcGhvdG8gLnBob3RvLCAuUENEX3VzZXJfYSAucGljaXRlbXMgLnBpY19ib3gsIC5QQ0RfY29ubmVjdGxpc3QgLmZvbGxvd19ib3ggLm1vZF9waWMgaW1nLCAuUENEX3V0X2EgLnBpY19ib3gsIC5QQ0RfY291bnRlcl9iIC5waWNfYm94LCAuV0JfZmVlZF92MyAuV0Jfc29uRmVlZCAuV0JfZmFjZSwgLldCX2ZlZWRfdjMgLldCX3NvbkZlZWQgLldCX2ZhY2UgLmZhY2UgaW1nIHsgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50OyB9CiAgICAqLyBub29wKCk7IH0pIDogdXRpbC5zdHIuY210KGZ1bmN0aW9uICgpIHsgLyohQ1NTCiAgICAgIGltZ1t1c2VyY2FyZF0sIC5XQl9mYWNlIGltZyB7IGJvcmRlci1yYWRpdXM6IDUwJSAhaW1wb3J0YW50OyB9CiAgICAqLyBub29wKCk7IH0pKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnN0eWxlKTsKCi8vIOa3seiJsuWvvOagj+iIqgpmaWx0ZXIuaXRlbXMuc3R5bGUubGF5b3V0LmRhcmtfbmF2X2JhciA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnbGF5b3V0JywKICAndmVyc2lvbic6IDE0NywKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuZGFya19uYXZfYmFyJywKICAndGV4dCc6ICd7e2RhcmtOYXZCYXJ9fScsCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdXRpbC5jc3MuYWRkKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICAuV0JfZ2xvYmFsX25hdiB7IGJhY2tncm91bmQ6ICMzMzM7IH0KICAgICAgLldCX2dsb2JhbF9uYXZfYWxwaGEgeyBiYWNrZ3JvdW5kOiByZ2JhKDUxLCA1MSwgNTEsIDAuOTQpOyB9CiAgICAgIC5nbl9sb2dvIC5sb2dvOmVtcHR5IHsgYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50OyB9CiAgICAgIC5nbl9sb2dvIC5sb2dvOmVtcHR5OjpiZWZvcmUsIC5nbl9sb2dvIC5sb2dvOmVtcHR5OjphZnRlciB7IGNvbnRlbnQ6ICIgIjsgZGlzcGxheTogYmxvY2s7IGJhY2tncm91bmQ6IHVybCgiLy9pbWcudC5zaW5hanMuY24vdDYvc3R5bGUvaW1hZ2VzL2dsb2JhbF9uYXYvV0JfbG9nby5wbmc/aWQ9MTQwNDIxMTA0NzcyNyIpIG5vLXJlcGVhdCAwIDQwJTsgaGVpZ2h0OiA0OHB4OyB9CiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIG9ubHkgc2NyZWVuIGFuZCAoLW1vei1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgb25seSBzY3JlZW4gYW5kICgtby1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyLzEpLCBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpIHsKICAgICAgICAuZ25fbG9nbyAubG9nbzplbXB0eTo6YmVmb3JlLCAuZ25fbG9nbyAubG9nbzplbXB0eTo6YWZ0ZXIgeyBiYWNrZ3JvdW5kLWltYWdlOnVybCgiLy9pbWcudC5zaW5hanMuY24vdDYvc3R5bGUvaW1hZ2VzL2dsb2JhbF9uYXYvV0JfbG9nby14Mi5wbmc/aWQ9MTQwNDIxMTA0NzcyNyIpOyBiYWNrZ3JvdW5kLXNpemU6ODBweCAyN3B4OyB9CiAgICAgIH0KICAgICAgLmduX2xvZ28gLmxvZ286ZW1wdHk6OmJlZm9yZSB7IHdpZHRoOiAzNnB4OyBmbG9hdDogbGVmdDsgfQogICAgICAuZ25fbG9nbyAubG9nbzplbXB0eTo6YWZ0ZXIgeyB3aWR0aDogMTA0cHg7IGZsb2F0OiByaWdodDsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM2cHggNDAlOyB9CiAgICAgIC5nbl9sb2dvIC5sb2dvOmVtcHR5OjphZnRlciB7IGZpbHRlcjogdXJsKCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnJTIwdmlld0JveD0lMjIwJTIwMCUyMDE4MyUyMDI3NiUyMiUyMGlkPSUyMmltZzMlMjIlMjB4bWxucz0lMjJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyUyMiUzRSUzQ2ZpbHRlciUyMGlkPSUyMmludmVydCUyMiUzRSUzQ2ZlQ29tcG9uZW50VHJhbnNmZXIlM0UlM0NmZUZ1bmNSJTIwdGFibGVWYWx1ZXM9JTIyMSUyMDAlMjIlMjB0eXBlPSUyMnRhYmxlJTIyLyUzRSUzQ2ZlRnVuY0clMjB0YWJsZVZhbHVlcz0lMjIxJTIwMCUyMiUyMHR5cGU9JTIydGFibGUlMjIvJTNFJTNDZmVGdW5jQiUyMHRhYmxlVmFsdWVzPSUyMjElMjAwJTIyJTIwdHlwZT0lMjJ0YWJsZSUyMi8lM0UlM0MvZmVDb21wb25lbnRUcmFuc2ZlciUzRSUzQy9maWx0ZXIlM0UlM0Mvc3ZnJTNFI2ludmVydCIpOyAtd2Via2l0LWZpbHRlcjogaW52ZXJ0KDEwMCUpOyBmaWx0ZXI6IGludmVydCgxMDAlKTsgfQogICAgICAuRlJBTUVfbWFpbiAuV0JfZ2xvYmFsX25hdiAuZ25fbmF2X2xpc3QgbGkgLmhvbWUgZW0geyBjb2xvcjogI2ZhN2QzYzsgfQogICAgICAuV0JfZ2xvYmFsX25hdiAuU19maWNvbiwgLldCX2dsb2JhbF9uYXYgLlNfZmljb25fZGlzLCAuV0JfZ2xvYmFsX25hdiBhLlNfZmljb25fZGlzOmhvdmVyLCAuV0JfZ2xvYmFsX25hdiBhOmhvdmVyIC5TX2ZpY29uX2RpcyB7IGNvbG9yOiAjYTZhZmJmOyB9CiAgICAgIC5XQl9nbG9iYWxfbmF2IC5TX3R4dDEsIC5XQl9nbG9iYWxfbmF2IC5TV19mdW4gLlNfZnVuYzEgeyBjb2xvcjogI2VlZTsgfQogICAgKi8gbm9vcCgpOyB9KSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zdHlsZSk7CgovLyDkuqTmjaLlr7zoiKrpk77mjqXlkozmkJzntKLmoYbkvY3nva4KZmlsdGVyLml0ZW1zLnN0eWxlLmxheW91dC5yZW9yZGVyX25hdl9iYXIgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2xheW91dCcsCiAgJ3ZlcnNpb24nOiAyMjEsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLnJlb3JkZXJfbmF2X2JhcicsCiAgJ3RleHQnOiAne3tyZW9yZGVyTmF2QmFyfX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7cmVvcmRlck5hdkJhckRlc2N9fScgfSB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBtb3ZlTmF2TGlzdCA9IGZ1bmN0aW9uIG1vdmVOYXZMaXN0KCkgewogICAgICB2YXIgc2VhcmNoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLldCX2dsb2JhbF9uYXYgLmduX3NlYXJjaCwgLldCX2dsb2JhbF9uYXYgLmduX3NlYXJjaF92MicpOwogICAgICB2YXIgbGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5XQl9nbG9iYWxfbmF2IC5nbl9oZWFkZXIgLmduX3Bvc2l0aW9uIC5nbl9uYXYgLmduX25hdl9saXN0Jyk7CiAgICAgIGlmICghc2VhcmNoIHx8ICFsaXN0KSByZXR1cm47CiAgICAgIHZhciBpdGVtcyA9IEFycmF5LmZyb20obGlzdC5xdWVyeVNlbGVjdG9yQWxsKCdsaScpKS5zbGljZSgwLCAtMSk7CiAgICAgIHZhciBnbmxpc3QgPSB1dGlsLmRvbS5jcmVhdGUoJzxkaXYgY2xhc3M9ImduX25hdiI+PHVsIGNsYXNzPSJnbl9uYXZfbGlzdCI+PC91bD48L2Rpdj4nKTsKICAgICAgdmFyIG5saXN0ID0gZ25saXN0LnF1ZXJ5U2VsZWN0b3IoJ3VsJyk7CiAgICAgIGl0ZW1zLmZvckVhY2goZnVuY3Rpb24gKGwpIHsgbmxpc3QuYXBwZW5kQ2hpbGQobCk7IH0pOwogICAgICBzZWFyY2gucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZ25saXN0LCBzZWFyY2gpOwogICAgICBzZWFyY2gucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChzZWFyY2gpOwogICAgICB1dGlsLmNzcy5hZGQodXRpbC5zdHIuY210KGZ1bmN0aW9uICgpIHsgLyohQ1NTCiAgICAgICAgLldCX2dsb2JhbF9uYXYgLmduX3NlYXJjaCwgLldCX2dsb2JhbF9uYXYgLmduX3NlYXJjaF92MiB7IGZsb2F0OiByaWdodDsgfQogICAgICAgIC5XQl9nbG9iYWxfbmF2IC5nbl9oZWFkZXIgeyB0ZXh0LWFsaWduOiByaWdodDsgfQogICAgICAgIC5XQl9nbG9iYWxfbmF2IC5nbl9oZWFkZXIgPiAqIHsgdGV4dC1hbGlnbjogbGVmdDsgfQogICAgICAgIC5XQl9nbG9iYWxfbmF2IC5nbl9oZWFkZXIgPiAuZ25fbmF2IHsgbWFyZ2luLXJpZ2h0OiAwOyB9CiAgICAgICAgLldCX2dsb2JhbF9uYXZfdXMgLmduX2hlYWRlciB7IGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7IH0KICAgICAgICAuV0JfZ2xvYmFsX25hdl91cyAuZ25fbG9nbywgLldCX2dsb2JhbF9uYXZfdXMgLmduX2xvZ28gLmJveCwgLldCX2dsb2JhbF9uYXYgLmduX2xvZ28sIC5XQl9nbG9iYWxfbmF2IC5nbl9sb2dvIGEgeyB3aWR0aDogMTQwcHggIWltcG9ydGFudDsgfQogICAgICAgIC5XQl9nbG9iYWxfbmF2IC5nbl9sb2dvIGEgeyBsZWZ0OiAwICFpbXBvcnRhbnQ7IH0KICAgICAgICAuV0JfZ2xvYmFsX25hdl91cyAuZ25fbG9nbyAuYm94IC5sb2dvLCAuV0JfZ2xvYmFsX25hdl91cyAuZ25fbG9nbyAuYm94IGltZyB7IGRpc3BsYXk6IGJsb2NrOyB9CiAgICAgICAgLldCX2dsb2JhbF9uYXYgLmduX2xvZ28gLmJveCAubG9nbyB7IG1hcmdpbi1sZWZ0OiAwOyB9CiAgICAgICAgLldCX2dsb2JhbF9uYXZfdXMgLmduX3Bvc2l0aW9uIHsgbWFyZ2luLXJpZ2h0OiAwOyB9CiAgICAgICovIG5vb3AoKTsgfSkpOwogICAgICBvYnNlcnZlci5kb20ucmVtb3ZlKG1vdmVOYXZMaXN0KTsKICAgIH07CiAgICBvYnNlcnZlci5kb20uYWRkKG1vdmVOYXZMaXN0KTsKICAgIG1vdmVOYXZMaXN0KCk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zdHlsZSk7CgovLyDpmpDol4/mmLXnp7AKZmlsdGVyLml0ZW1zLnN0eWxlLmxheW91dC5uYXZfaGlkZV9uYW1lID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdsYXlvdXQnLAogICd2ZXJzaW9uJzogMzg0LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5uYXZfaGlkZV9uYW1lJywKICAndGV4dCc6ICd7e25hdkhpZGVOYW1lfX0nLAogICdyZWYnOiB7CiAgICAnYWN0JzogewogICAgICAndHlwZSc6ICdzZWxlY3QnLAogICAgICAnZGVmYXVsdCc6ICdyZXBsYWNlJywKICAgICAgJ3NlbGVjdCc6IFsKICAgICAgICB7ICd2YWx1ZSc6ICdoaWRkZW4nLCAndGV4dCc6ICd7e25hdkhpZGVOYW1lSGlkZGVufX0nIH0sCiAgICAgICAgeyAndmFsdWUnOiAncmVwbGFjZScsICd0ZXh0JzogJ3t7e25hdkhpZGVOYW1lUmVwbGFjZX19fScgfSwKICAgICAgXSwKICAgIH0sCiAgICAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e25hdkhpZGVOYW1lRGVzY319JyB9LAogIH0sCiAgJ2luaXQnOiBmdW5jdGlvbiAoKSB7CiAgICBpZiAoIXRoaXMuY29uZikgewogICAgICB1dGlsLmNzcy5hZGQodXRpbC5zdHIuY210KGZ1bmN0aW9uICgpIHsgLyohQ1NTCiAgICAgICAgLldCX2dsb2JhbF9uYXYgLmduX25hdl9saXN0IGxpIC5nbl9uYW1lIC5TX3R4dDEgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH0KICAgICAgKi8gbm9vcCgpOyB9KSk7CiAgICB9IGVsc2UgaWYgKHRoaXMucmVmLmFjdC5jb25mID09PSAncmVwbGFjZScpIHsKICAgICAgdXRpbC5jc3MuYWRkKHV0aWwuc3RyLmZpbGwodXRpbC5zdHIuY210KGZ1bmN0aW9uICgpIHsgLyohQ1NTCiAgICAgICAgLldCX2dsb2JhbF9uYXYgLmduX25hdl9saXN0IGxpIC5nbl9uYW1lIC5TX3R4dDE6OmJlZm9yZSB7IGNvbnRlbnQ6ICJ7e25hdkhpZGVOYW1lUmVwbGFjZVRleHR9fSI7IGRpc3BsYXk6IGJsb2NrOyB9CiAgICAgICAgLldCX2dsb2JhbF9uYXYgLmduX25hdl9saXN0IGxpIC5nbl9uYW1lIC5TX3R4dDEgeyBoZWlnaHQ6IDI2cHg7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgd2lkdGg6IDRlbTsgfQogICAgICAqLyBub29wKCk7IH0pKSk7CiAgICB9CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zdHlsZSk7CgovLyDliqDlrr3lvq7ljZoKZmlsdGVyLml0ZW1zLnN0eWxlLmxheW91dC53aWR0aF93ZWlibyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnbGF5b3V0JywKICAndmVyc2lvbic6IDI0MywKICAndHlwZSc6ICdib29sZWFuJywKICAndGV4dCc6ICd7e3dpZHRoV2VpYm99fScsCiAgJ2tleSc6ICd3ZWliby50b29sLndpZHRoX3dlaWJvJywKICAncmVmJzogewogICAgJ3dpZHRoJzogewogICAgICAndHlwZSc6ICdyYW5nZScsCiAgICAgICdtaW4nOiA0ODAsCiAgICAgICdtYXgnOiAxMjgwLAogICAgICAnZGVmYXVsdCc6IDc1MCwKICAgICAgJ3N0ZXAnOiAxMCwKICAgIH0sCiAgICAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e3dpZHRoV2VpYm9EZXNjfX0nIH0KICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIGlmICh1dGlsLnBhZ2Uuc2VhcmNoKSByZXR1cm47CiAgICB2YXIgd2lkdGggPSB0aGlzLnJlZi53aWR0aC5jb25mOwogICAgdXRpbC5jc3MuYWRkKHV0aWwuc3RyLmZpbGwodXRpbC5zdHIuY210KGZ1bmN0aW9uICgpIHsgLyohQ1NTCiAgICAgIGJvZHk6bm90KFt5YXdmLXdlaWJvLW9ubHldKSAuV0JfZnJhbWUgeyB3aWR0aDogY2FsYyh7e3dpZHRofX0gKyA0MDBweCkgIWltcG9ydGFudDsgfQogICAgICBib2R5Om5vdChbeWF3Zi13ZWliby1vbmx5XSkgI3BsY19tYWluIHsgd2lkdGg6IGNhbGMoe3t3aWR0aH19ICsgMjUwcHgpICFpbXBvcnRhbnQ7IH0KICAgICAgYm9keTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl9tYWluX2MsCiAgICAgIGJvZHk6bm90KFt5YXdmLXdlaWJvLW9ubHldKSAuV0JfZnJhbWVfYyB7IHdpZHRoOiB7e3dpZHRofX07IH0KICAgICAgYm9keTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl90YWJfYSAudGFiX2JveF9hIC5mcl9ib3ggeyB3aWR0aDogY2FsYyh7e3dpZHRofX0gLSAzMDBweCk7IH0KICAgICAgYm9keTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl90YWJfYSAudGFiX2JveF9hX3I2IC5mcl9ib3ggeyB3aWR0aDogY2FsYyh7e3dpZHRofX0gLSAzMTJweCk7IH0KICAgICAgYm9keTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl90YWJfYSAudGFiX2JveF9hX3IyX3MgLmZyX2JveCB7IHdpZHRoOiBjYWxjKHt7d2lkdGh9fSAtIDQwMHB4KTsgfQogICAgICBib2R5Om5vdChbeWF3Zi13ZWliby1vbmx5XSkgYS5XX2dvdG9wIHsgbWFyZ2luLWxlZnQ6IGNhbGMoe3t3aWR0aH19IC8gMiArIDIwMHB4KTsgfQogICAgICBib2R5Om5vdChbeWF3Zi13ZWliby1vbmx5XSkgI2hvbWVfbmV3X2ZlZWRfdGlwW3lhd2YtZml4ZWRdLAogICAgICBib2R5Om5vdChbeWF3Zi13ZWliby1vbmx5XSkgW3lhd2YtaWQ9ImhvbWVfbmV3X2ZlZWRfdGlwIl1beWF3Zi1maXhlZF0geyB3aWR0aDoge3t3aWR0aH19OyB0b3A6IDE1cHggfQogICAgICBib2R5Om5vdChbeWF3Zi13ZWliby1vbmx5XSkgI3lhd2YtZHJvcC1hcmVhIHsgbGVmdDogY2FsYyg1MCUgKyB7e3dpZHRofX0gLyAyIC0gNDBweCk7IH0KICAgICAgYm9keTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5wcml2YXRlX2RpYWxvZ3VlX2JveCAucHJpdmF0ZV9kaWFsb2d1ZV9ib2R5IHsgd2lkdGg6IHt7d2lkdGh9fTsgfQogICAgICBib2R5Om5vdChbeWF3Zi13ZWliby1vbmx5XSkgLndlYmltX2NoYXRfd2luZG93IC5wcml2YXRlX2RpYWxvZ3VlX2JveCAucHJpdmF0ZV9kaWFsb2d1ZV9ib2R5IHsgd2lkdGg6IDQwMHB4OyB9CiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMDZweCkgewogICAgICAgIGJvZHk6bm90KFt5YXdmLXdlaWJvLW9ubHldKSAuV0JfZnJhbWUgeyB3aWR0aDogY2FsYyh7e3dpZHRofX0gKyAxNjBweCkgIWltcG9ydGFudDsgfQogICAgICAgIGJvZHk6bm90KFt5YXdmLXdlaWJvLW9ubHldKSAjcGxjX21haW4geyB3aWR0aDogY2FsYyh7e3dpZHRofX0gKyAxMHB4KSAhaW1wb3J0YW50OyB9CiAgICAgICAgYm9keTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIGEuV19nb3RvcCB7IG1hcmdpbi1sZWZ0OiBjYWxjKHt7d2lkdGh9fSAvIDIgKyA4MHB4KTsgfQogICAgICAgIGJvZHk6bm90KFt5YXdmLXdlaWJvLW9ubHldKSAjeWF3Zi1kcm9wLWFyZWEgeyBsZWZ0OiBjYWxjKDUwJSArIHt7d2lkdGh9fSAvIDIgLSAyMzBweCk7IH0KICAgICAgfQoKICAgICAgYm9keVt5YXdmLW1lcmdlLWxlZnRdOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLldCX21haW4gLldCX2ZyYW1lIHsgd2lkdGg6IGNhbGMoe3t3aWR0aH19ICsgMjQwcHgpICFpbXBvcnRhbnQ7IG1heC13aWR0aDogMTAwJTsgfQogICAgICBib2R5W3lhd2YtbWVyZ2UtbGVmdF06bm90KFt5YXdmLXdlaWJvLW9ubHldKSBhLldfZ290b3AgeyBtYXJnaW4tbGVmdDogY2FsYyh7e3dpZHRofX0gLyAyICsgMTMwcHgpOyB9CiAgICAgIGJvZHlbeWF3Zi1tZXJnZS1sZWZ0PSJsZWZ0Il06bm90KFt5YXdmLXdlaWJvLW9ubHldKSAjeWF3Zi1kcm9wLWFyZWEgeyBsZWZ0OiBjYWxjKDUwJSAtIHt7d2lkdGh9fSAvIDIgLSAxMjBweCk7IH0KICAgICAgYm9keVt5YXdmLW1lcmdlLWxlZnQ9InJpZ2h0Il06bm90KFt5YXdmLXdlaWJvLW9ubHldKSAjeWF3Zi1kcm9wLWFyZWEgeyBsZWZ0OiBjYWxjKDUwJSArIHt7d2lkdGh9fSAvIDIgLSAxMTBweCk7IH0KICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwNnB4KSB7CiAgICAgICAgYm9keVt5YXdmLW1lcmdlLWxlZnRdOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLldCX21haW4gLldCX2ZyYW1lIHsgd2lkdGg6IHt7d2lkdGh9fSAhaW1wb3J0YW50OyBtYXgtd2lkdGg6IDEwMCU7IH0KICAgICAgICBib2R5W3lhd2YtbWVyZ2UtbGVmdF06bm90KFt5YXdmLXdlaWJvLW9ubHldKSBhLldfZ290b3AgeyBtYXJnaW4tbGVmdDogY2FsYyh7e3dpZHRofX0gLyAyICsgMTBweCk7IH0KICAgICAgICBib2R5W3lhd2YtbWVyZ2UtbGVmdF06bm90KFt5YXdmLXdlaWJvLW9ubHldKSAjeWF3Zi1kcm9wLWFyZWEgeyBsZWZ0OiBjYWxjKDUwJSArIHt7d2lkdGh9fSAvIDIgLSAyMzBweCk7IH0KICAgICAgfQoKICAgICAgOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgPiAuQl9wYWdlOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLldCX2ZyYW1lIHsgd2lkdGg6IGNhbGMoe3t3aWR0aH19ICsgMzQwcHgpICFpbXBvcnRhbnQ7IH0KICAgICAgOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgPiAuQl9wYWdlOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLldCX2ZyYW1lICNwbGNfbWFpbiB7IHdpZHRoOiBjYWxjKHt7d2lkdGh9fSArIDM0MHB4KSAhaW1wb3J0YW50OyB9CiAgICAgIDpub3QoW3lhd2Ytd2VpYm8tb25seV0pID4gLkJfcGFnZTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl9mcmFtZV9hLAogICAgICA6bm90KFt5YXdmLXdlaWJvLW9ubHldKSA+IC5CX3BhZ2U6bm90KFt5YXdmLXdlaWJvLW9ubHldKSAuV0JfZnJhbWVfYV9maXggeyB3aWR0aDogY2FsYyh7e3dpZHRofX0gKyAzMjBweCk7IH0KICAgICAgOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgPiAuQl9wYWdlOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLkRTQ19oZWFkZXIgeyB3aWR0aDogY2FsYyh7e3dpZHRofX0gKyAzNDBweCk7IH0KICAgICAgOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgPiAuQl9wYWdlOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLldCX2ZyYW1lICNwbGNfbWFpbiB7IHdpZHRoOiBjYWxjKHt7d2lkdGh9fSArIDM0MHB4KSAhaW1wb3J0YW50OyB9CiAgICAgIDpub3QoW3lhd2Ytd2VpYm8tb25seV0pID4gLkJfcGFnZTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIGEuV19nb3RvcCB7IG1hcmdpbi1sZWZ0OiBjYWxjKHt7d2lkdGh9fSAvIDIgKyAxNjBweCk7IH0KICAgICAgOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgPiAuQl9wYWdlOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLldCX3RpbWVsaW5lIHsgbWFyZ2luLWxlZnQ6IGNhbGMoe3t3aWR0aH19IC8gMiArIDE3MHB4KTsgfQogICAgICA6bm90KFt5YXdmLXdlaWJvLW9ubHldKSA+IC5CX3BhZ2U6bm90KFt5YXdmLXdlaWJvLW9ubHldKSAjeWF3Zi1kcm9wLWFyZWEgeyBsZWZ0OiBjYWxjKDUwJSArIHt7d2lkdGh9fSAvIDIgLSA3MHB4KTsgfQogICAgICA6bm90KFt5YXdmLXdlaWJvLW9ubHldKSA+IC5CX3BhZ2U6bm90KFt5YXdmLXdlaWJvLW9ubHldKSAuc2VuZF93ZWlib19zaW1wbGUgLmlucHV0X3NpbXBsZV93cmFwIC5pbnB1dGZ1bmNfc2ltcGxlX3dyYXAgeyB3aWR0aDogY2FsYyh7e3dpZHRofX0gLSA5NnB4KTsgfQogICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MzlweCkgewogICAgICAgIDpub3QoW3lhd2Ytd2VpYm8tb25seV0pID4gLkJfcGFnZTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl9mcmFtZSB7IHdpZHRoOiBjYWxjKHt7d2lkdGh9fSArIDBweCkgIWltcG9ydGFudDsgfQogICAgICAgIDpub3QoW3lhd2Ytd2VpYm8tb25seV0pID4gLkJfcGFnZTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl9mcmFtZV9hLAogICAgICAgIDpub3QoW3lhd2Ytd2VpYm8tb25seV0pID4gLkJfcGFnZTpub3QoW3lhd2Ytd2VpYm8tb25seV0pIC5XQl9mcmFtZV9hX2ZpeCB7IHdpZHRoOiB7e3dpZHRofX07IH0KICAgICAgICA6bm90KFt5YXdmLXdlaWJvLW9ubHldKSA+IC5CX3BhZ2U6bm90KFt5YXdmLXdlaWJvLW9ubHldKSAuRFNDX2hlYWRlciB7IHdpZHRoOiBjYWxjKHt7d2lkdGh9fSArIDIwcHgpOyB9CiAgICAgICAgOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgPiAuQl9wYWdlOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLldCX2ZyYW1lICNwbGNfbWFpbiB7IHdpZHRoOiBjYWxjKHt7d2lkdGh9fSArIDIwcHgpICFpbXBvcnRhbnQ7IH0KICAgICAgICA6bm90KFt5YXdmLXdlaWJvLW9ubHldKSA+IC5CX3BhZ2U6bm90KFt5YXdmLXdlaWJvLW9ubHldKSBhLldfZ290b3AgeyBtYXJnaW4tbGVmdDogY2FsYyh7e3dpZHRofX0gLyAyICsgMTIwcHgpOyB9CiAgICAgICAgOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgPiAuQl9wYWdlOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgI3lhd2YtZHJvcC1hcmVhIHsgbGVmdDogY2FsYyg1MCUgKyB7e3dpZHRofX0gLyAyIC0gMjMwcHgpOyB9CiAgICAgICAgOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgPiAuQl9wYWdlOm5vdChbeWF3Zi13ZWliby1vbmx5XSkgLldCX3RpbWVsaW5lIHsgbWFyZ2luLWxlZnQ6IGNhbGMoe3t3aWR0aH19IC8gMiArIDEwcHgpOyB9CiAgICAgIH0KCiAgICAgIGJvZHkuQl9hcnRpY2FsIC5XQl9mcmFtZSwKICAgICAgYm9keS5CX2FydGljYWwgLldCX2ZyYW1lICNwbGNfbWFpbiwKICAgICAgYm9keS5CX2FydGljYWwgLldCX2ZyYW1lX2EgeyB3aWR0aDogMTAwMHB4ICFpbXBvcnRhbnQ7IH0KCiAgICAgIC5zZW5kX3dlaWJvIHsgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfQogICAgKi8gbm9vcCgpOyB9KSwgewogICAgICAnd2lkdGgnOiB3aWR0aCArICdweCcsCiAgICB9KSk7CiAgICAvLyDop6PlhrPlj5HluIPmoYbkuIvmlrnnmoTmjInpkq7lnKjnvKnlsI/lrr3luqbml7bmjpLliJfkuI3lrozlhajnmoTpl67popgKICAgIGlmICh3aWR0aCA8IDYwMCkgdXRpbC5jc3MuYWRkKCcuc2VuZF93ZWlibyAua2luZCBhIHsgd2lkdGg6IDIwcHg7IGhlaWdodDogMjZweDsgb3ZlcmZsb3c6IGhpZGRlbjsgfScpOwogIH0KfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zdHlsZSk7CgovLyDpmIXor7vmqKHlvI8KZmlsdGVyLml0ZW1zLnN0eWxlLmxheW91dC53ZWlib19vbmx5ID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdsYXlvdXQnLAogICd2ZXJzaW9uJzogMzAsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ3RleHQnOiAne3t3ZWlib09ubHl9fScsCiAgJ2tleSc6ICd3ZWliby50b29sLndlaWJvX29ubHknLAogICdyZWYnOiB7CiAgICAvLyDlrr3luqYKICAgICd3aWR0aCc6IHsKICAgICAgJ3R5cGUnOiAncmFuZ2UnLAogICAgICAnbWluJzogNDgwLAogICAgICAnbWF4JzogMTI4MCwKICAgICAgJ2RlZmF1bHQnOiA2MDAsCiAgICAgICdzdGVwJzogMTAsCiAgICB9LAogICAgLy8g5b+r5o236ZSuCiAgICAna2V5JzogewogICAgICAndHlwZSc6ICdrZXknLAogICAgICAnZGVmYXVsdCc6IHV0aWwua2V5Ym9hcmQuY29kZS5GOCwKICAgIH0sCiAgICAvLyDmmK/lkKbmmL7npLrlv6vmjbfpk77mjqUKICAgICdzd2l0Y2gnOiB7CiAgICAgICd0eXBlJzogJ2Jvb2xlYW4nLAogICAgICAnZGVmYXVsdCc6IGZhbHNlLAogICAgfSwKICAgICdlbmFibGVkJzogewogICAgICAndHlwZSc6ICdib29sZWFuJywKICAgICAgJ2RlZmF1bHQnOiBmYWxzZSwKICAgICAgJ2ludGVybmFsJzogdHJ1ZSwKICAgIH0sCiAgfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICB2YXIga2V5ID0gdGhhdC5yZWYua2V5LCBhdHRyID0gJ3lhd2Ytd2VpYm8tb25seSc7CiAgICAvLyDliIfmjaLpmIXor7vmqKHlvI/lvIDlhbMKICAgIHZhciB1cGRhdGVNb2RlID0gZnVuY3Rpb24gKGVuYWJsZSkgewogICAgICB2YXIgZW5hYmxlZCA9IGRvY3VtZW50LmJvZHkuaGFzQXR0cmlidXRlKGF0dHIpOwogICAgICBpZiAoZW5hYmxlID09PSBudWxsKSBlbmFibGUgPSAhZW5hYmxlZDsKICAgICAgdmFyIHZhbGlkID0gZW5hYmxlICYmICghIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5XQl9mcmFtZV9jLCAjdjZfcGxfY29udGVudF9ob21lZmVlZCcpKTsKICAgICAgaWYgKHZhbGlkICE9PSBlbmFibGVkKSB7CiAgICAgICAgaWYgKHZhbGlkKSBkb2N1bWVudC5ib2R5LnNldEF0dHJpYnV0ZShhdHRyLCBhdHRyKTsKICAgICAgICBlbHNlIGRvY3VtZW50LmJvZHkucmVtb3ZlQXR0cmlidXRlKGF0dHIpOwogICAgICAgIHRoYXQucmVmLmVuYWJsZWQucHV0Y29uZihlbmFibGUpOwogICAgICB9CiAgICB9OwogICAgLy8g5qOA5p+l5b+r5o236ZSu5oyJ6ZSuCiAgICBpZiAoa2V5LmNvbmYpIHV0aWwua2V5Ym9hcmQucmVnKCdrZXl1cCcsIGtleS5jb25mLCBmdW5jdGlvbiAoZSkgewogICAgICB1cGRhdGVNb2RlKG51bGwpOwogICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgfSk7CiAgICAvLyDmmL7npLrliIfmjaLmjInpkq4KICAgIGlmICh0aGF0LnJlZlsnc3dpdGNoJ10uY29uZikgewogICAgICB2YXIgc2hvd1N3aXRjaCA9IGZ1bmN0aW9uIHNob3dSZWFkZXJTd2l0Y2goKSB7CiAgICAgICAgdmFyIHNlYXJjaCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN2Nl9wbF9jb250ZW50X2hvbWVmZWVkIC5XQl90YWJfYSAudGFiX2JveF9hIC5mcl9ib3ggLnNlYXJjaF9ib3g6bm90KFt5YXdmLXdlaWJvLW9ubHktYWRkZWRdKSwgZGl2W2lkXj0iUGxfT2ZmaWNpYWxfUHJvZmlsZUZlZWROYXZfXyJdIC5XQl90YWJfYSAudGFiX2JveF9hIC5mcl9ib3ggLnNlYXJjaF9ib3g6bm90KFt5YXdmLXdlaWJvLW9ubHktYWRkZWRdKScpOwogICAgICAgIGlmICghc2VhcmNoKSByZXR1cm47IHNlYXJjaC5zZXRBdHRyaWJ1dGUoJ3lhd2Ytd2VpYm8tb25seS1hZGRlZCcsICdhZGRlZCcpOwogICAgICAgIHZhciB3ZWlib09ubHkgPSB1dGlsLmRvbS5jcmVhdGUoJ2RpdicsIHV0aWwuc3RyLmZpbGwoaHRtbC53ZWlib09ubHlCdXR0b24sIHsKICAgICAgICAgICdzaG9ydGN1dCc6IGtleS5jb25mID09PSAwID8gJycgOiAnICgnICsgdXRpbC5rZXlib2FyZC5uYW1lKGtleS5jb25mKSArICcpJywKICAgICAgICB9KSkuZmlyc3RDaGlsZDsKICAgICAgICB3ZWlib09ubHkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB1cGRhdGVNb2RlLmJpbmQodGhhdCwgbnVsbCkpOwogICAgICAgIHNlYXJjaC5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHdlaWJvT25seSk7CiAgICAgIH07CiAgICAgIG9ic2VydmVyLmRvbS5hZGQoc2hvd1N3aXRjaCk7CiAgICB9CiAgICAvLyDms6jlhozmoLflvI8KICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5maWxsKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICBib2R5W3t7YXR0cn19XSAuV0JfbWluaWJsb2cgeyBwYWRkaW5nLXRvcDogNTBweDsgfQogICAgICBib2R5W3t7YXR0cn19XSAuV0JfZnJhbWU+Kjpub3QoI3BsY19tYWluKSwKICAgICAgYm9keVt7e2F0dHJ9fV0gI3BsY19tYWluPio6bm90KC5XQl9tYWluX2MpOm5vdCguV0JfZnJhbWVfYyk6bm90KC5XQl9tYWluX3IpOm5vdCguV0JfZnJhbWVfYiksCiAgICAgIGJvZHlbe3thdHRyfX1dIC5XQl9tYWluX2M+Kjpub3QoI3Y2X3BsX2NvbnRlbnRfaG9tZWZlZWQpLAogICAgICBib2R5W3t7YXR0cn19XSAjcGxjX2JvdCAuV0JfZm9vdGVyLCBib2R5W3t7YXR0cn19XSAjcGxjX2JvdCAuV19mb2xkLCBib2R5W3t7YXR0cn19XSAuV0JfZm9vdGVyIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CiAgICAgIGJvZHlbe3thdHRyfX1dIC5XQl9tYWluIC5XQl9tYWluX2MgeyBmbG9hdDogcmlnaHQgIWltcG9ydGFudDsgfQogICAgICBib2R5W3t7YXR0cn19XSAjcGxjX21haW4+LldCX21haW5fciB7IHZpc2liaWxpdHk6IGhpZGRlbjsgbWFyZ2luLXJpZ2h0OiAtMjMwcHg7IH0KICAgICAgYm9keVt7e2F0dHJ9fV0gI3BsY19tYWluPi5XQl9mcmFtZV9iIHsgdmlzaWJpbGl0eTogaGlkZGVuOyBtYXJnaW4tcmlnaHQ6IC0zMDBweDsgfQogICAgICBib2R5W3t7YXR0cn19XSAuV0JfZnJhbWUsIGJvZHlbe3thdHRyfX1dW3lhd2YtbWVyZ2UtbGVmdD0ibGVmdCJdIC5XQl9tYWluIC5XQl9mcmFtZSB7IHdpZHRoOiBjYWxjKHt7d2lkdGh9fSArIDIwcHgpICFpbXBvcnRhbnQ7IG1heC13aWR0aDogMTAwJTsgfQogICAgICBib2R5W3t7YXR0cn19XSAjcGxjX21haW4geyB3aWR0aDogY2FsYyh7e3dpZHRofX0gKyAyMHB4KSAhaW1wb3J0YW50OyBtYXgtd2lkdGg6IDEwMCU7IH0KICAgICAgYm9keVt7e2F0dHJ9fV0gLldCX2dsb2JhbF9uYXYgeyBwb3NpdGlvbjogc3RhdGljOyBtYXJnaW4tdG9wOiAtNTBweDsgfQogICAgICBib2R5W3t7YXR0cn19XSAuV0JfbWFpbl9jIHsgd2lkdGg6IHt7d2lkdGh9fTsgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTsgfQogICAgICBib2R5W3t7YXR0cn19XSAuV0JfdGFiX2EgLnRhYl9ib3hfYSAuZnJfYm94IHsgd2lkdGg6IGNhbGMoe3t3aWR0aH19IC0gMzAwcHgpOyBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIDMwMHB4KTsgfQogICAgICBib2R5W3t7YXR0cn19XSAuV0JfdGFiX2EgLnRhYl9ib3hfYV9yMl9zIC5mcl9ib3ggeyB3aWR0aDogY2FsYyh7e3dpZHRofX0gLSA0MDBweCk7IG1heC13aWR0aDogY2FsYygxMDAlIC0gNDAwcHgpOyB9CiAgICAgIGJvZHlbe3thdHRyfX1dIC5XQl90YWJfYSAudGFiX2JveF9hX3I2IC5mcl9ib3ggeyB3aWR0aDogY2FsYyh7e3dpZHRofX0gLSAzMTJweCk7IH0KICAgICAgYm9keVt7e2F0dHJ9fV0gLldCX3RpbWVsaW5lIHsgbWFyZ2luLWxlZnQ6IGNhbGMoe3t3aWR0aH19IC8gMiArIDEwcHgpOyBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIDEwcHgpOyB9CiAgICAgIGJvZHlbe3thdHRyfX1dIGEuV19nb3RvcCB7IG1hcmdpbi1sZWZ0OiBjYWxjKHt7d2lkdGh9fSAvIDIgKyAxMHB4KTsgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSAxMHB4KTsgfQogICAgICBib2R5W3t7YXR0cn19XSAuV0JfZnJhbWVfYyB7IHdpZHRoOiB7e3dpZHRofX07IG1heC13aWR0aDogY2FsYygxMDAlIC0gMjBweCk7IH0KICAgICAgYm9keVt7e2F0dHJ9fV0gI2hvbWVfbmV3X2ZlZWRfdGlwW3lhd2YtZml4ZWRdLCBib2R5W3t7YXR0cn19XSBbeWF3Zi1pZD0iaG9tZV9uZXdfZmVlZF90aXAiXVt5YXdmLWZpeGVkXSB7IHdpZHRoOiB7e3dpZHRofX07IHRvcDogMTVweDsgfQogICAgICBib2R5W3t7YXR0cn19XSAjeWF3Zi1kcm9wLWFyZWEgeyBsZWZ0OiBjYWxjKDUwJSArIHt7d2lkdGh9fSAvIDIgLSAyMzBweCk7IH0KICAgICAgYm9keVt7e2F0dHJ9fV0gLldCX2ZlZWRfdjMgLldCX2ZhY2UgLm9wdCB7IHJpZ2h0OiBjYWxjKDEzMnB4IC0ge3t3aWR0aH19KTsgfQogICAgKi8gbm9vcCgpOyB9KSwgewogICAgICAnd2lkdGgnOiB0aGF0LnJlZi53aWR0aC5jb25mICsgJ3B4JywKICAgICAgJ2F0dHInOiBhdHRyLAogICAgfSkpOwogICAgdmFyIHVwZGF0ZU1vZGVCeUNvbmYgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHVwZGF0ZU1vZGUuY2FsbCh0aGF0LCB0aGF0LnJlZi5lbmFibGVkLmdldGNvbmYoKSk7CiAgICB9OwogICAgdXBkYXRlTW9kZUJ5Q29uZigpOwogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgZnVuY3Rpb24gKCkgewogICAgICB1cGRhdGVNb2RlLmNhbGwodGhhdCwgdGhhdC5yZWYuZW5hYmxlZC5nZXRjb25mKCkpOwogICAgfSk7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uIHVwZGF0ZVJlYWRlck1vZGUoKSB7CiAgICAgIHVwZGF0ZU1vZGUuY2FsbCh0aGF0LCB0aGF0LnJlZi5lbmFibGVkLmNvbmYpOwogICAgfSk7CiAgfQp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnN0eWxlKTsKCi8vIOiuvue9ruaooeadvwpmaWx0ZXIuaXRlbXMuc3R5bGUubGF5b3V0LnNldF9za2luID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdsYXlvdXQnLAogICd2ZXJzaW9uJzogMzA3LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICd0ZXh0JzogJ3t7c2V0U2tpbn19JywKICAna2V5JzogJ3dlaWJvLnRvb2wuc2V0X3NraW4nLAogICdyZWYnOiB7CiAgICAnc2tpbic6IHsKICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgJ2RlZmF1bHQnOiAnc2tpbjA1OCcsCiAgICAgICdzZWxlY3QnOiBPYmplY3Qua2V5cyhza2luKS5zb3J0KCkubWFwKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICB2YXIgdmFsID0gc2tpbltrZXldOwogICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh2YWwpLm1hcChmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgICAgIHZhciBudW0gPSBpbmRleC5zbGljZSgxKSwgc2tpbklkID0ga2V5ICsgbnVtOwogICAgICAgICAgcmV0dXJuIHsgJ3ZhbHVlJzogc2tpbklkLCAndGV4dCc6IHZhbFtpbmRleF0gKyAnICgnICsgc2tpbklkICsgJyknIH07CiAgICAgICAgfSk7CiAgICAgIH0pLnJlZHVjZShmdW5jdGlvbiAoeCwgeSkgeyByZXR1cm4geC5jb25jYXQoeSk7IH0pLAogICAgfSwKICAgICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7c2V0U2tpbkRlc2N9fScgfQogIH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdmFyIHVzZXJDb25maWdTa2luSWQgPSB0aGlzLnJlZi5za2luLmNvbmYsIHZlcnNpb24gPSAnJzsKICAgIHZhciBza2luU3R5bGUgPSBudWxsLCBjb3ZlclN0eWxlID0gbnVsbDsKICAgIHZhciBza2luSWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB1dGlsLnN0ci5wYXJzZXF1ZXJ5KGxvY2F0aW9uLnNlYXJjaC5zbGljZSgxKSkuc2tpbklkIHx8IHVzZXJDb25maWdTa2luSWQ7CiAgICB9OwogICAgdmFyIHNldFNraW5JZCA9IGZ1bmN0aW9uIChza2luSWQpIHsKICAgICAgc2tpblN0eWxlLmhyZWYgPSBza2luU3R5bGUuaHJlZi5yZXBsYWNlKC9cL3NraW5cL1teXC9dKlwvc2tpbi5jc3MvLCAnL3NraW4vJyArIHNraW5JZCArICcvc2tpbi5jc3MnKTsKICAgICAgdmFyIGNvdmVyQ3NzID0gJyNza2luX2NvdmVyX3MgeyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi8vaW1nLnQuc2luYWpzLmNuL3Q2L3NraW4vJyArCiAgICAgICAgc2tpbklkICsgJy9pbWFnZXMvcHJvZmlsZV9jb3Zlcl9zLmpwZz92ZXJzaW9uPScgKyB2ZXJzaW9uICsgJyIpICFpbXBvcnRhbnQ7IH0nOwogICAgICAoY292ZXJTdHlsZSB8fCAoY292ZXJTdHlsZSA9IGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQodXRpbC5kb20uY3JlYXRlKCdzdHlsZScsICcnKSkpKS50ZXh0Q29udGVudCA9IGNvdmVyQ3NzOwogICAgfTsKICAgIHZhciBzZXRTa2luID0gZnVuY3Rpb24gc2V0U2tpbigpIHsKICAgICAgdmFyIGlkID0gc2tpbklkKCk7CiAgICAgIGlmICghc2tpblN0eWxlKSB7CiAgICAgICAgdmFyIHNraW5Dc3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdsaW5rW2hyZWYqPSIvL2ltZy50LnNpbmFqcy5jbi90Ni9za2luLyJdW2hyZWYqPSIvc2tpbi5jc3M/Il0nKTsKICAgICAgICBpZiAoIXNraW5Dc3MpIHJldHVybjsKICAgICAgICB2ZXJzaW9uID0gKChza2luQ3NzLmhyZWYubWF0Y2goL3ZlcnNpb249KFthLWZBLUYwLTldKikvKSB8fCBbXSlbMV0pIHx8ICcnOwogICAgICAgIHNraW5TdHlsZSA9IHNraW5Dc3MuY2xvbmVOb2RlKCk7IHNraW5TdHlsZS5pZCA9ICd5YXdmLXNraW5fc3R5bGUnOwogICAgICAgIHNldFNraW5JZChpZCk7CiAgICAgIH0KICAgICAgdmFyIGlzSG9tZSA9IGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmNvbnRhaW5zKCdGUkFNRV9tYWluJyk7CiAgICAgIGlmICghZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3lhd2Ytc2tpbl9zdHlsZScpIHx8CiAgICAgICAgLy8g5b6u5Y2a5LiN6IO95L+d6K+BIGlkIOS4uiBza2luX3N0eWxlIOeahOWvueixoeWUr+S4gO+8jOaJgOS7peS4jeiDveeUqCAjc2tpbl9zdHlsZSDpgInmi6nlmajvvIznpZ7lpYflkKcKICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjeWF3Zi1za2luX3N0eWxlIH4gW2lkPSJza2luX3N0eWxlIl0nKSB8fAogICAgICAgICghaXNIb21lICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN5YXdmLXNraW5fc3R5bGUgfiBbaWQ9ImN1c3RvbV9zdHlsZSJdJykpCiAgICAgICkgewogICAgICAgIHNldFNraW5JZChpZCk7CiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaGVhZCcpLmFwcGVuZENoaWxkKHNraW5TdHlsZSk7CiAgICAgIH0KICAgICAgLy8g5aaC5p6c5piv6aaW6aG177yM6ICM5LiU5L2/55So5LqG6Ieq5a6a5LmJ5qih5p2/77yb5L+d6K+B6Ieq5a6a5LmJ5qih5p2/5LyY5YWI57qn77yI5L2G5piv5Zyo5Liq5Lq65Li76aG15LiK6KaG55uW6Ieq5a6a5LmJ5qih5p2/77yJCiAgICAgIGlmIChpc0hvbWUgJiYgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2lkPSJjdXN0b21fc3R5bGUiXSB+ICN5YXdmLXNraW5fc3R5bGUnKSkgewogICAgICAgIHZhciBjdXN0b21fc3R5bGVfbGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tpZD0iY3VzdG9tX3N0eWxlIl0nKTsKICAgICAgICB2YXIgY3VzdG9tX3N0eWxlID0gY3VzdG9tX3N0eWxlX2xpc3RbY3VzdG9tX3N0eWxlX2xpc3QubGVuZ3RoIC0gMV07CiAgICAgICAgc2tpblN0eWxlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGN1c3RvbV9zdHlsZSwgc2tpblN0eWxlLm5leHRTaWJsaW5nKTsKICAgICAgfQogICAgfTsKICAgIG9ic2VydmVyLmRvbS5hZGQoc2V0U2tpbik7CiAgfSwKICAnaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciB0aGF0ID0gdGhpczsKICAgIHZhciBxdWVyeSA9IHV0aWwuc3RyLnBhcnNlcXVlcnkobG9jYXRpb24uc2VhcmNoLnNsaWNlKDEpKTsKICAgIHZhciBza2luSWQgPSBxdWVyeS5za2luSWQ7IGlmICghc2tpbklkKSByZXR1cm47CiAgICB2YXIgbmFtZSA9IHNraW5bc2tpbklkLnJlcGxhY2UoL1xkKyQvLCAnJyldWydfJyArIHNraW5JZC5yZXBsYWNlKC9eXEQrLywgJycpXTsgaWYgKCFuYW1lKSByZXR1cm47CiAgICB2YXIgY29uZmlybSA9IHV0aWwudWkuY29uZmlybSgneWF3Zi11c2Utc2tpbicsIHsKICAgICAgJ3RpdGxlJzogdXRpbC5zdHIuZmlsbCgne3tzZXRTa2luQnlQcmV2aWV3fX0nKSwKICAgICAgJ3RleHQnOiB1dGlsLnN0ci5maWxsKCd7e3tzZXRTa2luQnlQcmV2aWV3RGVzY319fScsIHsgJ25hbWUnOiBuYW1lIH0pLAogICAgICAnb25Payc6IGZ1bmN0aW9uICgpIHsKICAgICAgICB0aGF0LnB1dGNvbmYodHJ1ZSk7CiAgICAgICAgdGhhdC5yZWYuc2tpbi5wdXRjb25mKHNraW5JZCk7CiAgICAgICAgZGVsZXRlIHF1ZXJ5LnNraW5JZDsKICAgICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyB1dGlsLnN0ci50b3F1ZXJ5KHF1ZXJ5KTsKICAgICAgfSwKICAgIH0pOwogICAgY29uZmlybS5kb20uc3R5bGUuekluZGV4ID0gJzEwMDAxJzsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnN0eWxlKTsKCi8vIOW+ruWNmuebuOWFs+agt+W8jwpmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCdzdHlsZScsICdzd2VpYm8nLCAne3t3ZWlib1N0eWxlVGl0bGV9fScpOwoKLy8g5b6u5Y2a5L2c6ICF5LiO5q2j5paH5ZCM6KGMCmZpbHRlci5pdGVtcy5zdHlsZS5zd2VpYm8ubm9fd2VpYm9fc3BhY2UgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ3N3ZWlibycsCiAgJ3ZlcnNpb24nOiAzMzEsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLnVud3JhcFRleHQnLAogICd0ZXh0JzogJ3t7dW53cmFwVGV4dERlc2N9fScsCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgdXRpbC5jc3MuYWRkKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICAuV0JfZmVlZF90eXBlIC5XQl9kZXRhaWwgPiAuV0JfaW5mbywgLldCX2RldGFpbCA+IC5XQl9pbmZvIH4gLldCX3RleHQsCiAgICAgIC5XQl9mZWVkX3R5cGUgLldCX2RldGFpbCAuV0JfZXhwYW5kID4gLldCX2luZm8sIC5XQl9leHBhbmQgPiAuV0JfaW5mbyB+IC5XQl90ZXh0IHsgZGlzcGxheTogaW5saW5lOyB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7IH0KCiAgICAgIC5XQl9mZWVkX3R5cGUgLldCX2RldGFpbCA+IC5XQl9pbmZvOjphZnRlciwgLldCX2V4cGFuZCA+IC5XQl9pbmZvOjphZnRlciB7IGNvbnRlbnQ6ICLvvJoiOyB9CiAgICAgIC5XQl9mZWVkX3R5cGUgLldCX2RldGFpbCA+IC5XQl9pbmZvIH4gLldCX3RleHQ6OmJlZm9yZSB7IGRpc3BsYXk6IGJsb2NrOyBmbG9hdDogcmlnaHQ7IGNvbnRlbnQ6ICIgIjsgd2lkdGg6IDE0cHg7IGhlaWdodDogMXB4OyB9CgogICAgICAuV0JfZmVlZF90eXBlIC5XQl9kZXRhaWwgPiAuV0JfaW5mbyArIC5XQl9mcm9tIHsgZGlzcGxheTogbm9uZTsgfQoKICAgICAgLldCX2ZlZWRfdHlwZVt5YXdmLWhpZGVfYm94XSAuV0JfZGV0YWlsID4gLldCX2luZm8gfiAuV0JfdGV4dDo6YmVmb3JlIHsgd2lkdGg6IDM3cHg7IH0KICAgICAgLldCX2ZlZWRfdHlwZSAuV0JfZGV0YWlsID4gLldCX2luZm8gfiAuV0JfdGV4dCArIC5XQl9mcm9tIHsgbWFyZ2luLXRvcDogMWVtOyB9CgogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mYWNlIC5vcHQgeyBtYXJnaW46IDEwcHggMCAwIDA7IHBvc2l0aW9uOiBzdGF0aWM7IHJpZ2h0OiBhdXRvOyB0b3A6IGF1dG87IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmFjZSAub3B0IC5XX2J0bl9iIHsgd2lkdGg6IDQ4cHg7IH0KCiAgICAgIFtpZF49IlBsX0NvcmVfV2VuZGFMaXN0X18iXSAuV0JfZmVlZF90eXBlIC5XQl9kZXRhaWwgPiAuV0JfaW5mbyB+IC5XQl90ZXh0OjpiZWZvcmUgeyB3aWR0aDogNjhweDsgfQogICAgKi8gbm9vcCgpOyB9KSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zdHlsZSk7CgovLyDmm7/mjaLlvq7ljZrlhoXnmoTmjaLooYzkuLrlhbbku5bnrKblj7cKZmlsdGVyLml0ZW1zLnN0eWxlLnN3ZWliby5ub193ZWlib19icmVhayA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc3dlaWJvJywKICAndmVyc2lvbic6IDMyMywKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wudW53cmFwQ29udGVudCcsCiAgJ3RleHQnOiAne3t1bndyYXBDb250ZW50fX0nLAogICdyZWYnOiB7CiAgICAndGV4dCc6IHsKICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgJ2RlZmF1bHQnOiAn4o+OJywKICAgICAgJ3NlbGVjdCc6IFsKICAgICAgICB7ICd2YWx1ZSc6ICcgJywgJ3RleHQnOiAnICcgfSwKICAgICAgICB7ICd2YWx1ZSc6ICcgLyAnLCAndGV4dCc6ICcvJyB9LAogICAgICAgIHsgJ3ZhbHVlJzogJ+KkticsICd0ZXh0JzogJ+KkticgfSwKICAgICAgICB7ICd2YWx1ZSc6ICfihrUnLCAndGV4dCc6ICfihrUnIH0sCiAgICAgICAgeyAndmFsdWUnOiAn4o+OJywgJ3RleHQnOiAn4o+OJyB9LAogICAgICAgIHsgJ3ZhbHVlJzogJ+KGsicsICd0ZXh0JzogJ+KGsicgfSwKICAgICAgICB7ICd2YWx1ZSc6ICfihqknLCAndGV4dCc6ICfihqknIH0sCiAgICAgIF0sCiAgICB9LAogICAgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3t1bndyYXBDb250ZW50RGVzY319JyB9CiAgfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGJyID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuV0JfdGV4dCBicicpKTsKICAgICAgYnIuZm9yRWFjaChmdW5jdGlvbiAoYikgewogICAgICAgIHZhciBwID0gdXRpbC5kb20uY3JlYXRlKCdzcGFuJywgJycpOwogICAgICAgIHAuY2xhc3NOYW1lID0gJ3lhd2YtbGluZWJyZWFrJzsKICAgICAgICBiLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHAsIGIpOwogICAgICB9KTsKICAgIH0pOwogICAgdXRpbC5jc3MuYWRkKCcueWF3Zi1saW5lYnJlYWs6OmJlZm9yZSB7IGNvbnRlbnQ6ICInICsgdGhpcy5yZWYudGV4dC5jb25mICsgJyIgfScpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc3R5bGUpOwoKLy8g57yp5bCP5Zu+54mH5aSn5bCP5Yiw5q2j5bi45bC65a+4CmZpbHRlci5pdGVtcy5zdHlsZS5zd2VpYm8uaW1hZ2Vfc2l6ZSA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc3dlaWJvJywKICAndmVyc2lvbic6IDMzMSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuaW1hZ2Vfc2l6ZScsCiAgJ3RleHQnOiAne3tpbWFnZVNpemV9fScsCiAgJ3JlZic6IHsKICAgICdyZXBvc3QnOiB7ICd0eXBlJzogJ2Jvb2xlYW4nIH0sCiAgICAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICd3YXJuJywgJ3RleHQnOiAne3tpbWFnZVNpemVEZXNjfX0nIH0KICB9LAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfbWVkaWFfYSB7IG1hcmdpbjogLTJweCAwIDAgNnB4OyB3aWR0aDogMjU4cHg7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfbWVkaWFfYV9tbiAuV0JfcGljIHsgd2lkdGg6IDgwcHg7IGhlaWdodDogODBweDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3Y0IC5XQl9tZWRpYV9hX21uIC5XQl9waWMgeyB3aWR0aDogODBweCAhaW1wb3J0YW50OyBoZWlnaHQ6IDgwcHggIWltcG9ydGFudDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3Y0IC5XQl9tZWRpYV9hX21uIC5XQl9waWMgaW1nIHsgdG9wOiA0MHB4ICFpbXBvcnRhbnQ7IGxlZnQ6IDQwcHggIWltcG9ydGFudDsgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjQgLldCX21lZGlhX2FfbW4gLldCX3BpYyBpbWdbc3R5bGUqPSJsZWZ0OjAiXVtzdHlsZSo9IndpZHRoOjExMHB4Il0geyB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3Y0IC5XQl9tZWRpYV9hX21uIC5XQl9waWMgaW1nW3N0eWxlKj0idG9wOjAiXVtzdHlsZSo9ImhlaWdodDoxMTBweCJdIHsgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7IHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92NCAuV0JfbWVkaWFfYV9tbiAuV0JfcGljIGltZ1tzdHlsZSo9InRvcDowIl0geyB0b3A6IDAgIWltcG9ydGFudDsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpICFpbXBvcnRhbnQ7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92NCAuV0JfbWVkaWFfYV9tbiAuV0JfcGljIGltZ1tzdHlsZSo9ImxlZnQ6MCJdIHsgbGVmdDogMCAhaW1wb3J0YW50OyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgIWltcG9ydGFudDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3Y0IC5XQl9tZWRpYV9hX21uIC5XQl9waWMgaW1nW3N0eWxlKj0idG9wOjAiXVtzdHlsZSo9ImxlZnQ6MCJdIHsgbGVmdDogMCAhaW1wb3J0YW50OyB0b3A6IDAgIWltcG9ydGFudDsgdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92NCAuV0JfbWVkaWFfYV9tbiAuV0JfcGljIGltZzpub3QoW3N0eWxlKj0idG9wIl0pIHsgbWF4LXdpZHRoOyAxMDAlOyBtYXgtaGVpZ2h0OiAxMDAlOyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX21lZGlhX2FfbTEgLldCX3BpYyB7IG1heC13aWR0aDogMTIwcHg7IG1heC1oZWlnaHQ6IDEyMHB4OyBtaW4td2lkdGg6IDM2cHg7IGhlaWdodDogYXV0byAhaW1wb3J0YW50OyB3aWR0aDogYXV0byAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX21lZGlhX2FfbTEgLldCX3BpYyBpbWcgeyBtYXgtaGVpZ2h0OiAxMjBweDsgbWF4LXdpZHRoOiAxMjBweDsgd2lkdGg6IGF1dG8gIWltcG9ydGFudDsgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7IHBvc2l0aW9uOiBzdGF0aWM7IC13ZWJraXQtdHJhbnNmb3JtOiBub25lOyB0cmFuc2Zvcm06IG5vbmU7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfbWVkaWFfYV9tMSAuV0JfdmlkZW86bm90KC55YXdmLVdCX3ZpZGVvKTpub3QoLldCX3ZpZGVvX2g1X3YyKSB7IHdpZHRoOiAxMjBweDsgaGVpZ2h0OiA4MHB4OyBtaW4td2lkdGg6IDM2cHg7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfbWVkaWFfYV9tNCB7IHdpZHRoOiAxNzJweDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mZWVkX3JlcGVhdCAuV0JfbWVkaWFfYV9tMSAuV0JfcGljOjpiZWZvcmUgeyBkaXNwbGF5OiBub25lOyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2ZlZWRfcmVwZWF0IC5XQl9tZWRpYV9hX20xIC5XQl9waWMgaW1nIHsgbWF4LXdpZHRoOiAxMjBweDsgbWF4LWhlaWdodDogMTIwcHg7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmVlZF9zcGVjIHsgaGVpZ2h0OiAxMDBweDsgd2lkdGg6IDMxNnB4OyBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDEyNywxMjcsMTI3LDAuMyk7IGJveC1zaGFkb3c6IDAgMCAycHggcmdiYSgwLDAsMCwwLjE1KTsgYm9yZGVyLXJhZGl1czogMnB4OyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2ZlZWRfc3BlY19waWMgeyBoZWlnaHQ6IDEwMHB4OyB3aWR0aDogMTAwcHg7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmVlZF9zcGVjX2luZm8geyBoZWlnaHQ6IDg4cHg7IHdpZHRoOiAyMDJweDsgcGFkZGluZzogN3B4IDRweCA1cHggMTBweDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mZWVkX3NwZWNfYjIgLldCX2ZlZWRfc3BlY19waWMsIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2ZlZWRfc3BlY19iMiAuV0JfZmVlZF9zcGVjX3BpYyBpbWcsIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2ZlZWRfc3BlY19jIC5XQl9mZWVkX3NwZWNfcGljLCAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mZWVkX3NwZWNfYyAuV0JfZmVlZF9zcGVjX3BpYyBpbWcgeyBoZWlnaHQ6IGF1dG87IG1pbi1oZWlnaHQ6IDEwMHB4OyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2ZlZWRfc3BlY19iIC5XQl9mZWVkX3NwZWNfcGljLCAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mZWVkX3NwZWNfYyAuV0JfZmVlZF9zcGVjX3BpYywgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmVlZF9zcGVjMiAuV0JfZmVlZF9zcGVjX3BpYyB7IGhlaWdodDogMTAwcHg7IHdpZHRoOiAyNTBweDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mZWVkX3NwZWNfYiwgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmVlZF9zcGVjX2MsIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2ZlZWRfc3BlYzIgeyB3aWR0aDogMjUwcHg7IGhlaWdodDogYXV0bzsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mZWVkX3NwZWNfaW5mbyB7IGZsb2F0OiByaWdodDsgaGVpZ2h0OiA4OHB4OyBwYWRkaW5nOiA3cHggNHB4IDVweCAxMHB4OyB3aWR0aDogMjAycHg7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmVlZF9zcGVjX2IgLldCX2ZlZWRfc3BlY19pbmZvLCAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mZWVkX3NwZWNfYyAuV0JfZmVlZF9zcGVjX2luZm8sIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2ZlZWRfc3BlYzIgLldCX2ZlZWRfc3BlY19pbmZvIHsgZmxvYXQ6IG5vbmU7IGhlaWdodDogYXV0bzsgd2lkdGg6IGF1dG87IHBhZGRpbmc6IDEwcHggNXB4IDA7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmVlZF9zcGVjX2IgLldCX2ZlZWRfc3BlY19pbmZvIC5XQl9mZWVkX3NwZWNfY29udCAuV0JfZmVlZF9zcGVjX3RpdCwgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmVlZF9zcGVjX2MgLldCX2ZlZWRfc3BlY19pbmZvIC5XQl9mZWVkX3NwZWNfY29udCAuV0JfZmVlZF9zcGVjX3RpdCwgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmVlZF9zcGVjMiAuV0JfZmVlZF9zcGVjX2luZm8gLldCX2ZlZWRfc3BlY19jb250IC5XQl9mZWVkX3NwZWNfdGl0IHsgZm9udC1zaXplOiBpbmhlcml0OyBmb250LXdlaWdodDogNzAwOyBtYXJnaW46IDAgMCA2cHg7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZmVlZF9zcGVjX2luZm8gLldCX2ZlZWRfc3BlY19jb250IC5XQl9mZWVkX3NwZWNfYnJpZWZ0eHQgeyBsaW5lLWhlaWdodDogMTVweDsgaGVpZ2h0OiAzMHB4OyB9CgogICAgICAubGF5ZXJfZmVlZGltZ3Nob3cgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfbWVkaWFfYSB7IG1hcmdpbjogMDsgd2lkdGg6IGF1dG87IH0KICAgICAgLmxheWVyX2ZlZWRpbWdzaG93IC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX21lZGlhX2FfbTEgLldCX3BpYyB7IG1heC13aWR0aDogbm9uZTsgbWF4LWhlaWdodDogbm9uZTsgbWluLXdpZHRoOiBhdXRvOyB9CiAgICAgIC5sYXllcl9mZWVkaW1nc2hvdyAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9tZWRpYV9hX20xIC5XQl9waWMgaW1nIHsgbWF4LXdpZHRoOiAyNjBweDsgbWF4LXdpZHRoOiA0MHZ3OyBtYXgtaGVpZ2h0OiAyNjBweDsgbWF4LWhlaWdodDogNDB2aDsgbWluLXdpZHRoOiBhdXRvOyB9CgogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9tZWRpYV9hX20xIC5XQl92aWRlby5XQl92aWRlb19oNSB7IHdpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87IGRpc3BsYXk6IHRhYmxlOyB9CiAgICAgIC5XQl9oNXZpZGVvLmh2LXMxLCAuV0JfaDV2aWRlby5odi1zMy0yLCAuV0JfaDV2aWRlby5odi1zMy01IHsgd2lkdGg6IDEyMHB4OyBoZWlnaHQ6IDgwcHg7IG1heC13aWR0aDogMTIwcHg7IG1heC1oZWlnaHQ6IDgwcHg7IG1pbi13aWR0aDogMzZweDsgfQogICAgICAuV0JfaDV2aWRlby5odi1zMSAuY29uLTExLCAuV0JfaDV2aWRlby5odi1zMy0yIC5jb24tMTEsIC5XQl9oNXZpZGVvLmh2LXMzLTUgLmNvbi0xMSB7IGRpc3BsYXk6IG5vbmU7IH0KICAgICAgLldCX2g1dmlkZW8uaHYtczEgdmlkZW8sIC5XQl9oNXZpZGVvLmh2LXMzLTIgdmlkZW8sIC5XQl9oNXZpZGVvLmh2LXMzLTUgdmlkZW8geyBtYXgtd2lkdGg6IDEwMCU7IG1heC1oZWlnaHQ6IDEwMCU7IH0KICAgICAgLldCX2g1dmlkZW8uaHYtczMuaHYtczMtMiAuY29uLTQsCiAgICAgIC5XQl9oNXZpZGVvLmh2LXMzLmh2LXMzLTUgLmNvbi00IHsgb3BhY2l0eTogMTsgei1pbmRleDogMTsgfQogICAgICAuV0JfaDV2aWRlby5odi1zMy5odi1zMy0yOmhvdmVyIC5jb24tNiwKICAgICAgLldCX2g1dmlkZW8uaHYtczMuaHYtczMtNTpob3ZlciAuY29uLTYsCiAgICAgIC5XQl9oNXZpZGVvLmh2LXMzLmh2LXMzLTUgLmNvbi0zIC5ib3gtMiBlbSwKICAgICAgLldCX2g1dmlkZW8gLmNvbi0zLmh2LXMzLTMgLmJveC0zIHsgb3BhY2l0eTogMDsgei1pbmRleDogMDsgfQoKICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfbWVkaWFfYV9tMSAuV0JfdmlkZW86bm90KFt5YXdmLXZpZGVvLXBsYXldKSB7IHdpZHRoOiAxMjBweDsgaGVpZ2h0OiA4MHB4OyBtaW4td2lkdGg6IDM2cHg7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfbWVkaWFfYV9tMSAuV0JfdmlkZW86bm90KFt5YXdmLXZpZGVvLXBsYXldKSAud2J2LWNvbnRyb2wtYmFyIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CgogICAgKi8gbm9vcCgpOyB9KS5yZXBsYWNlKC9cL1wvLipcbi9nLCAnXG4nKSk7CiAgICBvYnNlcnZlci5kb20uYWRkKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHZpZGVvcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLldCX3ZpZGVvX2g1X3YyIC5XQl9oNXZpZGVvX3YyOm5vdChbeWF3Zi13YXRjaC1wb3VzZV0pJykpOwogICAgICB2aWRlb3MuZm9yRWFjaChmdW5jdGlvbiAodmlkZW8pIHsKICAgICAgICB2aWRlby5zZXRBdHRyaWJ1dGUoJ3lhd2Ytd2F0Y2gtcGF1c2UnLCAnJyk7CiAgICAgICAgdmFyIGNvbnRhaW5lciA9IHV0aWwuZG9tLmNsb3Nlc3QodmlkZW8sICcuV0JfdmlkZW9faDVfdjInKTsKICAgICAgICB2YXIgc2V0UGxheUF0dHJpYnV0ZSA9IGZ1bmN0aW9uIHNldFBsYXlBdHRyaWJ1dGUoKSB7CiAgICAgICAgICB2YXIgcGxheWluZyA9IHZpZGVvLmNsYXNzTGlzdC5jb250YWlucygnd2J2LXBsYXlpbmcnKTsKICAgICAgICAgIGlmIChwbGF5aW5nKSB7CiAgICAgICAgICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ3lhd2YtdmlkZW8tcGxheScsICcnKTsKICAgICAgICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpOwogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgc2V0UGxheUF0dHJpYnV0ZSgpOwogICAgICAgIHZhciBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKHNldFBsYXlBdHRyaWJ1dGUpOwogICAgICAgIG9ic2VydmVyLm9ic2VydmUodmlkZW8sIHsgYXR0cmlidXRlczogdHJ1ZSwgYXR0cmlidXRlRmlsdGVyOiBbJ2NsYXNzJ10sIGNoaWxkTGlzdDogZmFsc2UsIGNoYXJhY3RlckRhdGE6IGZhbHNlIH0pOwogICAgICB9KTsKICAgIH0pOwogICAgaWYgKHRoaXMucmVmLnJlcG9zdC5jb25mKSB1dGlsLmNzcy5hZGQodXRpbC5zdHIuY210KGZ1bmN0aW9uICgpIHsgLyohQ1NTCiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2ZlZWRfZXhwYW5kIC5XX2Fycm93X2JvciB7IGRpc3BsYXk6IGJsb2NrOyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2V4cGFuZF9tZWRpYSB7IG1hcmdpbjogMnB4IDAgOHB4OyBwYWRkaW5nOiAxMnB4IDE2cHggMTZweDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9leHBhbmQgeyBtYXJnaW46IDAgMCAxMHB4OyBwYWRkaW5nOiAxMHB4IDE2cHggMTNweDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9leHBhbmQgLldCX2Z1bmMgeyBtYXJnaW46IDA7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZXhwYW5kX21lZGlhX2JveCB7IG1hcmdpbjogMDsgIH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZXhwYW5kIC5XQl9leHBhbmRfbWVkaWEgeyBwYWRkaW5nOiAwIDAgNXB4OyBtYXJnaW46IDA7IH0KICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfbWVkaWFfdmlldyB7IG1hcmdpbjogNnB4IGF1dG8gMDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9tZWRpYV92aWV3LCAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9tZWRpYV92aWV3IC5tZWRpYV9zaG93X2JveCBsaSB7IHdpZHRoOiA0NDBweDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9tZWRpYV92aWV3IC5tZWRpYV9zaG93X2JveCB1bCB7IG1hcmdpbi1sZWZ0OiAtMzJweDsgcGFkZGluZy1sZWZ0OiAzMnB4OyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLmFydHdvcmtfYm94IHsgd2lkdGg6IDQ0MHB4OyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX21lZGlhX3ZpZXcgLm1lZGlhX3Nob3dfYm94IGltZyB7IG1heC13aWR0aDogNDQwcHg7IGhlaWdodDogYXV0byAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLmxheWVyX3ZpZXdfbW9yZXBpYyAudmlld19waWMgeyBwYWRkaW5nOiAwIDQwcHggMjBweDsgfQogICAgICAuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9tZWRpYV92aWV3IC5waWNfY2hvb3NlX2JveCAuc3RhZ2VfYm94IHsgd2lkdGg6IDQ0MHB4OyB9CiAgICAqLyBub29wKCk7IH0pLnJlcGxhY2UoL1wvXC8uKlxuL2csICdcbicpKTsKICAgIGlmICgKICAgICAgIWZpbHRlci5pdGVtcy5zdHlsZS5sYXlvdXQud2lkdGhfd2VpYm8uY29uZiB8fAogICAgICBmaWx0ZXIuaXRlbXMuc3R5bGUubGF5b3V0LndpZHRoX3dlaWJvLnJlZi53aWR0aC5jb25mIDwgNjUwICYmCiAgICAgIHRoaXMucmVmLnJlcG9zdC5jb25mCiAgICApIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgLldCX2g1dmlkZW8geyBtYXJnaW4tbGVmdDogLTIycHg7IH0KICAgICAgLldCX2g1dmlkZW8uaHYtczEsIC5XQl9oNXZpZGVvLmh2LXMzLTIsIC5XQl9oNXZpZGVvLmh2LXMzLTUgeyBtYXJnaW4tbGVmdDogMDsgfQogICAgKi8gbm9vcCgpOyB9KS5yZXBsYWNlKC9cL1wvLipcbi9nLCAnXG4nKSk7CiAgICAvLyBGSVhNRSDlhavlm77miJbkuZ3lm77ml7bvvIzlsZXlvIDlkI7lm77niYfliJfooajmmL7npLrkuI3lrozmlbQKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnN0eWxlKTsKCi8vIOWOu+mZpOW+ruWNmumXtOeahOe8nemamQpmaWx0ZXIuaXRlbXMuc3R5bGUuc3dlaWJvLm5vX3dlaWJvX3NwYWNlID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzd2VpYm8nLAogICd2ZXJzaW9uJzogMzMxLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5ub193ZWlib19zcGFjZScsCiAgJ3RleHQnOiAne3tub1dlaWJvU3BhY2V9fScsCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgaWYgKGxvY2F0aW9uLmhyZWYuaW5kZXhPZignL3R0YXJ0aWNsZS9wL3Nob3cnKSAhPT0gLTEpIHJldHVybjsKICAgIC8vIEZJWE1FIOetieWFqOmdouaOqOaWsOeJiOS5i+WQjuaKiuacgOWQjuS4pOadoeagt+W8j+aVtOWQiOi/m+WOu++8jOW5tuS/ruaUueaKiuaXpeacn+adpea6kOaNouWIsOacgOWQjuWKn+iDveS4reeahOebuOWFs+agt+W8jwogICAgLy8g5pyA5ZCO5LiA6KGM5piv5Li65LqG5Y+W5raI6L2s5Y+R5qC35byP5oGi5aSN5ZCO6aKd5aSW5re75Yqg55qEMTDlg4/ntKDlpJbovrnot50KICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKCiAgICAgIC5XQl9mZWVkIC5XQl9jYXJkd3JhcCB7IHBhZGRpbmc6IDAgIWltcG9ydGFudDsgbWFyZ2luOiAwICFpbXBvcnRhbnQ7IGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9mZWVkIC5XQl9jYXJkd3JhcC5XQl9yZXN1bHQgeyBwYWRkaW5nOiAwIDIwcHggIWltcG9ydGFudDsgfQogICAgICAuV0JfZmVlZCAuV0JfZmVlZF90eXBlIHsgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMTI4LCAxMjgsIDEyOCwgMC4zKSAhaW1wb3J0YW50OyBwYWRkaW5nOiAwIDAgMTBweCAwICFpbXBvcnRhbnQ7IG1hcmdpbjogLTFweCAwIDFweCAhaW1wb3J0YW50OyBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7IGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDsgfQogICAgICAuV0JfZmVlZCB7IGJveC1zaGFkb3c6IDAgMCAycHggcmdiYSgwLCAwLCAwLCAwLjIpICFpbXBvcnRhbnQ7IH0KCiAgICAgIC5XQl9mZWVkX3R5cGUgLldCX2ZlZWRfaGFuZGxlID4gLldCX2hhbmRsZSwgLldCX2ZlZWRfdHlwZSAuV0JfZmVlZF9oYW5kbGUgPiAuV0JfaGFuZGxlIC5XQl9yb3dfbGluZSAubGluZSB7IGhlaWdodDogMTZweCAhaW1wb3J0YW50OyBsaW5lLWhlaWdodDogMTUuNnB4ICFpbXBvcnRhbnQ7IHBhZGRpbmc6IDAgIWltcG9ydGFudDsgbWFyZ2luOiAwICFpbXBvcnRhbnQ7IGJvcmRlcjogMCAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9mZWVkX3R5cGUgLldCX2ZlZWRfaGFuZGxlID4gLldCX2hhbmRsZSB7IGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50OyBmbG9hdDogcmlnaHQgIWltcG9ydGFudDsgbWFyZ2luOiAwIDhweCAwIC02MDBweCAhaW1wb3J0YW50OyBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDsgdG9wOiAtMjZweCAhaW1wb3J0YW50OyBvdmVyZmxvdzogdmlzaWJsZSAhaW1wb3J0YW50OyB3aWR0aDogYXV0bzsgfQogICAgICAuV0JfZmVlZF90eXBlIC5XQl9mZWVkX2hhbmRsZSAuV0Jfcm93X2xpbmUgeyBib3JkZXItdG9wOiAwIG5vbmUgIWltcG9ydGFudDsgcGFkZGluZy1ib3R0b206IDExcHggIWltcG9ydGFudDsgbWFyZ2luLWJvdHRvbTogMTFweCAhaW1wb3J0YW50OyBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7IHdpZHRoOiBhdXRvOyB9CiAgICAgIC5XQl9mZWVkX3R5cGUgLldCX2ZlZWRfaGFuZGxlIC5XQl9yb3dfbGluZSBsaSB7IGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoMTI3LCAxMjcsIDEyNywgMC4yKSAhaW1wb3J0YW50OyBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDsgcmlnaHQ6IC0xcHggIWltcG9ydGFudDsgcGFkZGluZzogMCAxMHB4ICFpbXBvcnRhbnQ7IG1hcmdpbjogMnB4IDAgIWltcG9ydGFudDsgaGVpZ2h0OiAxMnB4ICFpbXBvcnRhbnQ7IG92ZXJmbG93OiB2aXNpYmxlICFpbXBvcnRhbnQ7IHdpZHRoOiBhdXRvOyB9CiAgICAgIC5XQl9mZWVkX3R5cGUgLldCX2ZlZWRfaGFuZGxlIC5XQl9yb3dfbGluZSBsaSBhIHsgbWFyZ2luOiAtMnB4IDAgIWltcG9ydGFudDsgcGFkZGluZzogMDsgfQogICAgICAuV0JfZmVlZF90eXBlIC5XQl9mZWVkX2hhbmRsZSAuV0Jfcm93X2xpbmUgLmxpbmUgLmljb25fcHJhaXNlZF9iLCAuV0JfZmVlZF90eXBlIC5XQl9mZWVkX2hhbmRsZSAuV0Jfcm93X2xpbmUgLmxpbmUgLmljb25fcHJhaXNlZF9iYyB7IG1hcmdpbjogMXB4IDAgMCAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9mZWVkX3R5cGUgLldCX2ZlZWRfaGFuZGxlIC5XQl9yb3dfbGluZSAuV19hcnJvd19ib3IgeyB0b3A6IDBweCAhaW1wb3J0YW50OyB9CiAgICAgIC5XQl9mZWVkX3JlcGVhdCwgLldCX2ZlZWRfdG9nZXRoZXIgeyBtYXJnaW4tYm90dG9tOiAtMTBweCAhaW1wb3J0YW50OyBwYWRkaW5nLWJvdHRvbTogMTBweCAhaW1wb3J0YW50OyB9CgogICAgICAuV0JfZmVlZCBbbm9kZS10eXBlPSJmZWVkX2xpc3RfdGltZVRpcCJdLCAuV0JfZmVlZCAueWF3Zi10aW1lVGlwIHsgaGVpZ2h0OiAzMHB4ICFpbXBvcnRhbnQ7IG1hcmdpbjogLTE2cHggMCAtMTVweCAhaW1wb3J0YW50OyBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50OyB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDsgfQogICAgICAuV0JfZmVlZCBbbm9kZS10eXBlPSJmZWVkX2xpc3RfdGltZVRleHQiXSwgLldCX2ZlZWQgLnlhd2YtdGltZVRpcCBkaXYgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDsgY29sb3I6IHJnYmEoMTI4LCAxMjgsIDEyOCwgMC42KSAhaW1wb3J0YW50OyB9CgogICAgICAuV0JfZmVlZCAuV0JfZGV0YWlsOjphZnRlciB7IGNvbnRlbnQ6ICIgIjsgZGlzcGxheTogYmxvY2s7IGhlaWdodDogMzZweDsgd2lkdGg6IDEwMCU7ICB9CiAgICAgIC5XQl9mZWVkIC5XQl9zb25GZWVkIC5XQl9kZXRhaWw6OmFmdGVyIHsgZGlzcGxheTogbm9uZTsgfQogICAgICAuV0JfZmVlZCAuV0JfZGV0YWlsID4gLldCX2Zyb206bGFzdC1jaGlsZCB7IG1hcmdpbjogMTBweCAwIC0zMXB4IDA7IH0KICAgICAgLldCX2ZlZWQgLldCX2V4cGFuZCwgLldCX2ZlZWQuV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9leHBhbmQgeyBtYXJnaW4tYm90dG9tOiAwOyB9CiAgICAqLyBub29wKCk7IH0pLnJlcGxhY2UoL1wvXC8uKlxuL2csICdcbicpKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnN0eWxlKTsKCi8vIOaKiuadpea6kOaNouWIsOW+ruWNmuacgOWQjumdouWOuwpmaWx0ZXIuaXRlbXMuc3R5bGUuc3dlaWJvLmZyb21faW5fYm90dG9tID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzd2VpYm8nLAogICd2ZXJzaW9uJzogMzMxLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5mcm9tX2luX2JvdHRvbScsCiAgJ3RleHQnOiAne3tmcm9tSW5Cb3R0b219fScsCiAgJ3JlZic6IHsgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tmcm9tSW5Cb3R0b21EZXNjfX0nIH0gfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICBvYnNlcnZlci53ZWliby5vbmxvYWQoZnVuY3Rpb24gKGZlZWQpIHsKICAgICAgdmFyIGZyb20gPSBmZWVkLnF1ZXJ5U2VsZWN0b3IoJy5XQl9kZXRhaWwgPiAuV0JfaW5mbyArIC5XQl9mcm9tJyk7CiAgICAgIGlmIChmcm9tKSBmcm9tLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQoZnJvbSk7CiAgICB9KTsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgLldCX2ZlZWQuV0JfZmVlZF92MyAuV0JfZGV0YWlsOjphZnRlciB7IGNvbnRlbnQ6ICIgIjsgZGlzcGxheTogYmxvY2s7IGhlaWdodDogMzZweDsgd2lkdGg6IDEwMCU7ICB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX3NvbkZlZWQgLldCX2RldGFpbDo6YWZ0ZXIgeyBkaXNwbGF5OiBub25lOyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2RldGFpbCA+IC5XQl9mcm9tOmxhc3QtY2hpbGQgeyBtYXJnaW46IDEwcHggMCAtMzFweCAwOyB9CiAgICAgIC5XQl9mZWVkLldCX2ZlZWRfdjMgLldCX2V4cGFuZCB7IG1hcmdpbi1ib3R0b206IDA7IH0KICAgICovIG5vb3AoKTsgfSkpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc3R5bGUpOwoKLy8g5oqK5p2l5rqQ5o2i5Yiw5b6u5Y2a5pyA5ZCO6Z2i5Y67CmZpbHRlci5pdGVtcy5zdHlsZS5zd2VpYm8udXNlcl9wYWdlX25vX2F1dGhvciA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnc3dlaWJvJywKICAndmVyc2lvbic6IDM2OSwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wudXNlcl9wYWdlX25vX2F1dGhvcicsCiAgJ3RleHQnOiAne3t1c2VyUGFnZU5vQXV0aG9yfX0nLAogICdyZWYnOiB7CiAgICAnd2hvJzogewogICAgICAndHlwZSc6ICdzZWxlY3QnLAogICAgICAnZGVmYXVsdCc6ICdhbGwnLAogICAgICAnc2VsZWN0JzogWwogICAgICAgIHsgJ3ZhbHVlJzogJ21pbmUnLCAndGV4dCc6ICd7e3VzZXJQYWdlTm9BdXRob3JNaW5lfX0nIH0sCiAgICAgICAgeyAndmFsdWUnOiAnYWxsJywgJ3RleHQnOiAne3t1c2VyUGFnZU5vQXV0aG9yQWxsfX0nIH0sCiAgICAgIF0sCiAgICB9CiAgfSwKICAnYWluaXQnOiBmdW5jdGlvbiAoKSB7CiAgICBpZiAodGhpcy5yZWYud2hvLmNvbmYgPT09ICdtaW5lJyAmJiB1dGlsLmluZm8ub2lkKCkgIT09IHV0aWwuaW5mby51aWQpIHJldHVybjsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgLkZSQU1FX3BhZ2UgW2lkXj0iUGxfT2ZmaWNpYWxfTXlQcm9maWxlRmVlZF9fIl0gLldCX2ZlZWRfdjM6bm90KC5XQl9mZWVkX3YzX29uZSkgLldCX2ZlZWRfdHlwZSAuV0JfZmVlZF9kZXRhaWwgLldCX2ZhY2UsCiAgICAgIC5GUkFNRV9wYWdlIFtpZF49IlBsX09mZmljaWFsX015UHJvZmlsZUZlZWRfXyJdIC5XQl9mZWVkX3YzOm5vdCguV0JfZmVlZF92M19vbmUpIC5XQl9mZWVkX3R5cGUgLldCX2ZlZWRfZGV0YWlsIC5XQl9kZXRhaWwgPiAuV0JfaW5mbyB7IGRpc3BsYXk6IG5vbmU7IH0KICAgICAgLkZSQU1FX3BhZ2UgW2lkXj0iUGxfT2ZmaWNpYWxfTXlQcm9maWxlRmVlZF9fIl0gLldCX2ZlZWRfdjM6bm90KC5XQl9mZWVkX3YzX29uZSkgLldCX2ZlZWRfdHlwZSAuV0JfZGV0YWlsIHsgbWFyZ2luLWxlZnQ6IDA7IH0KICAgICovIG5vb3AoKTsgfSkpOwogICAgaWYgKCFmaWx0ZXIuaXRlbXMuc3R5bGUuc3dlaWJvLmltYWdlX3NpemUuY29uZiB8fCAhZmlsdGVyLml0ZW1zLnN0eWxlLnN3ZWliby5pbWFnZV9zaXplLnJlZi5yZXBvc3QuY29uZikKICAgICAgdXRpbC5jc3MuYWRkKCcuRlJBTUVfcGFnZSBbaWRePSJQbF9PZmZpY2lhbF9NeVByb2ZpbGVGZWVkX18iXSAuV0JfZmVlZF92Mzpub3QoLldCX2ZlZWRfdjNfb25lKSAuV0JfZmVlZF90eXBlIC5XQl9leHBhbmQgeyBtYXJnaW4tbGVmdDogLTIwcHg7IHBhZGRpbmctbGVmdDogNDBweDsgfScpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc3R5bGUpOwoKLy8g6byg5qCH5ruR6L+H5oqY5Y+g5b6u5Y2a5pe26Ieq5Yqo5bGV56S65YaF5a65CmZpbHRlci5pdGVtcy5zdHlsZS5zd2VpYm8uaG92ZXJfc2hvd19mb2xkID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzd2VpYm8nLAogICd2ZXJzaW9uJzogNjgsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ2tleSc6ICd3ZWliby50b29sLmhvdmVyX3Nob3dfZm9sZCcsCiAgJ3RleHQnOiAne3tob3ZlclNob3dGb2xkfX0nLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5jbXQoZnVuY3Rpb24gKCkgeyAvKiFDU1MKICAgICAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZVt5YXdmLWRpc3BsYXkkPSItZm9sZCJdOmhvdmVyIC5XQl9mZWVkX2RldGFpbDpub3QoOmhvdmVyKSB7IG1heC1oZWlnaHQ6IDEwMDBweDsgfQogICAgKi8gbm9vcCgpOyB9KSk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zdHlsZSk7CgovLyDmipjlj6Dlvq7ljZrlpJbop4IKZmlsdGVyLml0ZW1zLnN0eWxlLnN3ZWliby5mb2xkX3RleHQgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ3N3ZWlibycsCiAgJ3ZlcnNpb24nOiA4OCwKICAndHlwZSc6ICdib29sZWFuJywKICAna2V5JzogJ3dlaWJvLnRvb2wuZm9sZF90ZXh0JywKICAncmVmJzogewogICAgJ3RleHQnOiB7CiAgICAgICd0eXBlJzogJ3NlbGVjdCcsCiAgICAgICdkZWZhdWx0JzogJ2F1dGhvci1yZWFzb24nLAogICAgICAnc2VsZWN0JzogWwogICAgICAgIHsgJ3ZhbHVlJzogJ2F1dGhvcicsICd0ZXh0JzogJ3t7Zm9sZGVkV2VpYm9UZXh0QXV0aG9yRGVzY319JyB9LAogICAgICAgIHsgJ3ZhbHVlJzogJ3JlYXNvbicsICd0ZXh0JzogJ3t7Zm9sZGVkV2VpYm9UZXh0UmVhc29uRGVzY319JyB9LAogICAgICAgIHsgJ3ZhbHVlJzogJ2F1dGhvci1yZWFzb24nLCAndGV4dCc6ICd7e2ZvbGRlZFdlaWJvVGV4dEF1dGhvclJlYXNvbkRlc2N9fScgfSwKICAgICAgXSwKICAgIH0sCiAgfSwKICAndGV4dCc6ICd7e2ZvbGRlZFdlaWJvVGV4dERlc2N9fScsCiAgJ2luaXQnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdHlwZXMgPSBbJ2F1dGhvcicsICdyZWFzb24nXSwgdGhhdCA9IHRoaXM7CiAgICB2YXIgZW5hYmxlZCA9IHR5cGVzLm1hcChmdW5jdGlvbiAodHlwZSkgeyByZXR1cm4gdGhhdC5jb25mICYmIHRoYXQucmVmLnRleHQuY29uZi5pbmRleE9mKHR5cGUpICE9PSAtMTsgfSk7CiAgICB1dGlsLmNzcy5hZGQoZnVuY3Rpb24gZ2VuQ3NzKGluZGV4LCBjaG9zZW4sIHByZWZpeCkgewogICAgICBpZiAoaW5kZXggPT09IHR5cGVzLmxlbmd0aCkKICAgICAgICByZXR1cm4gJ1tub2RlLXR5cGU9ImZlZWRfbGlzdCJdIC5XQl9mZWVkX3R5cGVbeWF3Zi1kaXNwbGF5JD0iLWZvbGQiXScgKwogICAgICAgICAgY2hvc2VuICsgJzo6YmVmb3JlICcgKwogICAgICAgICAgJ3sgY29udGVudDogJyArIHV0aWwuc3RyLmZpbGwoJ3t7eycgKyBwcmVmaXggKyAnfX19JykgKyAnOyB9XG4nOwogICAgICB2YXIgdHlwZSA9IHR5cGVzW2luZGV4XSwgdHlwZWQgPSAnW3lhd2YtJyArIHR5cGUgKyAnXSc7CiAgICAgIHJldHVybiBbZmFsc2UsIHRydWVdLm1hcChmdW5jdGlvbiAoY2hvc2UpIHsKICAgICAgICByZXR1cm4gZ2VuQ3NzKGluZGV4ICsgMSwKICAgICAgICAgIGNob3NlID8gdHlwZWQgKyBjaG9zZW4gOiBjaG9zZW4gKyAnOm5vdCgnICsgdHlwZWQgKyAnKScsCiAgICAgICAgICBwcmVmaXggKyAoY2hvc2UgJiYgZW5hYmxlZFtpbmRleF0gPyB0eXBlWzBdLnRvVXBwZXJDYXNlKCkgKyB0eXBlLnNsaWNlKDEpIDogJycpKTsKICAgICAgfSkuam9pbignJyk7CiAgICB9KDAsICcnLCAnZm9sZGVkV2VpYm9UZXh0JykpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc3R5bGUpOwoKaWYgKGZ1bmN0aW9uICgpIHsKICB2YXIgZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLnN0eWxlOwogIHJldHVybiAnb3JkZXInIGluIGQgfHwgJ01vek9yZGVyJyBpbiBkIHx8ICdXZWJraXRPcmRlcicgaW4gZDsKfSgpKSAoZnVuY3Rpb24gKCkgewoKICAvLyDnlJ/miJDkuIDkuKrkuIvmi4nmoYbnmoTpgInpobkKICB2YXIgcmVvcmRlckl0ZW1CYXNlID0gZnVuY3Rpb24gKG9wdGlvbnMsIGJhc2UpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoZGVmKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgJ3R5cGUnOiAnc2VsZWN0JywKICAgICAgICAnZGVmYXVsdCc6IGRlZiwKICAgICAgICAnc2VsZWN0Jzogb3B0aW9ucy5tYXAoZnVuY3Rpb24gKG4pIHsKICAgICAgICAgIHJldHVybiB7ICd2YWx1ZSc6IG4sICd0ZXh0JzogJ3t7JyArIGJhc2UgKyBuWzBdLnRvVXBwZXJDYXNlKCkgKyBuLnNsaWNlKDEpICsgJ319JyB9OwogICAgICAgIH0pLAogICAgICB9OwogICAgfTsKICB9OwoKICAvLyDkv53or4Hlh6DkuKrkuIvmi4nmoYbnmoTkuJzopb/kuI3kuIDmoLcKICB2YXIga2VlcERpZiA9IGZ1bmN0aW9uIChrZXksIGRlZmF1bHRzKSB7CiAgICB2YXIgbnVtcyA9IEFycmF5KGRlZmF1bHRzLmxlbmd0aCkuam9pbigpLnNwbGl0KCcsJyk7CiAgICB2YXIga2V5cyA9IG51bXMubWFwKGZ1bmN0aW9uIChfLCBpKSB7IHJldHVybiBrZXkgKyAnLicgKyAoaSArIDEpOyB9KTsKICAgIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoaywgaSkgewogICAgICB1dGlsLmNvbmZpZy5vbnB1dChrLCBmdW5jdGlvbiAodmFsLCBvbGR2YWwpIHsKICAgICAgICAvLyDorr7nva7lv4XpobvlnKjpgInpobnkuK3pgInmi6kKICAgICAgICBpZiAoZGVmYXVsdHMuaW5kZXhPZih2YWwpID09PSAtMSkgdXRpbC5jb25maWcucHV0KGssIGRlZmF1bHRzW2ldKTsKICAgICAgICAvLyDogIzkuJTku5bku6zlvpflkITkuI3kuIDmoLcKICAgICAgICBlbHNlIHV0aWwuZnVuYy5jYWxsKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBjb25mID0ga2V5cy5tYXAoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHV0aWwuY29uZmlnLmdldCh0KTsgfSk7CiAgICAgICAgICB2YXIgb3RoZXJzID0gZGVmYXVsdHMuZmlsdGVyKGZ1bmN0aW9uICh2KSB7IHJldHVybiBjb25mLmluZGV4T2YodikgPT09IC0xOyB9KSwgbyA9IDA7CiAgICAgICAgICBjb25mLmZvckVhY2goZnVuY3Rpb24gKHYsIGopIHsKICAgICAgICAgICAgaWYgKHYgPT09IHZhbCAmJiBqICE9PSBpKSB1dGlsLmNvbmZpZy5wdXQoa2V5c1tqXSwgb3RoZXJzW28rK10pOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7IC8vIGRlbGF5CiAgICAgIH0pOyAvLyBvbnB1dAogICAgfSk7IC8vIGtleXMuZm9yRWFjaAogIH07CgogIC8vIOmHjeaWsOaOkuWIl+W+ruWNmuS4i+eahOaOp+WItuaMiemSrgogIGZpbHRlci5pdGVtcy5zdHlsZS5zd2VpYm8ucmVvcmRlciA9IChmdW5jdGlvbiAoKSB7CiAgICB2YXIgcmVvcmRlckl0ZW0gPSByZW9yZGVySXRlbUJhc2UoWydwb3AnLCAnZmF2b3JpdGUnLCAnZm9yd2FyZCcsICdjb21tZW50JywgJ2xpa2UnXSwgJ2xheW91dFJlb3JkZXInKTsKICAgIHJldHVybiBmaWx0ZXIuaXRlbSh7CiAgICAgICdncm91cCc6ICdzd2VpYm8nLAogICAgICAndmVyc2lvbic6IDEyMiwKICAgICAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgICAgICdkZWZhdWx0JzogdHJ1ZSwKICAgICAgJ2tleSc6ICd3ZWliby5sYXlvdXQucmVvcmRlcicsCiAgICAgICd0ZXh0JzogJ3t7bGF5b3V0UmVvcmRlcn19JywKICAgICAgJ3JlZic6IHsKICAgICAgICAnMSc6IHJlb3JkZXJJdGVtKCdwb3AnKSwKICAgICAgICAnMic6IHJlb3JkZXJJdGVtKCdmYXZvcml0ZScpLAogICAgICAgICczJzogcmVvcmRlckl0ZW0oJ2ZvcndhcmQnKSwKICAgICAgICAnNCc6IHJlb3JkZXJJdGVtKCdjb21tZW50JyksCiAgICAgICAgJzUnOiByZW9yZGVySXRlbSgnbGlrZScpLAogICAgICAgICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ2FzaycsICd0ZXh0JzogJ3t7bGF5b3V0UmVvcmRlckRlc2N9fScgfSwKICAgICAgfSwKICAgICAgJ2luaXQnOiBmdW5jdGlvbiAoKSB7IGtlZXBEaWYoJ3dlaWJvLmxheW91dC5yZW9yZGVyJywgWydwb3AnLCAnZmF2b3JpdGUnLCAnZm9yd2FyZCcsICdjb21tZW50JywgJ2xpa2UnXSk7IH0sCiAgICAgICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcmVmID0gdGhpcy5yZWY7CiAgICAgICAgdXRpbC5jc3MuYWRkKCcuV0JfaGFuZGxlIHVsIGxpW3lhd2YtaGFuZGxlLXR5cGU9ImZsX3JlYWQiXSB7IC1tb3otb3JkZXI6IDA7IC13ZWJraXQtb3JkZXI6IDA7IG9yZGVyOiAwOyB9JyArICdcbicgKwogICAgICAgIFsnMScsICcyJywgJzMnLCAnNCcsICc1J10ubWFwKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAgIHJldHVybiAnLldCX2hhbmRsZSB1bCBsaVt5YXdmLWhhbmRsZS10eXBlPSJmbF8nICsgcmVmW2tleV0uY29uZiArICciXSB7IC1tb3otb3JkZXI6ICcgKyBrZXkgKyAnOyAtd2Via2l0LW9yZGVyOiAnICsga2V5ICsgJzsgb3JkZXI6ICcgKyBrZXkgKyAnOyB9JzsKICAgICAgICB9KS5qb2luKCdcbicpKTsKICAgICAgfSwKICAgIH0pOwogIH0oKSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zdHlsZSk7CgogIC8vIOmHjeaWsOaOkuWIl+ivhOiuuuS4i+eahOaOp+WItuaMiemSrgogIGZpbHRlci5pdGVtcy5zdHlsZS5zd2VpYm8uY210cmVvcmRlciA9IChmdW5jdGlvbiAoKSB7CiAgICB2YXIgcmVvcmRlckl0ZW0gPSByZW9yZGVySXRlbUJhc2UoWydyZXBvcnQnLCAnZGVsZXRlJywgJ2NvbnZlcnNpdGlvbicsICdyZXBseScsICdsaWtlJ10sICdsYXlvdXRDb21tZW50UmVvcmRlcicpOwogICAgcmV0dXJuIGZpbHRlci5pdGVtKHsKICAgICAgJ2dyb3VwJzogJ3N3ZWlibycsCiAgICAgICd2ZXJzaW9uJzogMjIwLAogICAgICAndHlwZSc6ICdib29sZWFuJywKICAgICAgJ2RlZmF1bHQnOiB0cnVlLAogICAgICAna2V5JzogJ3dlaWJvLmxheW91dC5jbXRvcmRlcicsCiAgICAgICd0ZXh0JzogJ3t7bGF5b3V0Q29tbWVudFJlb3JkZXJ9fScsCiAgICAgICdyZWYnOiB7CiAgICAgICAgJzEnOiByZW9yZGVySXRlbSgncmVwb3J0JyksCiAgICAgICAgJzInOiByZW9yZGVySXRlbSgnZGVsZXRlJyksCiAgICAgICAgJzMnOiByZW9yZGVySXRlbSgnY29udmVyc2l0aW9uJyksCiAgICAgICAgJzQnOiByZW9yZGVySXRlbSgncmVwbHknKSwKICAgICAgICAnNSc6IHJlb3JkZXJJdGVtKCdsaWtlJyksCiAgICAgICAgJ2knOiB7ICd0eXBlJzogJ3NpY29uJywgJ2ljb24nOiAnYXNrJywgJ3RleHQnOiAne3tsYXlvdXRDb21tZW50UmVvcmRlckRlc2N9fScgfSwKICAgICAgfSwKICAgICAgJ2luaXQnOiBmdW5jdGlvbiAoKSB7IGtlZXBEaWYoJ3dlaWJvLmxheW91dC5jbXRvcmRlcicsIFsncmVwb3J0JywgJ2RlbGV0ZScsICdjb252ZXJzaXRpb24nLCAncmVwbHknLCAnbGlrZSddKTsgfSwKICAgICAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgICAgIHZhciByZWYgPSB0aGlzLnJlZjsKICAgICAgICB1dGlsLmNzcy5hZGQoWycxJywgJzInLCAnMycsICc0JywgJzUnXS5tYXAoZnVuY3Rpb24gKGtleSkgewogICAgICAgICAgcmV0dXJuICcuV0JfaGFuZGxlIHVsIGxpW3lhd2YtY29tbWVudC1oYW5kbGUtdHlwZT0iJyArIHJlZltrZXldLmNvbmYgKyAnIl0geyAtbW96LW9yZGVyOiAnICsga2V5ICsgJzsgLXdlYmtpdC1vcmRlcjogJyArIGtleSArICc7IG9yZGVyOiAnICsga2V5ICsgJzsgfSc7CiAgICAgICAgfSkuam9pbignXG4nKSk7CiAgICAgIH0sCiAgICB9KTsKICB9KCkpLmFkZHRvKGZpbHRlci5ncm91cHMuc3R5bGUpOwoKfSgpKTsKCmZpbHRlci5pdGVtcy5zdHlsZS5zd2VpYm8uaGlnaGxpZ2h0X2xvd19yZWFkaW5nID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzd2VpYm8nLAogICd2ZXJzaW9uJzogNTAyLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5oaWdobGlnaHRfbG93X3JlYWRpbmcnLAogICdyZWYnOiB7CiAgICBjb3VudDogewogICAgICB0eXBlOiAncmFuZ2UnLAogICAgICAnbWluJzogMTAsCiAgICAgICdtYXgnOiAxMDAwLAogICAgICAnZGVmYXVsdCc6IDEwMCwKICAgICAgJ3N0ZXAnOiAxMCwKICAgIH0sCiAgfSwKICAndGV4dCc6ICd7e2xvd1JlYWRpbmdXYXJufX0nLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciB0aGF0ID0gdGhpczsKICAgIG9ic2VydmVyLndlaWJvLmFmdGVyKGZ1bmN0aW9uIChmZWVkKSB7CiAgICAgIHZhciBjb250YWluZXIgPSB1dGlsLmRvbS5jbG9zZXN0KGZlZWQsICdbaWRePSJQbF9PZmZpY2lhbF9NeVByb2ZpbGVGZWVkX18iXScpOwogICAgICBpZiAoIWNvbnRhaW5lcikgcmV0dXJuOwogICAgICB2YXIgcG9wVGV4dCA9IGZlZWQucXVlcnlTZWxlY3RvcignLldCX2ZlZWRfaGFuZGxlIFthY3Rpb24tdHlwZT0iZmxfcG9wIl0gaScpOwogICAgICBpZiAoIXBvcFRleHQpIHJldHVybjsKICAgICAgdmFyIGNvdW50ID0gcGFyc2VJbnQocG9wVGV4dC50aXRsZS5tYXRjaCgvXGQrLylbMF0sIDEwKTsKICAgICAgdmFyIGxpbWl0ID0gdGhhdC5yZWYuY291bnQuZ2V0Y29uZigpOwogICAgICBpZiAoY291bnQgPiBsaW1pdCkgcmV0dXJuOwogICAgICBmZWVkLnNldEF0dHJpYnV0ZSgneWF3Zi1sb3ctcmVhZGluZycsIGNvdW50KTsKICAgIH0pOwogICAgdXRpbC5jc3MuYWRkKCcuV0JfZmVlZCAuV0JfY2FyZHdyYXBbeWF3Zi1sb3ctcmVhZGluZ10geyBib3gtc2hhZG93OiAwIDAgNHB4IHJlZCBpbnNldCAhaW1wb3J0YW50OyB9Jyk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zdHlsZSk7CgoKCi8vIOminOiJsuebuOWFs+agt+W8jwpmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCdzdHlsZScsICdjb2xvcicsICd7e2NvbG9yU3R5bGVUaXRsZX19Jyk7CgovLyDpq5jkuq7mmL7npLrnmb3lkI3ljZXlvq7ljZoKZmlsdGVyLml0ZW1zLnN0eWxlLmNvbG9yLndoaXRlbGlzdF9oaWdobGlnaHQgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2NvbG9yJywKICAndmVyc2lvbic6IDE4LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC53aGl0ZWxpc3RfaGlnaGxpZ2h0JywKICAncmVmJzogZmlsdGVyLnJlZi5yZ2JhKCcjZGFmZWU0JyksCiAgJ3RleHQnOiAne3t3aGl0ZWxpc3RIaWdobGlnaHREZXNjfX0nLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5maWxsKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICBbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAuV0JfZmVlZF90eXBlW3lhd2YtZGlzcGxheSQ9Ii1zaG93Il0geyBiYWNrZ3JvdW5kLWNvbG9yOiB7e2NvbG9yfX0gIWltcG9ydGFudDsgfQogICAgKi8gbm9vcCgpOyB9KSwgeyAnY29sb3InOiAnJyArIHRoaXMucmVmLnJnYmEgfSkpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc3R5bGUpOwoKLy8g6aaW6aG16IOM5pmvCmZpbHRlci5pdGVtcy5zdHlsZS5jb2xvci5jb2xvcl9vdmVycmlkZSA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnY29sb3InLAogICd2ZXJzaW9uJzogMzM1LAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdrZXknOiAnd2VpYm8udG9vbC5jb2xvcl9vdmVycmlkZScsCiAgJ3RleHQnOiAne3tjb2xvck92ZXJyaWRlfX0nLAogICdyZWYnOiBPYmplY3QuYXNzaWduKHt9LAogICAgZmlsdGVyLnJlZi5yZ2JhKCcjZjZmNmY2JywgMzAsICdjb2xvcjEnLCAndHJhbnNwYXJlbmN5MScsICdyZ2JhMScpLAogICAgZmlsdGVyLnJlZi5yZ2JhKCcjZmZmZmZmJywgMzAsICdjb2xvcjInLCAndHJhbnNwYXJlbmN5MicsICdyZ2JhMicpLAogICAgZmlsdGVyLnJlZi5yZ2JhKCcjZmZmZmZmJywgMzAsICdjb2xvcjMnLCAndHJhbnNwYXJlbmN5MycsICdyZ2JhMycpLAogICAgeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2NvbG9yT3ZlcnJpZGVEZXNjfX0nIH0gfQogICksCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgaWYgKHV0aWwucGFnZS5zZWFyY2gpIHJldHVybjsKICAgIHV0aWwuY3NzLmFkZCh1dGlsLnN0ci5maWxsKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICBib2R5IC5TX2JnMSwgYm9keSAuU1dfZnVuX2JnOmhvdmVyLCBib2R5IC5TV19mdW5fYmdfYWN0aXZlIHsgYmFja2dyb3VuZC1jb2xvcjoge3tjb2xvcjF9fTsgfQogICAgICBib2R5IC5TX2JnMiwgYm9keSBibG9ja3F1b3RlLCBib2R5IC5XX2J0bl9iLCBib2R5IC5XX2lucHV0LCBib2R5IC5TV19mdW5fYmcgeyBiYWNrZ3JvdW5kLWNvbG9yOiB7e2NvbG9yMn19OyB9CiAgICAgIGJvZHkgLlNfYmcxX2JyIHsgYm9yZGVyLWNvbG9yOiB7e2NvbG9yMX19OyB9CiAgICAgIGJvZHkgLlNfYmcyX2JyIHsgYm9yZGVyLWNvbG9yOiB7e2NvbG9yMn19OyB9CiAgICAgIGJvZHkgLldfaW5wdXQsIGJvZHkgLnNlbmRfd2VpYm8gLmlucHV0IHsgYmFja2dyb3VuZC1jb2xvcjoge3tjb2xvcjN9fTsgfQoKICAgICAgLlNfYmcyIC5wcml2YXRlX2xpc3QuU1dfZnVuX2JnOm5vdCguY3VyKSwKICAgICAgLldCX3RhYl9hIC50YWIgLlNfYmcyIC5TX2JnMiwKICAgICAgLlNfYmcyIC5XQl93ZWJpbV9wYWdlIC53ZWJpbV9jb250YWN0c19tb2QKICAgICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfQoKICAgICAgLldCX25vdGVzIHsgYmFja2dyb3VuZC1jb2xvcjoge3tub3Rlc319IH0KCiAgICAgIC5XX2Fycm93X2Jvcl90IGksIC5XX2Fycm93X2Jvcl90IGVtIHsgYm9yZGVyLWxlZnQtY29sb3I6IHRyYW5zcGFyZW50OyBib3JkZXItcmlnaHQtY29sb3I6IHRyYW5zcGFyZW50OyBib3JkZXItdG9wLWNvbG9yOiB0cmFuc3BhcmVudDsgfQogICAgICAuV19hcnJvd19ib3JfciBpLCAuV19hcnJvd19ib3JfciBlbSB7IGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50OyBib3JkZXItcmlnaHQtY29sb3I6IHRyYW5zcGFyZW50OyBib3JkZXItdG9wLWNvbG9yOiB0cmFuc3BhcmVudDsgfQogICAgICAuV19hcnJvd19ib3JfYiBpLCAuV19hcnJvd19ib3JfYiBlbSB7IGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50OyBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7IGJvcmRlci1yaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IH0KICAgICAgLldfYXJyb3dfYm9yX2wgaSwgLldfYXJyb3dfYm9yX2wgZW0geyBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDsgYm9yZGVyLWxlZnQtY29sb3I6IHRyYW5zcGFyZW50OyBib3JkZXItdG9wLWNvbG9yOiB0cmFuc3BhcmVudDsgfQoKICAgICAgLldCX3RhYl9hIC50YWJfYm94X2FfcjIgLnRhYiAubGlfZmlyc3QsIC5XQl90YWJfYSAudGFiX2JveF9hX3IyIC50YWIgLmxpX2xhc3QgeyBkaXNwbGF5OiBub25lOyB9CiAgICAgIC5XQl90YWJfYSAudGFiX2JveF9hIC50YWIgewogICAgICAgIGRpc3BsYXk6IC1tb3otZmxleDsgLW1vei1mbGV4LWRpcmVjdGlvbjogcm93OyAtbW96LWZsZXgtd3JhcDogbm93cmFwOyAtbW96LWp1c3RpZnktY29udGVudDogLW1vei1zcGFjZS1hcm91bmQ7IC1tb3otYWxpZ24taXRlbXM6IHN0cmV0Y2g7CiAgICAgICAgZGlzcGxheTogLXdlYmtpdC1mbGV4OyAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiByb3c7IC13ZWJraXQtZmxleC13cmFwOiBub3dyYXA7IC13ZWJraXQtanVzdGlmeS1jb250ZW50OiAtd2Via2l0LXNwYWNlLWFyb3VuZDsgLXdlYmtpdC1hbGlnbi1pdGVtczogc3RyZXRjaDsKICAgICAgICBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogcm93OyBmbGV4LXdyYXA6IG5vd3JhcDsganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7IGFsaWduLWl0ZW1zOiBzdHJldGNoOwogICAgICB9CgogICAgICAuV0JfdGFiX2EgLnRhYiAudCB7IGhlaWdodDogMzhweDsgfQogICAgICAuV0JfdGFiX2EgLnRhYiAuYiB7IGRpc3BsYXk6IG5vbmU7IH0KICAgICAgLldCX3RhYl9hIC50YWJfYm94X2EgLnRhYi5jbGVhcmZpeDo6YWZ0ZXIgeyBkaXNwbGF5OiBub25lOyB9CiAgICAgIC5XQl90YWJfYSAudGFiX2JveF9hIC50YWIgbGkgeyBtYXJnaW46IDA7IC1tb3otZmxleC1ncm93OiAxOyAtd2Via2l0LWZsZXgtZ3JvdzogMTsgZmxleC1ncm93OiAxOyB9CiAgICAgIC5XQl90YWJfYSAudGFiX2JveF9hX3I2IC50IHsgd2lkdGg6IGNhbGMoMTAwJSAtIDE0cHgpOyB9CgogICAgICAuc2VhcmNoX2RpcmVjdGFyZWEsIC5XQl9lZGl0b3JfaWZyYW1lIHsgYmFja2dyb3VuZDogbm9uZTsgfQogICAgICAucHJpdmF0ZV9saXN0X2JveCAucHJpdmF0ZV9oZWFkIHsgcGFkZGluZy1ib3R0b206IDhweDsgfQogICAgICAucHJpdmF0ZV9saXN0X2JveCAucHJpdmF0ZV9ib2R5IHsgbWFyZ2luLXRvcDogMDsgfQogICAgICAjd2VpYm9jaGF0IHsgYmFja2dyb3VuZDogbm9uZTsgfQogICAgKi8gbm9vcCgpOyB9KSwgewogICAgICAnY29sb3IxJzogJycgKyB0aGlzLnJlZi5yZ2JhMSwKICAgICAgJ2NvbG9yMic6ICcnICsgdGhpcy5yZWYucmdiYTIsCiAgICAgICdjb2xvcjMnOiAnJyArIHRoaXMucmVmLnJnYmEzLAogICAgICAnbm90ZXMnOiAnJyArIHV0aWwuc3RyLnJnYmEoJyNmZmY4YmYnLCBNYXRoLnJvdW5kKDEwMCAtIE1hdGgucG93KDEwMCAtIHRoaXMucmVmLnRyYW5zcGFyZW5jeTEuY29uZiwgMykgLyAxZTQpKSwKICAgIH0pKTsKICB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnN0eWxlKTsKCi8vIOagt+W8jwpmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCdzdHlsZScsICdjc3MnLCAne3tDU1NUaXRsZX19Jyk7CgovLyDoh6rlrprkuYnmoLflvI8KZmlsdGVyLml0ZW1zLnN0eWxlLmNzcy51c2Vyc3R5bGUgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2NzcycsCiAgJ3ZlcnNpb24nOiA5LAogICd0eXBlJzogJ3N0cmluZycsCiAgJ3RleHQnOiAne3t1c2Vyc3R5bGVUaXRsZX19JywKICAna2V5JzogJ3dlaWJvLnRvb2wudXNlcnN0eWxlJywKICAnaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBjb25mID0gdGhpcy5jb25mOyBHTV9hZGRTdHlsZShjb25mKTsKICAgIHZhciBzZXQgPSB0aGlzLnB1dGNvbmYuYmluZCh0aGlzKTsKICAgIC8vIOWcqCBHTSDkuK3ms6jlhozoj5zljZXpobnku6XmlK/mjIHlr7noh6rlrprkuYkgQ1NTIOeahOS/ruaUuQogICAgLy8g5q2k5aSE5bm26Z2e5bi46KeE6K6+572u5pa55byP77yM5LuF5bqU5Zyo5Zug55So5oi35Yqg5YWl55qEQ1NT5a+86Ie05peg5rOV5q2j5bi45pi+56S66ISa5pys6K6+572u55WM6Z2i5pe25L2/55So44CCCiAgICAvLyDmiYDku6XmraTlpITorr7nva7ml7bkuI3lupTkvp3otZbnvZHpobXnlYzpnaLlrp7njrDjgIIKICAgIHZhciBwdXRjb25mID0gZnVuY3Rpb24gKGNzcykgewogICAgICBjb25mID0gY3NzOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgc2V0KGNzcyk7IHV0aWwuY29uZmlnLndyaXRlKCk7IGxvY2F0aW9uLnJlbG9hZCgpOyB9LCAwKTsKICAgIH07CiAgICBHTV9yZWdpc3Rlck1lbnVDb21tYW5kKHV0aWwuc3RyLmZpbGwoJ3t7dXNlcnN0eWxlRWRpdERlc2N9fScpLCBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBuZXdjc3MgPSBwcm9tcHQodXRpbC5zdHIuZmlsbCgne3t1c2Vyc3R5bGVFZGl0RGV0YWlsc319JyksIGNvbmYpOwogICAgICBpZiAobmV3Y3NzICE9PSBudWxsKSBwdXRjb25mKG5ld2Nzcyk7CiAgICB9LCAiUyIpOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc3R5bGUpOwoKLy8g6ISa5pys6K6+572uCmZpbHRlci5wcmVkZWYuZ3JvdXAoJ3NjcmlwdCcpOwpmaWx0ZXIuaXRlbXMuc2NyaXB0ID0ge307CgovLyDlr7zlhaXlr7zlh7oKZmlsdGVyLnByZWRlZi5zdWJ0aXRsZSgnc2NyaXB0JywgJ2ltcG9ydGV4cG9ydCcsICd7e2NvbmZpZ0ltcG9ydEFuZEV4cG9ydH19Jyk7CgpmaWx0ZXIuaXRlbXMuc2NyaXB0LmltcG9ydGV4cG9ydC5pbXBvcnRleHBvcnQgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2ltcG9ydGV4cG9ydCcsCiAgJ3ZlcnNpb24nOiA2LAogICdpbXBvcnQnOiBmdW5jdGlvbiAodGV4dCwgY2FsbGJhY2spIHsKICAgIHZhciB0aGF0ID0gdGhpczsKICAgIC8vIOWvvOWFpeaIkOWKnwogICAgdmFyIHN1Y2Nlc3MgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHV0aWwudWkuYWxlcnQoJ3lhd2YtY29uZmlnLWltcG9ydC1zdWNjZXNzJywgewogICAgICAgICd0aXRsZSc6IHV0aWwuc3RyLmZpbGwoJ3t7Y29uZmlnSW1wb3J0U3VjY2Vzc1RpdGxlfX0nKSwKICAgICAgICAndGV4dCc6IHV0aWwuc3RyLmZpbGwoJ3t7Y29uZmlnSW1wb3J0U3VjY2Vzc319JyksCiAgICAgICAgJ2ljb24nOiAnc3VjYycKICAgICAgfSk7CiAgICB9OwogICAgLy8g5a+85YWl5aSx6LSlCiAgICB2YXIgZXJyb3IgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHV0aWwudWkuYWxlcnQoJ3lhd2YtY29uZmlnLWltcG9ydC1mYWlsJywgewogICAgICAgICd0aXRsZSc6IHV0aWwuc3RyLmZpbGwoJ3t7Y29uZmlnSW1wb3J0RmFpbFRpdGxlfX0nKSwKICAgICAgICAndGV4dCc6IHV0aWwuc3RyLmZpbGwoJ3t7Y29uZmlnSW1wb3J0RmFpbH19JyksCiAgICAgICAgJ2ljb24nOiAnZXJyb3InCiAgICAgIH0pOwogICAgfTsKICAgIGlmICghdGV4dCkgcmV0dXJuIGVycm9yKCk7CiAgICAvLyDnoa7orqTlr7zlhaUKICAgIHV0aWwudWkuY29uZmlybSgneWF3Zi1jb25maWctaW1wb3J0LXdhcm5pbmcnLCB7CiAgICAgICd0aXRsZSc6IHV0aWwuc3RyLmZpbGwoJ3t7Y29uZmlnSW1wb3J0V2FybmluZ1RpdGxlfX0nKSwKICAgICAgJ3RleHQnOiB1dGlsLnN0ci5maWxsKCd7e2NvbmZpZ0ltcG9ydFdhcm5pbmd9fScpLAogICAgICAnb25Payc6IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgdmVyc2lvbiA9IHV0aWwuY29uZmlnWydpbXBvcnQnXSh0ZXh0KTsKICAgICAgICBpZiAodmVyc2lvbiAhPT0gdm9pZCAwKSB7CiAgICAgICAgICB0aGF0WydleHBvcnQnXSgpOwogICAgICAgICAgaWYgKHZlcnNpb24gPiAwKSB7CiAgICAgICAgICAgIHVwZGF0ZXIud2hhdHNuZXcodmVyc2lvbik7CiAgICAgICAgICAgIHN1Y2Nlc3MoKTsKICAgICAgICAgIH0KICAgICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2sodmVyc2lvbik7CiAgICAgICAgfSBlbHNlIHsgZXJyb3IoKTsgfQogICAgICAgIHJldHVybiB2ZXJzaW9uOwogICAgICB9LAogICAgfSk7CiAgfSwKICAnZXhwb3J0JzogZnVuY3Rpb24gKGJlKSB7CiAgICB2YXIgY29uZiA9IHV0aWwuY29uZmlnWydleHBvcnQnXSgpOwogICAgYmUgPSBiZSB8fCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdhLnlhd2YtZXhwb3J0Jyk7CiAgICBpZiAoYmUpIHsKICAgICAgYmUuaHJlZiA9ICdkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsJyArCiAgICAgICAgdXRpbC5zdHIuYmFzZTY0KHV0aWwuY29uZmlnWydleHBvcnQnXSgpKTsKICAgICAgYmUuc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsICd5YXdmLWNvbmZpZy55YXdmJyk7CiAgICB9CiAgICByZXR1cm4gY29uZjsKICB9LAogICdyZXNldCc6IGZ1bmN0aW9uICgpIHsKICAgIHZhciB0aGF0ID0gdGhpczsKICAgIHV0aWwudWkuY29uZmlybSgneWF3Zi1jb25maWctcmVzZXQtd2FybmluZycsIHsKICAgICAgJ3RpdGxlJzogdXRpbC5zdHIuZmlsbCgne3tjb25maWdSZXNldFdhcm5pbmdUaXRsZX19JyksCiAgICAgICd0ZXh0JzogdXRpbC5zdHIuZmlsbCgne3tjb25maWdSZXNldFdhcm5pbmd9fScpLAogICAgICAnb25Payc6IGZ1bmN0aW9uICgpIHsKICAgICAgICB1dGlsLmNvbmZpZy5jbGVhcigpOwogICAgICAgIEdNX2RlbGV0ZVZhbHVlKCdub3RpZmljYXRpb24nKTsKICAgICAgICBHTV9kZWxldGVWYWx1ZSgnZm9sbG93aW5nX2luZm9fJyArIHV0aWwuaW5mby51aWQpOwogICAgICAgIEdNX2RlbGV0ZVZhbHVlKCdmb2xsb3dpbmdfbm90aWNlXycgKyB1dGlsLmluZm8udWlkKTsKICAgICAgICBHTV9kZWxldGVWYWx1ZSgnZm9sbG93aW5nX2xpc3RfZmV0Y2hpbmcnKTsKICAgICAgICBHTV9kZWxldGVWYWx1ZSgnZm9sbG93aW5nX2xpc3RfZmV0Y2hpbmdfdGltZXN0YW1wJyk7CiAgICAgICAgR01fZGVsZXRlVmFsdWUoJ3JlY2VudG1pZCcpOwogICAgICAgIEdNX2RlbGV0ZVZhbHVlKCdsb25nX3dlaWJvX2NhY2hlJyk7CiAgICAgICAgdGhhdFsnZXhwb3J0J10oKTsKICAgICAgfSwKICAgIH0pOwogIH0sCiAgJ3Nob3cnOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICB2YXIgZG9tID0gdXRpbC5kb20uY3JlYXRlKGh0bWwuY29uZmlnSW1wb3J0RXhwb3J0KTsKICAgIHZhciBiaWkgPSBkb20ucXVlcnlTZWxlY3RvcignaW5wdXRbdHlwZT0iZmlsZSJdJyk7CiAgICB2YXIgYmUgPSBkb20ucXVlcnlTZWxlY3RvcignYS55YXdmLWV4cG9ydCcpOwogICAgdmFyIGJyID0gZG9tLnF1ZXJ5U2VsZWN0b3IoJ2EueWF3Zi1yZXNldCcpOwogICAgLy8g5a+85YWl5oyJ6ZKuCiAgICBiaWkuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZnVuY3Rpb24gKCkgewogICAgICB2YXIgZmlsZSA9IGJpaS5maWxlc1swXTsKICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIGlmIChmaWxlLnNpemUgPiAoMSA8PCAyNCkpIHRoYXRbJ2ltcG9ydCddKCk7CiAgICAgIGVsc2UgcmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgdGhhdFsnaW1wb3J0J10ocmVhZGVyLnJlc3VsdCk7CiAgICAgIH0pOwogICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTsKICAgICAgYmlpLnZhbHVlID0gJyc7CiAgICB9KTsKICAgIC8vIOWvvOWHuuaMiemSrgogICAgdGhhdFsnZXhwb3J0J10oYmUpOwogICAgLy8g6YeN572u5oyJ6ZKuCiAgICBici5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoYXQucmVzZXQuYmluZCh0aGF0KSk7CiAgICByZXR1cm4gZG9tOwogIH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc2NyaXB0KTsKCi8vIOS7juKAnOecvOS4jeingeW/g+S4jeeDpuKAneWvvOWFpeiuvue9rgp2YXIgd2JwID0ge307Cgp3YnAuY29uZmlnID0gbnVsbDsKCndicC5jb252ZXJ0ZXIgPSB1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAoKSB7CiAgdmFyIHdicENvbmZpZyA9IHdicC5jb25maWc7CiAgdmFyIHJlc3VsdCA9IHsgJ3lhd2YnOiAnV0JQIC0gWUFXRiBDb252ZXJ0ZXInLCAndmVyJzogJzAnLCAnY29uZic6IHt9IH07CiAgdmFyIGNvbmYgPSByZXN1bHQuY29uZjsKICB2YXIgcmVhZFdicENvbmZpZyA9IGZ1bmN0aW9uIChrZXkpIHsKICAgIHJldHVybiB3YnBDb25maWdba2V5XTsKICB9OwogIHdicC5jb252ZXJ0ZXIudGFibGUoKS5mb3JFYWNoKHV0aWwuZnVuYy5jYXRjaGVkKGZ1bmN0aW9uIChjb25maWcpIHsKICAgIHZhciB3YnBLZXkgPSBjb25maWcud2JwLCB5YXdmS2V5ID0gY29uZmlnLnlhd2Y7CiAgICB2YXIgd2JwVmFsdWUgPSB2b2lkIDA7CiAgICBpZiAod2JwS2V5KSB7CiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNvbmZpZy53YnApKSB3YnBWYWx1ZSA9IHdicEtleS5tYXAocmVhZFdicENvbmZpZyk7CiAgICAgIGVsc2Ugd2JwVmFsdWUgPSByZWFkV2JwQ29uZmlnKHdicEtleSk7CiAgICB9CiAgICB2YXIgeWF3ZlZhbHVlID0gY29uZmlnLm1hcCh3YnBWYWx1ZSk7CiAgICB1dGlsLmRlYnVnKCdXQlAyWUFXRiAlbz0lbyAtPiAlbz0lbycsIHdicEtleSwgd2JwVmFsdWUsIHlhd2ZLZXksIHlhd2ZWYWx1ZSk7CiAgICBpZiAoeWF3ZktleSkgY29uZlt5YXdmS2V5XSA9IHlhd2ZWYWx1ZTsKICB9KSk7CiAgcmV0dXJuIHJlc3VsdDsKfSk7CgovLyDnibnmrorovazmjaLop4TliJkKd2JwLmNvbnZlcnRlci5ydWxlcyA9IHt9OwoKd2JwLmNvbnZlcnRlci5ydWxlcy5rZXl3b3JkID0ge307Ci8vIOWFs+mUruivjeWIsOWFs+mUruivjeeahOi9rOaNogp3YnAuY29udmVydGVyLnJ1bGVzLmtleXdvcmQua2V5d29yZCA9IGZ1bmN0aW9uIChrZXl3b3JkcykgewogIHJldHVybiBrZXl3b3Jkcy5maWx0ZXIoZnVuY3Rpb24gKGtleXdvcmQpIHsKICAgIC8vIOWFs+mUruivjeS4jeWkhOeQhuato+WImeW8jwogICAgaWYgKGtleXdvcmQubGVuZ3RoID4gMiAmJiBrZXl3b3JkWzBdID09PSAnLycgJiYga2V5d29yZFtrZXl3b3JkLmxlbmd0aCAtIDFdID09PSAnLycpIHJldHVybiBmYWxzZTsKICAgIC8vIOWKoOWPt+WcqOivpeiEmuacrOS4reS9nOS4uuaIlui/kOeul+WtmOWcqO+8jOS9v+eUqOato+WImeW8j+abv+S7owogICAgaWYgKGtleXdvcmQuaW5kZXhPZignKycpICE9PSAtMSkgcmV0dXJuIGZhbHNlOwogICAgcmV0dXJuIHRydWU7CiAgfSk7Cn07Ci8vIOWFs+mUruivjeWIsOato+WImeW8j+eahOi9rOaNogp3YnAuY29udmVydGVyLnJ1bGVzLmtleXdvcmQucmVnZXhwID0gZnVuY3Rpb24gKGtleXdvcmRzKSB7CiAgcmV0dXJuIGtleXdvcmRzLm1hcChmdW5jdGlvbiAoa2V5d29yZCkgewogICAgdHJ5IHsKICAgICAgLy8g5aSE55CG5q2j5YiZ5byP55qE5oOF5Ya1CiAgICAgIGlmIChrZXl3b3JkLmxlbmd0aCA+IDIgJiYga2V5d29yZFswXSA9PT0gJy8nICYmIGtleXdvcmRba2V5d29yZC5sZW5ndGggLSAxXSA9PT0gJy8nKSB7CiAgICAgICAgcmV0dXJuIFJlZ0V4cChrZXl3b3JkLnNsaWNlKDEsIC0xKSk7CiAgICAgIH0KICAgICAgLy8g5aSE55CG5Yqg5Y+355qE54m55q6K6KeE5YiZCiAgICAgIGlmIChrZXl3b3JkLmluZGV4T2YoJysnKSAhPT0gLTEpIHsKICAgICAgICByZXR1cm4gUmVnRXhwKCdeJyArIGtleXdvcmQuc3BsaXQoJysnKS5tYXAoZnVuY3Rpb24gKHApIHsKICAgICAgICAgIHJldHVybiAnKD89W1xzXFNdKicgKyBwLnJlcGxhY2UoLyhbLiorP14ke30oKXxcW1xdXC9cXF0pL2csICJcXCQxIikgKyAnKSc7CiAgICAgICAgfSkuam9pbignJykpOwogICAgICB9CiAgICB9IGNhdGNoIChlKSB7IH0KICB9KS5maWx0ZXIoZnVuY3Rpb24gKHJlZykgewogICAgaWYgKCFyZWcpIHJldHVybiBmYWxzZTsgLy8g6L+H5ruk5o6J5LiN5piv5q2j5YiZ5byP55qECiAgICBpZiAoJycgKyByZWcgPT09ICcvKD86KS8nKSByZXR1cm4gZmFsc2U7IC8vIOS4jeaOpeWPl+epuuato+WImeW8jwogICAgcmV0dXJuIHRydWU7CiAgfSkubWFwKGZ1bmN0aW9uIChyZWcpIHsKICAgIHJldHVybiAoJycgKyByZWcpLnNsaWNlKDEsIC0xKTsKICB9KTsKfTsKLy8g5Lu75oSP5LiA5Liq5ruh6Laz5Y2z5ruh6LazCndicC5jb252ZXJ0ZXIucnVsZXMuc29tZSA9IGZ1bmN0aW9uIChib29sZWFucykgewogIHJldHVybiBib29sZWFucy5zb21lKEJvb2xlYW4pOwp9OwovLyDpopzoibLorr7nva7ovazmjaIKd2JwLmNvbnZlcnRlci5ydWxlcy5jb2xvciA9IGZ1bmN0aW9uIChjb2xvcikgewogIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpdik7CiAgdmFyIHJnYmEsIG5hbWUgPSAndHJhbnNwYXJlbnQnOwogIHZhciByZWQgPSAwLCBncmVlbiA9IDAsIGJsdWUgPSAwLCBhbHBoYSA9IDA7CiAgdHJ5IHsKICAgIGRpdi5zdHlsZSA9ICdjb2xvcjogJyArIGNvbG9yICsgJyFpbXBvcnRhbnQnOwogICAgbmFtZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRpdikuY29sb3I7CiAgICByZ2JhID0gbmFtZS5tYXRjaCgvcmdiYT9cKCguKilcKS8pWzFdLnNwbGl0KCcsJykubWFwKE51bWJlcik7CiAgICByZWQgPSByZ2JhWzBdOyBibHVlID0gcmdiYVsxXTsgZ3JlZW4gPSByZ2JhWzJdOwogICAgYWxwaGEgPSByZ2JhLmxlbmd0aCA+IDMgPyByZ2JhWzNdIDogMTsKICB9IGNhdGNoIChlKSB7fQogIGRpdi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGRpdik7CiAgcmV0dXJuIHsgJ3JlZCc6IHJlZCwgJ2dyZWVuJzogZ3JlZW4sICdibHVlJzogYmx1ZSwgJ2FscGhhJzogYWxwaGEsICduYW1lJzogbmFtZSB9Owp9Owp3YnAuY29udmVydGVyLnJ1bGVzLmNvbG9yLmhleCA9IGZ1bmN0aW9uIChjb2xvcikgewogIHZhciBoZXggPSBmdW5jdGlvbiAobikgeyByZXR1cm4gKCcwJyArIG4udG9TdHJpbmcoMTYpKS5zbGljZSgtMik7IH07CiAgdmFyIHJlc3VsdCA9IHdicC5jb252ZXJ0ZXIucnVsZXMuY29sb3IoY29sb3IpOwogIHZhciB0ZXh0ID0gJyMnICsgaGV4KHJlc3VsdC5yZWQpICsgaGV4KHJlc3VsdC5ncmVlbikgKyBoZXgocmVzdWx0LmJsdWUpOwogIHJldHVybiB0ZXh0Owp9Owp3YnAuY29udmVydGVyLnJ1bGVzLmNvbG9yLnRyYW5zcGFyZW5jeSA9IGZ1bmN0aW9uIChjb2xvcikgewogIHZhciByZXN1bHQgPSB3YnAuY29udmVydGVyLnJ1bGVzLmNvbG9yKGNvbG9yKTsKICByZXR1cm4gTWF0aC5yb3VuZChyZXN1bHQuYWxwaGEgKiAxMDApOwp9OwoKd2JwLnVuc3VwcG9ydGVkID0gW107CgovLyDovazmjaLooagKd2JwLmNvbnZlcnRlci50YWJsZSA9IGZ1bmN0aW9uICgpIHsKICB2YXIgdGFibGUgPSBbXTsKICB2YXIgbm0gPSBmdW5jdGlvbiAobWFwKSB7CiAgICBpZiAobWFwID09PSB2b2lkIDApIG1hcCA9IHV0aWwuZnVuYy5pZGVudGl0eTsKICAgIGlmICh0eXBlb2YgbWFwICE9PSAnZnVuY3Rpb24nKSBtYXAgPSB1dGlsLmZ1bmMuY29uc3RhbnQobWFwKTsKICAgIHJldHVybiBtYXA7CiAgfTsKICAvLyDlrprkuYnovazmjaLop4TliJkKICB2YXIgZCA9IGZ1bmN0aW9uICh3YnBLZXksIHlhd2ZLZXksIG1hcCkgewogICAgdGFibGUucHVzaCh7ICd3YnAnOiB3YnBLZXksICd5YXdmJzogeWF3ZktleSwgJ21hcCc6IG5tKG1hcCkgfSk7CiAgfTsKICAvLyDmqKHlnZfov4fmu6TovazmjaLop4TliJkKICB2YXIgbSA9IGZ1bmN0aW9uICh3YnBNb2QsIHlhd2ZLZXksIG1hcCkgewogICAgdmFyIG1vZE1hcCA9IGZ1bmN0aW9uIChoaWRlTW9kcykgewogICAgICB2YXIgY29udGFpbnMgPSBmdW5jdGlvbiAoeCkgeyByZXR1cm4gaGlkZU1vZHMuaW5kZXhPZih4KSAhPT0gLTE7IH07CiAgICAgIGlmIChBcnJheS5pc0FycmF5KHdicE1vZCkpIHJldHVybiBubShtYXApKHdicE1vZC5tYXAoY29udGFpbnMpKTsKICAgICAgcmV0dXJuIG5tKG1hcCkoY29udGFpbnMod2JwTW9kKSk7CiAgICB9OwogICAgdGFibGUucHVzaCh7ICd3YnAnOiAnaGlkZU1vZHMnLCAneWF3Zic6IHlhd2ZLZXksICdtYXAnOiBtb2RNYXAgfSk7CiAgfTsKICAvLyDkvb/nlKggQ1NTIOWkhOeQhuS4gOS6myBZQVdGIOS4jeaPkOS+m+iuvue9rumhueeahOmakOiXj+aooeWdlwogIHZhciBjc3NUZXh0ID0gJyc7CiAgdmFyIHN0eWxlID0gZnVuY3Rpb24gKGNzc0luc2VydCkgeyBjc3NUZXh0ICs9IGNzc0luc2VydCArICdcbic7IH07CiAgdmFyIGMgPSBmdW5jdGlvbiAod2JwTW9kLCBjc3MsIGRlc2NyaXB0aW9uKSB7CiAgICB2YXIgYWRkQ3NzID0gZnVuY3Rpb24gKGVuYWJsZWQpIHsKICAgICAgaWYgKCFlbmFibGVkKSByZXR1cm47CiAgICAgIHZhciBjc3NJbnNlcnQ7CiAgICAgIGlmICh0eXBlb2YgY3NzID09PSAnZnVuY3Rpb24nKSBjc3NJbnNlcnQgPSBjc3MoKTsgZWxzZSBjc3NJbnNlcnQgPSAnJyArIGNzczsKICAgICAgaWYgKGRlc2NyaXB0aW9uKSBjc3NJbnNlcnQgPSAnLyogJyArIGRlc2NyaXB0aW9uICsgJyAqL1xuJyArIGNzc0luc2VydDsKICAgICAgc3R5bGUoY3NzSW5zZXJ0KTsKICAgIH07CiAgICBtKHdicE1vZCwgbnVsbCwgYWRkQ3NzKTsKICB9OwogIC8vIOaXoOazlei9rOaNoueahOWKn+iDvQogIHZhciBuID0gZnVuY3Rpb24gKHdicEtleSwgeWF3ZktleSkgewogICAgaWYgKHlhd2ZLZXkpIHdicC51bnN1cHBvcnRlZC5wdXNoKHlhd2ZLZXkpOwogIH07CiAgdmFyIHIgPSB3YnAuY29udmVydGVyLnJ1bGVzOyAvLyDnibnmrorovazmjaLop4TliJkKCiAgbihudWxsLCAnd2VpYm8udG9vbC5sb2FkX3dlaWJvX2J5X25ld2VzdCcpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wubG9hZF93ZWlib19ieV9ncm91cCcpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wubG9hZF93ZWlib19ieV9tdWx0aV9ncm91cCcpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wudXNlX2Zhc3RfY3JlYXRvcicpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wudXNlX2NvbnRleHRfbWVudV9jcmVhdG9yJyk7CiAgZChudWxsLCAnd2VpYm8udG9vbC5yZWZpbHRlcicsIHRydWUpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuZmFzdF9ibG9ja19idXR0b24nKTsKICBuKG51bGwsICd3ZWliby50b29sLmJsb2NrX2hpZGRlbicpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuZGlzYWJsZV9sYXp5bG9hZCcpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLmdyb3VwX2FjY291bnQnKTsKICBuKG51bGwsICd3ZWliby5vdGhlci5ncm91cF9zYW1lX2FjY291bnQnKTsKICBuKG51bGwsICd3ZWliby5vdGhlci5hdXRvX2xvYWRfbmV3X3dlaWJvJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIuYXV0b19leHBhbmQuZXR5cGVzJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIuYXV0b19leHBhbmQuYmFja2dyb3VuZCcpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLmF1dG9fZXhwYW5kJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIuZGVza3RvcF9ub3RpZmljYXRpb24udHlwZXMnKTsKICBuKG51bGwsICd3ZWliby5vdGhlci5kZXNrdG9wX25vdGlmaWNhdGlvbi5hdXRvaGlkZScpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLmRlc2t0b3Bfbm90aWZpY2F0aW9uLnNob3J0ZW4nKTsKICBuKG51bGwsICd3ZWliby5vdGhlci5kZXNrdG9wX25vdGlmaWNhdGlvbi5zaG9ydGxlbicpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLmRlc2t0b3Bfbm90aWZpY2F0aW9uLmR1cmF0aW9uJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIuZGVza3RvcF9ub3RpZmljYXRpb24uZHVyYXRpb25jJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIuZGVza3RvcF9ub3RpZmljYXRpb24ubnR5cGVzJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIuZGVza3RvcF9ub3RpZmljYXRpb24nKTsKICBkKCd3aGl0ZUtleXdvcmRzJywgJ3dlaWJvLmZpbHRlcnMua2V5d29yZC53aGl0ZWxpc3QnLCByLmtleXdvcmQua2V5d29yZCk7IC8vIOeZveWQjeWNlSDljIXlkKvkuIvliJflhbPplK7or43nmoTlvq7ljZrkuI3kvJrooqvlsY/olL0gLy8g4pqg77iPIOW+ruWNmuWGheWuueWkhOeQhuaWueW8j+S4jeWQjAogIGQoJ2JsYWNrS2V5d29yZHMnLCAnd2VpYm8uZmlsdGVycy5rZXl3b3JkLmJsYWNrbGlzdCcsIHIua2V5d29yZC5rZXl3b3JkKTsgLy8g6buR5ZCN5Y2VIOWMheWQq+S4i+WIl+WFs+mUruivjeeahOW+ruWNmuWwhuiiq+Wxj+iUvSAvLyDimqDvuI8g5b6u5Y2a5YaF5a655aSE55CG5pa55byP5LiN5ZCMCiAgZCgnZ3JheUtleXdvcmRzJywgJ3dlaWJvLmZpbHRlcnMua2V5d29yZC5mb2xkbGlzdCcsIHIua2V5d29yZC5rZXl3b3JkKTsgLy8g54Gw5ZCN5Y2VIOWMheWQq+S4i+WIl+WFs+mUruivjeeahOW+ruWNmuWwhuiiq+Wxj+iUveW5tuaPkOekuiAvLyDimqDvuI8g5b6u5Y2a5YaF5a655aSE55CG5pa55byP5LiN5ZCMCiAgZCgnd2hpdGVLZXl3b3JkcycsICd3ZWliby5maWx0ZXJzLnJlZ2V4cC53aGl0ZWxpc3QnLCByLmtleXdvcmQucmVnZXhwKTsgLy8g55m95ZCN5Y2VIOWMheWQq+S4i+WIl+WFs+mUruivjeeahOW+ruWNmuS4jeS8muiiq+Wxj+iUvSAvLyDimqDvuI8g5b6u5Y2a5YaF5a655aSE55CG5pa55byP5LiN5ZCMCiAgZCgnYmxhY2tLZXl3b3JkcycsICd3ZWliby5maWx0ZXJzLnJlZ2V4cC5ibGFja2xpc3QnLCByLmtleXdvcmQucmVnZXhwKTsgLy8g6buR5ZCN5Y2VIOWMheWQq+S4i+WIl+WFs+mUruivjeeahOW+ruWNmuWwhuiiq+Wxj+iUvSAvLyDimqDvuI8g5b6u5Y2a5YaF5a655aSE55CG5pa55byP5LiN5ZCMCiAgZCgnZ3JheUtleXdvcmRzJywgJ3dlaWJvLmZpbHRlcnMucmVnZXhwLmZvbGRsaXN0Jywgci5rZXl3b3JkLnJlZ2V4cCk7IC8vIOeBsOWQjeWNlSDljIXlkKvkuIvliJflhbPplK7or43nmoTlvq7ljZrlsIbooqvlsY/olL3lubbmj5DnpLogLy8g4pqg77iPIOW+ruWNmuWGheWuueWkhOeQhuaWueW8j+S4jeWQjAogIGQoJ2ZpbHRlck5hbWUnLCAnd2VpYm8uY29udGVudC50eXBlc19tZW50aW9uJyk7IC8vIOWcqOeUqOaIt+WQjeS4reaQnOe0ouWFs+mUruivjQogIGQobnVsbCwgJ3dlaWJvLmNvbnRlbnQudHlwZXNfdG9waWMnLCB0cnVlKTsKICBkKG51bGwsICd3ZWliby5jb250ZW50LnR5cGVzX3N0b2NrJywgZmFsc2UpOwogIGQobnVsbCwgJ3dlaWJvLmNvbnRlbnQudHlwZXNfbGlua3QnLCBmYWxzZSk7CiAgZChudWxsLCAnd2VpYm8uY29udGVudC50eXBlc19saW5rdScsIGZhbHNlKTsKICBkKCdmaWx0ZXJTbWlsZXknLCAnd2VpYm8uY29udGVudC50eXBlc19lbW90aW9uJyk7IC8vIOWFgeiuuOihqOaDheWFs+mUruivjQogIGQoWyd0aXBUZXh0Q29sb3InLCAndGlwQmFja0NvbG9yJ10sIG51bGwsIGZ1bmN0aW9uIChjb2xvcikgewogICAgaWYgKGNvbG9yWzBdID09PSAnI0ZGODA4MCcgJiYgY29sb3JbMV0gPT09ICcjRkZEMEQwJykgcmV0dXJuOyAvLyDlpoLmnpzkvb/nlKjpu5jorqTlgLzvvIzliJnlr7zlhaXlkI7ku43nhLbkvb/nlKjpu5jorqTlgLwKICAgIHN0eWxlKCcvKiDmipjlj6Dlvq7ljZrpopzoibIgKi9cbicgKyB1dGlsLnN0ci5maWxsKHV0aWwuc3RyLmNtdChmdW5jdGlvbiAoKSB7IC8qIUNTUwogICAgICBbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAuV0JfZmVlZF90eXBlW3lhd2YtZGlzcGxheSQ9Ii1mb2xkIl06OmJlZm9yZSB7IGNvbG9yOiB7e3RleHR9fTsgYmFja2dyb3VuZC1jb2xvcjoge3tiYWNrfX07IGJvcmRlci1jb2xvcjoge3t0ZXh0fX0gfQogICAgICBbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAuV0JfZmVlZF90eXBlW3lhd2YtZGlzcGxheSQ9Ii1mb2xkIl06aG92ZXI6OmJlZm9yZSB7IGNvbG9yOiAjNDBkMDQwOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZDBmZmQwOyAgYm9yZGVyLWNvbG9yOiAjNDBkMDQwIH0KICAgICovIG5vb3AoKTsgfSksIHsKICAgICAgJ3RleHQnOiByLmNvbG9yKGNvbG9yWzBdKS5uYW1lLAogICAgICAnYmFjayc6IHIuY29sb3IoY29sb3JbMV0pLm5hbWUsCiAgICB9KSk7CiAgfSk7CiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy5hY2NvdW50LndoaXRlbGlzdCcpOwogIGQoJ3VzZXJCbGFja2xpc3QnLCAnd2VpYm8uZmlsdGVycy5hY2NvdW50LmJsYWNrbGlzdCcpOyAvLyDlpoLmnpzkuIDmnaHlvq7ljZrnmoTlj5HluIPogIXmiJbovazlj5Hljp/mlofnmoTkvZzogIXkuLrkuIvliJfnlKjmiLfkuYvkuIDvvIzlvq7ljZrlsIbooqvlsY/olL3jgIIKICBuKG51bGwsICd3ZWliby5maWx0ZXJzLmFjY291bnQuZm9sZGxpc3QnKTsKICBuKG51bGwsICd3ZWliby5maWx0ZXJzLmFjY291bnRmLmJsYWNrbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMuYWNjb3VudGYuZm9sZGxpc3QnKTsKICBuKG51bGwsICd3ZWliby5vcmlnaW5hbC5ibGFja2xpc3RfZCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMub3JpZ2luYWwud2hpdGVsaXN0Jyk7CiAgZCgndXNlckJsYWNrbGlzdCcsICd3ZWliby5maWx0ZXJzLm9yaWdpbmFsLmJsYWNrbGlzdCcpOyAvLyDlpoLmnpzkuIDmnaHlvq7ljZrnmoTlj5HluIPogIXmiJbovazlj5Hljp/mlofnmoTkvZzogIXkuLrkuIvliJfnlKjmiLfkuYvkuIDvvIzlvq7ljZrlsIbooqvlsY/olL3jgIIKICBuKG51bGwsICd3ZWliby5maWx0ZXJzLm9yaWdpbmFsLmZvbGRsaXN0Jyk7CiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy5tZW50aW9uLndoaXRlbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMubWVudGlvbi5ibGFja2xpc3QnKTsKICBuKG51bGwsICd3ZWliby5maWx0ZXJzLm1lbnRpb24uZm9sZGxpc3QnKTsKICBuKG51bGwsICd3ZWliby5maWx0ZXJzLnRvcGljLndoaXRlbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMudG9waWMuYmxhY2tsaXN0Jyk7CiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy50b3BpYy5mb2xkbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMucnRvcGljLndoaXRlbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMucnRvcGljLmJsYWNrbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMucnRvcGljLmZvbGRsaXN0Jyk7CiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy5zb3VyY2Uud2hpdGVsaXN0Jyk7CiAgZCgnc291cmNlS2V5d29yZHMnLCAnd2VpYm8uZmlsdGVycy5zb3VyY2UuYmxhY2tsaXN0Jyk7IC8vIOm7keWQjeWNlSDmnaXmupDlkI3np7DljIXlkKvkuIvliJflhbPplK7or43nmoTlvq7ljZrlsIbooqvlsY/olL0gLy8g4pqg77iPIOivpeiEmuacrOaYr+WtkOS4sui/h+a7pO+8jOi/memHjOaYr+WFqOWtl+i/h+a7pOOAggogIGQoJ3NvdXJjZUdyYXlLZXl3b3JkcycsICd3ZWliby5maWx0ZXJzLnNvdXJjZS5mb2xkbGlzdCcpOyAvLyDngbDlkI3ljZUg5p2l5rqQ5ZCN56ew5YyF5ZCr5LiL5YiX5YWz6ZSu6K+N55qE5b6u5Y2a5bCG6KKr5bGP6JS95bm25o+Q56S6ICAvLyDimqDvuI8g6K+l6ISa5pys5piv5a2Q5Liy6L+H5ruk77yM6L+Z6YeM5piv5YWo5a2X6L+H5ruk44CCCiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy5oeXBlcmxpbmsud2hpdGVsaXN0Jyk7CiAgZCgnVVJMS2V5d29yZHMnLCAnd2VpYm8uZmlsdGVycy5oeXBlcmxpbmsuYmxhY2tsaXN0Jyk7IC8vIOWmguaenOS4gOadoeW+ruWNmuS4reWMheWQq+mTvuaOpeS4lOebruagh+WcsOWdgOS4reWMheWQq+S4i+WIl+WFs+mUruivje+8jOW+ruWNmuWwhuiiq+Wxj+iUve+8iOaXoOaPkOekuu+8ieOAggogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMuaHlwZXJsaW5rLmZvbGRsaXN0Jyk7CiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy5saW5rdGl0bGUud2hpdGVsaXN0Jyk7CiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy5saW5rdGl0bGUuYmxhY2tsaXN0Jyk7CiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy5saW5rdGl0bGUuZm9sZGxpc3QnKTsKICBkKCdmaWx0ZXJPdGhlcnNPbmx5JywgJ3dlaWJvLm90aGVyLm15X3dlaWJvJyk7IC8vIOS4jeimgeWxj+iUveaIkeiHquW3seWPkeW4g+eahOW+ruWNmgogIGQoJ2ZpbHRlck90aGVyc09ubHknLCAnd2VpYm8ub3RoZXIubXlfb3JpZ2luYWwnKTsgLy8g5LiN6KaB5bGP6JS95oiR6Ieq5bex5Y+R5biD55qE5b6u5Y2aCiAgbihudWxsLCAnd2VpYm8ub3RoZXIubWVudGlvbl9tZScpOwogIG4oJ2ZpbHRlclBhdXNlZCcsIG51bGwpOyAvLyDmmoLlgZzlsY/olL3vvJrpgInkuK3ml7bmmoLml7blgZzmraLlsY/olL3lvq7ljZogLy8g4pqg77iPIFlBV0bmnKrmj5Dkvpvor6Xlip/og70KICBkKCdmaWx0ZXJQcm9tb3Rpb25zJywgJ3dlaWJvLm90aGVyLmFkX2ZlZWQnKTsgLy8g5bGP6JS95o6o5bm/5b6u5Y2aIC8vIOKaoO+4jyBZQVdGIOeahOi/h+a7pOinhOWImeabtOWuveadvgogIGQoWydmaWx0ZXJIb3QnLCAnZmlsdGVyTGlrZWQnXSwgJ3dlaWJvLm90aGVyLmZhbnNfdG9wJywgci5zb21lKTsgLy8g5bGP6JS954Ot6Zeo5b6u5Y2a77yI57KJ5Lid5aS05p2h77yJICYg5bGP6JS95aW95Y+L6LWe6L+H55qE5b6u5Y2aCiAgbihudWxsLCAnd2VpYm8ub3RoZXIucHJvZHVjdF9jYXJkJyk7CiAgZCgnZmlsdGVyVGFvYmFvJywgJ3dlaWJvLm90aGVyLnRiX3RtX3diJyk7IC8vIOWxj+iUveW4puaciSDmt5jlrp3llYblk4Eg5oiWIOWkqeeMq+WVhuWTgSDnmoTlvq7ljZogLy8g4pqg77iPIFlBV0bov5jkvJrov4fmu6Qg6IGa5YiS566X5ZWG5ZOBIOS9huaYr+iHs+S7iuacquingei/h+iBmuWIkueul+WVhuWTgQogIG4obnVsbCwgJ3dlaWJvLm90aGVyLndlaWJvX3BheV9naWZ0Jyk7CiAgbSgnVGltZWxpbmVNb2RzJywgJ3dlaWJvLm90aGVyLmZha2Vfd2VpYm8nKTsgLy8g5pe26Ze057q/5bWM5YWl5qih5Z2X77yI5aW95Y+L5YWz5rOo562J77yJCiAgZCgnZmlsdGVyRGVsZXRlZCcsICd3ZWliby5vdGhlci5kZWxldGVkX2ZvcndhcmQnKTsgLy8g5bGP6JS95bey5Yig6Zmk5b6u5Y2a55qE6L2s5Y+RCiAgbihudWxsLCAnd2VpYm8ub3RoZXIuY29tbWVudF9hbmRfcmVwbHknKTsKICBuKG51bGwsICd3ZWliby5vdGhlci52b3RlX3dlaWJvJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIucmVkMjAxNCcpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLmppbmxpX2ZvcndhcmQnKTsKICBuKG51bGwsICd3ZWliby5vdGhlci5hcHBpdGVtJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIud2VuZGEnKTsKICBuKG51bGwsICd3ZWliby5vdGhlci53ZW53b2RyJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIueWl6aGlibycpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLnN0b2NrJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIub3RoZXInKTsKICBuKG51bGwsICd3ZWliby5vdGhlci5tdWx0aV90b3BpYy5udW0nKTsKICBuKG51bGwsICd3ZWliby5vdGhlci5tdWx0aV90b3BpYycpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLnRvb19sb25nJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIud2VpX2h1YXRpJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIud2VpX3F1bicpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLndlaV9mYW5ndGFuJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIud2VpX2dvbmd5aScpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLnVuYXV0aF9zb3VyY2UnKTsKICBkKCdtYXhGbG9vZCcsICd3ZWliby5vdGhlci5zYW1lX2FjY291bnQubnVtYmVyJywgTnVtYmVyKTsgLy8g5Y+N5Yi35bGP77ya5p2l6Ieq5ZCM5LiA55So5oi355qE5b6u5Y2a5pyA5aSa5pi+56S6e33mnaEKICBkKG51bGwsICd3ZWliby5vdGhlci5zYW1lX2FjY291bnQuYWN0aW9uJywgJ2hpZGRlbicpOwogIGQoJ2ZpbHRlckZsb29kJywgJ3dlaWJvLm90aGVyLnNhbWVfYWNjb3VudCcpOyAvLyDlj43liLflsY/vvJrmnaXoh6rlkIzkuIDnlKjmiLfnmoTlvq7ljZrmnIDlpJrmmL7npLp7feadoQogIG4obnVsbCwgJ3dlaWJvLm90aGVyLnNhbWVfZm9yd2FyZC5udW1iZXInKTsKICBuKG51bGwsICd3ZWliby5vdGhlci5zYW1lX2ZvcndhcmQuYWN0aW9uJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIuc2FtZV9mb3J3YXJkJyk7CiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy5ja2V5d29yZC53aGl0ZWxpc3QnKTsKICBuKG51bGwsICd3ZWliby5maWx0ZXJzLmNrZXl3b3JkLmJsYWNrbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMuY3JlZ2V4cC53aGl0ZWxpc3QnKTsKICBuKG51bGwsICd3ZWliby5maWx0ZXJzLmNyZWdleHAuYmxhY2tsaXN0Jyk7CiAgbihudWxsLCAnd2VpYm8uZmlsdGVycy5jdXNlci53aGl0ZWxpc3QnKTsKICBuKG51bGwsICd3ZWliby5maWx0ZXJzLmN1c2VyLmJsYWNrbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMuY3RvcGljLndoaXRlbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmZpbHRlcnMuY3RvcGljLmJsYWNrbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLmNvbW1lbnQubXlfY29tbWVudCcpOwogIG4obnVsbCwgJ3dlaWJvLmNvbW1lbnQuZW1vamlfY291bnQubnVtYmVyJyk7CiAgbihudWxsLCAnd2VpYm8uY29tbWVudC5lbW9qaV9jb3VudCcpOwogIG4obnVsbCwgJ3dlaWJvLmNvbW1lbnQuZW1vamlfdHlwZXMubnVtYmVyJyk7CiAgbihudWxsLCAnd2VpYm8uY29tbWVudC5lbW9qaV90eXBlcycpOwogIG4obnVsbCwgJ3dlaWJvLmNvbW1lbnQubm9fY29udGVudCcpOwogIG4obnVsbCwgJ3dlaWJvLmNvbW1lbnQud2l0aF9mb3J3YXJkJyk7CiAgbihudWxsLCAnd2VpYm8uY29tbWVudC53aXRoX3BpY3R1cmUuYWN0Jyk7CiAgbihudWxsLCAnd2VpYm8uY29tbWVudC53aXRoX3BpY3R1cmUnKTsKICBuKG51bGwsICd3ZWliby5jb21tZW50LmRlbGV0ZV9jb21tZW50Jyk7CiAgbSgnTGV2ZWwnLCAnd2VpYm8ubGF5b3V0SGlkZUljb25MZXZlbCcpOyAvLyDnlKjmiLfnrYnnuqcKICBtKCdNZW1iZXJJY29uJywgJ3dlaWJvLmxheW91dEhpZGVJY29uTWVtYmVyJyk7IC8vIOW+ruWNmuS8muWRmOagh+ivhgogIG0oJ1ZlcmlmeUljb24nLCAnd2VpYm8ubGF5b3V0SGlkZUljb25BcHByb3ZlJyk7IC8vIOS4quS6ui/mnLrmnoTorqTor4HmoIfor4YKICBtKCdWZXJpZnlJY29uJywgJ3dlaWJvLmxheW91dEhpZGVJY29uQXBwcm92ZUNvJyk7IC8vIOS4quS6ui/mnLrmnoTorqTor4HmoIfor4YKICBtKCdWZXJpZnlJY29uJywgJ3dlaWJvLmxheW91dEhpZGVJY29uQXBwcm92ZURlYWQnKTsgLy8g5Liq5Lq6L+acuuaehOiupOivgeagh+ivhgogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVJY29uQmlnRnVuJyk7CiAgbSgnRGFyZW5JY29uJywgJ3dlaWJvLmxheW91dEhpZGVJY29uQ2x1YicpOyAvLyDlvq7ljZrovr7kurrmoIfor4YKICBtKCdWZ2lybEljb24nLCAnd2VpYm8ubGF5b3V0SGlkZUljb25WR2lybCcpOyAvLyDlvq7ljZrlpbPpg47moIfor4YKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlSWNvblN1cGVydmlzb3InKTsKICBtKCdUYW9iYW9JY29uJywgJ3dlaWJvLmxheW91dEhpZGVJY29uVGFvYmFvJyk7IC8vIOa3mOWuneWVhuaItwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVJY29uQ2hlbmcnKTsKICBtKCdHb25neWlJY29uJywgJ3dlaWJvLmxheW91dEhpZGVJY29uR29uZ3lpJyk7IC8vIOW+ruWFrOebigogIG0oJ1BhaUljb24nLCAnd2VpYm8ubGF5b3V0SGlkZUljb25PdGhlcicpOyAvLyDpmo/miYvmi40yMDE2IC8vIOKaoO+4jyBZQVdG5bey5bCG6ZqP5omL5ouN5ZKM5YW25LuW5rS75Yqo5L2/55So55qE5Zu+5qCH57uf5LiA5Li65LiA5Liq6YCJ6aG5CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZUljb25ab25neWlrYScpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVGb2xsb3dTaW5nbGUnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlRm9sbG93QXRNZScpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVGb2xsb3dEaXNjb3ZlcicpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVGb2xsb3dXaGlzcGVyJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZUZvbGxvd1ZpZGVvJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZU5hdkxvZ29JbWcnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlTmF2TWFpbicpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVOYXZUVicpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVOYXZIb3QnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlTmF2R2FtZScpOwogIG0oJ0hvdFNlYXJjaCcsICd3ZWliby5sYXlvdXRIaWRlTmF2SG90U2VhcmNoJyk7IC8vIOWkp+Wutuato+WcqOeDreaQnO+8iOaQnOe0ouagj++8iQogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVOYXZOb3RpY2VOZXcnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlTmF2U2V0dGluZ05ldycpOwogIGQoJ25vSG90WWVsbG93VGFncycsICd3ZWliby5sYXlvdXRIaWRlTmF2SG90VGlwJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZUxlZnROZXdGZWVkJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZUxlZnRIb21lJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZUxlZnRGYXYnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlTGVmdExpa2UnKTsKICBtKCdIb3RXZWlibycsICd3ZWliby5sYXlvdXRIaWRlTGVmdEhvdCcpOyAvLyDng63pl6jlvq7ljZoKICBuKCdIb3RXZWlibycsICd3ZWliby5sYXlvdXRIaWRlTGVmdFRWJyk7CiAgbSgnRnJpZW5kcycsICd3ZWliby5sYXlvdXRIaWRlTGVmdEZyaWVuZHMnKTsgLy8g5aW95Y+L5ZyICiAgbSgnVG9NZScsICd3ZWliby5sYXlvdXRIaWRlTGVmdEdyb3VwVG9NZScpOyAvLyDnvqTlvq7ljZoKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlTGVmdFNwZWNpYWwnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlTGVmdFdoaXNwZXInKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlTGVmdFZQbHVzJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZUxlZnROZXcnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlTGVmdE5ld3MnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlTGVmdENvdW50Jyk7CiAgbSgnUmVjb21tZW5kZWRUb3BpYycsICd3ZWliby5sYXlvdXRIaWRlTWlkZGxlUmVjb21tZW5kZWRUb3BpYycpOyAvLyDng63ngrnlvq7or53popjvvIjlj5HluIPmoYblj7PkuIrvvIkKICBtKCdSZWNvbUZlZWQnLCAnd2VpYm8ubGF5b3V0SGlkZU1pZGRsZUZlZWRSZWNvbW1hbmQnKTsgLy8g57K+5b2p5b6u5Y2a5o6o6I2Q77yI6aaW6aG15pe26Ze057q/77yJCiAgbSgnTWVtYmVyVGlwJywgJ3dlaWJvLmxheW91dEhpZGVNaWRkbGVNZW1iZXJUaXAnKTsgLy8g5b6u5Y2a5Lya5ZGY5o6o5bm/5qiq5bmF77yI6aG15bqV77yJCiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVJpZ2h0SW5mbycpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVSaWdodEhvbmdCYW9FbnRyYW5jZScpOwogIG0oJ011c2ljUmVjb20nLCAnd2VpYm8ubGF5b3V0SGlkZVJpZ2h0UmVjb21NdXNpY1JhbmsnKTsgLy8g5Lqa5rSy5paw5q2M5qacL+WlveS5puamnAogIG0oJ1RvcGljJywgJ3dlaWJvLmxheW91dEhpZGVSaWdodEhvdFRvcGljJyk7IC8vIOeDremXqOivnemimAogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVSaWdodEhvdFRvcGljRXhwYW5kJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVJpZ2h0SW50ZXJlc3QnKTsKICBtKCdNZW1iZXInLCAnd2VpYm8ubGF5b3V0SGlkZVJpZ2h0TWVtYmVyJyk7IC8vIOS8muWRmOS4k+WMugogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVSaWdodEdyb3VwcycpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVSaWdodFJlY29tR3JvdXBVc2VyJyk7CiAgbSgnSG9uZ2JhbycsICd3ZWliby5sYXlvdXRIaWRlUmlnaHRIb25nYmFvUmFuaycpOwogIG0oJ01vdmllUmVjb20nLCAnd2VpYm8ubGF5b3V0SGlkZVJpZ2h0TW92aWUnKTsgLy8g55S15b2x54Ot6K6u5qacCiAgbSgnQXR0RmVlZCcsICd3ZWliby5sYXlvdXRIaWRlUmlnaHRBdHRGZWVkJyk7IC8vIOWlveWPi+WFs+azqOWKqOaAgQogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVSaWdodFRhb2Jhb01vdmllJyk7CiAgbSgnTm90aWNlJywgJ3dlaWJvLmxheW91dEhpZGVSaWdodE5vdGljZScpOyAvLyDlhazlkYrmoI8KICBtKCdSZWNvbUZlZWQnLCAnd2VpYm8ubGF5b3V0SGlkZVdlaWJvUmVjb21GZWVkJyk7IC8vIOeyvuW9qeW+ruWNmuaOqOiNkO+8iOmmlumhteaXtumXtOe6v++8iQogIG0oJ0NvbW1lbnRUaXAnLCAnd2VpYm8ubGF5b3V0SGlkZVdlaWJvRmVlZFRpcCcpOyAvLyDor4TorrrmoI/pobbnq6/mqKrluYUKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlV2VpYm9Hcm91cFRpcCcpOwogIG0oJ01lbWJlckNvdmVyJywgJ3dlaWJvLmxheW91dEhpZGVXZWlib1ZJUEJhY2tncm91bmQnKTsgLy8g5Lya5ZGY5b6u5Y2a6IOM5pmvIC8vIOKaoO+4jyBZQVdGIOeahOi/h+a7pOinhOWImeabtOWuveadvgogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVXZWlib0xhc3RQaWMnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlV2VpYm9QaWNUYWcnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlV2VpYm9Tb25UaXRsZScpOwogIG0oWydUb3BpY0NhcmQnLCAnTG9jYXRpb25DYXJkJ10sICd3ZWliby5sYXlvdXRIaWRlV2VpYm9DYXJkJywgci5zb21lKTsgLy8g5b6u5Y2a6K+d6aKY5Y2h54mHLCDlvq7ljZrkvY3nva7ljaHniYcgLy8g4pqg77iPIFlBV0blr7nmiYDmnInljaHniYfmj5DkvpvllK/kuIDnmoTorr7nva7pobkKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlV2VpYm9BcnRpY2FsUGF5Jyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVdlaWJvVGFnJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVdlaWJvTW92aWVUYWcnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlV2VpYm9Tb3VyY2UnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlV2VpYm9Qb3AnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlV2VpYm9MaWtlJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVdlaWJvTGlrZUNvbW1lbnQnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlV2VpYm9MaWtlUG9wdXAnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlV2VpYm9Gb3J3YXJkJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVdlaWJvRmF2b3VyaXRlJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVdlaWJvUHJvbW90ZU90aGVyJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVdlaWJvUmVwb3J0Jyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVdlaWJvVXNlQ2FyZEJhY2tncm91bmQnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlUGVyc29uTW92ZVRoaW5ncycpOwogIG0oJ1Byb2ZDb3ZlcicsICd3ZWliby5sYXlvdXRIaWRlUGVyc29uQ292ZXInKTsgLy8g5bCB6Z2i5Zu+77yI5Liq5Lq65Li76aG177yJCiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVBlcnNvbkJHSW1nJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVBlcnNvbkJhZGdlSWNvbicpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVQZXJzb25WZXJpZnknKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlUGVyc29uRWRpdFBlcnNvbkluZm8nKTsKICBtKCdQcm9mU3RhdHMnLCAnd2VpYm8ubGF5b3V0SGlkZVBlcnNvblN0YXRzJyk7IC8vIOWFs+azqC/nsonkuJ0v5b6u5Y2a5pWw77yI5Liq5Lq65Li76aG177yJCiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVBlcnNvbk15RGF0YScpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVQZXJzb25TdWdnZXN0VXNlcicpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVQZXJzb25Hcm91cCcpOwogIG0oJ1JlbGF0aW9uJywgJ3dlaWJvLmxheW91dEhpZGVQZXJzb25SZWxhdGlvbicpOyAvLyDlhbPms6gv57KJ5LidL+W+ruWFs+ezu++8iOS4quS6uuS4u+mhte+8iQogIG0oJ0FsYnVtJywgJ3dlaWJvLmxheW91dEhpZGVQZXJzb25BbGJ1bScpOyAvLyDlvq7nm7jlhozvvIjkuKrkurrkuLvpobXvvIkKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlUGVyc29uSG90VG9waWMnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlUGVyc29uSG90V2VpYm8nKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlUGVyc29uVXNlckxpc3QnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlUGVyc29uSG9uZ2JhbycpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVQZXJzb25XZW53b0RyJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZVBlcnNvblRpbWVsaW5lJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0LnBsZWZ0Jyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZU1lc3NhZ2VzSGVscCcpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVNZXNzYWdlc0ZlZWRiYWNrJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZU1lc3NhZ2VzWW91ZGFvJyk7CiAgbSgnQWRzJywgJ3dlaWJvLmxheW91dEhpZGVPdGhlckFkcycpOyAvLyDniYjpnaLlub/lkYrlj4rltYzlhaXlvI/lub/lkYoKICBtKCdNdXNpY1BsYXllcicsICd3ZWliby5sYXlvdXRIaWRlT3RoZXJNdXNpYycpOyAvLyDlvq7pn7PkuZDmkq3mlL7lmajvvIjlt6bkuIvop5LvvIkKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlT3RoZXJUZW1wbGF0ZScpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVPdGhlckhvbWVUaXAnKTsKICBtKCdGb290ZXInLCAnd2VpYm8ubGF5b3V0SGlkZU90aGVyRm9vdGVyJyk7IC8vIOmhteW6lemTvuaOpeaooeWdlwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVPdGhlcldiSW0nKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXRIaWRlT3RoZXJJTScpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVPdGhlclRpcCcpOwogIG0oJ0ZlZWRSZWNvbScsICd3ZWliby5sYXlvdXRIaWRlT3RoZXJSZWxhdGVkV0InKTsgLy8g55u45YWz5o6o6I2Q77ya5Y2V5p2h5b6u5Y2a5Y+z6L655qCPCiAgbSgnRmVlZFJlY29tJywgJ3dlaWJvLmxheW91dEhpZGVPdGhlclJlbGF0ZWRWaWRlbycpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dEhpZGVPdGhlclJlbGF0ZWRBcnRpY2FsJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0SGlkZU90aGVyU2VuZFdlaWJvJyk7CiAgYygnSU1OZXdzJywgJ3dlaWJvLmxheW91dEhpZGVPdGhlcklNTmV3cycpOwogIGMoJ1N0YXRzJywgJyN2Nl9wbF9yaWdodG1vZF9teWluZm8gLldfcGVyc29uX2luZm8geyBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudCB9ICN2Nl9wbF9yaWdodG1vZF9teWluZm8gLnVzZXJfYXR0ZW4geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLCAn5YWz5rOoL+eyieS4nS/lvq7ljZrmlbAnKTsgLy8g5pyq5o+Q5L6b6K+l5Yqf6IO977yb5Zug5Li66ZqQ6JeP5ZCO5Lya5a+86Ie055So5oi35L+h5oGv5q+U5Y+R5biD5qGG5bCPCiAgZChudWxsLCAnd2VpYm8udG9vbC5zaG93QWxsTXNnTmF2LmF0bWUnLCB0cnVlKTsKICBkKG51bGwsICd3ZWliby50b29sLnNob3dBbGxNc2dOYXYuY210JywgdHJ1ZSk7CiAgZChudWxsLCAnd2VpYm8udG9vbC5zaG93QWxsTXNnTmF2Lmxpa2UnLCBmYWxzZSk7CiAgZChudWxsLCAnd2VpYm8udG9vbC5zaG93QWxsTXNnTmF2LmRtJywgdHJ1ZSk7CiAgZChudWxsLCAnd2VpYm8udG9vbC5zaG93QWxsTXNnTmF2Lm1zZ2JveCcsIHRydWUpOwogIGQobnVsbCwgJ3dlaWJvLnRvb2wuc2hvd0FsbE1zZ05hdi5ncm91cCcsIGZhbHNlKTsKICBkKG51bGwsICd3ZWliby50b29sLnNob3dBbGxNc2dOYXYuZG1zdWInLCBmYWxzZSk7CiAgZCgnc2hvd0FsbE1zZ05hdicsICd3ZWliby50b29sLnNob3dBbGxNc2dOYXYnKTsgLy8g5Zyo5bem6L655qCP5aKe5Yqg5raI5oGv5a+86Iiq77yI4oCc6K+E6K664oCd44CB4oCc56eB5L+h4oCd562J77yJCiAgZCgnc2hvd0FsbEdyb3VwcycsICd3ZWliby50b29sLnNob3dBbGxHcm91cCcpOyAvLyDlsZXlvIDliIbnu4TmoI/kuK3nmoTmiYDmnInliIbnu4QKICBkKG51bGwsICd3ZWliby50b29sLm1lcmdlQ29sdW1ucy5zaWRlJywgJ2xlZnQnKTsgLy8g5Y676Zmk6aaW6aG15Y+z6L655qCPCiAgZCgnbm9Ib21lTWFyZ2lucycsICd3ZWliby50b29sLm1lcmdlQ29sdW1ucycpOyAvLyDljrvpmaTpppbpobXlj7PovrnmoI8gLy8g4pqg77iPIFlBV0bmnKrmj5DkvpvljrvpmaTlj7PovrnmoI/nmoTlip/og73vvIzkvb/nlKjlsIblj7PovrnmoI/lkIjlubbliLDlt6bkvqfkvZzkuLrmm7/ku6MKICBuKG51bGwsICd3ZWliby50b29sLmNob3NlX3NpZGUuc2lkZScpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuY2hvc2Vfc2lkZScpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuZmlsdGVfcmlnaHRfdG9waWMnKTsKICBuKG51bGwsICd3ZWliby50b29sLmZpbHRlX3JpZ2h0X3RvcGljX2NvdW50Lm51bWJlcicpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuZmlsdGVfcmlnaHRfdG9waWNfY291bnQnKTsKICBuKG51bGwsICd3ZWliby50b29sLnJpZ2h0X3VzZXJfbGlzdCcpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wucmlnaHRfdXNlcl9saXN0X25vdGljZS5fcmVjb3JkcycpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wucmlnaHRfdXNlcl9saXN0X25vdGljZS5fbGFzdCcpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wucmlnaHRfdXNlcl9saXN0X25vdGljZScpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuaGlkZV9uYXZfYmFyJyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5maXhlZExlZnQnKTsKICBuKG51bGwsICd3ZWliby50b29sLmZpeGVkUmlnaHQnKTsKICBuKG51bGwsICd3ZWliby50b29sLmZpeGVkTmV3RmVlZFRpcCcpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuZml4ZWRPdGhlcnMnKTsKICBuKG51bGwsICd3ZWliby50b29sLmF1dG9fdW5mb2xkX3dlaWJvLmNvdW50Jyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5hdXRvX3VuZm9sZF93ZWliby5icicpOwogIGQoJ3Nob3dBbGxUZXh0JywgJ3dlaWJvLnRvb2wuYXV0b191bmZvbGRfd2VpYm8nKTsgLy8g5bGV5byA5a2X5pWw6LaF6ZW/55qE5b6u5Y2a5YaF5a65IC8vIOKaoO+4jyBZQVdG5bCG6buY6K6k5Y+q5bGV5byA5LiN6LaF6L+HMjAw5a2X77yI5o2i6KGM6K6hMzDlrZfvvInnmoTlvq7ljZrvvIznlKjmiLfpnIDopoHkv67mlLnorr7nva7kuLrlhYHorrjlsZXlvIAyMDAw5a2X5b6u5Y2a6L6+5Yiw55u45ZCM55qE5pWI5p6cCiAgZCgnc2hvd0FsbEFydGljbGVUZXh0JywgJ3dlaWJvLnRvb2wuYXV0b191bmZvbGRfdHRhcnRpY2FsJyk7CiAgZCgnY2xlYXJEZWZUb3BpYycsICd3ZWliby50b29sLmNsZWFyX2RlZl90b3BpYycpOyAvLyDmuIXpmaTlvq7ljZrlj5HluIPmoYbkuK3nmoTpu5jorqTor53popgKICBuKG51bGwsICd3ZWliby50b29sLmZhc3RfZW1vamkudG9wJyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5mYXN0X2Vtb2ppLnJlY2VudCcpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuZmFzdF9lbW9qaScpOwogIGQoJ2RpcmVjdEFsbEZlZWRzJywgJ3dlaWJvLnRvb2wucmVkaXJlY3RXZWlibycpOyAvLyDov5vlhaXmnKrlhbPms6jkurrkuLvpobXml7bpu5jorqTmn6XnnIvlhajpg6jlvq7ljZoKICBuKG51bGwsICd3ZWliby50b29sLnVuY2hlY2tfZm9sbG93X3ByZXNlbnRlcicpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuY2FyZEJ1dHRvbicpOwogIGQoJ2RpcmVjdEJpZ0ltZycsICd3ZWliby50b29sLnZpZXdPcmlnaW5hbCcpOyAvLyDngrnlh7vigJzmn6XnnIvlpKflm77igJ3nm7TmjqXmiZPlvIDlpKflm74KICBuKG51bGwsICd3ZWliby50b29sLmRvd25sb2FkSW1hZ2UnKTsKICBuKG51bGwsICd3ZWliby50b29sLmh0bWw1VmlkZW8nKTsKICBuKG51bGwsICd3ZWliby50b29sLmRpc2FibGVfdmlkZW9fbWVudScpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wud2VpYm8udG9vbC51c2VfYnVpbHRfaW5fdmlkZW9fcGxheWVyJyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5wYXVzZV9hbmltYXRlZF9pbWFnZScpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wucmVwbGFjZV9saW5rLnVybCcpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wucmVwbGFjZV9saW5rJyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5yZXBsYWNlX2ltYWdlX2Vtb2ppJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIuY3VzdG9taXplX3NvdXJjZScpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLmZvbGRfY2hpbGRfY29tbWVudCcpOwogIG4obnVsbCwgJ3dlaWJvLm90aGVyLmNvbW1lbnRfc2hvd19hbGwnKTsKICBuKG51bGwsICd3ZWliby50b29sLmF1dG9fY2hlY2tfZm9sbG93aW5nJyk7CiAgbihudWxsLCAnd2VpYm8ub3RoZXIuZmVlZF9saXN0X3R5cGUnKTsKICBuKG51bGwsICd3ZWliby50b29sLnNob3dfbG9jYWxfdGltZScpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuZGlzYWJsZV9kZXNrdG9wX25vdGlmaWNhdGlvbicpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuZGlzYWJsZV9saXZlX3Bob3RvJyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5kaXNhYmxlX3ZpZGVvX2NsaWNrX3BvcCcpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wubm9fcG9wX2J1dF9mdWxsX3NjcmVlbicpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wudmlkZW9fbm9fYXV0b19uZXh0Jyk7CiAgZCgnc2hvd0FsbFNvbkZlZWRzJywgbnVsbCwgZnVuY3Rpb24gKGVuYWJsZWQpIHsKICAgIGlmICghZW5hYmxlZCkgcmV0dXJuOwogICAgc3R5bGUoJy8q5bGV5byA5omA5pyJ5a2Q5b6u5Y2a77yI4oCc6L+Y5pyJP+adoeWvueWOn+W+ruWNmueahOi9rOWPkeKAne+8iSAqL1xuLldCX2ZlZWRfdG9nZXRoZXIgW25vZGUtdHlwZT0iZmVlZF9saXN0X3dyYXBGb3J3YXJkIl0geyBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50IH0gLldCX2ZlZWRfdG9nZXRoZXI+YVthY3Rpb24tdHlwZT0iZmVlZF9saXN0X3NlZUFsbCJdLCAuV0JfZmVlZF90b2dldGhlcj5hW2FjdGlvbi10eXBlPSJmZWVkX2xpc3RfZm9sZEZvcndhcmQiXSB7IGRpc3BsYXk6IG5vbmUgfScpOwogIH0pOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuY3VzdG9tX2ZvbnRfZmFtaWx5LndmJyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5jdXN0b21fZm9udF9mYW1pbHkuY2YnKTsKICBuKG51bGwsICd3ZWliby50b29sLmN1c3RvbV9mb250X2ZhbWlseScpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wud2VpYm9fbGFyZ2VfZm9udC5yYXRpbycpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wud2VpYm9fbGFyZ2VfZm9udCcpOwogIGQobnVsbCwgJ3dlaWJvLnRvb2wuYXZhdGFyX3NoYXBlLnNoYXBlJywgJ3NxdWFyZScpOyAvLyDkvb/nlKjmlrnlvaLlpLTlg48KICBkKCdzcXVhcmVBdmF0YXInLCAnd2VpYm8udG9vbC5hdmF0YXJfc2hhcGUnKTsgLy8g5L2/55So5pa55b2i5aS05YOPCiAgbihudWxsLCAnd2VpYm8udG9vbC5kYXJrX25hdl9iYXInKTsKICBuKG51bGwsICd3ZWliby50b29sLnJlb3JkZXJfbmF2X2JhcicpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wubmF2X2hpZGVfbmFtZScpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wud2lkdGhfd2VpYm8ud2lkdGgnKTsKICBuKG51bGwsICd3ZWliby50b29sLndpZHRoX3dlaWJvJyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC53ZWlib19vbmx5LndpZHRoJyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC53ZWlib19vbmx5LmtleScpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wud2VpYm9fb25seS5zd2l0Y2gnKTsKICBuKG51bGwsICd3ZWliby50b29sLndlaWJvX29ubHkuX2VuYWJsZWQnKTsKICBkKG51bGwsICd3ZWliby50b29sLndlaWJvX29ubHknLCB0cnVlKTsgLy8g5ZCv55So5p6B566A6ZiF6K+75qih5byPIC8vIOKaoO+4jyDlhbfkvZPmoLflvI/nqI3mnInkuI3lkIwKICBuKFsncmVhZGVyTW9kZUluZGV4JywgJ3JlYWRlck1vZGVQcm9maWxlJ10sIG51bGwpOyAvLyDimqDvuI8gWUFXRiDkuI3mj5DkvpvpgJrov4forr7nva7lvIDlhbPpmIXor7vop4blm77nmoTpgInpobkKICBkKCdza2luSUQnLCAnd2VpYm8udG9vbC5zZXRfc2tpbi5za2luJyk7IC8vIOimhuebluaIkeeahOmmlumhteaooeadv+iuvue9ruS4ugogIGQoJ292ZXJyaWRlTXlTa2luJywgJ3dlaWJvLnRvb2wuc2V0X3NraW4nKTsgLy8g6KaG55uW5oiR55qE6aaW6aG15qih5p2/6K6+572u5Li6IC8vIOKaoO+4jyBZQVdGIOS4jeaPkOS+m+WvuemmlumhteWSjOS4quS6uuS4u+mhteeahOWIhuW8gOiuvue9rgogIG4obnVsbCwgJ3dlaWJvLnRvb2wuZmVlZGxpc3RfbmF2X2ZpeCcpOwogIGQoJ3Vud3JhcFRleHQnLCAnd2VpYm8udG9vbC51bndyYXBUZXh0Jyk7IC8vIOW+ruWNmuS9nOiAheS4juato+aWh+mXtOS4jeaKmOihjAogIG4obnVsbCwgJ3dlaWJvLnRvb2wudW53cmFwQ29udGVudC50ZXh0Jyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC51bndyYXBDb250ZW50Jyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5pbWFnZV9zaXplLnJlcG9zdCcpOwogIGQoJ3NtYWxsSW1nTGF5b3V0JywgJ3dlaWJvLnRvb2wuaW1hZ2Vfc2l6ZScpOyAvLyDlkK/nlKjlsI/lm77niYjlvI/vvIjoh6rlrprkuYnlvq7ljZrphY3lm77lsLrlr7jvvIkgLy8g4pqg77iPIFlBV0Yg5LiN5o+Q5L6b5bC65a+45a6a5LmJ55qE5Yqf6IO977yM5Zug5Li66Ieq5a6a5LmJ5bC65a+45Y+v6IO95ZKM5YW25LuW5Yqf6IO95Yay56qBCiAgZChbJ2NvbXBhY3RGZWVkVG9vbGJhcicsICdub0hvbWVNYXJnaW5zJ10sICd3ZWliby50b29sLm5vX3dlaWJvX3NwYWNlJywgci5zb21lKTsgLy8g5L2/55So57Sn5YeR5Z6L77yIVjXmoLflvI/vvInlvq7ljZrlt6XlhbfmoI/vvIjmlLbol48gfCDovazlj5EgfCDor4TorrogfCDotZ7vvIksIOWcqOmmlumhteS9v+eUqOe0p+WHkeeJiOW8j++8iOWOu+mZpOWNoeeJh+mXtOepuumame+8iSAvLyDimqDvuI8gWUFXRiDmnKrmj5DkvpvkuKTkuKrlip/og73liIblvIDnmoTorr7nva4KICBkKFsnbW92ZVNyY1RvQnRtJywgJ3Vud3JhcFRleHQnLCAnY29tcGFjdEZlZWRUb29sYmFyJ10sICd3ZWliby50b29sLmZyb21faW5fYm90dG9tJywgci5zb21lKTsgLy8g5b6u5Y2a5p2l5rqQ56e75Yqo6Iez5b6u5Y2a5bqV6YOoCiAgbihudWxsLCAnd2VpYm8udG9vbC51c2VyX3BhZ2Vfbm9fYXV0aG9yJyk7CiAgZChudWxsLCAnd2VpYm8udG9vbC5ob3Zlcl9zaG93X2ZvbGQnLCB0cnVlKTsKICBkKG51bGwsICd3ZWliby50b29sLmZvbGRfdGV4dC50ZXh0JywgJ2F1dGhvci1yZWFzb24nKTsKICBkKG51bGwsICd3ZWliby50b29sLmZvbGRfdGV4dCcsIHRydWUpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dC5yZW9yZGVyLjEnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXQucmVvcmRlci4yJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0LnJlb3JkZXIuMycpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dC5yZW9yZGVyLjQnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXQucmVvcmRlci41Jyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0LnJlb3JkZXInKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXQuY210b3JkZXIuMScpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dC5jbXRvcmRlci4yJyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0LmNtdG9yZGVyLjMnKTsKICBuKG51bGwsICd3ZWliby5sYXlvdXQuY210b3JkZXIuNCcpOwogIG4obnVsbCwgJ3dlaWJvLmxheW91dC5jbXRvcmRlci41Jyk7CiAgbihudWxsLCAnd2VpYm8ubGF5b3V0LmNtdG9yZGVyJyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5oaWdobGlnaHRfbG93X3JlYWRpbmcnKQogIG4obnVsbCwgJ3dlaWJvLnRvb2wud2hpdGVsaXN0X2hpZ2hsaWdodC5jb2xvcicpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wud2hpdGVsaXN0X2hpZ2hsaWdodC50cmFuc3BhcmVuY3knKTsKICBuKG51bGwsICd3ZWliby50b29sLndoaXRlbGlzdF9oaWdobGlnaHQnKTsKICBuKG51bGwsICd3ZWliby50b29sLmNvbG9yX292ZXJyaWRlLmNvbG9yMScpOwogIGQoJ2JhY2tDb2xvcicsICd3ZWliby50b29sLmNvbG9yX292ZXJyaWRlLmNvbG9yMicsIHIuY29sb3IuaGV4KTsKICBuKG51bGwsICd3ZWliby50b29sLmNvbG9yX292ZXJyaWRlLmNvbG9yMycpOwogIGQoJ2JhY2tDb2xvcicsICd3ZWliby50b29sLmNvbG9yX292ZXJyaWRlLnRyYW5zcGFyZW5jeTEnLCByLmNvbG9yLnRyYW5zcGFyZW5jeSk7CiAgZCgnYmFja0NvbG9yJywgJ3dlaWJvLnRvb2wuY29sb3Jfb3ZlcnJpZGUudHJhbnNwYXJlbmN5MicsIHIuY29sb3IudHJhbnNwYXJlbmN5KTsKICBkKCdiYWNrQ29sb3InLCAnd2VpYm8udG9vbC5jb2xvcl9vdmVycmlkZS50cmFuc3BhcmVuY3kzJywgci5jb2xvci50cmFuc3BhcmVuY3kpOwogIG4obnVsbCwgJ3dlaWJvLnRvb2wuY29sb3Jfb3ZlcnJpZGUnKTsgLy8g6K6+572u5oiR55qE6aaW6aG15Liq5Lq65Li76aG16YCP5piO6IOM5pmv6ImyICAvLyDimqDvuI8gWUFXRiDkuI3mj5DkvpvpppbpobXlkozkuKrkurrkuLvpobXliIblvIDnmoTorr7nva4KICBuKG51bGwsICd3ZWliby50b29sLm90aGVyX2JhY2tncm91bmRfY29sb3IuY29sb3InKTsKICBuKG51bGwsICd3ZWliby50b29sLm90aGVyX2JhY2tncm91bmRfY29sb3IudHJhbnNwYXJlbmN5Jyk7CiAgbihudWxsLCAnd2VpYm8udG9vbC5vdGhlcl9iYWNrZ3JvdW5kX2NvbG9yJyk7CiAgbigndXNlQ3VzdG9tU3R5bGVzJywgbnVsbCk7IC8vIOiHquWumuS5ieagt+W8j++8iENTU++8ie+8muWPr+eUqOS6juWxj+iUveaooeWdl+OAgeaUuemAoOeJiOmdou+8jCAvLyDimqDvuI8gWUFXRiDkuI3mj5Dkvpvoh6rlrprkuYnmoLflvI/nmoTlvIDlhbMKICBkKCdjdXN0b21TdHlsZXMnLCAnd2VpYm8udG9vbC51c2Vyc3R5bGUnLCBmdW5jdGlvbiAoY3NzKSB7IGlmIChjc3NUZXh0ICsgY3NzKSByZXR1cm4gY3NzVGV4dCArICdcbi8qIOS7peS4i+aYr+iHquWumuS5ieagt+W8jyAqL1xuJyArIGNzczsgfSk7IC8vIOiHquWumuS5ieagt+W8j++8iENTU++8ie+8muWPr+eUqOS6juWxj+iUveaooeWdl+OAgeaUuemAoOeJiOmdou+8jAogIG4obnVsbCwgJ3NjcmlwdC5vdGhlci5hdXRvX2NvbXBsZXRlJyk7CiAgbigndXBkYXRlTm90aWZ5JywgbnVsbCk7IC8vIOabtOaWsOWQjummluasoeS9v+eUqOaXtuaYvuekuuaWsOWKn+iDvSAvLyDimqDvuI8gWUFXRiDmj5Dkvpvkuobor6XpgInpobnvvIzkvYbml6Dms5XpgJrov4flr7zlhaXohJrmnKzorr7nva7or6Xlip/og70KICByZXR1cm4gdGFibGU7Cn07Cgp3YnAuc2hvd3Vuc3VwcG9ydCA9IGZ1bmN0aW9uICgpIHsKICB1cGRhdGVyLnNob3dmdW5jc2V0KAogICAgdXBkYXRlci5zZWxlY3Rvci5rZXlsaXN0KHdicC51bnN1cHBvcnRlZCksCiAgICB1dGlsLnN0ci5maWxsKCd7e3dicEltcG9ydFN1Y2Nlc3NUaXRsZX19JyksCiAgICBmdW5jdGlvbiAoY291bnQpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAnaGVhZGVyJzogdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC53YnBJbXBvcnRTdWNjZXNzSGVhZGVyKSksCiAgICAgICAgJ2JvZHknOiB1dGlsLmRvbS5jcmVhdGUodXRpbC5zdHIuZmlsbChodG1sLndicEltcG9ydFN1Y2Nlc3NCb2R5LCB7ICdjb3VudCc6IGNvdW50IH0pKSwKICAgICAgfTsKICAgIH0KICApOwp9OwoKd2JwLmltcG9ydGVyID0gZnVuY3Rpb24gKCkgewogIGlmICghd2JwLmNvbmZpZykgcmV0dXJuOwogIGlmIChmaWx0ZXIuaXRlbXMuc2NyaXB0LmltcG9ydGV4cG9ydC5pbXBvcnR3YnApIHJldHVybjsKICBmaWx0ZXIuaXRlbXMuc2NyaXB0LmltcG9ydGV4cG9ydC5pbXBvcnR3YnAgPSBmaWx0ZXIuaXRlbSh7CiAgICAnZ3JvdXAnOiAnaW1wb3J0ZXhwb3J0JywKICAgICd2ZXJzaW9uJzogMCwKICAgICdzaG93JzogZnVuY3Rpb24gKCkgewogICAgICB2YXIgZG9tID0gdXRpbC5kb20uY3JlYXRlKGh0bWwuY29uZmlnSW1wb3J0V2JwKTsKICAgICAgdmFyIGEgPSBkb20ucXVlcnlTZWxlY3RvcignYScpOwogICAgICBhLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBjb25maWdUZXh0ID0gSlNPTi5zdHJpbmdpZnkod2JwLmNvbnZlcnRlcigpKTsKICAgICAgICBmaWx0ZXIuaXRlbXMuc2NyaXB0LmltcG9ydGV4cG9ydC5pbXBvcnRleHBvcnRbJ2ltcG9ydCddKGNvbmZpZ1RleHQsIGZ1bmN0aW9uICh2ZXJzaW9uKSB7CiAgICAgICAgICBpZiAodmVyc2lvbiAhPT0gMCkgcmV0dXJuOwogICAgICAgICAgdXRpbC5mdW5jLmNhbGwod2JwLnNob3d1bnN1cHBvcnQpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIGRvbTsKICAgIH0sCiAgfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zY3JpcHQpOwp9OwoKLy8g5qOA5p+l5piv5ZCm5a6J6KOF5LqG4oCc55y85LiN6KeB5b+D5LiN54Om4oCd77yId2Jw77yJCihmdW5jdGlvbiAoKSB7CiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignd2JwUG9zdCcsIGZ1bmN0aW9uIGdldERhdGEoZXZlbnQpIHsKICAgIHdicC5jb25maWcgPSBKU09OLnBhcnNlKGV2ZW50LmRldGFpbC5zbGljZShldmVudC5kZXRhaWwuaW5kZXhPZignPScpICsgMSkpOwogICAgd2JwLmltcG9ydGVyKCk7CiAgfSk7Cn0oKSk7CgovLyDmm7TmlrAKdmFyIHVwZGF0ZXIgPSB7fTsKLy8g5b2T5YmN54mI5pys5Y+3CnVwZGF0ZXIuY3VycmVudHZlciA9IChmdW5jdGlvbiAoKSB7CiAgdmFyIHZlcnNpb24gPSAoKEdNX2luZm8gfHwge30pLnNjcmlwdCB8fCB7fSkudmVyc2lvbiB8fCAnJzsKICB2YXIgbSA9IHZlcnNpb24ubWF0Y2goL15cZCtcLlxkK1wuKFxkKykkLyk7CiAgaWYgKCFtIHx8ICFtWzFdIHx8ICFwYXJzZUludChtWzFdLCAxMCkpIHJldHVybiBudWxsOwogIHJldHVybiAodXRpbC5pbmZvLnZlcnNpb24gPSBwYXJzZUludChtWzFdLCAxMCkpOwp9KCkpOwoKLy8g6Z2i5ZCR5paw55So5oi355qE5o+Q56S6CnVwZGF0ZXIudXNlcmd1aWRlID0gZnVuY3Rpb24gKCkgewogIHV0aWwudWkuYWxlcnQoJ3lhd2YtdXNlci1ndWlkZScsIHsKICAgICd0aXRsZSc6IHV0aWwuc3RyLmZpbGwoJ3t7aW5zdGFsbFN1Y2Nlc3NUaXRsZX19JyksCiAgICAndGV4dCc6IHV0aWwuc3RyLmZpbGwoJ3t7aW5zdGFsbFN1Y2Nlc3NUZXh0fX0nKSwKICB9KTsKfTsKCnVwZGF0ZXIuc2VsZWN0b3IgPSB7fTsKdXBkYXRlci5zZWxlY3Rvci52ZXJzaW9uID0gZnVuY3Rpb24gKHNvdXJjZVZlcnNpb24pIHsKICByZXR1cm4gZnVuY3Rpb24gKGl0ZW0pIHsKICAgIGlmICghaXRlbS52ZXJzaW9uKSByZXR1cm4gZmFsc2U7CiAgICBpZiAoaXRlbS52ZXJzaW9uIDw9IHNvdXJjZVZlcnNpb24pIHJldHVybiBmYWxzZTsKICAgIGlmIChpdGVtLnZlcnNpb24gPiB1cGRhdGVyLmN1cnJlbnR2ZXIpIHJldHVybiBmYWxzZTsKICAgIGlmICghaXRlbS5zaG93KSByZXR1cm4gZmFsc2U7CiAgICByZXR1cm4gdHJ1ZTsKICB9Owp9Owp1cGRhdGVyLnNlbGVjdG9yLmtleWxpc3QgPSBmdW5jdGlvbiAoa2V5cykgewogIHJldHVybiBmdW5jdGlvbiAoaXRlbSkgewogICAgaWYgKCFpdGVtLmtleSkgcmV0dXJuIGZhbHNlOwogICAgaWYgKGl0ZW0uaXNyZWYpIHJldHVybiBmYWxzZTsKICAgIHJldHVybiBrZXlzLmluZGV4T2YoaXRlbS5rZXkpICE9PSAtMTsKICB9Owp9OwoKLy8g5pi+56S65paw5Yqf6IO95o+Q56S6CnVwZGF0ZXIuc2hvd2Z1bmNzZXQgPSB1dGlsLmZ1bmMuY2F0Y2hlZChmdW5jdGlvbiAoaXRlbVNlbGVjdG9yLCB0aXRsZSwgZ2VuQ29udGVudCkgewogIC8vIOWIl+WHuuWKn+iDvQogIHZhciBuZXdGaWx0ZXJzID0gZmlsdGVyLmNvbGxlY3Rpb24uaXRlbS5saXN0KGl0ZW1TZWxlY3Rvcik7CiAgdmFyIGNvdW50ID0gbmV3RmlsdGVycy5jb3VudCgpOwogIGlmIChjb3VudCA9PT0gMCkgcmV0dXJuOyAvLyDlpoLmnpzmsqHmnInpgInlh7rku7vkvZXlip/og73vvIzliJnkuI3mmL7npLrlr7nor53moYYKICAvLyDmmL7npLrlr7nor53moYYKICB2YXIgZGlhbG9nID0gdXRpbC51aS5kaWFsb2coJ3lhd2YtZnVuY3NldCcsIHRpdGxlLCBmdW5jdGlvbiAoaW5uZXIpIHsKICAgIHZhciBjb250ZW50ID0gZ2VuQ29udGVudChjb3VudCk7CiAgICBpZiAoY29udGVudC5oZWFkZXIpIGlubmVyLmFwcGVuZENoaWxkKGNvbnRlbnQuaGVhZGVyKTsKICAgIG5ld0ZpbHRlcnMuc2hvdyhjb250ZW50LmJvZHkpOwogICAgaWYgKGNvbnRlbnQudG9wKSBjb250ZW50LmJvZHkuaW5zZXJ0QmVmb3JlKGNvbnRlbnQudG9wLCBjb250ZW50LmJvZHkuZmlyc3RDaGlsZCk7CiAgICBpZiAoY29udGVudC5ib3R0b20pIGNvbnRlbnQuYm9keS5hcHBlbmRDaGlsZChjb250ZW50LmJvdHRvbSk7CiAgICBpbm5lci5hcHBlbmRDaGlsZChjb250ZW50LmJvZHkpOwogICAgaWYgKGNvbnRlbnQuZm9vdGVyKSBpbm5lci5hcHBlbmRDaGlsZChjb250ZW50LmZvb3Rlcik7CiAgfSk7CiAgZGlhbG9nLnNob3coKTsKICByZXR1cm4gZGlhbG9nOwp9KTsKCi8vIOaYvuekuuaWsOWKn+iDveaPkOekuuWvueivneahhgp1cGRhdGVyLndoYXRzbmV3ID0gZnVuY3Rpb24gKHNvdXJjZVZlcnNpb24pIHsKICByZXR1cm4gdXBkYXRlci5zaG93ZnVuY3NldCgKICAgIHVwZGF0ZXIuc2VsZWN0b3IudmVyc2lvbihzb3VyY2VWZXJzaW9uKSwKICAgIHV0aWwuc3RyLmZpbGwoJ3t7dXBkYXRlU3VjY2Vzc1RpdGxlfX0nKSwKICAgIGZ1bmN0aW9uIChjb3VudCkgewogICAgICB2YXIgZm9vdGVyID0gdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC53aGF0c05ld0Zvb3RlcikpOwogICAgICBmaWx0ZXIuaXRlbXMuc2NyaXB0LnVwZGF0ZS51cGRhdGUuX3Nob3coZm9vdGVyKTsKICAgICAgcmV0dXJuIHsKICAgICAgICAnaGVhZGVyJzogdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC53aGF0c05ld0hlYWRlcikpLAogICAgICAgICdib2R5JzogdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC53aGF0c05ld0JvZHksIHsnY291bnQnOiBjb3VudH0pKSwKICAgICAgICAnYm90dG9tJzogdXRpbC5kb20uY3JlYXRlKHV0aWwuc3RyLmZpbGwoaHRtbC53aGF0c05ld0JvdHRvbSkpLAogICAgICAgICdmb290ZXInOiBmb290ZXIsCiAgICAgIH07CiAgICB9CiAgKTsKfTsKCi8vIOabtOaWsOaXtuaYvuekuuaPkOekuuS/oeaBrwpmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCdzY3JpcHQnLCAndXBkYXRlJywgJ3t7dXBkYXRlSW5mb1RpdGxlfX0nKTsKZmlsdGVyLml0ZW1zLnNjcmlwdC51cGRhdGUudXBkYXRlID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICd1cGRhdGUnLAogICd2ZXJzaW9uJzogOTAsCiAgJ3R5cGUnOiAnYm9vbGVhbicsCiAgJ3RleHQnOiAne3t1cGRhdGVJbmZvRGVzY3JpcHRpb259fScsCiAgJ2dldGNvbmYnOiBmdW5jdGlvbiAoKSB7IHJldHVybiAhIUdNX2dldFZhbHVlKCd3aGF0c25ldycsIHRydWUpOyB9LAogICdwdXRjb25mJzogZnVuY3Rpb24gKHZhbHVlKSB7IEdNX3NldFZhbHVlKCd3aGF0c25ldycsICEhdmFsdWUpOyByZXR1cm4gISF2YWx1ZTsgfSwKICAnaW5pdCc6IGZ1bmN0aW9uICgpIHsgdXRpbC5jb25maWcucmVnKCd3ZWliby5feWF3Zl92ZXJzaW9uJyk7IH0sCiAgJ2Fpbml0JzogZnVuY3Rpb24gKCkgewogICAgaWYgKHV0aWwucGFnZS5zZWFyY2gpIHJldHVybjsKICAgIHZhciBzb3VyY2VWZXJzaW9uID0gdXRpbC5jb25maWcuZ2V0KCd3ZWliby5feWF3Zl92ZXJzaW9uJywgbnVsbCwgTnVtYmVyKTsKICAgIGlmICghc291cmNlVmVyc2lvbikgewogICAgICB1dGlsLmZ1bmMuY2FsbCh1cGRhdGVyLnVzZXJndWlkZSk7CiAgICAgIHV0aWwuY29uZmlnLnB1dCgnd2VpYm8uX3lhd2ZfdmVyc2lvbicsIHVwZGF0ZXIuY3VycmVudHZlcik7CiAgICB9IGVsc2UgaWYgKHNvdXJjZVZlcnNpb24gPCB1cGRhdGVyLmN1cnJlbnR2ZXIpIHV0aWwuZnVuYy5jYWxsKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGRpYWxvZyA9IHVwZGF0ZXIud2hhdHNuZXcoc291cmNlVmVyc2lvbik7CiAgICAgIGRpYWxvZy5vbmJlZm9yZWhpZGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdXRpbC5jb25maWcucHV0KCd3ZWliby5feWF3Zl92ZXJzaW9uJywgdXBkYXRlci5jdXJyZW50dmVyKTsKICAgICAgfTsKICAgIH0pOyBlbHNlIGlmIChzb3VyY2VWZXJzaW9uID4gdXBkYXRlci5jdXJyZW50dmVyKSB7CiAgICAgIHV0aWwuY29uZmlnLnB1dCgnd2VpYm8uX3lhd2ZfdmVyc2lvbicsIHVwZGF0ZXIuY3VycmVudHZlcik7CiAgICB9CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zY3JpcHQpOwoKLy8g6LCD6K+VCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ3NjcmlwdCcsICdzY3JpcHQnLCAne3tzY3JpcHRPdGhlclRpdGxlfX0nKTsKCi8vIOWcqOaQnOe0oumhtemdouWQr+eUqApmaWx0ZXIuaXRlbXMuc2NyaXB0LnNjcmlwdC5zZWFyY2hfZW5hYmxlID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzY3JpcHQnLAogICd2ZXJzaW9uJzogMCwKICAndHlwZSc6ICdib29sZWFuJywKICAndGV4dCc6ICd7e3NlYXJjaEVuYWJsZX19JywKICAnZ2V0Y29uZic6IGZ1bmN0aW9uICgpIHsgcmV0dXJuICEhR01fZ2V0VmFsdWUoJ3NlYXJjaF9lbmFibGUnLCBmYWxzZSk7IH0sCiAgJ3B1dGNvbmYnOiBmdW5jdGlvbiAodmFsdWUpIHsgR01fc2V0VmFsdWUoJ3NlYXJjaF9lbmFibGUnLCAhIXZhbHVlKTsgcmV0dXJuICEhdmFsdWU7IH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc2NyaXB0KTsKCi8vIOiHquWKqOihpeWFqOWKn+iDvQpmaWx0ZXIuaXRlbXMuc2NyaXB0LnNjcmlwdC5zZWFyY2hfZW5hYmxlID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdzY3JpcHQnLAogICd2ZXJzaW9uJzogMjcyLAogICd0eXBlJzogJ2Jvb2xlYW4nLAogICdkZWZhdWx0JzogdHJ1ZSwKICAndGV4dCc6ICd7e2F1dG9Db21wbGV0ZUNvbmZpZ319JywKICAncmVmJzogeyAnaSc6IHsgJ3R5cGUnOiAnc2ljb24nLCAnaWNvbic6ICdhc2snLCAndGV4dCc6ICd7e2F1dG9Db21wbGV0ZUNvbmZpZ0Rlc2N9fScgfSB9LAogICdrZXknOiAnc2NyaXB0Lm90aGVyLmF1dG9fY29tcGxldGUnLAogICdhaW5pdCc6IGZ1bmN0aW9uICgpIHsKICAgIHV0aWwuY29tcGxldGUuZW5hYmxlKCk7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zY3JpcHQpOwoKLy8g6LCD6K+VCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ3NjcmlwdCcsICdkZWJ1ZycsICd7e3NjcmlwdERlYnVnVGl0bGV9fScpOwoKaWYgKCF1dGlsLnNjcmlwdC5pc21pbikgZmlsdGVyLml0ZW1zLnNjcmlwdC5kZWJ1Zy5kZWJ1ZyA9IGZpbHRlci5pdGVtKHsKICAnZ3JvdXAnOiAnZGVidWcnLAogICd2ZXJzaW9uJzogMCwKICAndHlwZSc6ICdib29sZWFuJywKICAndGV4dCc6ICd7e3NjcmlwdERlYnVnfX0nLAogICdyZWYnOiB7ICdpJzogeyAndHlwZSc6ICdzaWNvbicsICdpY29uJzogJ3dhcm4nLCAndGV4dCc6ICd7e3NjcmlwdERlYnVnRGVzY319JyB9IH0sCiAgJ2dldGNvbmYnOiBmdW5jdGlvbiAoKSB7IHJldHVybiAhIUdNX2dldFZhbHVlKCdkZWJ1ZycsIGZhbHNlKTsgfSwKICAncHV0Y29uZic6IGZ1bmN0aW9uICh2YWx1ZSkgeyBHTV9zZXRWYWx1ZSgnZGVidWcnLCAhIXZhbHVlKTsgcmV0dXJuICEhdmFsdWU7IH0sCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc2NyaXB0KTsKCi8vIOWFs+S6jgpmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCdzY3JpcHQnLCAnYWJvdXQnLCAne3tzY3JpcHRBYm91dFRpdGxlfX0nKTsKCmZpbHRlci5pdGVtcy5zY3JpcHQuYWJvdXQucmVtYXJrID0gZmlsdGVyLml0ZW0oewogICdncm91cCc6ICdhYm91dCcsCiAgJ3R5cGUnOiAncmVtYXJrJywKICAndGV4dCc6ICcnLAogICdzaG93bic6IGZ1bmN0aW9uIChkb20pIHsKICAgIGRvbS5pbm5lckhUTUwgPSB1dGlsLnN0ci5maWxsKGh0bWwuc2NyaXB0SWNvbiArIHRleHQuc2NyaXB0QWJvdXQsIHsKICAgICAgJ2ljb24nOiB1dGlsLnNjcmlwdC5pY29uLAogICAgICAndmVyc2lvbic6ICgoKEdNX2luZm8gfHwge30pLnNjcmlwdCB8fCB7fSkudmVyc2lvbiB8fCAnPycpICsKICAgICAgICAodXRpbC5zY3JpcHQuaXNtaW4gPyAnTScgOiAnJyksCiAgICB9KTsKICAgIGRvbS5zdHlsZS5taW5IZWlnaHQgPSAnNzJweCc7CiAgfSwKfSkuYWRkdG8oZmlsdGVyLmdyb3Vwcy5zY3JpcHQpOwoKLy8g5omp5bGVCmZpbHRlci5wcmVkZWYuc3VidGl0bGUoJ3NjcmlwdCcsICdleHRlbnNpb24nLCAne3tzY3JpcHRFeHRlbnNpb25UaXRsZX19Jyk7CgpmaWx0ZXIuaXRlbXMuc2NyaXB0LmV4dGVuc2lvbi5lbmFibGUgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2V4dGVuc2lvbicsCiAgJ3ZlcnNpb24nOiA1NywKICAndHlwZSc6ICdib29sZWFuJywKICAndGV4dCc6ICd7e3NjcmlwdEV4dGVuc2lvbkVuYWJsZX19JywKICAnZ2V0Y29uZic6IGZ1bmN0aW9uICgpIHsgcmV0dXJuICEhR01fZ2V0VmFsdWUoJ2V4dGVudCcsIGZhbHNlKTsgfSwKICAncHV0Y29uZic6IGZ1bmN0aW9uICh2YWx1ZSkgeyBHTV9zZXRWYWx1ZSgnZXh0ZW50JywgISF2YWx1ZSk7IHJldHVybiAhIXZhbHVlOyB9LAp9KS5hZGR0byhmaWx0ZXIuZ3JvdXBzLnNjcmlwdCk7CgpmaWx0ZXIuaXRlbXMuc2NyaXB0LmV4dGVuc2lvbi5yZW1hcmsgPSBmaWx0ZXIuaXRlbSh7CiAgJ2dyb3VwJzogJ2V4dGVuc2lvbicsCiAgJ3R5cGUnOiAncmVtYXJrJywKICAndGV4dCc6ICd7e3NjcmlwdEV4dGVuc2lvbldhcm5pbmd9fScsCn0pLmFkZHRvKGZpbHRlci5ncm91cHMuc2NyaXB0KTsKCi8vIOiuoumYhQp2YXIgc3Vic2NyaWJlID0gKGZ1bmN0aW9uICgpIHsKICB2YXIgc3Vic2NyaWJlID0gbnVsbDsKCiAgdmFyIGFkZFRpdGxlID0gZnVuY3Rpb24gKCkgewogICAgaWYgKHN1YnNjcmliZSkgcmV0dXJuOwogICAgc3Vic2NyaWJlID0gZmlsdGVyLnByZWRlZi5ncm91cCgnc3Vic2NyaWJlJyk7CiAgICBmaWx0ZXIucHJlZGVmLnN1YnRpdGxlKCdzdWJzY3JpYmUnLCAnc2xpc3QnLCAne3tzdWJzY3JpYmVMaXN0VGl0bGV9fScpOwogIH07CgogIHZhciBhZGRTdWJzY3JpYmUgPSBmdW5jdGlvbiAocnVsZXMpIHsKICAgIGFkZFRpdGxlKCk7CiAgICBmaWx0ZXIuaXRlbXMuc3Vic2NyaWJlW3J1bGVzLmlkXSA9IGZpbHRlci5pdGVtKHsKICAgICAgJ2dyb3VwJzogJ3NsaXN0JywKICAgICAgJ3ZlcnNpb24nOiAwLAogICAgICAndHlwZSc6ICdzdWJzY3JpYmUnLAogICAgICAna2V5JzogJ3N1YnNjcmliZS4nICsgcnVsZXMuaWQsCiAgICAgICd0ZXh0cyc6IHJ1bGVzLAogICAgICAncmVmJzogeyAncnVsZXMnOiB7ICd0eXBlJzogJ3N0cmluZycsICdkZWZhdWx0JzogJ251bGwnIH0gfSwKICAgICAgJ2RlZmF1bHQnOiB0cnVlLAogICAgICAnc2hvd24nOiBmdW5jdGlvbiAoZG9tKSB7CiAgICAgICAgZG9tLnF1ZXJ5U2VsZWN0b3IoJy55YXdmLXN1YnNjcmliZURldGFpbCcpLmhyZWYgPSBydWxlcy5ob21lcGFnZTsKICAgICAgfSwKICAgICAgJ2luaXQnOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKCF0aGlzLmNvbmYpIHJldHVybjsKICAgICAgICB2YXIgbGlzdCA9IHJ1bGVzLnJ1bGVzOwogICAgICAgICAgT2JqZWN0LmtleXMobGlzdCkuZm9yRWFjaChmdW5jdGlvbiAoaykgewogICAgICAgICAgICBmaWx0ZXIuZXh0ZW50LmFjdCgnd2VpYm8uZmlsdGVycy4nICsgaywgbGlzdFtrXSk7CiAgICAgICAgICB9KTsKICAgICAgfSwKICAgIH0pLmFkZHRvKGZpbHRlci5ncm91cHMuc3Vic2NyaWJlKTsKICB9OwoKICB1dGlsLmZ1bmMub3V0cHV0KCdfX1lBV0ZfV2VpYm9TdWJzY3JpYmVSdWxlTGlzdF9fJywgZnVuY3Rpb24gKGFyZ3MpIHsKICAgIGFkZFN1YnNjcmliZShhcmdzKTsKICB9KTsKCiAgcmV0dXJuIHN1YnNjcmliZTsKfSgpKTsKCi8vIOWPr+aJqeWxleWMuuWfnwp2YXIgZXh0ZW5zaW9uID0gKGZ1bmN0aW9uICgpIHsKICBpZiAoIUdNX2dldFZhbHVlKCdleHRlbnQnKSkgcmV0dXJuIG51bGw7CgogIC8vIOaJqeWxleWIhue7hAogIHZhciBleHRlbnNpb25GaWx0ZXJHcm91cCA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBmZyA9IGZpbHRlci5wcmVkZWYuZ3JvdXAoJ2V4dGVuc2lvbicpOwogICAgZXh0ZW5zaW9uRmlsdGVyR3JvdXAgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBmZzsgfTsKICAgIHJldHVybiBleHRlbnNpb25GaWx0ZXJHcm91cCgpOwogIH07CgogIHZhciB5YXdmID0gKGZ1bmN0aW9uICgpIHsKICAgIC8vIOaatOmcsue7meWklumDqOeahOWHveaVsAogICAgdmFyIHlhd2YgPSB7fTsKICAgIHZhciBkZWZpbmVGdW5jdGlvbiA9IGZ1bmN0aW9uIChuYW1lLCBwYXJhbXMsIGZ1bmMpIHsKICAgICAgeWF3ZltuYW1lXSA9IHV0aWwuZnVuYy5jYXRjaGVkKGZ1bmN0aW9uIChhcmcpIHsKICAgICAgICBmdW5jLmFwcGx5KHdpbmRvdywgcGFyYW1zLm1hcChmdW5jdGlvbiAoa2V5KSB7IHJldHVybiBhcmdba2V5XTsgfSkpOwogICAgICB9KTsKICAgIH07CiAgICAvLyDmo4Dmn6UgWUFXRiDliqDovb3miJDlip8KICAgIGRlZmluZUZ1bmN0aW9uKCdwaW5nJywgWydjYWxsYmFjayddLCBmdW5jdGlvbiAoY2FsbGJhY2spIHsKICAgICAgdXRpbC5mdW5jLmNhdGNoZWQoY2FsbGJhY2spKCk7CiAgICB9KTsKICAgIC8vIOa3u+WKoOS4gOS4qui/h+a7pOWZqOmhuQogICAgZGVmaW5lRnVuY3Rpb24oJ2ZpbHRlcicsIFsnZGV0YWlscyddLCBmdW5jdGlvbiAoZGV0YWlscykgewogICAgICBpZiAoZGV0YWlscy5rZXkpIGRldGFpbHMua2V5ID0gJ3dlaWJvLmV4dGVudC4nICsgZGV0YWlscy5rZXk7CiAgICAgIGlmIChkZXRhaWxzLmdyb3VwKSBkZXRhaWxzLmdyb3VwID0gJ2V4dGVudC4nICsgZGV0YWlscy5ncm91cDsKICAgICAgZGV0YWlscy5leHRlcm4gPSB0cnVlOwogICAgICBmaWx0ZXIuaXRlbShkZXRhaWxzKS5hZGR0byhleHRlbnNpb25GaWx0ZXJHcm91cCgpKTsKICAgIH0pOwogICAgLy8g5ZCR5bey5pyJ55qE5YaF5a6544CB5biQ5Y+3562J562J6L+H5ruk5Zmo5Lit5re75Yqg6KeE5YiZCiAgICBkZWZpbmVGdW5jdGlvbignZXh0ZW50JywgWyduYW1lJywgJ3R5cGUnLCAnd29yZHMnXSwgZnVuY3Rpb24gKG5hbWUsIHR5cGUsIHdvcmRzKSB7CiAgICAgIHZhciBrZXkgPSAnd2VpYm8uZmlsdGVycy4nICsgbmFtZSArICcuJyArIHR5cGU7CiAgICAgIGZpbHRlci5leHRlbnQuYWN0KGtleSwgd29yZHMpOwogICAgfSk7CiAgICAvLyDlnKjov4fmu6Tmr4/mnaHlvq7ljZrkuYvliY0v5ZCO6LCD55So55qE5Zue6LCD5Ye95pWwCiAgICBkZWZpbmVGdW5jdGlvbignYmVmb3JlJywgWydjYWxsYmFjayddLCBmdW5jdGlvbiAoY2FsbGJhY2spIHsgb2JzZXJ2ZXIud2VpYm8uYmVmb3JlKGNhbGxiYWNrKTsgfSk7CiAgICBkZWZpbmVGdW5jdGlvbignYWZ0ZXInLCBbJ2NhbGxiYWNrJ10sIGZ1bmN0aW9uIChjYWxsYmFjaykgeyBvYnNlcnZlci53ZWliby5hZnRlcihjYWxsYmFjayk7IH0pOwogICAgLy8g5a+56K+d5qGGCiAgICBkZWZpbmVGdW5jdGlvbignYWxlcnQnLCBbJ2lkJywgJ2RldGFpbHMnXSwgZnVuY3Rpb24gKGlkLCBkZXRhaWxzKSB7IHV0aWwudWkuYWxlcnQoaWQsIGRldGFpbHMpOyB9KTsKICAgIGRlZmluZUZ1bmN0aW9uKCdjb25maXJtJywgWydpZCcsICdkZXRhaWxzJ10sIGZ1bmN0aW9uIChpZCwgZGV0YWlscykgeyB1dGlsLnVpLmNvbmZpcm0oaWQsIGRldGFpbHMpOyB9KTsKICAgIGRlZmluZUZ1bmN0aW9uKCdkaWFsb2cnLCBbJ2lkJywgJ2RldGFpbHMnXSwgZnVuY3Rpb24gKGlkLCBkZXRhaWxzKSB7CiAgICAgIHZhciBkaWFsb2cgPSB1dGlsLnVpLmRpYWxvZyhpZCwgZGV0YWlscy50aXRsZSwgZGV0YWlscy5maWxsKTsKICAgICAgZGlhbG9nLnNob3coKTsKICAgICAgZGV0YWlscy5zaG93bihkaWFsb2cpOwogICAgfSk7CiAgICByZXR1cm4geWF3ZjsKICB9KCkpOwoKICB1dGlsLmZ1bmMub3V0cHV0KCckX1lBV0ZfJCcsIGZ1bmN0aW9uIChhcmdzKSB7CiAgICBpZiAoeWF3ZlthcmdzLm1ldGhvZF0pIHV0aWwuZnVuYy5jYWxsKGZ1bmN0aW9uICgpIHsgeWF3ZlthcmdzLm1ldGhvZF0oYXJncy5wYXJhbXMpOyB9KTsKICB9KTsKCiAgcmV0dXJuIHlhd2Y7Cn0oKSk7Cgp2YXIgbWFpblN0eWxlID0gR01fYWRkU3R5bGUodXRpbC5zdHIuZmlsbCgodXRpbC5zdHIuY210KGZ1bmN0aW9uICgpIHsgLyohQ1NTCiAgLmduX2ZpbHRlciAuV19maWNvbiB7IGZvbnQtZmFtaWx5OiAieWF3Zi1pY29uZm9udCIgIWltcG9ydGFudDsgfQogIHt7eWF3Zi1pY29uLWZvbnR9fQogIC8vIOe8qeWwj+aQnOe0ouahhuS4uua8j+aWl+aPkOS+m+epuumXtAogIC5XQl9nbG9iYWxfbmF2IC5nbl9zZWFyY2hfdjIgeyB3aWR0aDogMTc4cHggIWltcG9ydGFudDsgfQogIC5XQl9nbG9iYWxfbmF2IC5nbl9zZWFyY2hfdjIgLnBsYWNlaG9sZGVyLCAuV0JfZ2xvYmFsX25hdiAuZ25fc2VhcmNoX3YyIC5XX2lucHV0IHsgd2lkdGg6IDEzNXB4ICFpbXBvcnRhbnQ7IH0KICAuZ25fdG9wbWVudWxpc3Rfc2VhcmNoIHsgd2lkdGg6IDE4MHB4ICFpbXBvcnRhbnQ7IH0KICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjEyOTVweCkgewogICAgLldCX2dsb2JhbF9uYXYgLmduX3NlYXJjaF92MiB7IHdpZHRoOiA0MzVweCAhaW1wb3J0YW50OyB9CiAgICAuV0JfZ2xvYmFsX25hdiAuZ25fc2VhcmNoX3YyIC5wbGFjZWhvbGRlciwgLldCX2dsb2JhbF9uYXYgLmduX3NlYXJjaF92MiAuV19pbnB1dCB7IHdpZHRoOiAzOTJweCAhaW1wb3J0YW50OyB9CiAgICAuZ25fdG9wbWVudWxpc3Rfc2VhcmNoIHsgd2lkdGg6IDQzN3B4ICFpbXBvcnRhbnQ7IH0KICB9CiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDoxMDA2cHgpIHsKICAgIC5XQl9nbG9iYWxfbmF2IC5nbl9zZWFyY2hfdjIgeyB3aWR0aDogMTE1cHggIWltcG9ydGFudDsgfQogICAgLldCX2dsb2JhbF9uYXYgLmduX3NlYXJjaF92MiAucGxhY2Vob2xkZXIsIC5XQl9nbG9iYWxfbmF2IC5nbl9zZWFyY2hfdjIgLldfaW5wdXQgeyB3aWR0aDogNzJweCAhaW1wb3J0YW50OyB9CiAgICAuZ25fdG9wbWVudWxpc3Rfc2VhcmNoIHsgd2lkdGg6IDExN3B4ICFpbXBvcnRhbnQ7IH0KICB9CiAgLmduX3RvcG1lbnVsaXN0X3NlYXJjaCB7IG1pbi13aWR0aDogMjAwcHggIWltcG9ydGFudDsgfQogIC8vIOmHjee9ruWktOadoeaWh+eroOmhtemdoumhtuagj+agt+W8jwogIC5XQl9nbG9iYWxfbmF2IC5XX2ZpY29uLldfZmljb24sIC5XQl9nbG9iYWxfbmF2IC5XX2ZpY29uLldfZmljb246aG92ZXIgeyBiYWNrZ3JvdW5kLWltYWdlOiBub25lICFpbXBvcnRhbnQ7IGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7IHRleHQtaW5kZW50OiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH0KICAuV0JfZ2xvYmFsX25hdiAuZmljb25fc2VuZC5maWNvbl9zZW5kIHsgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgI2ZhN2QzYywgI2Y1NjAxMCkgIWltcG9ydGFudDsgfQogIC5XQl9nbG9iYWxfbmF2IC5maWNvbl9zZW5kLmZpY29uX3NlbmQ6aG92ZXIgeyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZjQ3MTJjLCNmMTU5MDkpICFpbXBvcnRhbnQ7IH0KICAvLyDorr7nva7moYbnm7jlhbPmoLflvI8KICAjeWF3Zi1jb25maWcgW25vZGUtdHlwZT0iaW5uZXIiXSB7IHBhZGRpbmc6IDA7IHdpZHRoOiA4MDBweDsgaGVpZ2h0OiA0ODBweDsgcG9zaXRpb246IHJlbGF0aXZlOyB9CiAgI3lhd2YtY29uZmlnIC55YXdmLWNvbmZpZy1oZWFkZXIgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGxlZnQ6IDA7IHRvcDogMDsgd2lkdGg6IDE2MHB4OyBoZWlnaHQ6IDQ4MHB4OyB9CiAgI3lhd2YtY29uZmlnIC55YXdmLWNvbmZpZy1oZWFkZXIgLm1pbml0Yl91bCB7IGhlaWdodDogNDUwcHg7IHdpZHRoOiAxMjBweDsgb3ZlcmZsb3c6IGhpZGRlbjsgcGFkZGluZzogMjBweCAwIDEwcHggNDBweDsgYm94LXNoYWRvdzogLTRweCAwIDJweCAtMnB4IHJnYmEoNjQsIDY0LCA2NCwgMC4xNSkgaW5zZXQsIDAgNHB4IDJweCAtMnB4IHJnYmEoNjQsIDY0LCA2NCwgMC4xNSkgaW5zZXQ7IH0KICAjeWF3Zi1jb25maWcgLnlhd2YtY29uZmlnLWhlYWRlciAubWluaXRiX2l0ZW0geyBkaXNwbGF5OiBibG9jazsgd2lkdGg6IDEyMHB4OyBoZWlnaHQ6IDI1cHg7IGJvcmRlci1zdHlsZTogc29saWQgbm9uZTsgfQogICN5YXdmLWNvbmZpZyAueWF3Zi1jb25maWctaGVhZGVyIC5taW5pdGJfbGsgeyB3aWR0aDogMTAwcHg7IHBhZGRpbmc6IDAgMTBweDsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyB9CiAgI3lhd2YtY29uZmlnIC55YXdmLWNvbmZpZy1oZWFkZXIgLm1pbml0Yl9pdGVtOm5vdCguY3VycmVudCkgLm1pbml0Yl9sayB7IGJhY2tncm91bmQ6IG5vbmUgdHJhbnNwYXJlbnQ7IH0KICAjeWF3Zi1jb25maWcgLnlhd2YtY29uZmlnLWhlYWRlciAueWF3Zi1jb25maWctc2VhcmNoIHsgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyBiYWNrZ3JvdW5kOiBub25lIHRyYW5zcGFyZW50OyBib3JkZXI6IG1lZGl1bSBub25lOyBoZWlnaHQ6IDI1cHg7IHBhZGRpbmc6IDAgMCAwIDMwcHg7IHRleHQtYWxpZ246IHJpZ2h0OyB3aWR0aDogNzBweDsgYm94LXNpemluZzogY29udGVudC1ib3g7IHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMjsgfQogICN5YXdmLWNvbmZpZyAuY3VycmVudCAueWF3Zi1jdXJfYmxvY2sgeyBkaXNwbGF5OiBibG9jazsgcG9zaXRpb246IHJlbGF0aXZlOyBpbmRleDogMDsgfQogIC55YXdmLWNvbmZpZy1zZWFyY2gtbG9nbyB7IGNsZWFyOiBib3RoOyBkaXNwbGF5OiBibG9jazsgZmxvYXQ6IGxlZnQ7IGxlZnQ6IDQ1cHg7IHBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAtMjdweDsgdHJhbnNpdGlvbjogbGVmdCBsaW5lYXIgMC4yczsgY3Vyc29yOiB0ZXh0OyBmb250LXdlaWdodDogbm9ybWFsOyB9CiAgLnlhd2YtY29uZmlnLWhlYWRlciAuY3VycmVudCAueWF3Zi1jb25maWctc2VhcmNoLWxvZ28sIC55YXdmLWNvbmZpZy1zZWFyY2g6Zm9jdXMgfiAueWF3Zi1jb25maWctc2VhcmNoLWxvZ28geyBsZWZ0OiAxNXB4OyB9CiAgI3lhd2YtY29uZmlnIC55YXdmLWNvbmZpZy1ib2R5IHsgcGFkZGluZzogMTBweCAyMHB4IDIwcHg7IHdpZHRoOiA2MDBweDsgbWF4LWhlaWdodDogNDUwcHg7IG92ZXJmbG93OiBhdXRvOyBib3gtc2hhZG93OiAwIDRweCAycHggLTJweCByZ2JhKDY0LCA2NCwgNjQsIDAuMTUpIGluc2V0OyBwb3NpdGlvbjogYWJzb2x1dGU7ICBsZWZ0OiAxNjBweDsgdG9wOiAwOyB9CiAgLnlhd2Ytd2luZG93LWJvZHkgeyBwb3NpdGlvbjogcmVsYXRpdmU7IH0KICAjeWF3Zi1jb25maWcgLldfbGF5ZXJfdGl0bGUgeyBwYWRkaW5nLXRvcDogOHB4OyBsaW5lLWhlaWdodDogMzBweDsgfQogIC55YXdmLUxheWVyLnlhd2YtZHJhZyB7IG9wYWNpdHk6IDAuNjc7IC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7IC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7IHVzZXItc2VsZWN0OiBub25lOyB9CiAgI3lhd2YtY29uZmlnIC5wcm9maWxlX3RhYiB7IGZvbnQtc2l6ZTogMTJweDsgbWFyZ2luOiAtMjBweCAtMjBweCAyMHB4OyB3aWR0aDogODAwcHg7IH0KICAueWF3Zi1jb25maWctbGF5ZXIgeyBwYWRkaW5nLWJvdHRvbTogMjBweDsgbWluLWhlaWdodDogNDAwcHg7IH0KICAueWF3Zi1ncm91cFN1YnRpdGxlLCAueWF3Zi1ncm91cFJlbWFyayB7IG1hcmdpbjogNXB4IDEwcHg7IHBhZGRpbmc6IDEwcHggMCAwIDA7IGxpbmUtaGVpZ2h0OiAyMHB4OyB9CiAgLnlhd2YtZ3JvdXBMYWJlbCB7IG1hcmdpbjogNXB4IDEwcHg7IHBhZGRpbmc6IDEwcHggMCAwIDJlbTsgfQogIC55YXdmLWdyb3VwUmVtYXJrIHAsIC55YXdmLWdyb3VwTGFiZWwgcCB7IHBhZGRpbmctYm90dG9tOiA1cHg7IH0KICAueWF3Zi1ncm91cFN1YnRpdGxlIHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KICAueWF3Zi1jb25maWdJbnB1dCB7IGRpc3BsYXk6IGlubGluZTsgfQogIC55YXdmLWNvbmZpZ1N0cmluZ0lucHV0IHsgZGlzcGxheTogYmxvY2s7IH0KICAueWF3Zi1jb25maWdJdGVtLCAueWF3Zi1ncm91cFRleHQgeyBtYXJnaW46IDAgMjBweDsgcGFkZGluZzogMCAwOyB9CiAgLnlhd2YtY29uZmlnSXRlbSB7IGxpbmUtaGVpZ2h0OiAzMHB4OyB9CiAgLnlhd2YtZ3JvdXBUZXh0IHsgbGluZS1oZWlnaHQ6IDFlbTsgfQogIC55YXdmLWdyb3VwVGV4dCBwIHsgbWFyZ2luOiAycHggMCAwOyB9CiAgLnlhd2YtY29uZmlnS2V5SW5wdXQgYnV0dG9uIHsgcGFkZGluZzogMCAxZW07IH0KICAueWF3Zi1jb25maWdLZXlJbnB1dCBzcGFuIHsgZGlzcGxheTogbm9uZTsgfQogIC55YXdmLWNvbmZpZ0tleUlucHV0IGJ1dHRvbjpmb2N1c35zcGFuIHsgZGlzcGxheTogaW5saW5lOyB9CiAgLnlhd2YtY29uZmlnSXRlbSBsYWJlbCtsYWJlbCwgLnlhd2YtcmVmQ29uZmlnSXRlbSBsYWJlbCtsYWJlbCB7IG1hcmdpbi1sZWZ0OiAwLjVlbTsgfQogIC55YXdmLWNvbmZpZ0l0ZW0gYnIrbGFiZWwgeyBtYXJnaW4tbGVmdDogNGVtOyB9CiAgLnlhd2Ytd2hpdGVsaXN0RmlsdGVyVGl0bGU6OmJlZm9yZSwgLnlhd2YtYmxhY2tsaXN0RmlsdGVyVGl0bGU6OmJlZm9yZSwgLnlhd2YtZm9sZGxpc3RGaWx0ZXJUaXRsZTo6YmVmb3JlIHsgY29udGVudDogIiAiOyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiAwLjhlbTsgaGVpZ2h0OiAwLjhlbTsgYm9yZGVyLXJhZGl1czogMWVtOyBtYXJnaW4tcmlnaHQ6IDAuNWVtOyBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfQogIC55YXdmLXdoaXRlbGlzdEZpbHRlclRpdGxlOjpiZWZvcmUgeyBiYWNrZ3JvdW5kOiAjMzdjODM3OyBib3gtc2hhZG93OiAwIDAgMnB4ICMzN2M4Mzc7IH0KICAueWF3Zi1ibGFja2xpc3RGaWx0ZXJUaXRsZTo6YmVmb3JlIHsgYmFja2dyb3VuZDogI2M4MzczNzsgYm94LXNoYWRvdzogMCAwIDJweCAjYzgzNzM3OyB9CiAgLnlhd2YtZm9sZGxpc3RGaWx0ZXJUaXRsZTo6YmVmb3JlIHsgYmFja2dyb3VuZDogI2M4YzgzNzsgYm94LXNoYWRvdzogMCAwIDJweCAjYzhjODM3OyB9CiAgLnlhd2YtY29uZmlnU3RyaW5nIHNwYW4geyBsaW5lLWhlaWdodDogMTZweDsgd2lkdGg6IDEwMCU7IHdpZHRoOmNhbGMoMTAwJSAtIDU2cHgpOyBtYXJnaW46IC0yMHB4IDEwcHggMDsgcGFkZGluZzogMnB4IDEwcHg7IGRpc3BsYXk6IGJsb2NrOyBwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMjBweDsgfQogIC55YXdmLWNvbmZpZ1N0cmluZyB0ZXh0YXJlYS5XX2lucHV0IHsgd2lkdGg6IDEwMCU7IHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTsgcGFkZGluZy10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDgwcHg7IG1heC1oZWlnaHQ6IDQwMHB4OyByZXNpemU6IHZlcnRpY2FsOyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZjBmMGYwIDBweCwgI2YwZjBmMCAyMHB4LCB0cmFuc3BhcmVudCAyMXB4LCB0cmFuc3BhcmVudCAxMDAlKTsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgLW1vei1kaWFsb2cgMHB4LCAtbW96LWRpYWxvZyAyMHB4LCB0cmFuc3BhcmVudCAyMXB4LCB0cmFuc3BhcmVudCAxMDAlKTsgfQogIC55YXdmLWNvbmZpZ1N0cmluZ3NJbnB1dCwgLnlhd2YtY29uZmlnVXNlcnNJbnB1dCB7IG1hcmdpbjogNXB4OyB9CiAgLnlhd2YtY29uZmlnU3RyaW5nc0l0ZW1zLCAueWF3Zi1jb25maWdVc2Vyc0l0ZW1zIHsgcGFkZGluZzogNXB4IDEwcHg7IGxpbmUtaGVpZ2h0OiAxZW07IH0KICAueWF3Zi1jb25maWdTdHJpbmdzSXRlbSwgLnlhd2YtY29uZmlnVXNlcnNJdGVtIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBtYXJnaW46IDJweDsgfQogIC55YXdmLWNvbmZpZ1N0cmluZ3NJdGVtLldfYnRuX3RhZyB7IHBhZGRpbmc6IDAgNXB4IDAgMTBweDsgfQogIC55YXdmLWNvbmZpZ1N0cmluZ3NJdGVtLldfYnRuX3RhZyAuZmljb25fY2xvc2UgeyBtYXJnaW46IDAgMCAwIC04cHg7IH0KICAueWF3Zi1jb25maWdTdHJpbmdzSXRlbSB7IG1heC13aWR0aDogNTIwcHg7IG92ZXJmbG93OiBoaWRkZW47IHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyB9CiAgLnlhd2YtY29uZmlnVXNlcnNJdGVtIC5zaGllbGRfb2JqZWN0X2NhcmQgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiAyMjBweDsgfQogIC55YXdmLWNvbmZpZ1VzZXJzSXRlbSAuc2hpZWxkX29iamVjdF9jYXJkIC5jYXJkX2JnIHsgYm9yZGVyOiAxcHggc29saWQgI2U2ZTZlNjsgYm9yZGVyLXJhZGl1czogMnB4OyBib3gtc2hhZG93OiAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjAyKTsgcGFkZGluZzogMXB4IDVweCAxcHggMXB4OyB9CiAgLnlhd2YtY29uZmlnVXNlcnNJdGVtIC5zaGllbGRfb2JqZWN0X2NhcmQgLmNhcmRfcGljIHsgZmxvYXQ6IGxlZnQ7IHdpZHRoOiA1MHB4OyB9CiAgLnlhd2YtY29uZmlnVXNlcnNJdGVtIC5zaGllbGRfb2JqZWN0X2NhcmQgLmNhcmRfcGljIC5waWNfYm94IHsgZGlzcGxheTogYmxvY2s7IH0KICAueWF3Zi1jb25maWdVc2Vyc0l0ZW0gLnNoaWVsZF9vYmplY3RfY2FyZCAuY2FyZF9jb250ZW50IHsgbWFyZ2luLWxlZnQ6IDYwcHg7IH0KICAueWF3Zi1jb25maWdVc2Vyc0l0ZW0gLnNoaWVsZF9vYmplY3RfY2FyZCAub2JqZWN0X2luZm8geyBtYXJnaW4tdG9wOiAycHg7IH0KICAueWF3Zi1jb25maWdVc2Vyc0l0ZW0gLnNoaWVsZF9vYmplY3RfY2FyZCAub2JqZWN0X25hbWUgeyBsaW5lLWhlaWdodDogMjJweDsgb3ZlcmZsb3c6IGhpZGRlbjsgZmxvYXQ6IGxlZnQ7IHdpZHRoOiAxMzJweDsgICB9CiAgLnlhd2YtY29uZmlnVXNlcnNJdGVtIC5zaGllbGRfb2JqZWN0X2NhcmQgLm90aGVyX2luZm8geyBsaW5lLWhlaWdodDogMjRweDsgfQogIC55YXdmLWNvbmZpZ1NlbGVjdEFsbCB7IGZsb2F0OiByaWdodDsgbWFyZ2luLXRvcDogLTIzcHg7IGhlaWdodDogMjFweCAhaW1wb3J0YW50OyBsaW5lLWhlaWdodDogMTlweDsgfQogIC55YXdmLWNvbmZpZ1NlbGVjdEFsbCAqIHsgbGluZS1oZWlnaHQ6IDE5cHggIWltcG9ydGFudDsgaGVpZ2h0OiAxOXB4ICFpbXBvcnRhbnQ7IH0KICAueWF3Zi1jb25maWdJbXBvcnRFeHBvcnQgYSB7IG1hcmdpbi1sZWZ0OiAyMHB4OyB9CiAgLnlhd2YtY29uZmlnQWRkIHsgYXBwZWFyYW5jZTogbm9uZTsgfQogICN5YXdmLWNvbmZpZyAuYnRuIHsgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7IG1hcmdpbjogMTVweCAwIDA7IHBhZGRpbmc6IDEwcHggMCAwOyB9CiAgI3lhd2YtY29uZmlnIC5idG4gLldfYnRuX2JfZGlzYWJsZTpob3ZlciB7IGJvcmRlci1jb2xvcjogI2Q5ZDlkOTsgfQogICN5YXdmLWNvbmZpZyAuYnRuIC5XX2J0bl9iX2Rpc2FibGU6aG92ZXIgc3BhbiB7IGJvcmRlci1jb2xvcjogI2ZmZmZmZjsgfQogIC5sYXlvdXRGaWx0ZXJHcm91cExheWVyIC55YXdmLWNvbmZpZ0Jvb2xlYW4geyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbi1yaWdodDogMDsgfQogIC55YXdmLXVzZXJzdHlsZXMtdGlwIHsgZmxvYXQ6IHJpZ2h0OyBtYXJnaW46IDAgMCAwIDFlbTsgfQogIC55YXdmLWNvbmZpZ1NJY29uIHsgbWFyZ2luOiAwIDAgMCAwLjVlbTsgcG9zaXRpb246IHJlbGF0aXZlOyB0b3A6IDRweDsgfQogIC55YXdmLWJ1YmJsZSB7IG1heC13aWR0aDogMjgwcHg7IH0KICAueWF3Zi1idWJibGUgLnlhd2YtY29uZmlnU0ljb24geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0KICAueWF3Zi1yZWZDb25maWdJdGVtIHsgZGlzcGxheTogaW5saW5lOyB9CiAgLnlhd2YtY29uZmlnLWJvZHkgLldCX2VtcHR5IHsgcGFkZGluZy10b3A6IDEwMHB4OyB9CiAgLnlhd2YtY29uZmlnU3Vic2NyaWJlIHsgYm9yZGVyOiAxcHggcmdiYSgxMjcsIDEyNywgMTI3LCAwLjUpIHNvbGlkOyBwYWRkaW5nOiA1cHggODVweCA1cHggODVweDsgYm9yZGVyLXJhZGl1czogNHB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IH0KICAueWF3Zi1jb25maWdTdWJzY3JpYmVUaXRsZSwgLnlhd2YtY29uZmlnU3Vic2NyaWJlSW5mbyB7IGxpbmUtaGVpZ2h0OiAyMHB4OyB9CiAgLnlhd2YtY29uZmlnU3Vic2NyaWJlVGl0bGUgeyBoZWlnaHQ6IDIwcHg7IH0KICAueWF3Zi1jb25maWdTdWJzY3JpYmVJbmZvIHsgaGVpZ2h0OiA0MHB4OyB9CiAgLnlhd2YtY29uZmlnU3Vic2NyaWJlSWNvbiB7IGRpc3BsYXk6IGJsb2NrOyBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogM3B4OyBsZWZ0OiAxMHB4OyB3aWR0aDogNjRweDsgaGVpZ2h0OiA2NHB4OyB9CiAgLnlhd2YtY29uZmlnU3Vic2NyaWJlQnV0dG9uIHsgZGlzcGxheTogYmxvY2s7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgYm90dG9tOiA2cHg7IHJpZ2h0OiAxMHB4OyB9CiAgLnlhd2YtY29uZmlnU3Vic2NyaWJlTmFtZSB7IGRpc3BsYXk6IGlubGluZTsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KICAueWF3Zi1jb25maWdTdWJzY3JpYmVEYXRlIHsgZGlzcGxheTogaW5saW5lOyBtYXJnaW4tbGVmdDogMWVtOyBvcGFjaXR5OiAwLjg7IH0KICAueWF3Zi1jb25maWdTdWJzY3JpYmVEZXNjcmlwdGlvbiB7IGxpbmUtaGVpZ2h0OiAyMHB4OyB9CiAgLnlhd2YtY29uZmlnU3Vic2NyaWJlQnV0dG9uIGEgeyBkaXNwbGF5OiBibG9jazsgbWFyZ2luLXRvcDogNXB4OyB9CiAgLnlhd2YtY29uZmlnU3Vic2NyaWJlRGlzYWJsZWQgeyBvcGFjaXR5OiAwLjU7IH0KICAueWF3Zi1jb25maWdTdWJzY3JpYmVFbmFibGVkIC55YXdmLXN1YnNjcmliZUVuYWJsZSwKICAueWF3Zi1jb25maWdTdWJzY3JpYmVEaXNhYmxlZCAueWF3Zi1zdWJzY3JpYmVEaXNhYmxlIHsgZGlzcGxheTogbm9uZTsgfQogIC55YXdmLWF1dG9Db21wbGV0ZUxpc3QgeyB6LWluZGV4OiAxMDAwMTsgcG9zaXRpb246IGFic29sdXRlOyBtaW4td2lkdGg6IDEyMHB4OyB9CiAgLnlhd2YtYXV0b0NvbXBsZXRlTGlzdFt5YXdmLWNvbXBsZXRlLWl0ZW1zPSIwIl0geyBkaXNwbGF5OiBub25lOyB9CiAgLy8g5paw5Yqf6IO95o+Q56S6CiAgI3lhd2YtZnVuY3NldCBbbm9kZS10eXBlPSJpbm5lciJdIHsgcGFkZGluZzogMTBweCAwOyB3aWR0aDogNjAwcHg7IH0KICAueWF3Zi13aW5kb3ctaGVhZGVyIHsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogNDBweDsgcGFkZGluZzogMCAyMHB4OyB9CiAgLnlhd2Ytd2luZG93LWRlc2MgeyBmb250LXNpemU6IDE0cHg7IH0KICAueWF3Zi13aW5kb3ctYm90dG9tIHsgaGVpZ2h0OiAyMHB4OyB9CiAgLnlhd2Ytd2luZG93LWJvZHkgeyBtYXgtaGVpZ2h0OiAzMDBweDsgb3ZlcmZsb3c6IGF1dG87IHBhZGRpbmc6IDAgMjBweDsgfQogIC55YXdmLXdpbmRvdy1mb290ZXIgeyBtYXJnaW46IDAgMCAyMHB4OyBjb2xvcjogIzU1NTsgbGluZS1oZWlnaHQ6IDIwcHg7IHBhZGRpbmc6IDAgMjBweDsgfQogIC55YXdmLXdpbmRvdy1mb290ZXIgLnlhd2YtY29uZmlnSXRlbSwgLnlhd2YtZ3JvdXBUZXh0IHsgbWFyZ2luOiAwOyB9CiAgLndicC1pbXBvcnQtc3VjY2Vzcy1oZWFkZXIgeyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiA0MHB4OyBwYWRkaW5nOiAwIDIwcHg7IH0KICAud2JwLWltcG9ydC1zdWNjZXNzLWRlc2MgeyBmb250LXNpemU6IDE0cHg7IH0KICAud2JwLWltcG9ydC1zdWNjZXNzLWJvZHkgeyBtYXgtaGVpZ2h0OiAzMDBweDsgb3ZlcmZsb3c6IGF1dG87IHBhZGRpbmc6IDAgMjBweDsgfQogIC55YXdmLWNvbmZpZ0l0ZW0gaW5wdXRbdHlwZT0ibnVtYmVyIl06bm90KDpmb2N1cykgfiAueWF3Zi1yYW5nZS1jb250YWluZXI6bm90KDpob3ZlcikgPiBpbnB1dFt0eXBlPSJyYW5nZSJdOm5vdCg6Zm9jdXMpLCAueWF3Zi1idWJibGUgaW5wdXRbdHlwZT0icmFuZ2UiXSB7IGRpc3BsYXk6IG5vbmU7IH0KICAvLyDpgInmi6nliIbnu4QKICAjeWF3Zi1zZWxlY3QtZ3JvdXAgW25vZGUtdHlwZT0iaW5uZXIiXSB7IHdpZHRoOiA0MDBweDsgfQogICN5YXdmLXNlbGVjdC1ncm91cCB1bCB7IG1hcmdpbjogMCAyMHB4IDIwcHg7IH0KICAjeWF3Zi1zZWxlY3QtZ3JvdXAgbGkgeyBsaW5lLWhlaWdodDogMjRweDsgfQogICN5YXdmLXNlbGVjdC1ncm91cCBsaSBhIHsgZGlzcGxheTogYmxvY2s7IGNvbG9yOiBpbmhlcml0OyB9CiAgI3lhd2Ytc2VsZWN0LWdyb3VwIGxpIGE6aG92ZXIgeyBjb2xvcjogI2ViNzM1MDsgfQogICN5YXdmLXNlbGVjdC1ncm91cCAuaWNvX2Jsb2NrIHsgbWFyZ2luLXJpZ2h0OiAzcHg7IH0KICAjeWF3Zi1zZWxlY3QtZ3JvdXAgLnlhd2Ytc2VsZWN0LWdyb3VwLWJvZHkgeyBoZWlnaHQ6IDIwMHB4OyBvdmVyZmxvdzogYXV0bzsgfQogIC8vIOiHquWKqOajgOafpeWFs+azqOWIl+ihqAogICN5YXdmLWZvbGxvd2luZy1ub3RpY2UgW25vZGUtdHlwZT0iaW5uZXIiXSB7IHBhZGRpbmc6IDEwcHggMDsgd2lkdGg6IDYwMHB4OyB9CiAgI3lhd2YtZm9sbG93aW5nLW5vdGljZSAueWF3Zi1mb2xsb3dpbmctbm90aWNlLWJvZHkgeyBoZWlnaHQ6IDI4MHB4OyBvdmVyZmxvdzogYXV0bzsgfQogICN5YXdmLWZvbGxvd2luZy1ub3RpY2UgLnlhd2YtZm9sbG93aW5nLWl0ZW1zLXRpdGxlIHsgbWFyZ2luOiAxMHB4IDAgMDsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KICAueWF3Zi13aW5kb3ctYnV0dG9ucyB7IG1hcmdpbi1ib3R0b206IC0xMHB4OyB9CiAgLy8g5Y+z5qCP55So5oi35YiX6KGo6K6+572uCiAgI3lhd2YtZmF2ZS1wZW9wbGUtY29uZmlnIFtub2RlLXR5cGU9ImlubmVyIl0geyBwYWRkaW5nOiAxMHB4IDAgMzBweDsgd2lkdGg6IDYwMHB4OyB9CiAgLnlhd2YtZmF2ZS1wZW9wbGUtY29uZmlnLWJvZHkgeyBtYXgtaGVpZ2h0OiAzMDBweDsgb3ZlcmZsb3c6IGF1dG87IHBhZGRpbmc6IDAgMjBweDsgfQogIC8vIOmakOiXj+W+ruWNmgogIFt5YXdmLWRpc3BsYXkkPSItaGlkZGVuIl0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0KICAvLyDmnKrov4fmu6Tml7bpu5jorqTpmpDol4/vvIjkvYbljaDkvY3vvIkKICBbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAuV0JfZmVlZF90eXBlOm5vdChbeWF3Zi1kaXNwbGF5XSksCiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZSAuV0JfZmVlZF90eXBlOm5vdChbeWF3Zi1kaXNwbGF5XSksCiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZTpub3QoW3lhd2YtZGlzcGxheV0pICosCiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZSAuV0JfZmVlZF90eXBlOm5vdChbeWF3Zi1kaXNwbGF5XSkgKiB7IHZpc2liaWxpdHk6IGhpZGRlbiAhaW1wb3J0YW50OyB9CiAgLy8g5oqY5Y+g5b6u5Y2aCiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZVt5YXdmLWRpc3BsYXkkPSItZm9sZCJdIC5XQl9zY3JlZW4geyBtYXJnaW4tdG9wOiAtNDBweCAhaW1wb3J0YW50OyB9CiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZVt5YXdmLWRpc3BsYXkkPSItZm9sZCJdIC50eXBlX3NwZV9wb3MsCiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZVt5YXdmLWRpc3BsYXkkPSItZm9sZCJdPio6Zmlyc3QtY2hpbGQ6bm90KC5XQl9zY3JlZW4pOm5vdCguV0JfZmVlZF9kZXRhaWwpIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZVt5YXdmLWRpc3BsYXkkPSItZm9sZCJdIC5XQl9mZWVkX2RldGFpbCB7IHRvcDogMTBweDsgbWluLWhlaWdodDogMDsgbWF4LWhlaWdodDogMDsgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjFzOyBvdmVyZmxvdzogaGlkZGVuOyBjdXJzb3I6IHBvaW50ZXI7IHBvc2l0aW9uOiByZWxhdGl2ZTsgfQogIFtub2RlLXR5cGU9ImZlZWRfbGlzdCJdIC5XQl9mZWVkX3R5cGVbeWF3Zi1kaXNwbGF5JD0iLWZvbGQiXSAuV0JfZmVlZF9kZXRhaWwsCiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0uV0JfZmVlZC5XQl9mZWVkX3YzIC5XQl9mZWVkX3R5cGVbeWF3Zi1kaXNwbGF5JD0iLWZvbGQiXSAuV0JfZmVlZF92aXBjb3ZlciAuV0JfZmVlZF9kZXRhaWwgeyBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50OyBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50OyB9CiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZVt5YXdmLWRpc3BsYXkkPSItZm9sZCJdIC5XQl9mZWVkX2RldGFpbCArIC5XQl9mZWVkX2hhbmRsZSB7IGRpc3BsYXk6IG5vbmU7IH0KICBbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAuV0JfZmVlZF90eXBlW3lhd2YtZGlzcGxheSQ9Ii1mb2xkIl0geyBwYWRkaW5nOiAxMHB4IDE1cHg7IH0KICBbbm9kZS10eXBlPSJmZWVkX2xpc3QiXSAuV0JfZmVlZF90eXBlW3lhd2YtZGlzcGxheSQ9Ii1mb2xkIl06OmJlZm9yZSB7IGRpc3BsYXk6IGJsb2NrOyBsaW5lLWhlaWdodDogMWVtOyBwYWRkaW5nOiAxZW0gMjBweDsgYm9yZGVyOiAxcHggc29saWQ7IGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7IG1hcmdpbjogMCAxZW07IHdpZHRoOiBjYWxjKDEwMCUgLSA2ZW0gLSAycHgpOyBjdXJzb3I6IHBvaW50ZXI7IG9wYWNpdHk6IDAuODsgfQogIFtub2RlLXR5cGU9ImZlZWRfbGlzdCJdIC5XQl9mZWVkX3R5cGVbeWF3Zi1kaXNwbGF5JD0iLWZvbGQiXTpob3ZlciAuV0JfZmVlZF9kZXRhaWw6bm90KDpob3ZlcikgeyB0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuM3M7IH0KICAvLyDor4TorroKICAubGlzdF91bFtub2RlLXR5cGU9ImZlZWRfbGlzdF9jb21tZW50TGlzdCJdIC5saXN0X2xpOm5vdChbeWF3Zi1jbXQtZGlzcGxheV0pLAogIC5saXN0X3VsW25vZGUtdHlwZT0iY29tbWVudF9saXN0Il0gLmxpc3RfbGk6bm90KFt5YXdmLWNtdC1kaXNwbGF5XSkgeyBkaXNwbGF5OiBub25lOyB9CiAgLmxpc3RfdWxbbm9kZS10eXBlPSJmZWVkX2xpc3RfY29tbWVudExpc3QiXSBbeWF3Zi1jbXQtZGlzcGxheSQ9ImhpZGRlbiJdLAogIC5saXN0X3VsW25vZGUtdHlwZT0iY29tbWVudF9saXN0Il0gW3lhd2YtY210LWRpc3BsYXkkPSJoaWRkZW4iXSB7IGRpc3BsYXk6IG5vbmU7IH0KICAuV0JfbWVkaWFfd3JhcFt5YXdmLWNtdC1pbWc9ImhpZGRlbiJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CiAgLy8gQ29tbW9uCiAgW25vZGUtdHlwZT0iZmVlZF9saXN0Il0gLldCX2ZlZWRfdHlwZVt5YXdmLWRpc3BsYXkkPSItZm9sZCJdOmhvdmVyOjpiZWZvcmUgeyBvcGFjaXR5OiAxOyB9CiAgLy8g5YW25LuWCiAgLldCX2ZlZWRfdG9nZXRoZXIgLndmdF91c2VycyB7IGRpc3BsYXk6IG5vbmU7IH0KICAuV0JfZmVlZF90b2dldGhlclt5YXdmLXNvbmZvbGQ9ImRpc3BsYXkiXSBbbm9kZS10eXBlPSJmZWVkX2xpc3Rfd3JhcEZvcndhcmQiXSB7IGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH0KICAuV0JfZmVlZF90b2dldGhlclt5YXdmLXNvbmZvbGQ9ImRpc3BsYXkiXSBbYWN0aW9uLXR5cGU9ImZlZWRfbGlzdF9zZWVBbGwiXSwKICAuV0JfZmVlZF90b2dldGhlclt5YXdmLXNvbmZvbGQ9ImRpc3BsYXkiXSBbYWN0aW9uLXR5cGU9ImZlZWRfbGlzdF9mb2xkRm9yd2FyZCJdIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CiAgLnlhd2YtcmFuZ2UtY29udGFpbmVyIHsgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDsgYmFja2dyb3VuZC1jb2xvcjogLW1vei1kaWFsb2c7IHBvc2l0aW9uOiByZWxhdGl2ZTsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBtYXJnaW4tbGVmdDogLTY2cHg7IHdpZHRoOiA4MXB4OyBtYXJnaW4tcmlnaHQ6IC0xNXB4OyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDI3MGRlZyk7IHRyYW5zZm9ybTogcm90YXRlKDI3MGRlZyk7IHRvcDogLTUwcHg7IHRvcDogY2FsYygtMWVtIC0gMzZweCk7IGJveC1zaGFkb3c6IDBweCAxMnB4ICNmMGYwZjAsIDBweCAtMTJweCAjZjBmMGYwOyBib3gtc2hhZG93OiAwcHggMTJweCAtbW96LWRpYWxvZywgMHB4IC0xMnB4IC1tb3otZGlhbG9nOyB9CiAgLnlhd2YtbGluayB7IHdvcmQtd3JhcDogYnJlYWstd29yZDsgfQogIC8vIOaLluaLvQogICN5YXdmLWRyb3AtYXJlYSB7IGJhY2tncm91bmQ6IHJnYmEoMjUxLCAyNTEsIDIxNiwgMSk7IG9wYWNpdHk6IDAuODsgZGlzcGxheTogbm9uZTsgaGVpZ2h0OiAyMzBweDsgbGVmdDogY2FsYyg1MCUgKyAyNjBweCk7IHBvc2l0aW9uOiBmaXhlZDsgd2lkdGg6IDIzMHB4OyB6LWluZGV4OiA5OTk5OyB0b3A6IDUwcHg7IH0KICAjeWF3Zi1kcm9wLWFyZWEudmFsaWQgeyBvcGFjaXR5OiAxOyB9CiAgLnlhd2YtZHJvcC1hcmVhLWRlc2MgeyBoZWlnaHQ6IDE3MHB4OyB3aWR0aDogMTcwcHg7IG1hcmdpbjogMTZweCAxNnB4IC0yMDZweCAxNnB4OyBwYWRkaW5nOiAxMHB4OyAtbW96LXVzZXItc2VsZWN0OiBub25lOyB1c2VyLXNlbGVjdDogbm9uZTsgYm9yZGVyOiA0cHggZGFzaGVkICNkZGQ7IGJvcmRlci1yYWRpdXM6IDIwcHg7IGNvbG9yOiAjMDAwOyB9CiAgLnlhd2YtZHJvcC1hcmVhLXRpdGxlIHsgZm9udC1zaXplOiAxNTAlOyBmb250LXdlaWdodDogYm9sZDsgfQogIC55YXdmLWRyb3AtYXJlYS10ZXh0IHsgcGFkZGluZzogMTBweDsgfQogICN5YXdmLWRyb3AtYXJlYS1jb250ZW50IHsgaGVpZ2h0OiAyMzBweDsgd2lkdGg6IDIzMHB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDEwMDAyOyBvcGFjaXR5OiAwOyB9CiAgI3lhd2YtZmFzdC1maWx0ZXItY2hvc2UsICN5YXdmLWZhc3QtZmlsdGVyLWxpc3QgeyBwYWRkaW5nOiAyMHB4IDQwcHg7IH0KICAjeWF3Zi1mYXN0LWZpbHRlci10ZXh0IHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KICAjeWF3Zi1kcm9wLWFyZWEgdWwgeyBsaXN0LXN0eWxlOiBkaXNjOyBtYXJnaW4tbGVmdDogMmVtOyB9CiAgLy8g6KGo5oOF6L6T5YWlCiAgLmxheWVyX2ZhY2VzIC5mYWNlc19saXN0Lnlhd2YtZmFjZXNfbGlzdCB7IGhlaWdodDogNzlweDsgfQogIC5sYXllcl9mYWNlcyAuZmFjZXNfbGlzdC55YXdmLWZhY2VzX2xpc3QgZGl2IHsgZGlzcGxheTogYmxvY2s7IGhlaWdodDogMzJweDsgbWFyZ2luOiAwIDAgNXB4OyB9CiAgLmxheWVyX2ZhY2VzIC5mYWNlc19saXN0Lnlhd2YtZmFjZXNfbGlzdCBzcGFuIHsgZmxvYXQ6IGxlZnQ7IGZvbnQtd2VpZ2h0OiBib2xkOyBsaW5lLWhlaWdodDogMzJweDsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogNTJweDsgbWFyZ2luOiAwIC04cHggMCAwOyB9CiAgLmxheWVyX2ZhY2VzIC5mYWNlc19saXN0Lnlhd2YtZmFjZXNfbGlzdCB1bCB7IGZsb2F0OiByaWdodDsgbWFyZ2luOiAwIDhweDsgfQogIC5sYXllcl9mYWNlcyAuZmFjZXNfbGlzdC55YXdmLWZhY2VzX2xpc3QgbGkgeyBjb2xvcjogdHJhbnNwYXJlbnQ7IH0KICAubGF5ZXJfZmFjZXMgLmZhY2VzX2xpc3QgeyAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAtbW96LXVzZXItc2VsZWN0OiBub25lOyB1c2VyLXNlbGVjdDogbm9uZTsgfQogIC5sYXllcl9mYWNlcyAuZmFjZXNfbGlzdCBsaSB7IG92ZXJmbG93OiBoaWRkZW47IH0KICAubGF5ZXJfZmFjZXMgLmZhY2VzX2xpc3QgaW1nIHsgYm9yZGVyOiAxMHB4IHRyYW5zcGFyZW50IHNvbGlkOyBtYXJnaW46IC0xMHB4OyB9CiAgI3lhd2YtZmFjZS1kcm9wLWFyZWEgeyBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAxMjcsIDAuNSk7IGNsZWFyOiBib3RoOyBmbG9hdDogcmlnaHQ7IGZvbnQtd2VpZ2h0OiBib2xkOyBoZWlnaHQ6IDMycHg7IGxpbmUtaGVpZ2h0OiAzMnB4OyBtYXJnaW46IC0zMnB4IDhweCAwOyBvcGFjaXR5OiAxOyBwYWRkaW5nOiAwOyB3aWR0aDogMzA2cHg7IH0KICAvLyDlhbbku5bpobXpnaLkvJjljJborr7nva4KICAjdjZfcGxfcmlnaHRtb2RfbXlpbmZvOmVtcHR5IHsgaGVnaWh0OiAxNTZweDsgfQogIC8vIOWIh+aNouinhuWbvgogIGJvZHkgI3lhd2Ytd2VpYm8tb25seSB7IGZsb2F0OiByaWdodDsgaGVpZ2h0OiAzOHB4OyB3aWR0aDogODBweDsgbGluZS1oZWlnaHQ6IDM4cHg7IHRleHQtYWxpZ246IGNlbnRlcjsgfQogIC8vIOW+ruWNmuaMiemSrueahOW5s+Wdh+WIhuW4gwogIGJvZHkgLldCX2hhbmRsZSB1bCB7CiAgICBkaXNwbGF5OiAtbW96LWZsZXg7IC1tb3otZmxleC1kaXJlY3Rpb246IHJvdzsgLW1vei1mbGV4LXdyYXA6IG5vd3JhcDsgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IC1tb3otc3BhY2UtYXJvdW5kOyAtbW96LWFsaWduLWl0ZW1zOiBzdHJldGNoOwogICAgZGlzcGxheTogLXdlYmtpdC1mbGV4OyAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiByb3c7IC13ZWJraXQtZmxleC13cmFwOiBub3dyYXA7IC13ZWJraXQtanVzdGlmeS1jb250ZW50OiAtd2Via2l0LXNwYWNlLWFyb3VuZDsgLXdlYmtpdC1hbGlnbi1pdGVtczogc3RyZXRjaDsKICAgIGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiByb3c7IGZsZXgtd3JhcDogbm93cmFwOyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsgYWxpZ24taXRlbXM6IHN0cmV0Y2g7CiAgICBtYXJnaW4tbGVmdDogLTRweDsKICB9CiAgYm9keSAuV0JfaGFuZGxlIHVsIGxpIHsKICAgIC1tb3otZmxleC1ncm93OiAxOyAtd2Via2l0LWZsZXgtZ3JvdzogMTsgZmxleC1ncm93OiAxOwogICAgZmxvYXQ6IG5vbmU7IHdpZHRoOiBhdXRvOwogIH0KICAvLyDliqDovb3liY3pmpDol4/nlKjmiLflkI0KICAuV0JfZ2xvYmFsX25hdiAuZ25fbmF2X2xpc3QgbGkgLmduX25hbWUgLlNfdHh0MSB7IGRpc3BsYXk6IG5vbmU7IH0KKi8gbm9vcCgpOyB9KSArICdcbicpLnJlcGxhY2UoL1wvXC8uKlxuL2csICdcbicpLCB7CiAgJ3lhd2YtaWNvbi1mb250JzogZm9udHMuaWNvbmZvbnQsCn0pKTsKdXRpbC5pbml0KGZ1bmN0aW9uICh2YWxpZCkgewogIGlmICh2YWxpZCkgcmV0dXJuOwogIHRyeSB7IG1haW5TdHlsZS50ZXh0Q29udGVudCA9ICcnOyB9IGNhdGNoIChlMikgeyB9CiAgdHJ5IHsgbWFpblN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobWFpblN0eWxlKTsgfSBjYXRjaCAoZTMpIHsgfQp9LCB1dGlsLnByaW9yaXR5LkRFRkFVTFQsIHRydWUpOwoKLy8g5Zyo5Yqg6L295aW95LmL5YmN6ZqQ6JeP5YaF5a65CihmdW5jdGlvbiAoKSB7CiAgdmFyIHN0eWxlID0gR01fYWRkU3R5bGUoJy5XQl9taW5pYmxvZyB7IHZpc2liaWxpdHk6IGhpZGRlbjsgfScpOwogIHV0aWwuaW5pdChmdW5jdGlvbiAoKSB7CiAgICB0cnkgeyBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTsgfQogICAgY2F0Y2ggKGUxKSB7IEdNX2FkZFN0eWxlKCcuV0JfbWluaWJsb2cgeyB2aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7IH0nKTsgfQogICAgdXRpbC5kZWJ1ZygneWF3ZiBpbml0aWFsIGRvbmUnKTsKICAgIG9ic2VydmVyLmRvbS5hZGQoZnVuY3Rpb24gZml4TmF2QmFyVVMoKSB7CiAgICAgIC8vIOe7n+S4gOa1t+WklueJiOWvvOiIquagjwogICAgICB2YXIgbmF2X3VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLldCX2dsb2JhbF9uYXZfdXMnKTsKICAgICAgaWYgKG5hdl91cykgbmF2X3VzLmNsYXNzTGlzdC5yZW1vdmUoJ1dCX2dsb2JhbF9uYXZfdXMnKTsKICAgIH0pOwogIH0sIHV0aWwucHJpb3JpdHkuTEFTVCArIHV0aWwucHJpb3JpdHkuQUZURVIgKyB1dGlsLnByaW9yaXR5LkFGVEVSLCB0cnVlKTsKfSgpKTsKCnV0aWwuaW5pdChmdW5jdGlvbiAoKSB7CiAgLy8g5bqf5byD6K6+572u6aG55riF55CGCiAgdXRpbC5jb25maWcucHV0KCd3ZWliby50b29sLnJpZ2h0X3VzZXJfbGlzdF9ub3RpY2UucmVjb3JkcycpOwogIHV0aWwuY29uZmlnLnB1dCgnd2VpYm8udG9vbC5yaWdodF91c2VyX2xpc3Rfbm90aWNlLmxhc3QnKTsKICB1dGlsLmNvbmZpZy5wdXQoJ3dlaWJvLmxheW91dEhpZGVSaWdodFRlbXBsYXRlJyk7CiAgdXRpbC5jb25maWcucHV0KCd3ZWliby5sYXlvdXRIaWRlUGVyc29uVGVtcGxhdGUnKTsKICB1dGlsLmNvbmZpZy5wdXQoJ3dlaWJvLnRvb2wubXlfYmFja2dyb3VuZF9jb2xvci5jb2xvcicpOwogIHV0aWwuY29uZmlnLnB1dCgnd2VpYm8udG9vbC5teV9iYWNrZ3JvdW5kX2NvbG9yLnRyYW5zcGFyZW5jeScpOwogIHV0aWwuY29uZmlnLnB1dCgnd2VpYm8udG9vbC5teV9iYWNrZ3JvdW5kX2NvbG9yJyk7Cn0sIHV0aWwucHJpb3JpdHkuRklSU1QgKyB1dGlsLnByaW9yaXR5LkFGVEVSKTsKCi8qIQogKiDmnKzohJrmnKzkvb/nlKjkuobku6XkuIvlvIDmupDpobnnm67kuK3nmoTku6PnoIHvvJoKICoKICog5pys6ISa5pys5Lit5L2/55So5LqG55y85LiN6KeB5b+D5LiN54Om6ISa5pys55qE6YOo5YiG5Luj56CB44CC55y85LiN6KeB5b+D5LiN54Om5L2/55SoIE1JVCDljY/orq7vvIzor6XohJrmnKznmoTljY/orq7lpoLkuIsKICogQ29weXJpZ2h0IChDKSAyMDEyLTIwMTYsIEZhbmcgWmhhbmcgPHpoYW5nZmFuZy50aHVAZ21haWwuY29tPgogKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KICog55y85LiN6KeB5b+D5LiN54Om6ISa5pys55qE6aG555uu5Zyw5Z2A5Li6IGh0dHBzOi8vYml0YnVja2V0Lm9yZy9zYWx2aWF0aS93ZWliby1jbGVhbmVyCiAqLwoKLyohCiAqIOacrOiEmuacrOS9v+eUqCBNSVQg5Y2P6K6uCiAqIFRoZSBNSVQgTGljZW5zZSAoTUlUKQogKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxOSDnlLDnlJ8KICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgogKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCiAqIOiEmuacrOmhueebruWcsOWdgCBodHRwczovL2dpdGh1Yi5jb20vdGlhbnNoL3lhd2YKICovCgo="}],"settings":{"script_blacklist_server":[{"severity":"2","rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"]},{"name":"SaveFrom.net helper","severity":"3","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"reason":"Shows advertisements"}],"statistics_enabled":false}}